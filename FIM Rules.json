[
  {
    "id": "c01ed599-e2cf-4b68-9b52-47af653d789a",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "7d98926b-b62c-4fe7-ace3-7a96d0ec081b",
    "name": "1024",
    "description": "test",
    "grouping": null,
    "includePaths": [
      "%test%"
    ],
    "includePathExtensions": [
      "test",
      "file",
      "extension"
    ],
    "excludePaths": [
      "%exclude-test%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": [
      "test"
    ],
    "priorityPaths": [
      "test"
    ],
    "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
    "updatedBy": "251389ea-523f-4bc3-9944-a57798f66443",
    "createdAt": "2024-04-01T07:56:24.933Z",
    "updatedAt": "2024-06-04T11:51:04.717Z",
    "signatures": [
      {
        "id": "04428cd9-1a45-472d-87f5-c17b87dad879",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "f96e4a00-92b0-4213-b221-c280ee13474e",
        "name": "test",
        "description": null,
        "paths": [
          "%test%"
        ],
        "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "updatedBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "createdAt": "2024-03-30T16:56:21.586Z",
        "updatedAt": "2024-03-30T18:16:42.349Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "c01ed599-e2cf-4b68-9b52-47af653d789a",
          "signatureId": "04428cd9-1a45-472d-87f5-c17b87dad879"
        }
      },
      {
        "id": "21702138-ca70-4725-ae45-e7e2f97bb1f8",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "a09ccfb5-3460-47d6-905b-0544a38c68b6",
        "name": "test-1",
        "description": "testing",
        "paths": [
          "/"
        ],
        "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "updatedBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "createdAt": "2024-03-30T17:02:04.526Z",
        "updatedAt": "2024-03-30T17:02:04.527Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "c01ed599-e2cf-4b68-9b52-47af653d789a",
          "signatureId": "21702138-ca70-4725-ae45-e7e2f97bb1f8"
        }
      }
    ],
    "yaraGroupRules": [
      {
        "id": "d10e13d9-e1f5-47fe-9597-f7ab91a4f63f",
        "seedId": "da434015-dc22-4dd5-9eb4-66e73ce4d852",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "mohankumar_test",
        "description": "testing",
        "rules": "rule php_string_detect {\n    strings:\n        $string1 = \"<?php\"\n        $string2 = \"phpinfo\"\n        \n    condition:\n        any of them\n}",
        "custom": true,
        "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "updatedBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "createdAt": "2023-10-01T08:35:48.243Z",
        "updatedAt": "2023-10-01T08:35:48.244Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "c01ed599-e2cf-4b68-9b52-47af653d789a",
          "yaraGroupRuleId": "d10e13d9-e1f5-47fe-9597-f7ab91a4f63f"
        }
      },
      {
        "id": "61b58c0e-b791-4c0a-a6a7-09f4c53715c6",
        "seedId": "a8a2a176-be85-49c8-a455-982b568a1766",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "KiranSE1",
        "description": null,
        "rules": "import \"hash\"\t//Enabled 2018-10-15\nimport \"pe\"\t//Enabled 2019-04-01\nimport \"time\"\t//Enabled 2019-04-02\nimport \"math\"\t//Enabled 2019-04-08\n\n\n//Loaded all rules till Dec '21\n\nrule ContiCrypter {\n  meta:\n    author = \"James Quinn, Binary Defense\"\n    description = \"Signature for a crypter associated with Conti\"\n    date = \"2021-03-17\"\n    tlp = \"white\"\n    prod = \"true\"\n    addor = \"moon\"\n  strings:\n    $handoff1 = {4C 8D 05 ?? ?? ?? ?? 48 C7 44 24 28 00 00 00 00 C7 44 24 20 00 00 00 00 e8}\n    $handoff2 = {C7 ?? 24 ?? 00 00 00 00 89 44 24 ?? C7 ?? 24 ?? ?? ?? ?? ?? C7 ?? 24 ?? 00 00 00 00 }\n    $garbageLoad1 = {53 48 83 EC 20 89 CB 48 8D 0D ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 01 D8 48 83 C4 20 5B C3}\n    $garbageLoad2 = {55 89 E5 83 EC 18 C7 ?? 24 ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 03 45 08 52 C9 C3}\n  condition:\n    1 of ($handoff*) and 1 of ($garbageLoad*)\n}\n\n\nrule SUSP_Base64_Encoded_Exploit_Indicators_Dec21 {\nmeta:\n  description = \"Detects base64 encoded strings found in payloads of exploits against log4j CVE-2021-44228\"\n  author = \"Florian Roth\"\n  reference = \"https://twitter.com/Reelix/status/1469327487243071493\"\n  date = \"2021-12-10\"\n  modified = \"2021-12-13\"\n  prod = \"yes\"\nstrings:\n  /* curl -s  */\n  $sa1 = \"Y3VybCAtcy\"\n  $sa2 = \"N1cmwgLXMg\"\n  $sa3 = \"jdXJsIC1zI\"\n  /* |wget -q -O-  */\n  $sb1 = \"fHdnZXQgLXEgLU8tI\"\n  $sb2 = \"x3Z2V0IC1xIC1PLS\"\n  $sb3 = \"8d2dldCAtcSAtTy0g\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($sa*) and 1 of ($sb*)\n  and not 1 of ($fp*)\n}\n\nrule EXPL_JNDI_Exploit_Patterns_Dec21_1 {\nmeta:\n  description = \"Detects JNDI Exploit Kit patterns in files\"\n  author = \"Florian Roth\"\n  reference = \"https://github.com/pimps/JNDI-Exploit-Kit\"\n  date = \"2021-12-12\"\n  prod = \"yes\"\nstrings:\n  $x01 = \"/Basic/Command/Base64/\"\n  $x02 = \"/Basic/ReverseShell/\"\n  $x03 = \"/Basic/TomcatMemshell\"\n  $x04 = \"/Basic/JettyMemshell\"\n  $x05 = \"/Basic/WeblogicMemshell\"\n  $x06 = \"/Basic/JBossMemshell\"\n  $x07 = \"/Basic/WebsphereMemshell\"\n  $x08 = \"/Basic/SpringMemshell\"\n  $x09 = \"/Deserialization/URLDNS/\"\n  $x10 = \"/Deserialization/CommonsCollections1/Dnslog/\"\n  $x11 = \"/Deserialization/CommonsCollections2/Command/Base64/\"\n  $x12 = \"/Deserialization/CommonsBeanutils1/ReverseShell/\"\n  $x13 = \"/Deserialization/Jre8u20/TomcatMemshell\"\n  $x14 = \"/TomcatBypass/Dnslog/\"\n  $x15 = \"/TomcatBypass/Command/\"\n  $x16 = \"/TomcatBypass/ReverseShell/\"\n  $x17 = \"/TomcatBypass/TomcatMemshell\"\n  $x18 = \"/TomcatBypass/SpringMemshell\"\n  $x19 = \"/GroovyBypass/Command/\"\n  $x20 = \"/WebsphereBypass/Upload/\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($x*) and not 1 of ($fp*)\n  and filesize < 1MB\n}\n\nrule icedIDGolfBalls {\nmeta:\n  description = \"looks for common variable/method names and padding identified in icedID samples\"\n  author = \"SEI Assassin Squad\"\n  contact = \"sdalnodar@seic.com\"\n  date = \"2021-12-16\"\n  samples = \"d9db19ea9058142903d6dd21b854cd865ce8e22aca3389c73091538c799828b5\"\n  tlp = \"green\"\n  prod = \"true\"\n  analysis = \"https://app.twinwave.io/shared/08652ddb-3de8-4aaa-ad19-a5e042b5ceb9/dc45e7b5c789ac3eb920b197fb6aaa90e06789cdd918d2df94bd2012421d190b\"\n  greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\nstrings:\n  $ = \"powLikeYou\"\n  $ = \"powLoveTube\"\n  $ = \"girlKarolLike\"\n  $ = \"karolLoveGirl\"\n  $ = \"doorYouLoad\"\n  $ = \"tubePow\"\n  $ = \"loadTubeLove\"\n  $ = \"dowGirlDoor\"\n  $ = \"dowNextLove\"\n  $ = \"doorLikePow\"\n  $ = \"likePowLike\"\ncondition:\n  any of them\n  and filesize < 1MB\n}\n\nrule crimson_rat_pe32_padding {\nmeta:\n  description = \"Finds crimson .net built PE32 with fake padding to make them biggies\"\n  author = \"Ryan C. Moon (@moonbas3)\"\n  team = \"SEI Dirty Dozen Hunt Group\"\n  date = \"2021-12-16\"\n  samples = \"67a225feedc5ce4adf75acb41e8b0e746e7daaec779225cd72f860a263b92a6e\"\n  tlp = \"green\"\n  prod = \"true\"\n  greetz = \"Greetz to the A1000 Reversing Labs crew\"\nstrings:\n  $padding = /\\x1c\\x00{210}/\ncondition:\n  uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550 and\n  #padding > 5\n}\n\n\nrule Win32_Trojan_Emotet : tc_detection malicious\n{\n    meta:\n\n        author              = \"ReversingLabs\"\n\n        source              = \"ReversingLabs\"\n        status              = \"RELEASED\"\n        sharing             = \"TLP:WHITE\"\n        category            = \"MALWARE\"\n        malware             = \"EMOTET\"\n        description         = \"Yara rule that detects Emotet trojan.\"\n\n        tc_detection_type   = \"Trojan\"\n        tc_detection_name   = \"Emotet\"\n        tc_detection_factor = 5\n\n    strings:\n\n        $decrypt_resource_v1 = {\n            55 8B EC 83 EC ?? 53 8B D9 8B C2 56 57 89 45 ?? 8B 3B 33 F8 8B C7 89 7D ?? 83 E0 ??\n            75 ?? 8D 77 ?? EB ?? 8B F7 2B F0 83 C6 ?? 8D 0C 36 E8 ?? ?? ?? ?? 8B D0 89 55 ?? 85\n            D2 74 ?? 83 65 ?? ?? 8D 43 ?? 83 65 ?? ?? C1 EE ?? 8D 0C B0 8B F2 8B D9 2B D8 83 C3\n            ?? C1 EB ?? 3B C1 0F 47 5D ?? 85 DB 74 ?? 8B 55 ?? 8B F8 8B 0F 8D 7F ?? 33 CA 0F B6\n            C1 66 89 06 8B C1 C1 E8 ?? 8D 76 ?? 0F B6 C0 66 89 46 ?? C1 E9 ?? 0F B6 C1 66 89 46\n            ?? C1 E9 ?? 0F B6 C1 66 89 46 ?? 8B 45 ?? 40 89 45 ?? 3B C3 72 ?? 8B 7D ?? 8B 55 ??\n            33 C0 66 89 04 7A 5F 5E 8B C2 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v1 = {\n            56 57 33 C0 BF ?? ?? ?? ?? 57 50 50 6A ?? 50 FF 15 ?? ?? ?? ?? BA ?? ?? ?? ?? B9 ??\n            ?? ?? ?? E8 ?? ?? ?? ?? 68 ?? ?? ?? ?? 57 8B F0 56 68 ?? ?? ?? ?? 57 FF 15 ?? ?? ??\n            ?? 83 C4 ?? 8B CE 5F 5E E9\n        }\n\n        $decrypt_resource_v2 = {\n            55 8B EC 83 EC ?? 8B 41 ?? 8B 11 33 C2 53 56 8D 71 ?? 89 55 ?? 8D 58 ?? 89 45 ?? 83\n            C6 ?? F6 C3 ?? 74 ?? 83 E3 ?? 83 C3 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? FF D0 8D 14 1B B9 ?? ?? ?? ?? 52 6A ?? 50 E8 ?? ?? ?? ?? BA ??\n            ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 89 45 ?? 85 C0 74 ?? C1 EB ?? 8B C8 57 33 C0 8D\n            14 9E 33 DB 8B FA 2B FE 83 C7 ?? C1 EF ?? 3B F2 0F 47 F8 85 FF 74 ?? 8B 16 8D 49 ??\n            33 55 ?? 8D 76 ?? 0F B6 C2 43 66 89 41 ?? 8B C2 C1 E8 ?? 0F B6 C0 66 89 41 ?? C1 EA\n            ?? 0F B6 C2 66 89 41 ?? C1 EA ?? 0F B6 C2 66 89 41 ?? 3B DF 72 ?? 8B 45 ?? 33 D2 8B\n            4D ?? 5F 66 89 14 41 8B C1 5E 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v2 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? 50 6A ?? 6A ?? 51 6A ?? B9 ?? ?? ?? ??\n            E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 85 C0 0F 88 ?? ?? ?? ?? 56\n            B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B 15 ?? ?? ?? ?? 8B F0 8D 85 ?? ?? ?? ?? 8D [1-5] 51\n            51 50 56 8D [1-5] 68 ?? ?? ?? ?? 51 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B\n            C8 E8 ?? ?? ?? ?? FF D0 83 C4 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 56 6A ?? 50 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 B8 ?? ?? ?? ?? 5E 8B E5 5D C3 33 C0 8B E5 5D C3\n        }\n\n        $decrypt_resource_v3 = {\n            56 8B F1 BA [6-9] B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 56 6A ?? 50 68 ?? ?? ?? ??\n            BA ?? ?? ?? ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 5E C3\n        }\n\n        $generate_filename_v3 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 53 56 57 8B F1 8B FA 6A ?? 8D 4D ?? E8 ?? ?? ?? ?? BB ??\n            ?? ?? ?? 8D 8D ?? ?? ?? ?? 53 E8 ?? ?? ?? ?? 53 8D 8D ?? ?? ?? ?? E8 ?? ?? ?? ?? 83\n            C4 ?? 8D 85 ?? ?? ?? ?? BB ?? ?? ?? ?? 8B D3 56 50 BE ?? ?? ?? ?? [2-5] 8B CE E8 ??\n            ?? ?? ?? 59 FF D0 57 8D 85 ?? ?? ?? ?? 8B D3 50 [2-5] 8B CE E8 ?? ?? ?? ?? 59 FF D0\n            8D 85 ?? ?? ?? ?? C7 45 ?? ?? ?? ?? ?? 89 45 ?? BA ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? B9\n            ?? ?? ?? ?? 89 45 ?? B8 ?? ?? ?? ?? 66 89 45 ?? 8D 45 ?? 50 68 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? 59 FF D0 F7 D8 5F 1B C0 5E 40 5B 8B E5 5D C3\n        }\n\n        $decrypt_resource_v4 = {\n            56 57 8B FA E8 ?? ?? ?? ?? 8B F0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 8B 0D ?? ?? ?? ??\n            89 44 B9 ?? A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? FF D0 8B F8 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ??\n            ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 6A ?? 57\n            FF D0 5F 5E C3\n        }\n\n        $generate_filename_snippet_v4 = {\n            A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ??\n            ?? ?? ?? A3 ?? ?? ?? ?? 56 53 FF D0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ??\n            ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 5F 5E 33 C9 8D\n            04 43 66 89 08 5D 5B 59 C3\n        }\n\n        $decrypt_resource_snippet_v5 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89 02 8B C1 C1 E8 ?? 8D 52\n            ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89 42 ?? 0F B6 C1 66 89 42\n            ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43 5F 5E 8B C3 5B 83 C4 ??\n            C3\n        }\n\n        $decrypt_resource_snippet_v6 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 88 0A 8B C1 C1 E8 ?? 8D 52 ?? C1 E9 ??\n            88 42 ?? 88 4A ?? C1 E9 ?? 45 88 4A ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 5D C6 04\n            03 ?? 5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $liblzf_decompression_1 = {\n            83 EC ?? 8B 44 24 ?? 53 55 8D 2C 11 89 4C 24 ?? 8B 54 24 ?? 33 DB 03 C2 89 6C 24 ??\n            56 89 44 24 ?? 0F B6 41 ?? 8D 72 ?? 0F B6 11 C1 E2 ?? 0B D0 8D 45 ?? 89 44 24 ?? 57\n            8B F9 3B C8 0F 83 ?? ?? ?? ?? 0F B6 47 ?? C1 E2 ?? 0B D0 6B C2 ?? 8B CA C1 E9 ?? 33\n            CA 89 54 24 ?? 8B 54 24 ?? C1 E9 ?? 2B C8 8B 44 24 ?? 81 E1 ?? ?? ?? ?? 8B 2C 88 8B\n            C7 2B 44 24 ?? 03 6C 24 ?? 89 04 8A 8B C7 8B 54 24 ?? 2B C5 48 89 44 24 ?? 3D ?? ??\n            ?? ?? 0F 8D ?? ?? ?? ?? 3B EA 0F 86 ?? ?? ?? ?? 8A 45 ?? 3A 47 ?? 0F 85 ?? ?? ?? ??\n            0F B6 55 ?? 8D 4F ?? 0F B6 45 ?? 89 4C 24 ?? 0F B6 09 C1 E2 ?? 0B D0 C1 E1 ?? 0F B6\n            07 0B C8 3B D1 0F 85 ?? ?? ?? ?? 8B 44 24 ?? B9 ?? ?? ?? ?? 2B C7 3B C1 6A ?? 0F 47\n            C1 89 44 24 ?? 8D 46 ?? 5A 3B 44 24 ?? 72 ?? 33 C9 8B C6 85 DB 0F 94 C1 2B C1 83 C0\n            ?? 3B 44 24 ?? 0F 83 ?? ?? ?? ?? 8B C6 8D 4B ?? 2B C3 88 48 ?? 33 C0 85 DB 8B 5C 24\n            ?? 0F 94 C0 2B F0 83 FB ?? 0F 86 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ??\n            ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85\n            ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47\n        }\n\n        $liblzf_decompression_2 = {\n            0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A\n            47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45\n            ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47\n            ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ??\n            6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8D 0C 3A 2B EF 42 41 3B D3\n            73 ?? 8A 04 29 3A 01 74 ?? 8B 5C 24 ?? 83 EA ?? 83 FA ?? 73 ?? 8B CB 8A C2 C1 F9 ??\n            C0 E0 ?? 02 C8 88 0E 46 EB ?? 8B C3 C1 F8 ?? 2C ?? 88 06 8D 42 ?? 88 46 ?? 83 C6 ??\n            8B 7C 24 ?? 8B 44 24 ?? 47 88 1E 03 FA 33 DB 83 C6 ?? 3B F8 72 ?? 8B 6C 24 ?? 8D 46\n            ?? 3B 44 24 ?? 76 ?? 33 C0 EB ?? 3B 74 24 ?? 73 ?? 8A 07 43 88 06 46 8B 44 24 ?? 47\n            83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B F8 73 ?? 8B 54 24 ?? E9 ?? ?? ?? ?? 8A 07 43\n            88 06 46 47 83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B FD 72 ?? 8B CE 8D 53 ?? 2B CB 88\n            51 ?? 33 C9 85 DB 0F 94 C1 2B F1 2B 74 24 ?? 8B C6 5F 5E 5D 5B 83 C4 ?? C3\n        }\n\n        $decrypt_resource_snippet_v7 = {\n            C1 EE ?? 3B F9 0F 47 F0 85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89\n            02 8B C1 C1 E8 ?? 8D 52 ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89\n            42 ?? 0F B6 C1 66 89 42 ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43\n            5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $state_machine_snippet_v7 = {\n            8D 84 24 ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B\n            94 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24\n            ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 54 24 ??\n            8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? 8D 94\n            24 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24 ?? ?? ?? ?? 50 E8 ?? ?? ?? ?? FF 74 24\n            ?? 8B F0 FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? F7 DE 8B 94 24 ?? ?? ?? ?? 1B F6\n            81 E6 ?? ?? ?? ?? 81 C6 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ??\n            ?? ?? ?? 8B 94 24 ?? ?? ?? ?? 8B 4C 24 ?? E8 ?? ?? ?? ?? 83 C4 ?? E9\n        }\n\n    condition:\n        uint16(0) == 0x5A4D and\n        (\n            $decrypt_resource_v1 and\n            $generate_filename_v1\n        ) or\n        (\n            $decrypt_resource_v2 and\n            $generate_filename_v2\n        ) or\n        (\n            $decrypt_resource_v3 and\n            $generate_filename_v3\n        ) or\n        (\n            $decrypt_resource_v4 and\n            $generate_filename_snippet_v4\n        ) or\n        (\n            $decrypt_resource_snippet_v5 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v6 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v7 and\n            $state_machine_snippet_v7\n        )\n}\n\nrule solarmarker_pdf_downloader {\n  meta:\n    description = \"Finds Solarmarker-generated pdfs using shapes with embedded links.\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    date = \"2021-11-18\"\n    samples = \"aad015178e6b6476aaa6cef7198ee0ddf523e0c23614c9ef403bf339f220d1d4,e3d432bbeebefc5cfe1733659597a5f8b4c43d9a683b3c47f695e9e754369a54,b367e876ffa73ad3ad1d086d8f99d98cf8014bf561854b41f12eb3605878bcde,c6c6e4c5c40346511196e5ea676e866455b92d6f7b810bc9f775734e4236f79e\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n    comment = \"Solarmarker uses normal pdf generation software, so this mostly focuses on the terseness of their geometric links along with the text padding and pipe delimiters\"\n  strings:\n    $s1 = \"/Rect [\" ascii\n    $s2 = \"/URI /URI (http\" ascii\n    $s3 = { 7c [1-2] 7c 7c [1-2] 29 3e }\n    $s4 = \"/FlateDecode \" ascii\n  condition:\n    uint32be(0) == 0x25504446\n    and all of them\n    and $s2 in (0..255) and #s2 < 3\n    and $s3 in (0..512)\n}\n\nrule vbs_adwind_20211104 {\n  meta:\n    description = \"Finds adwind wshrat vbs artifacts dumping double encoded base64 payloads to tmp using CreateObject()\"\n    author = \"SEI Hunting and Afternoon HammerTime Bowling League\"\n    date = \"2021-11-04\"\n    samples = \"70239e53107a5fa493792a633c08af405e0b95baf1cacafc8ca035ad3b7c65bd\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = \"Const\"\n    $create_object = { 43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 }\n    $charset = { 2e 43 68 61 72 53 65 74 20 3d 20 22 75 73 2d 61 73 63 69 69 22 }\n  condition:\n    all of them\n}\n\n\nrule HTML_atob_Phishing\n{\n    meta:\n        author = \"Nathan Fowler/Jim Farnish\"\n        date = \"2021-03-02\"\n        modified = \"2021-10-19\"\n        description = \"Potential HTML phishing using document.write(atob( the values are base64 encoded or URI encoded unescape\"\n        wiki = \"/reference/O365\"\n    strings:\n        $a1 = /document\\.write\\([\\x20\\x09]*atob\\(/        ascii\n        $a2 = /document\\.write\\([\\x20\\x09]*unescape\\(/    ascii\n        $b = \"</script\"                                   nocase ascii\n    condition:\n        any of ($a*)\n        and $b\n}\n\nrule AdwindRAT_jRat_7Oct21\n{\n  meta:\n    description     = \"Finds jrat includes in java jar files left over from forking jrat to adwind.\"\n    author          = \"SEI Hunt Team Deadly Yara Assassination Squad\"\n    date            = \"2021-10-07\"\n    samples = \"13510f3ee14e47e2fc457215420e795f0959e33411e4fa2e8a889a3c7fb858d9\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $jrat = { 2f 4a 52 61 74 2e 63 6c 61 73 73 }\n    $jar_meta = { 4d 45 54 41 2d 49 4e 46 2f 4d 41 4e 49 46 45 53 54 2e 4d 46 }\n  condition:\n    uint16be(0) == 0x504b and\n    all of ($j*)\n}\n\n\nrule maldoc_sheet_eval_reverse_join_split {\n  meta:\n    description = \"Detects maldocs vba macro with eval and any reverse-joined strings or via split.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-10-06\"\n    samples = \"d6c487b1fb3d31851921b343f3d131f7cb4c0469a60484037a6fa8cfbdc29dea\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $dfm = { d0 cf 11 e0 }\n    $vba = { 56 42 41 }\n    $eval = \"eval(\"\n    $s1 = \"split(\"\n    $s2 = \"reverse(\"\n    $s3 = \"join(\"\n    $s4 = { (48|68|50|70) [0-4] (54|74) [0-4] (54|74) [0-4] (50|70|48|68) }\n  condition:\n    $dfm at 0 and $vba and $eval and 2 of ($s*)\n}\n\n\nrule DLL_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-10-05\"\n        sample          = \"From Validation portal - 0148b8275bab6e00a98da011489b6d3e84c809d99ee190a5b00840f3f63cba93\"\n        tlp             = \"green\"\n        prod            = \"true\"\n        description     = \"Some commonly used API calls by malware. Probable indicator of a malicious executable.\"\n    strings:\n       $string1 = \"URLDownloadToFileA\"\tnocase ascii wide\n       $string2 = \"RegCreateKeyExW\"\tnocase ascii wide\n       $string3 = \"VirtualAlloc\"\tnocase ascii wide\n       $string4 = \"KERNEL32.dll\"    nocase ascii wide\n    condition:\n        uint16be(0) == 0x4d5a\n        and 2 of ($string*)\n}\n\nrule Too_Many_3s\n{\n    meta:\n       author          = \"Nilanjana Saha/Ryan Moon\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an insanely big chunk of numbers in a PE file with excess of 3's in it. If this rule triggers, it's indicative of maliciousness\"\n    strings:\n       $string1 = \"This program must be run under Win32\"        nocase ascii wide\n       $string5 = { 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? }\n       $string6 = { 25 25 25 }\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n        and #string5 > 20\n}\n\n\nrule Win32_Header\n{\n    meta:\n       author          = \"Nilanjana Saha\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an unusual STUB, it's definitely malicious if this rule triggers\"\n       greetz          = \"Thanks to Reversing labs for access to A1000\"\n    strings:\n        $string1 = \"This program must be run under Win32\"    nocase ascii wide\n        $a1 = \"URL.DLL\" nocase ascii wide\n        $a2 = \"InetIsOffline\" nocase ascii wide\n        $api = \"kernel32.dll\"    nocase ascii wide\n     condition:\n        uint16be(0) == 0x4d5a\n        and $string1\n        and all of ($a*)\n        and #api>=2\n}\n\nrule base64_powershell_builder {\n  meta:\n    description = \"Identifies hostile .ps files that use other files to write/read base64 to create pe32.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-09-23\"\n    samples = \"7a30581de07bad69f3f05af56edeccdfae83a025532daad559d30a381ce1f6d3\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"SEI Hunting crew: Sean Dalnodar, Nilanjana Saha, and Jerry Zepp\"\n  strings:\n    $s0 = \"@echo off\"\n    $r0 = /echo [a-zA-Z0-9\\x2f\\x2b]{76}={0,2}>{1,2}[a-zA-Z0-9]{1,64}/\n  condition:\n    filesize < 1MB and $s0 at 0 and #r0 > 50\n}\n\n\nrule PE_MZ_AdminPDB\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"Medium\"\n\t\tdate = \"2021-08-10\"\n\t\tdescription = \"PE/MZ compiled with the presence of an administrator PDB\"\n\tstrings:\n\t\t$ = /C:(\\\\Users)?\\\\Admin[^\\x00]{2,256}\\.pdb/\tnocase ascii\n\tcondition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule HTML_HighAscii_Phish\n:maldoc\n{\n    meta:\n                description = \"Potential HTML phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-06-04\"\n\t\tmodified = \"2021-08-09\"\n\t\treference = \"/wiki/get2\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\"\n\n    strings:\n                $a1 = \"<script\"\tnocase ascii\n\t\t$a2 = \"<frame\"\tnocase ascii\n\t\t$a3 = \"<iframe\"\tnocase ascii\n\t\t$a4 = \"<embed\"\tnocase ascii\n\t\t$a5 = \"<object\" nocase ascii\n\n\t\t//Catch-all attempts\n\t\t$a6 = /function[^a-z]/ nocase ascii\n\t\t$a7 = \".html\"\tnocase ascii\n\n\t\t$exclude1 = \".topleft     { background: #1B4992 url(https://www.privatepost.net/template/v4/images/red_tl.gif); }\"\n                $exclude2 = \"function numberFormatPerc(_number) {\"\n\t\t$exclude3 = \"<!-- Generated by Aspose.Words for .NET \"\n\t\t$exclude4 = \"http://schemas.microsoft.com/office/word/\"\n\t\t$exclude5 = \"http://schemas.microsoft.com/office/excel/\"\n\t\t$exclude6 = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><sst xmlns=\\\"http://schemas.openxmlformats.org/\"\n\t\t$exclude7 = { efbb bf3c 3f78 6d6c }\n\t\t$exclude8 = \"document.getElementById(\\\"btnFDTypeAutoFill\\\").click();\"\n\n    condition:\n                uint16be(0) == 0xefbb\n                and any of ($a*)\n\t\tand not any of ($exclude*)\n}\n\nrule PDF_Google_Docs_Renderer\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-07-01\"\n\t\tdescription = \"Google Docs Renderer with ancient PDF 1.4 specification and BOM (Byte Order Mark) leading the title, possible malspam or phishing.\"\n\t\treference = \"Firefly Ticket #145122\"\n\tcondition:\n\t\tuint32be(0) == 0x25504446\t//%PDF-1.4\n\t\tand uint32be(4) == 0x2d312e34\t//%PDF-1.4\n\n\t\t//BOM in the title\n\t\tand ( for any i in (0..64) : (\n\t\t\t    uint32be(i) == 0x3c3c2f54\n\t\t\tand uint32be(i+4) == 0x69746c65\n\t\t\tand uint32be(i+8) == 0x203c4645\n\t\t\tand uint32be(i+12) == 0x46463030\n\t\t\t)\n\t\t)\n\t\t//Skia/PDF m93 Google Docs Renderer\n\t\tand ( for any i in (0..512) : (\n\t\t\t    uint32be(i) == 0x28536b69\n\t\t\tand uint32be(i+4) == 0x612f5044\n\t\t\tand uint16be(i+8) == 0x4620\n\t\t\tand uint32be(i+14) == 0x476f6f67\n\t\t\tand uint32be(i+18) == 0x6c652044\n\t\t\t)\n\t\t)\n}\n\nrule PE_Darkside_Ransomware\n:malexe\n{\n        meta:\n                description = \"PE/MZ with byte code matching Darkside Ransomware subroutine\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2021-06-18\"\n                hash = \"7f97f85a6f340e199666b5f2d141c08ff4eccca5\"\n    strings:\n            // matching calling sequence\n            // sub add mov test add jz mov push movzx cmp jna\n            //  mov add mov pop movzx cmp jn\n\n            $ = {   81 EC AC 00 00 00 8B 45 0C F7 45 14 00 04 00 00\n                    74 02 8B 00 50 0F B6 C0 83 F8 0F 76 05 B8 0F 00\n                    00 00 89 45 F0 58 0F B6 C4 83 F8 11 76 05 }\n\n    condition:\n            uint16(0) == 0x5a4d\n            and\n            all of them\n\n}\n\nrule PE_MZ_SleepingWithTheEnemy\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-17\"\n        description = \"PE/MZ containing the Sleep or Kernel32 API call but written backwards.\"\n        reference = \"/wiki/raccoon\"\n        sample = \"ecf14e5b521fd83697915fe02ab94585de651c21917d9f949d3c13b3beecac20\"\n    strings:\n        $ = /\\x00peels\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x00\\x00p\\x00e\\x00e\\x00l\\x00s\\x00\\x00/\t\t\t\tnocase ascii\n        $ = /23lenrek\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x002\\x003\\x00l\\x00e\\x00n\\x00r\\x00e\\x00k\\x00/\t\tnocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and any of them\n}\n\nrule PE_MZ_NonsenseCertIssuerOrSubject\n{\n\tmeta:\n\t\tauthor \t\t= \"Nathan Fowler\"\n\t\tdate \t\t= \"2021-06-16\"\n\t\tdescription \t= \"PE/MZ with an invalid certificate issuer or subject\"\n\t\treference \t= \"/wiki/agenttesla\"\n\t\tsample \t\t= \"1af4b28e44d75b4fe50ae509798a626c\"\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t        and (\n\t\t\t      pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t\t   or pe.signatures[pe.number_of_signatures - 1].subject matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t)\n}\n\nrule PE_MZ_AveMaria_Stealer\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2021-06-16\"\n\t\tdescription\t= \"Presence of Ave Maria Stealer or Vitali Kremez as a folder path wide\"\n\t\treference\t= \"/wiki/avemaria\"\n\n\tstrings:\n\t\t$ = { \t4100 7600 6500 5f00 4d00 6100 7200 6900\n\t\t\t6100 2000 5300 7400 6500 6100 6c00 6500\n\t\t} //Ave_Maria Stealer\n\n\t\t$ = {\t5c00 5600 6900 7400 6100 6c00 6900 2000\n\t\t\t4b00 7200 6500 6d00 6500 7a00 5c00\n\t\t} // Vitali Kremez\n\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand any of them\n}\n\nrule AveMaria_API_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-06-13\"\n\t\tDescription\t= \"Matches AveMaria and other malware samples using a string of API calls\"\n\t\tReference \t= \"/wiki/AveMaria\"\n\t\tsha256\t\t= \"ac14bf805d1796f1463b5f27b79496dab9a07f5bd50336628bcfbdc2dc996acf\"\n\t\tTLP\t\t= \"Amber\"\n\t\tGreetz\t\t= \"Thanks to Reversing Labs, to A1000 gang\"\n    strings:\n    \t$a1 = \"bcrypt.dll\"    nocase ascii\n    \t$a2 = \"urlmon.dll\"    nocase ascii\n   \t$a3 = \"ws2_32.dll\"    nocase ascii\n    \t$a4 = \"netapi32.dll\"    nocase ascii\n    \t$a5 = \"crypt32.dll\"    nocase ascii\n    \t$a6 = \"psapi.dll\"    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n    \tand all of them\n}\n\nrule qakbot_20210607 {\n  meta:\n    description = \"Identifies Qakbot samples via commonly used API sets\"\n    author=\"Vikalp Tripathi\"\n    reference=\"https://www.malware-traffic-analysis.net/2021/06/04/2021-06-03-thru-04-Qakbot-malware-and-artifacts.zip\"\n    date = \"2021-07-06\"\n    tlp = \"amber\"\n    prod = true\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n  strings:\n    $a1=\"ConvertSidToStringSid\" nocase ascii\n    $a2=\"GetUserProfileDirectory\" nocase ascii\n    $a3=\"LookupAccountName\" nocase ascii\n    $a4=\"RegDeleteValue\" nocase ascii\n    $a5=\"RegLoadKey\" nocase ascii\n    $a6=\"RegSetValueEx\" nocase ascii\n    $a7=\"RegDeleteValue\" nocase ascii\n\n\n    $b3=\"GDI32.dll\" nocase ascii\n    $b4=\"ole32.dll\" nocase ascii\n    $b5=\"OLEAUT32.dll\" nocase ascii\n    $b6=\"stager_1.dll\" nocase ascii\n\n    $c6=\"ADVAPI32.dll\" nocase ascii\n    $c1=\"GetSidSubAuthorityCount\" nocase ascii\n    $c2=\"OpenThreadToken\" nocase ascii\n    $c3=\"GetSidSubAuthority\" nocase ascii\n    $c4=\"OpenProcessToken\" nocase ascii\n    $c5=\"LookupAccountSidW\" nocase ascii\n\n    $d4=\"KERNEL32.dll\" nocase ascii\n    $d1=\"lstrcpynW\" nocase ascii\n    $d2=\"lstrcmpiA\" nocase ascii\n    $d3=\"lstrcatW\" nocase ascii\n  condition:\n    uint16(0)==0x5a4d\n    and 4 of ($a*)\n    and any of ($b*)\n    and 3 of ($c*)\n    and 2 of ($d*)\n}\n\nrule malware_via_api {\n  meta:\n    description = \"Identifies miscellaneous malware via certificate API library calls and matching library includes\"\n    author=\"Vikalp Tripathi\"\n    sample=\"bdb26c5860ed5657c9b29eae09079c950159ccc2ebc56f2dffc190d90e33efa4\"\n    date = \"2021-07-06\"\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n    tlp = \"amber\"\n    prod = \"true\"\n  strings:\n    //libraries\n    $a1=\"crypt32.dll\" nocase ascii\n    $a2=\"rpcrt4.dll\" nocase ascii\n    $a3=\"user32.dll\" nocase ascii\n    $a4=\"shlwapi.dll\" nocase ascii\n    $a5=\"kernel32.dll\" nocase ascii\n    //imports\n    $b1=\"RpcServerListen\" nocase ascii\n    $b2=\"NdrServerCall2\" nocase ascii\n    $b3=\"I_RpcBindingIsClientLocal\" nocase ascii\n    $b4=\"UuidFromStringA\" nocase ascii\n    $b14=\"VirtualProtect\" nocase ascii\n    $b5=\"VirtualProtectEx\" nocase ascii\n    $b6=\"VirtualAlloc\" nocase ascii\n    $b7=\"CertFreeCertificateChain\" nocase ascii\n    $b8=\"CryptImportPublicKeyInfo\" nocase ascii\n    $b9=\"CertFreeCertificateContext\" nocase ascii\n    $b10=\"CertCreateCertificateContext\" nocase ascii\n    $b11=\"CertFindCertificateInStore\" nocase ascii\n    $b12=\"CertEnumCertificatesInStore\" nocase ascii\n    $b13=\"CryptDecodeObject\"\n  condition:\n    uint16(0)==0x5a4d\n    and 3 of ($a*)\n    and 8 of ($b*)\n}\n\nrule PE_MZ_TooManySections\n{\n        meta:\n                author = \"sysopfb/Nathan Fowler\"\n                date = \"2021-06-02\"\n                description = \"PE/MZ with an insane number of PE sections\"\n        condition:\n                uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n                and pe.number_of_sections >= 50\n}\n\nrule PE_MZ_PrintableChrs1024\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-01\"\n        description = \"A long series of printable characters at offset 1024 decimal\"\n        reference = \"/wiki/icedid\"\n        thanks = \"sysopfb\"\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and (for all i in (1024..4096) : (uint8(i) != 0x00))\n        and (for all i in (0656..1023) : (uint8(i) == 0x00))\n}\n\nrule MZ_Hancitor_DLL_File\n{\n\tmeta:\n\t\tauthor          = \"Nilanjana Saha\"\n\t\tdate            = \"2021-05-31\"\n\t\tdescription     = \"Hancitor Dll leading to cobalt strike and ficker stealer infection\"\n\t\treference       = \"https://www.malware-traffic-analysis.net/2021/05/24/index2.html\"\n\tstrings:\n\t\t$ = {\n\t\t\t4300 c741 0401 0000 00b8 0200 0000 e950\n\t\t\t0200 00c7 4104 0200 0000 b805 0000 00e9\n\t\t\t3f02 0000 c741 0403 0000 00b8 0800 0000\n\t\t\te92e 0200 00c7 4104 0400 0000 b80b 0000\n\t\t\t00e9 1d02 0000 c741 0405 0000 00b8 0e00\n\t\t\t0000 e90c 0200 00c7 4104 0600 0000 b811\n\t\t\t0000 00e9 fb01 0000 c741 0407 0000 00b8\n\t\t\t1400 0000 e9ea 0100 00c7 4104 0800 0000\n\t\t\tb816 0000 00e9 d901 0000 c741 0409 0000\n\t\t\t00b8 1800 0000 e9c8 0100 00c7 4104 0a00\n\t\t\t0000 b81a 0000 00e9 b701 0000 c741 040b\n\t\t\t0000 00b8 1c00 0000 e9a6 0100 00c7 4104\n\t\t\t0c00 0000 b81e 0000 00e9 9501 0000 c741\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule IceID_from_stolenimage {\n\tmeta:\n\t\tauthor =\"Vikalp Tripathi\"\n\t\treference = \"https://www.malware-traffic-analysis.net/2021/05/27/index.html\"\n\n\tstrings:\n\t\t//$b1=\"PluginInit\" nocase\n\t\t$b2=\"shell32.dll\" nocase ascii\n\t\t$a1=\"CreateFileW\" nocase ascii\n\t\t$a2=\"CommandLineToArgvW\" nocase ascii\n\t\t$a5=\"DeleteCriticalSection\" nocase ascii\n\t\t$a6=\"GetFinalPathNameByHandleW\" nocase ascii\n\t\t$a3=\"CloseHandle\" nocase ascii\n\t\t$a4=\"EnterCriticalSection\" nocase ascii\n\t\t//$b5=\"Update\" nocase ascii\n\t\t$b6= \"kernel32.dll\" nocase ascii\n\n\tcondition:\n\t\tuint16(0)==0x5a4d\n\t\tand any of ($b*)\n\t\tand all of ($a*)\n}\n\nrule OLEVBA_VBAStomping\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-28\"\n\t\tdescription = \"Olevba suspects the use of VBA Stomping; look for suspicious pcode\"\n\t\treference = \"https://medium.com/walmartglobaltech/vba-stomping-advanced-maldoc-techniques-612c484ab278\"\n\tstrings:\n\t\t$ = \"|Suspicious|VBA Stomping        |\"\tascii\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule OLEVBA_Office_Excel4_Crash\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-03\"\n\t\tmodifed = \"2021-05-24\"\n\t\tdescription = \"Use of Excel 4 Macros with an abnormal macro parsing which causes olevba to crash.  This is likely Trickbot or Qakbot\"\n\t\treference = \"/wiki/qakbot, /wiki/trickbot, https://github.com/decalage2/oletools/issues/647\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\t\tsample = \"1c01713290a559e74eb6ef93d53f3910\"\n\t\tsample = \"393042b6ace53afa9a85773037442e02 \"\n\tstrings:\n\t\t$ = \"UnboundLocalError: local variable 'stringValue' referenced before assignment\"\n\t\t$ = \"struct.error: unpack requires a buffer of\"\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule Office_ThickClient_Lure\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-24\"\n\t\tdescription = \"Office document attempting to lure the recipient into using the Desktop Excel version for exploitation\"\n\tstrings:\n\t\t$ = \"document using Online Viewer\"\n\t\t$ = \", please use Desktop PC\"\n\t\t$ = \"WHY   I   CANNOT   OPEN   THIS\"\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand any of them\n}\n\nrule MZ_PE_DataExfiltrator_mOrx\n{\n    meta:\n        author\t\t= \"Malware Utkonos\"\n\tmodified\t= \"2021-05-24\"\n\tmodified_author\t= \"Nathan Fowler\"\n        date\t\t= \"2021-05-07\"\n        description\t= \"Very wide rule to find an adversary handle that appears in many malicious samples and is potentially TrickBot related.\"\n\treference\t= \"/wiki/trickbot\"\n    strings:\n        $ = \"mOrx\"\n    condition:\n        uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_Hancitor_Emotet_ByteCode\n{\n\tmeta:\n\t\tdescription = \"Office document with shared byte code in Emotet and Hancitor maldocs\"\n\t\tauthor = \"Nathan Fowler/Vikalp Tripathi\"\n\t\trisk = \"high\"\n\t\tdate = \"2021-05-21\"\n\tstrings:\n\t\t$weird = {\t\t0e00 626a 626a 381a 381a 0000 0000 0000\n\t\t\t\t\t\t0000 0000 0000 0000 0000 0000 0904 1600\n\t\t\t\t\t\t2e0e 0000 5a70 d265 5a70 d265\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand $weird at 544\n}\n\nrule Office_Macro_EXEC\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and an optional EXEC call to cmd, msiexec, certutil, powershell, mshta, rundll, or regsvr32\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Vikalp Tripathi\"\n                risk = \"high\"\n                date = \"2019-06-24\"\n\t\tmodified = \"2021-05-21\"\n                tlp = \"GREEN\"\n                sample = \"4e8a09af76b5f1b162a75ea221a1360a\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $badness1 = /EXEC\\x28[\\x27\\x22]?([cC][mM][dD]|[pP][oO][wW][eE][rR]|[mM][sS][iI][eE][xX][eE][cC]|[cC][eE][rR][tT][uU][tT][iI][lL]|[mM][sS][hH][tT][aA]|[rR][uU][nN][dD][lL][lL])/\n\t\t$badness2 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness3 = /m.?s.?i.?e.?x.?e.?c/\t\tnocase ascii wide\n\t\t$badness4 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness5 = /c.?e.?r.?t.?u.?t.?i.?l/\t\tnocase ascii wide\n\t\t$badness6 = /m.?s.?h.?t.?a/\t\t\tnocase ascii wide\n\t\t$badness7 = /r.?u.?n.?d.?l.?l/\t\t\tnocase ascii wide\n\t\t$badness8 = /r.?e.?g.?s.?v.?r.?3.?2/\t\tnocase ascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and any of ($badness*)\n}\n\nrule PE_MZ_SleepyKernels\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with more than one instance of kernel32 and Sleep\"\n        description = \"This implies this PE/MZ is embedding another PE/MZ and it is sleepy cause sleepy sleeps\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-01\"\n        modified    = \"2021-05-21\"\n\tthanks      = \"Vikalp Tripathi\"\n        sample      = \"e5f5f693ddda55535169ed36cf260de8, 06983f709a4332d18e948d55fa137581\"\n        feelz       = \"https://youtu.be/7pOEW6bGK1I?t=65\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n\t$kern = \"kernel32\"\tnocase ascii wide\n        $ = { 53 6c65 6570 }    //Sleep\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n}\n\nrule Office_XML_Terse_WebSetting_External_Relationship\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-20\"\n\t\tthanks = \"David Coomber\"\n\t\tdescription = \"Excessively terse external relationship frame\"\n\tstrings:\n\t\t$ = \"/relationships/frame\\\"\"\n\t\t$ = \"Target=\\\"http\"\n\t\t$ = \"TargetMode=\\\"External\\\"\"\n\t\t$a = \"Relationships\"\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand all of them\n\t\tand #a == 2\n}\n\nrule OLEVBA_And_Office_Obfuscated_PowerShell\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-05-19\"\n\t\tdescription = \"Office document containing obfuscated powershell or other obfuscated malfeasance\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$a1 = /[^\\r\\n]{0,128}p[`^]*o[`^]*w[`^]*e[`^]*r[`^]*s[`^]*h[`^]*e[`^]*l[`^]*l[^\\r\\n]{0,128}/\tnocase ascii\t//powershell; additional capture is for resume-context\n\t\t$a2 = /CHAR\\(99\\).{0,8}&.{0,8}CHAR\\(109\\).{0,8}&.{0,8}CHAR\\(100\\)/\tnocase ascii\t//\"cmd\"\n\t\t$a3 = /N[`^]*e[`^]*w[`^]*-[`^]*O[`^]*b[`^]*j[`^]*e[`^]*c[`^]*t[`^]* [`^]*N[`^]*e[`^]*t[`^]*\\.[`^]*W[`^]*e[`^]*b[`^]*C[`^]*l[`^]*i[`^]*e[`^]*n[`^]*t/\t\t\t\t\t\tnocase ascii\t//New-Object Net.WebClient\n\t\t$a4 = /\\$\\{[`^]*e[`^]*n[`^]*V[`^]*:/\tnocase ascii\t//${env\n\t\t$a5 = \"CHAR(A94)&CHAR(111)&CHAR(119)&CHAR(101)&CHAR(114)&CHAR(115)&CHAR(104)&CHAR(101)&CHAR(108)&CHAR(108)\"\tnocase wide ascii\n\n\t\t$n1 = \"|May run PowerShell commands\"\tnocase ascii\n\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of ($a*) and not any of ($n*)\n}\n\nrule Ursnif_Big_REM\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-19\"\n\t\tdescription = \"REM ascii statement followed by a huge wall of non-breaking text\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t$ = /REM [^\\x20\\x09\\r\\n]{1024}/\n\tcondition:\n\t\t(  uint8(0) == 0x0a\n\t\tor uint8(0) == 0x0d\n\t\tor uint8(0) == 0x3c\n\t\tor uint8(0) == 0x20\n\t\tor uint8(0) == 0x09\n\t\t) and all of them\n}\n\nrule Office_4Byte_Pepe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"4 byte variable split/concat evasion technique\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = {\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Potential_Equation_Editor_Exploit\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"Potential Equation Editor Exploit in oddly cased OleNative which is used in the kit builder.\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"Ole10NA\"\t\tascii wide\n\t\t$ = \"Ole10NaT\"\t\tascii wide\n\t\t$ = \"Ole10NatI\"\t\tascii wide\n\t\t$ = \"Ole10NatiV\"\tascii wide\n\t\t$ = \"Ole10NativE\"\tascii wide\n\tcondition:\n\t\t( uint16be(0) == 0x504b or uint16be(0) == 0xd0cf )\n\t\tand any of them\n}\n\nrule XML_Too_Much_PHP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"XML Office Document with just too many PHP URLs in the XML\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$a = \".php\"\tnocase ascii wide\n\tcondition:\n\t\tuint32be(0) ==0x3c3f786d\n\t\tand #a >= 6\n}\n\nrule Office_Xor_Clng_AO\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"Office document containing Xor function, auto-open behavior, and clng\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$x1 = { (58|78) (4f|6f) (52|72) }\t\t//Xor\n\t\t$x2 = { (43|63) (4c|6c) (4e|6e) (47|67) }\t//Clng\n\n\t\t$w1 = { (58|78) [1] (4f|6f) [1] (52|72) }\t\t//Xor\n\t\t$w2 = { (43|63) [1] (4c|6c) [1] (4e|6e) [1] (47|67) }\t//Clng\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"       nocase wide ascii\n                $ao5 = \"Evaluate\"       nocase wide ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand ( all of ($x*) or all of ($w*) )\n\t\tand any of ($ao*)\n}\n\nrule Office_Embedded_Script_Language\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-19\"\n\t\tdescription = \"Embedded Script Language in native Office file magic, potential code execution attempt.\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t//Capture up to 255 bytes for context\n\t\t$ = /\\x3cscript language=.{0,255}/\tnocase ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule JavaScript_HexEncoding_Flood\n{\n  meta:\n    description = \"Detects potential phishing or other nefarious JS nonsense using hex->html encoding.\"\n    date = \"2021-03-25\"\n    modified = \"2021-03-29\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    greetz0 = \"Reversing Labs and the A1000 Gang\"\n    greetz1 = \"hi2u 25 March 2021 Birmingham Tornado Team\"\n    greetz2 = \"Nathan 'Smash all the Encodings' Fowler\"\n  strings:\n    $script_the_things = \"<script\"\n    $script_the_thingsh = { 3c (73|93) (63|83) (72|92) (69|89) (70|90) (74|94) }\n    $script_the_thingshw = { 3c 00 (73|93) 00 (63|83) 00 (72|92) 00 (69|89) 00 (70|90) 00 (74|94) 00 }\n    $hex_the_things = { 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 }\n    $hex_the_things_u = { 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4]  5c 75 }\n\n    //Exclusions\n    $not1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n    $not2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n    $not3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n    $not4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"\tascii\n\n  condition:\n    filesize < 1MB and any of ($script_the_things*) and any of ($hex_the_things*) and not any of ($not*)\n}\n\nrule Office_Binary_PutWrite\n{\n        meta:\n                description = \"Office document using binary write and put to a pound numeric file handle\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-03-22\"\n                sample = \"1573d9cb372724883e4bacdef81af436\"\n\t\treference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n\t\t$bw1 = /B.?i.?n.?a.?r.?y.?.?A.?s.?.?#?.?[0-9]/i\n\t\t$bw2 = /P.?u.?t.?.?#?.?[0-9]/i\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$exclude1 = { 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\t\t$exclude2 = \"Makro am 13.07.2005 von hkrassnitzer aufgezeichnet\"\n\t\t$exclude3 = \"SMA-LazardOrders@seic.com\"\tascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($bw*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule multiple_concats_in_xlm_formula_spinal_tap_amps_at_elven\n{\n   meta:\n       date = \"2021-03-18\"\n       author = \"Will Metcalf\"\n       reference = \"https://www.youtube.com/watch?v=hW008FcKr3Q\"\n       description = \"Behold The Great And Powerful Match Iterator. SILENT BUILDER AMPS TO 11\"\n       score = 90\n   strings:\n       $magic1 = \"<?xml\" nocase ascii wide\n       $magic2 = \"<xm:macrosheet\" nocase ascii wide\n       $fstart = \"<f>\" nocase ascii wide\n       $fend = \"</f>\" nocase ascii wide\n       $henge1 = \"REGISTER(\" nocase ascii wide fullword\n       $henge2 = \"CALL(\" nocase ascii wide fullword\n       $henge3 = \"SET.NAME(\" nocase ascii wide fullword\n       $henge4 = \"SET.VALUE(\" nocase ascii wide fullword\n       $henge5 = \"EXEC(\" nocase ascii wide fullword\n       $henge6 = \"FORMULA(\" nocase ascii wide fullword\n       $henge7 = \"FORMULA.ARRAY(\" nocase ascii wide fullword\n       $henge8 = \"FORMULA.FILL(\" nocase ascii wide fullword\n       $ampsat11 = /\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;/ nocase ascii wide\n   condition:\n         all of ($magic*) and any of ($henge*) and (for any i in (1..#fstart) : (for any of ($henge*) : ($ in (@fstart[i]..@fend[i])) and $ampsat11 in (@fstart[i]..@fend[i])))\n}\n\nrule PE_MZ_NET_TotallySpacedOut\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-15\"\n\t\tdescription = \"PE/MZ with VS_VERSION_INFO values containing excessive trailing space which is quite abnormal.\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = /ProductName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /CompanyName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /LegalCopyright[^\\x01]{1,128}\\x20{16}/\twide\n\t\t$ = /Comments[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\t\t\tascii\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule PE_MZ_JUCOAction\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-10\"\n\t\tdescription = \"Repeated byte code inefficient in a packed executable that may correlate to the packer being used\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"be run under Win32\"\n\t\t$ = {\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Office_Enable_Editing\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-03-03\"\n\t\tdescription = \"Office document asking the user to enable editing, which enables the macro code.\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = \"enable editing\"\tnocase ascii wide\n\t\t$ = \"enable content\"\tnocase ascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule vm_cat_and_also_cat {\n  meta:\n    description = \"Detects common vm-detection techniques in vbs scripts.\"\n    date = \"2021-02-23\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    public_samples = \"fa96ef5de5c10538834ed92d9a99185f1b9eeb2beb9d2ef9d4ff8e57f36061c4, 15719bb40281aadf8f2a95c1719534ee71317dbbc5e5e2b3572add27e2c0e786\"\n    greetz0 = \"Thanks to Fowler for encoding alternatives\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n  strings:\n    $getobj = \"GetObject(\" nocase\n    $getobjh = { (67|87) (65|85) (74|94) (6f|8f) (62|82) (6a|8a) (65|85) (63|83) (74|94) 28 }\n    $getobjhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $serviceQuery = \"objWMIService.ExecQuery(\" nocase\n    $serviceQueryb = \"b2JqV01JU2VydmljZS5FeGVjUXVlcnko\"\n    $serviceQueryh = { (6f|8f) (62|82) (6a|8a) (77|97) (6d|8d) (69|89) (73|93) (65|85) (72|92) (76|96) (69|89) (63|83) (65|85) 2e (65|85) (78|98) (65|85) (63|83) (71|91) (75|95) (65|85) (72|92) (79|99) 28 }\n    $serviceQueryhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $str0 = \"winmgmts:\" nocase\n    $path0 = \".\\\\root\" nocase\n    $path1 = \"\\\\cimv2\" nocase\n    $attr0 = \"Win32_Bios\" nocase\n    $attr1 = \"Win32_PnPEntity\" nocase\n    $attr2 = \"Win32_ComputerSystem\" nocase\n    $attr3 = \"Win32_Process\" nocase\n\n  condition:\n    $str0 and (any of ($getobj*) or any of ($serviceQuery*)) and any of ($path*) and any of ($attr*)\n}\n\n\nrule Office_OpenXML_External_oleObject_Link\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external linked OLE object, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-23\"\n\t\tmodified = \"2021-02-24\"\n                tlp = \"GREEN\"\n\t\tsample = \"02bc0a764bceb7df398ea898b1501f09\"\n\t\treference = \"/wiki/loki\"\n\n        strings:\n                $a1 = /oleObject\\x22[^\\x3c]+Target=\\x22http[^\\x22]+/\n                $a2 = /Target=\\x22http[^\\x22]+[^\\x3c]+oleObject\\x22/\n\n\t\t//Exclusions\n\t\t$e1 = \"/docs.ims.corp.seic.com/\"\tascii\n\n        condition:\n\t\t//file magic in this case was document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n\t\t\tor uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and any of ($a*)\n\t\tand not any of ($e*)\n}\n\nrule Office_Word_DocMcStuffings\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-24\"\n\t\tdescription = \"Document embedded in a document, using PK format, containing the string Microsoft_Office_Word_Macro-Enabled_Document which seems to indicate a document kit builder.\"\n\t\treference = \"/wiki/zloader, /wiki/guloader\"\n\tstrings:\n\t\t$ = \"Microsoft_Office_Word_Macro-Enabled_Document\"\n\tcondition:\n\t\tuint32be(0) == 0x504b0304\n\t\tand all of them\n}\n\nrule PDF_ExifTool_MetaStomped\n{\n    meta:\n        author = \"Nathan Fowler/Sean Dalnodar\"\n        date = \"2021-02-19\"\n\tlast_updated = \"2022-05-25\"\n        sample = \"b1eee4586ba12643f711ea40100ab6a73ba720c1\"\n        greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist.\"\n        prod = \"true\"\n        description = \"Exiftool META PDF stomping; exiftool when stomping metadata in PDFs must always leave it's mark.  This is noted in the exiftool manual.  To correctly stomp a PDF you must take the PDF, conver it using qpdf, then re-PDF it.\"\n        process = \"This rule indicatesa PDF where someone has used Exiftool to modify or delete meta data.  Review the PDF and validate it is not malicious via Twinwave.  Validate all redirections to unknown sites that may be secondary downloaders or phishing lures.\"  \n        reference = \"/wiki/bazar\"\n    strings:\n        $ = \"BeginExifTool\"  ascii\n        $ = \"EndExifTool\"  ascii\n    condition:\n        uint32be(0) == 0x25504446\n        and all of them\n}\n\nrule PE_MZ_ColumnFluffer256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-19\"\n\t\tdescription = \"Two null-byte separated code structure indicating potential PE/MZ stuffing in the packer for the purposes of obfuscation\"\n\tstrings:\n\t\t$ = /([^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}){256}/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule HTML_JavaScript_Refresh\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript window.location\"\n                analyst_notes = \"This is potentially phishing or highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-03\"\n\t\tmodified = \"2021-02-18\"\n                tlp = \"GREEN\"\n\n        strings:\n                $r1 = /window\\.location\\.[^\\r\\n]{0,128}/\tnocase ascii\n\n                //Exclusions\n                $e1 = \".citrixdata.com/\"        ascii\n                $e2 = \".force.com/\"             ascii\n                $e3 = \".sharefile.com/\"         ascii\n                $e4 = \".documentforce.com/\"     ascii\n                $e5 = \".salesforce.com/\"        ascii\n\n        condition:\n                filesize < 8KB\n                and uint16(0) == 0x213c\n                and any of ($r*)\n                and not any of ($e*)\n}\n\nrule RAR_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-12\"\n\tmodified = \"2021-02-18\"\n        reference = \"\"\n        description = \"Single executable file embedded in RAR archive\"\n        sample = \"4d394070f5c9be4f97077ba1d877213d, 6620cc2603cb9189cbfae2e318e806a3\"\n\n    strings:\n        //Bad file extensions\n        $bad_ext = /\\.(exe|scr|bat|cmd|jse?|vbs)\\x0a/   nocase ascii\n\n        //Anchor pattern\n        $anchor = /\\.[a-zA-Z]{3}\\x0a/\n\n    condition:\n        uint32(0) == 0x21726152\n        and #bad_ext <= 2\n        and #anchor <=2\n\tand all of them\n}\n\nrule Office_OLE_EquationEditorHex\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Will Metcalf\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Word Document using raw hex Equation Editor as a CSLID potential CVE-2017-11882 exploit\"\n\t\treference = \"/wiki/zloader, https://www.lastline.com/labsblog/evading-static-analyzers-by-solving-the-equation-editor/\"\n\tstrings:\n\t\t$ = { 02CE020000000000C000000000000046 }\t//CVE-2017-11882,  CLSID {0002CE02-0000-0000-C000-000000000046} of Equation Editor\n\t\t$ = /ole.{0,32}native/\tnocase wide\n\tcondition:\n\t\tall of them\n}\n\nrule Office_OLE_Macro_SheetProtection\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Embedded Word Document, as OLE, with Macros Enabled followed by sheetProtection in the same file.\"\n\t\treference = \"/wiki/zloader\"\n\tstrings:\n\t\t$ = \"sheetProtection\"\t\t\t\t\tnocase ascii\n\t\t$ = \"oleObject progId=\\\"Word.DocumentMacroEnabled\"\tnocase ascii\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x3c3f786d )\n\t\tand all of them\n}\n\nrule PE_MZ_Dridex_NopNopNop_Flowbissa\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-11\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"Indicators of a packer commonly used with Dridex since 2019.\"\n\tstrings:\n\t\t$a = { 90909055 }\n\t\t$b = \"^_[]\"\tascii\n\t\t$c = /RSDS[^\\x5c]{1,64}\\.pdb/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 6\n\t\tand #b > 1\n\t\tand $c\n}\n\nrule multiple_concats_in_excel4_formula_exec\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 6E 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x006e))\n}\n\nrule multiple_concats_in_excel4_formula_register\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 95 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0095))\n}\n\nrule multiple_concats_in_excel4_formula_call\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 96 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0096))\n}\n\nrule multiple_concate_c_path_builder\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = { 06 00 [0-8194] 42 ?? 50 01 }\n\t\t$meat = { 17 01 00 43 17 01 00 3A 17 01 00 5C 17 01 00 }\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0150))\n}\n\nrule Excel4_Biff8\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"Will Metcalf, Brad Duncan\"\n        date = \"2021-02-04\"\n        description = \"Legacy Excel 4 document with a modern BIFF8 header, there's a rift in the space-time continiuum\"\n        feelz = \"https://youtu.be/tGOtIPMP7VM?t=80\"\n        risk = \"high\"\n    strings:\n        $ = { 0908 1000 0006 0500 }\n        $ = \"Excel 4\"\n    condition:\n        uint16be(0) == 0xd0cf\n        and all of them\n}\n\nrule OLEVBA_Office_Excel4M_Execution\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-02-04\"\n\t\tdescription = \"Office document using Excel4M to execute an external application\"\n\t\tfirefly = \"Ticket #126736\"\n\n\tstrings:\n\t\t//Opens a dynamic data exchange (DDE) channel to an application and returns the number of\n\t\t//the open channel. Once you have opened a channel to another application with INITIATE, you\n\t\t//can use EXECUTE and SEND.KEYS to control the other application from a Microsoft Excel\n\t\t//macro. (SEND.KEYS is available only with Microsoft Excel for Windows.) If INITIATE is\n\t\t//successful, it returns the number of the open channel. All the subsequent DDE macro functions\n\t\t//use this number to specify the channel. If INITIATE is unsuccessful, FALSE is returned.\n\t\t$a1 = \"INITIATE(\"\tascii\n\t\t$ab1 = \"POKE(\"\t\tascii\n\t\t$ab2 = \"REQUEST(\"\tascii\n\t\t$ab3 = \"EXECUTE(\"\tascii\n\t\t$ab4 = \"SEND.KEYS(\"\tascii\n\n\t\t//Starts a separate program. Use EXEC to start other programs with which you want to\n\t\t//communicate. Use EXEC with Microsoft Excel's other DDE functions (INITIATE, EXECUTE, and\n\t\t//SEND.KEYS) to create a channel to another program and to send keystrokes and commands to\n\t\t//the program. (SEND.KEYS is available only in Microsoft Excel for Windows.)\n\t\t$b1 = \"EXEC(\"\t\tascii\n\n\t\t//Enables or disables a custom command or menu. Disabled commands appear dimmed and\n\t\t//can't be chosen. Use ENABLE.COMMAND to control which commands the user can click in a\n\t\t//menu bar.\n\t\t$b2 = \"ENABLE.COMMAND(\"\tascii\n\n\t\t//Enables or disables a drawing object or the selected drawing object. A disabled object will not\n\t\t//run any macro events assigned to it, and the controls will be grayed out.\n\t\t$b3 = \"ENABLE.OBJECT(\"\tascii\n\n\t\t//Deletes a file from the disk. Although you will normally delete files manually, you can, for\n\t\t//example, use FILE.DELETE in a macro to delete temporary files created by the macro.\n\t\t$b4 = \"FILE.DELETE(\"\tascii\n\n\t\t//Equivalent to clicking the Add Mailer command on the Mail submenu of the File menu. Adds a\n\t\t//new PowerTalk mailer to the active workbook. Use this command to add addressing or subject\n\t\t//information to a workbook that you want to send to another user.\n\t\t$b5 = \"MAIL.ADD.MAILER(\"\tascii\n\n\t\t//Registers the specified dynamic link library (DLL) or code resource and returns the register ID.\n\t\t//You can also specify a custom function name and argument names that will appear in the\n\t\t//Paste Function dialog box. If you register a command (macro_type = 2), you can also specify a\n\t\t//shortcut key. Because Microsoft Excel for Windows and Microsoft Excel for the Macintosh use\n\t\t//different types of code resources, REGISTER has a slightly different syntax form when used in\n\t\t//each operating environment.\n\t\t$b6 = \"REGISTER(\"\tascii\n\n\t\t//NCF - Possibly unregistered CALL functions to Kernel functions\n\t\t//https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ee391643(v=vs.85)\n\t\t//Assuming that the REGISTER function is in cell A5, after your macro registers GetTickCount,\n\t\t//you can use the CALL function to return the number of milliseconds that have elapsed:\n\t\t$b7 = \"CALL(\\\"shell\"\tnocase ascii\n\t\t$b8 = \"CALL(\\\"user\"\tnocase ascii\n\t\t$b9 = \"CALL(\\\"kernel\"\tnocase ascii\n\t\t$b10 = \"CALL(\\\"shlwapi\"\tnocase ascii\n\t\t$b11 = \"CALL(\\\"mstask\"\tnocase ascii\n\t\t$b12 = \"CALL(\\\"ole\"\tnocase ascii\n\t\t$b13 = \"CALL(\\\"dbg\"\tnocase ascii\n\t\t$b14 = \"CALL(\\\"url\"\tnocase ascii\n\n\t\t//Defines a name on a macro sheet to refer to a value. The defined name exists only on the\n\t\t//macro sheet's list of names and does not appear in the global list of names for the workbook.\n\t\t//The SET.NAME function is useful for storing values while the macro is calculating.\n\t\t$c1 = \"SET.NAME(\"\tnocase ascii\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand (\n\t\t\t($a1 and any of ($ab*))\n\t\t\tor any of ($b*)\n\t\t\tor #c1 >= 6\n\t\t)\n}\n\nrule Office_XML_Functionally_Stupid\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\tmodified = \"2021-02-03\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"Excessive amount of curly brace, semi-colon, and-or parenthesis function building.  Likely multi-script language Office document stuffing\"\n\n\tstrings:\n\t\t$od = \"/officeDocument/\"\n\n\t\t$p1 = \"(){\"\n\t\t$p2 = \"})(\"\n\t\t$p3 = \"();\"\n\t\t$p4 = \")+(\"\n\n\t\t//Not functional math\n\t\t$e1 = \"<f>((((\"\n\n\tcondition:\n\t\t//<?xml\n\t\tuint32(0) == 0x6d783f3c\n\t\tand $od\n\t\tand (#p1 + #p2 + #p3 + #p4) > 1024\n\t\tand not any of ($e*)\n}\n\nrule AnyFile_B64_Encoded_ThisProgram {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n\t\tdate = \"2019-08-20\"\n\t\tmodified = \"2019-08-21\"\n\t\treference = \"\"\n\t\tsamples = \"\"\n\n\tstrings:\n\n\t\t// Various encodings of \"This program \"\n\n\t\t$a1 = \"lzIHByb2dyYW0gY2F\" ascii wide // This program cannot\n\t\t$a2 = \"aXMgcHJvZ3JhbSBjYW5\" ascii wide // This program cannot\n\t\t$a3 = \"GlzIHByb2dyYW0gY2Fubm\" ascii wide // This program cannot\n\t\t$a4 = \"hpcyBwcm9ncmFtIGNhbm5\" ascii wide // This program cannot\n\t\t$a5 = \"aXMgcHJvZ3JhbSBjYW5ub3\" ascii wide // This program cannot\n\t\t$a6 = \"hpcyBwcm9ncmFtIGNhbm5vdC\" ascii wide // This program cannot\n\n\t\t$a8 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a9 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a10 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a11 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgBvAH\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a12 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8AdA\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a13 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB0AC\" ascii wide // Null-spaced wide format of This program cannot\n\n\t\t$a15 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a16 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a17 = \"QAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a18 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a19 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a20 = \"HQAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\n\t\t$a22 = \"9ubmFjIG1hcmdvcnA\" ascii wide // tonnac margorp sihT\n\t\t$a23 = \"b25uYWMgbWFyZ29ycCB\" ascii wide // tonnac margorp sihT\n\t\t$a24 = \"Rvbm5hYyBtYXJnb3JwIHN\" ascii wide // tonnac margorp sihT\n\t\t$a25 = \"G9ubmFjIG1hcmdvcnAgc2\" ascii wide // tonnac margorp sihT\n\t\t$a26 = \"b25uYWMgbWFyZ29ycCBzaW\" ascii wide // tonnac margorp sihT\n\t\t$a27 = \"Rvbm5hYyBtYXJnb3JwIHNpaF\" ascii wide // tonnac margorp sihT\n\n\t\t$a29 = \"546869732070726f6772616d2063616e6e6f7420\" ascii wide nocase // This program cannot\n\n\t\t$a31 = \"20746f6e6e6163206d6172676f72702073696854\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a33 = \" tonnac margorp sihT\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a35 = \"aXMgcHJvZ3JhbSB\" ascii wide // This program must\n\t\t$a36 = \"hpcyBwcm9ncmFtIG1\" ascii wide // This program must\n\t\t$a37 = \"lzIHByb2dyYW0gbXV\" ascii wide // This program must\n\t\t$a38 = \"aXMgcHJvZ3JhbSBtdX\" ascii wide // This program must\n\t\t$a39 = \"hpcyBwcm9ncmFtIG11c3\" ascii wide // This program must\n\t\t$a40 = \"GlzIHByb2dyYW0gbXVzdC\" ascii wide // This program must\n\n\t\t$a42 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a43 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHM\" ascii wide // Null-spaced wide format of This program must\n\t\t$a44 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a45 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQBzAH\" ascii wide // Null-spaced wide format of This program must\n\t\t$a46 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHMAdA\" ascii wide // Null-spaced wide format of This program must\n\t\t$a47 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB0AC\" ascii wide // Null-spaced wide format of This program must\n\n\t\t$a49 = \"QAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a50 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a51 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a52 = \"HQAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a53 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a54 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program must\n\n\t\t$a56 = \"c3VtIG1hcmdvcnA\" ascii wide // tsum margorp sihT\n\t\t$a57 = \"N1bSBtYXJnb3JwIHN\" ascii wide // tsum margorp sihT\n\t\t$a58 = \"RzdW0gbWFyZ29ycCB\" ascii wide // tsum margorp sihT\n\t\t$a59 = \"c3VtIG1hcmdvcnAgc2\" ascii wide // tsum margorp sihT\n\t\t$a60 = \"RzdW0gbWFyZ29ycCBzaW\" ascii wide // tsum margorp sihT\n\t\t$a61 = \"HN1bSBtYXJnb3JwIHNpaF\" ascii wide // tsum margorp sihT\n\n\t\t$a63 = \"546869732070726f6772616d206d75737420\" ascii wide nocase // This program must\n\n\t\t$a65 = \"207473756d206d6172676f72702073696854\" ascii wide nocase // tsum margorp sihT\n\n\t\t$a67 = \" tsum margorp sihT\" ascii wide nocase // tsum margorp sihT\n\n\t\t//Exclusions, RFC2822 body matchihng\n\t\t$e1 = \"Received: from oreo.seic.com\"\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand any of ($a*)\n\t\tand not any of ($e*)\n}\n\nrule AnyFile_Reverse_ScriptLanguage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-29\"\n\t\tdescription = \"An ascii reversal of '<script language=' or a base64 encoding of 'ActiveXObject' which is an extreme indicator of potential obfuscation for the intent of malicious behavior\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = \"=egaugnal tpircs<\"\tnocase ascii\n\n\t\t$ = \"RpdmVYT2J\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmp\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9iam\" ascii wide // ActiveXObject\n\t\t$ = \"3RpdmVYT2JqZW\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmplY3\" ascii wide // ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAdABpAHYAZQBYAE8AYgBqAGU\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagBlAG\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAdABpAHYAZQBYAE8AYgBqAGUAYw\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQBjAH\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAZQBqAGIATwBYAGUAdgBpAHQ\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdAB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB0AG\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAZQBqAGIATwBYAGUAdgBpAHQAYw\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdABjAE\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"NlamJPWGV\" ascii wide // tcejbOXevitcA\n\t\t$ = \"VqYk9YZXZ\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml\" ascii wide // tcejbOXevitcA\n\t\t$ = \"NlamJPWGV2aX\" ascii wide // tcejbOXevitcA\n\t\t$ = \"2VqYk9YZXZpdG\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml0Y0\" ascii wide // tcejbOXevitcA\n\t\t// hex encoded string - format present in embedded RTF objects\n\t\t$ = \"416374697665584f626a656374\" ascii wide nocase // ActiveXObject\n\t\t// string reversed hex encoded string - format present in embedded RTF objects\n\t\t$ = \"7463656a624f58657669746341\" ascii wide nocase // tcejbOXevitcA\n\t\t// reversed string - frequently used obfuscation to evade tight static signatures\n\t\t$ = \"tcejbOXevitcA\" ascii wide nocase // tcejbOXevitcA\n\tcondition:\n\t\tany of them\n}\n\nrule PE_MZ_Pp_Pals\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-26\"\n\t\tdescription = \"Packer associated with Qakbot\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = { 7050 2070 5020 7050 2070 5020 7050 }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule XMLHTTP_atob_Phishing\n{\n\tmeta:\n\t\tdescription = \"Potential HTML attachment or other JavaScript using XMLHTTP and atob, possible phishing\"\n\t\tdate = \"2021-01-21\"\n\t\trisk = \"high\"\n\tstrings:\n\t\t$ = /\\.open\\(\"GET\",[\\x09x20]+atob\\(/\n\t\t$ = \"XMLHttpRequest();\"\n\tcondition:\n\t\tall of them\n}\n\nrule MZ_Header_In_Document\n{\n        meta:\n                description = \"MZ Header found in RTF or Office file\"\n                author = \"Nathan Fowler/Sean Dalnodar\"\n                risk = \"high\"\n                date = \"2018-10-02\"\n                modified = \"2022-06-28\"\n                tlp = \"GREEN\"\n                thanks = \"RH-MP\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $doc1 = \"Document\" wide\n                $doc2 = \"Workbook\" wide\n                $doc3 = \"OLE Package\"\n                $doc4 = \"ObjInfo\" wide\n\n                $mz1 = \"4d5a 9000 0300 0000\" nocase wide ascii\n                $mz2 = \"4d5a 5000 0200 0000\" nocase wide ascii\n                $mz3 = \"4d5a 0000 0000 0000\" nocase wide ascii\n                $mz4 = \"4d5a 4152 5548 89e5\" nocase wide ascii\n                $mz5 = \"4d5a 8000 0100 0000\" nocase wide ascii\n                $mz6 = \"4d5a 9000 0300 0400\" nocase wide ascii\n                $mz7 = \"4d5a e800 0000 005b\" nocase wide ascii\n\n                $mz8 = { 4d5a 9000 0300 0000 }\n                $mz9 = { 4d5a 5000 0200 0000 }\n                $mz10 = { 4d5a 0000 0000 0000 }\n                $mz11 = { 4d5a 4152 5548 89e5 }\n                $mz12 = { 4d5a 8000 0100 0000 }\n                $mz13 = { 4d5a 9000 0300 0400 }\n                $mz14 = { 4d5a e800 0000 005b }\n\n                $mz15 = { 4d005a00 90000000 03000000 000000 }\n                $mz16 = { 4d005a00 50000000 02000000 000000 }\n                $mz17 = { 4d005a00 00000000 00000000 000000 }\n                $mz18 = { 4d005a00 41005200 55004800 8900e5 }\n                $mz19 = { 4d005a00 80000000 01000000 000000 }\n                $mz20 = { 4d005a00 90000000 03000000 040000 }\n                $mz21 = { 4d005a00 e8000000 00000000 005b00 }\n\n                $mz22 = \"This program cannot be run in\"  nocase\n                $mz23 = \"This program must be\"           nocase\n\n                $mz24 = \"546869732070726f6772616d2063616e6e6f742062652072756e20696e\" nocase wide ascii\n                $mz25 = \"546869732070726f6772616d206d757374206265\"                   nocase wide ascii\n\n                $mz26 = { 5468 6973 2070 726f 6772 616d 2063 616e 6e6f 7420 6265 2072 756e 2069 6e }\n                $mz27 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 }\n\n                $mz28 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006300 61006e00 6e006f00 74002000 62006500 20007200 75006e00 20006900 6e }\n                $mz29 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006d00 75007300 74002000 620065 }\n\n\t\t//Exclude MSI\n\t\t$msi = { EFBF BDEF BFBD 11E0 A1B1 1AEF BFBD }\n\n\t\t//Exclusions\n\t\t$e1 = {  4d5a 0000 0000 0000 ??00 5300 7500 6d00 6d00 6100 7200 79 }\n\t\t$e2 = \"Mellon Financial Corporation\"\n\n        condition:\n                ($rtf at 0 or $xml at 0 or ($office at 0 and any of ($doc*))) and any of ($mz*) and not $msi\n\t\tand not any of ($e*)\n}\n\nrule PE_MZ_AncientNET\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-07\"\n\t\tdescription = \"PE/MZ using an ancient version of .NET and a current signed certificate\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = { 2e4e 4554 4672 616d 6577 6f72 6b2c 5665 7273 696f 6e3d 7634 2e30 0000 } //.NET 4.0\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n\n\t\t//Certificate expires in 6 months or more\n\t\tand pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + 15552000\n}\n\nrule PE_MZ_BangBang\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2021-01-07\"\n                description = \"PE/MZ using !-! or @-@ wide as a separator for byte logic after being packed.\"\n                reference = \"/wiki/redline, /wiki/agenttesla, /wiki/quasar\"\n        strings:\n                $a1 = { 0021 002d 0021 00 }\n                $a2 = { 0040 002d 0040 00 }\n        condition:\n                uint16be(0) == 0x4d5a\n                and (#a1 + #a2) > 2048\n}\n\nrule Office_Macro_EmbeddedFormObject\n{\n        meta:\n                description = \"Office document with a macro and auto-open functionality with multiple (greater than or equal to 2) embedded form objects\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-01-05\"\n                sample = \"1573d9cb372724883e4bacdef81af436, 746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Numeric User Path\n\t\t$nu = /[A-Za-z]:\\\\Users\\\\[0-9]+\\\\/\n\n\t\t//Negations\n\t\t$n1 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and #fo >= 2\n\t\tand (any of ($ao*) or $nu)\n\t\tand any of ($vb*)\n\t\tand not any of ($n1*)\n}\n\nrule Office_Macro_EmbeddedFormObject_Excel4\n{\n        meta:\n                description = \"Office document with an Excel 4 Macro, VBA, and an embedded form object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2019-09-27\"\n\t\tmodified = \"2021-01-04\"\n                sample = \"746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Excel4\n\t\t$ex4 = \"Excel4\"\t\twide ascii\n\n\t\t//Negations\n\t\t$n1 = \"SQL2K14ODS01\"\twide ascii\n\t\t$n2 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $fo\n\t\tand $ex4\n\t\tand any of ($vb*)\n\t\tand not any of ($n*)\n}\n\nrule PE_MZ_12S_dadada\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-12-21\"\n                description = \"Potential signs of packer and packer-stuffed PE/MZ seen with Dridex\"\n                reference = \"/wiki/dridex\"\n                feelz =\t\"https://www.youtube.com/watch?v=jqk0jwNs2Ew&t=52\"\n        strings:\n                //0030bc0: 7475 7265 3d22 7838 3622 0d0a 2020 2020  ture=\"x86\"..\n                //0030bd0: 2020 2020 2020 2020 7075 626c 6963 4b65          publicKe\n                //0030be0: 7954 6f6b 656e 3d22 3635 3935 6236 3431  yToken=\"6595b641\n                $ = { 22 0d0a 2020 2020 2020 2020 2020 2020 7075 626c 6963 4b65 7954 6f6b 656e 3d22 }\n                $ = { a?3e a?3e a?3e a?3e b?3e b?3e b?3e b?3e }\n                $ = { da dada dada dada }\n        condition:\n                uint16be(0) == 0x4d5a\n                and all of them\n}\n\nrule Office_XML_Russian_Macro\n{\n        meta:\n                author = \"Nathan Fowler/Nilanjana\"\n                creation_date = \"2020-12-17\"\n                last_update = \"2022-04-12\"\n                sample = \"\"\n                greetz = \"Thanks to the a1000 Reversiing Labs Crew for the research assist\"\n                prod = \"true\"\n                description = \"Office XML document containing the phrases Макросы (Macros), Листы (Sheets), Sheet1 (Лист1) or This book (ЭтаКнига)\"\n                reference = \"/wiki/qakbot\"\n                process = \"This rule flagged because this document contains key values in Russian.  Since SEI doesn't conduct much/any business with this country the analyst should submit the associated xls document to Twinwave and validate it is not malicious.  Make sure to review any redirects to websites or secondary downloads that are identified to ensure they are not malicious or phishing lures\"\n                reference = \" \"\n        strings:\n                $ = \"Макросы\"   ascii wide\n                $ = \"mакросы\"   ascii wide\n                $ = \"Листы\"     ascii wide\n                $ = \"Лист1\" ascii wide\t//Sheet1\n                $ = \"ЭтаКнига\" ascii wide\t//This book\n        condition:\n                (uint32be(0) == 0x3c3f786d or uint16be(0) == 0xd0cf)\n                and any of them\n}\n\nrule Office_XML_Excel4\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-17\"\n        description = \"Office Excel 4.0 represented in XML which is a modern document format.  Abnormal time-warp\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = \"Excel 4.0\"    ascii wide\n    condition:\n        uint32be(0) == 0x3c3f786d and all of them\n}\n\nrule PE_MZ_KernelNotKernelAgain\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-16\"\n        reference = \"/wiki/dridex\"\n        sample = \"487765c199a6ae9ea318ec795d342328\"\n        description = \"Use of hidden kernel32 that has been obfuscated to avoid detection via a malware packer\"\n    strings:\n        $ = /[^kK]ernel32?\\.dll/    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule Office_Biff8_Excel4\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-14\"\n\t\tdescription = \"Office 4.0 expressed in Biff8, a modern document format\"\n\t\treferece = \"/wiki/trickbot\"\n\t\tsample = \"86a7c75c6be25bef045c825542646b61\"\n\tstrings:\n\t\t$ = \"Excel 4.0\"\tascii\n\t\t$ = \"Biff8\"\tascii\n\t\t$ = /Excel (200|19)/\tascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_OpenXML_Potential_Phishing\n{\n        meta:\n                description = \"Office XML Document suspected of being a carrier for phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-11\"\n\t\tmodified = \"2020-12-14\"\n                tlp = \"GREEN\"\n\n        strings:\n                $xml = { 3c3f 786d 6c }\n\n\t\t$rel1 = /\\x2frelationships\\x2fhyperlink\\x22 Target=\\x22https?:\\x2f\\x2f[^\\x22]+\\x22 TargetMode=\\x22External\\x22/\n\t\t$rel2 = /\\x2frelationships\\x2fimage\\x22 Target=\\x22[^\\x3a]{1,8}/\n\t\t$rel3 = \"<Relationship Id=\\\"rId\"\n\n\t\t//Exclusions\n\t\t$exclude1 = \"niit\"\tnocase ascii\n\t\t$exclude2 = \"seic\"\tnocase ascii\n\t\t$exclude3 = \"/capgemini.com/\"\t\tnocase ascii\n\t\t$exclude4 = \"/www.capgemini.com/\"\tnocase ascii\n\t\t$exclude5 = \"/xceedwealthmanagement.org/harvey-reiner/\"\tnocase ascii\n        condition:\n                $xml at 0 and filesize <= 3KB and (#rel1 > 2 and #rel1 < 10) and (#rel2 > 2 and #rel2 < 10) and (#rel3 < 24) and not any of ($exclude*)\n}\n\nrule Office_IttyBittyBiteyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-22\"\n\t\tmodified = \"2020-12-11\"\n\t\tdescription = \"Office document with strange PK instanced byte separation\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$a1 = {\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t}\n\n\t\t$pk = { 504b 0304 1400 }\t//PK\n\n\t\t//0000650: 0022 2422 232c 2323 305f 293b 5b52 6564  .\"$\"#,##0_);[Red\n\t\t//0000660: 5d5c 2822 2422 232c 2323 305c 291e 0422  ]\\(\"$\"#,##0\\)..\"\n\t\t$a2 = { 3b 5b52 6564 5d5c 2822 2422 232c 2323 305c 29 }\n\n\t\t$a3 = \"Linked Cell\"\twide ascii\n\n\t\t//Negations\n\t\t//0023f10: 2700 3002 ed00 b600 1400 5375 6e47 6172  '.0.......SunGar\n\t\t//0023f20: 642e 494f 436f 6e6e 6563 7469 6f6e 2400  d.IOConnection$.\n\t\t$n1 = \"SunGard.IOConnection\"\tascii\n\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand #pk > 1\n\t\tand not any of ($n*)\n}\n\nrule Office_INCLUDEPICTURE_ExtHREF\n{\n\tmeta:\n\t\tdescription = \"Office, XML, or RTF document using INCLUDEPICTURE and an external HREF\"\n\t\tanalyst_notes = \"The external HREF may be malicious\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-08-11\"\n\t\tmodified = \"2020-12-10\"\n\t\tthanks = \"David Heise\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$a = /INCLUDEPICTURE[\\x20\\x09\\r\\n\\x22\\x27]*[hf]t{1,2}ps?:\\/\\/.{4,256}MERGEFORMAT/\n\n\t\t$n1 = \"eroomweb.seic.com\"\n\n\tcondition:\n\t\t(uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 or uint32be(0) == 0x3c3f786d)\n\t\tand $a and not any of ($n*)\n}\n\nrule Biff5ProtectedExcel4BurnInHell\n{\n\tmeta:\n\t\tauthor = \"Will Metcalf\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Office 97 Biff5 password protected document\"\n\tstrings:\n\t\t$a1 = { 0908080000050500[4]2f000400 }\n\t\t$a2 = { 000042006F006F006B00[57]0002 }\n\t\t$a3 = { 457863656C20342E30 }\n\t\t$n1 = { 0908080000050500[4]2f000400(00|01) }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand not $n1\n}\n\nrule Office_DoubleClutchingGrumpies\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"David Heise, Will Metcalf\"\n        date = \"2020-12-02\"\n        description = \"Excel 4.0 used without a BIFF version, no document encryption, and the lack of traditional CHRGEN seen containing 0x7b, 0x7c, and 0x7d in 0x0? wide spacing\"\n\n    strings:\n        $a = \"Excel 4.0\"\n        $b1 = \"Biff\"\n        $b2 = \"Encryption\"\n        $b3 = { 7b0? 0000 7c0? 0000 7d }\n\n    condition:\n        uint16be(0) == 0xd0cf\n        and $a and not any of ($b*)\n}\n\nrule Office_EggDt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Abnormally encrypted Office document attempting to evade tool usage by boutique Excel encryption processing that is currently unknown or understood\"\n\tstrings:\n\t\t$ = { 45 2b67 ??67 2b44 ???? 74 }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Macrosheeeeeeeeeeeeet\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-10-15\"\n\t\tupdated = \"2020-11-23\"\n\t\tthanks = \"Will Metcalf for the backslashes\"\n                description = \"Office macrosheet in XML indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n                reference = \"/wiki/qakbot,/wiki/zloader\"\n        strings:\n\t\t$ = \"Target=\\\"macrosheets\"\n        condition:\n                filesize < 128KB\n                and uint8(0) == 0x3c\n                and all of them\n}\n\nrule Office_Terse_PK_Macrosheets\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-15\"\n\tupdated = \"2020-11-23\"\n\tthanks = \"Will Metcalf for the backslashes\"\n        description = \"Office document in PK format with a macrosheets folder indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = /[\\x2f\\x5c]macrosheets/\t\tnocase ascii wide\n        $ = /\\.(jpe?g|png|gif)/\t\t\tnocase ascii wide\n        $ = \"Content_Types\"\t\t\t\tnocase ascii wide\n    condition:\n        filesize < 128KB\n        and uint32be(0) == 0x504b0304\n        and all of them\n}\n\nrule PE_MZ_CafeBafe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-23\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"0xcafe PE/MZ byte separator used for reference and obfuscation\"\n\tstrings:\n\t\t$a = { bafe ffff cafe ffff cafe ffff bafe ffff }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 128\n}\n\nrule PE_MZ_NET_ATeam\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a = { a0 a2a2 a3a4 adae }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 8\n}\n\nrule PE_MZ_NET_IP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a =\"_@IP\"\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 32\n}\n\nrule OLEVBA_Office_Excel4M_VMCheck_GetWorkspace\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tdescription = \"Office document using GET.W to check machine capability, VM detect\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$ = \"GET.WORKSPACE(11\"\tascii\t//X position of Excel\n\t\t$ = \"GET.WORKSPACE(12\"\tascii\t//Y position of Excel\n\t\t$ = \"GET.WORKSPACE(13\"\tascii\t//Workspace width\n\t\t$ = \"GET.WORKSPACE(14\"\tascii\t//Workspace height\n\t\t$ = \"GET.WORKSPACE(16\"\tascii\t//Free RAM in kilobytes\n\t\t$ = \"GET.WORKSPACE(17\"\tascii\t//Total RAM in kilobytes available to Excel\n\t\t$ = \"GET.WORKSPACE(18\"\tascii\t//Math Co-Processor present\n\t\t$ = \"GET.WORKSPACE(19\"\tascii\t//Mouse present\n\t\t$ = \"GET.WORKSPACE(23\"\tascii\t//Full path to startup directory or folder\n\t\t$ = \"GET.WORKSPACE(24\"\tascii\t//Full path to alternative startup directory\n\t\t$ = \"GET.WORKSPACE(26\"\tascii\t//Username\n\t\t$ = \"GET.WORKSPACE(27\"\tascii\t//Orgname\n\t\t$ = \"GET.WORKSPACE(31\"\tascii\t//Debug or single step macro check\n\t\t$ = \"GET.WORKSPACE(37\"\tascii\t//Country and locale\n\t\t$ = \"GET.WORKSPACE(42\"\tascii\t//Can play sounds\n\t\t$ = \"GET.WORKSPACE(43\"\tascii\t//Can record sounds\n\t\t$ = \"GET.WORKSPACE(44\"\tascii\t//DLL check\n\t\t$ = \"GET.WORKSPACE(49\"\tascii\t//MAPI session in use\n\t\t$ = \"GET.WORKSPACE(64\"\tascii\t//Excel Mail System check\n\t\t$ = \"GET.WINDOW(5\"\tascii\t//Width, in points\n\t\t$ = \"GET.WINDOW(6\"\tascii\t//Height, in points\n\t\t$ = /GET\\.(WINDOW|WORKSPACE)\\([\\x20\\x09]*[A-Z]/\tascii\t//Potential evasion attempt by using a non-integer function call to GET.WORKSPACE or GET.WINDOW\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule PE_MZ_NET_lN4k\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdescription = \"PE/MZ with specific odd byte code almost exclusively seen with malware.  0 FPs on A1000\"\n\t\treference = \"/wiki/agenttesla\"\n\t\tdate = \"2020-11-10\"\n\t\tsamples = \"626758f886985fd8b5abd2526c42ea38, 1fa0185ac05a81b5cd35a4baf4c327e4\"\n\tstrings:\n\t\t//Honestly, who knows?  I dunno.\n\t\t//000934AC  A26C4E            mov [0x4e6c],al\n\t\t//000934AF  346B              xor al,0x6b\n\t\t$a = \"lN4k\"\t\t\tascii\n\t\t$ = \"WrapNonExceptionThrows\"\tascii\n\tcondition:\n\t\tfilesize < 2048KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n\t\tand #a >= 4\n}\n\nrule Office_TrailerPark_DoubleWide\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-15\"\n\t\tmodified = \"2020-11-10\"\n                risk = \"high\"\n                comments = \"Office document with macro using double-wide CHARGEN and Embedded Object\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$em = \"Embedded Object\" nocase wide ascii\n\n\t\t//Really long CHRGEN that is double-wide starting with exclamation and ending with tidle\n\t\t$double_wide = { 2100000022000000230000002400000025000000260000002700000028000000290000002a0000002b0000002c0000002d0000002e0000002f000000300000003100000032000000330000003400000035000000360000003700000038000000390000003a0000003b0000003c0000003d0000003e0000003f000000400000004100000042000000430000004400000045000000460000004700000048000000490000004a0000004b0000004c0000004d0000004e0000004f000000500000005100000052000000530000005400000055000000560000005700000058000000590000005a0000005b0000005c0000005d0000005e0000005f000000600000006100000062000000630000006400000065000000660000006700000068000000690000006a0000006b0000006c0000006d0000006e0000006f000000700000007100000072000000730000007400000075000000760000007700000078000000790000007a0000007b0000007c0000007d0000007e0000007f00000080000000 }\n\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb4 = \"OLE\"\tnocase wide ascii\n                $vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$negation1 = \";Data Source=SQL2K14ODS01\\\\INST2;\"\twide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $em and $double_wide and any of ($vb*) and not any of ($negation*)\n}\n\nrule OLE_URL_TinyDoc\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-11-05\"\n                description = \"OLE embedded document, extremely\tsmall in size, with a WIDE bare\tURL\"\n                reference = \"/wiki/lokibot\"\n                firefly\t= \"Ticket #126303\"\n\n        strings:\n                $ = \"Root Entry\"\twide\n                $ = \"Ole\"\t\twide\n                $ = \"://\"\t\twide\n\n\tcondition:\n\t\tfilesize < 6KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule HexAscii_Bad_Functions\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-05\"\n\t\tdescription = \"Malicious functions that have been encoded as hex-ascii inside of a document for the intent of obfuscation and hiding\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$ = \"4e65742e576562436c69656e74\"\tnocase ascii\t//Net.WebClient; PowerShell\n\t\t$ = \"225662736372697074\"\t\tnocase ascii\t//\"Vbscript\"\n\t\t$ = \"45786563757465476c6f62616c28\"\tnocase ascii\t//ExecuteGlobal(\n\t\t$ = \"43003a005c00660061006b006500\"\tnocase ascii\t//C:\\fake WIDE\n\n\tcondition:\n\t\t(\n\t\t\t   uint16(0) == 0x5c7b          //rtf\n\t\t\tor uint32(0) == 0x6d783f3c      //xml\n\t\t\tor uint16(0) == 0x0a0d          //asc\n\t\t\tor uint16(0) == 0x0a0a          //asc\n\t\t\tor uint16(0) == 0x2020          //asc\n\t\t\tor uint16(0) == 0x0909          //asc\n\t\t\tor uint16(0) == 0x213c          //html\n\t\t\tor uint16(0) == 0xcfd0          //office\n\t\t)\n\t\tand any of them\n}\n\nrule JavaScript_Unicode_Flood\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Potential phishing using excessive unicode\"\n\n\tstrings:\n\t\t$ = \"script\"\t\t\tnocase ascii\n\t\t$ = /(\\x5c[uU][0-9a-f]{2,4}){128}/\tascii\n\n\tcondition:\n\t\t(\tuint16be(0) == 0xefbb\n\t\t\tor uint8(0) == 0x3c\n\t\t\tor uint8(0) == 0x0a\n\t\t\tor uint8(0) == 0x0d\n\t\t\tor uint8(0) == 0x09\n\t\t\tor uint8(0) == 0x20\n\t\t)\n\t\tand all of them\n}\n\nrule OLEVBA_Office_Excel4_ResolutionCheck\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Use of Excel 4 Macros to perform a resolution check of the local machine prior to macro execution; sandbox detect\"\n\t\treference = \"/wiki/zloader\"\n\t\tthanks = \"Peter Misurek, Michelle Ticer\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\n\tstrings:\n\t\t$ = \"Excel 4.0\"\n\t\t$ = \"APP.MAXIMIZE(\"\n\t\t$ = \"GET.WORKSPACE(\"\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand all of them\n}\n\nrule Office_Macro_Comspec\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing environment variable comspec with VBA\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /%.?c.?o.?m.?s.?p.?e.?c.?%/\tnocase ascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Document_Close\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing Document_Close with the purposes of executing a macro upon document closure\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /D.?o.?c.?u.?m.?e.?n.?t.?_.?C.?l.?o.?s.?e/\tascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Powershell_DownloadFile\n{\n        meta:\n                description = \"Hidden Powershell download command, suspected StupidAmateurLocker\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-06-21\"\n\t\tmodified = \"2020-10-29\"\n\n        strings:\n\n                $ps1 = \"powershell\"\t\t\tnocase wide ascii\n                $ps2 = \"-ExecutionPolicy\"\t\tnocase wide ascii\n                $ps3 = \"-windowstyle\"\t\t\tnocase wide ascii\n\n                $web1 = \"System.Net.WebClient\"\t\tnocase wide ascii\n                $web2 = \"DownloadFile\"\t\t\tnocase wide ascii\n                $web3 = \"://\"\t\t\t\twide ascii //You thought I'd put a nocase here didn't you? LOL\n\n        condition:\n                all of ($ps*) and any of ($web*)\n}\n\nrule Suspected_PDF_Link_Image_Phish\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to URI\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-19\"\n                modified = \"2020-10-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n\t\t//2019-02-08 For performance\n\t\t$perf1 = \"/Rect\"\n\t\t$perf2 = \"/Link\"\n\t\t$perf3 = \"URI\"\n\n\t\t//2019-02-08\n\t\t//In some cases there is a 0x0a present between these, so for the first time ever, I'm using the '.' metacharacter\n\t\t///LInk./A 14 0 R./Border [0 0 0]./H /I./Rect [ 99.6735 646.9335 469.3665 656.0910 ].>>.endobj.14 0 obj.<< /Type /Action./S /URI./URI (http://angull\n                $link = /\\x2fLink(.|[\\r\\n]){0,64}\\x2fRect(.|[\\r\\n]){1,128}URI[\\x20\\x09]*\\x28[fh]t?tp[^\\x22\\r\\n\\x29\\x20]+/\n\n                //URL Exclusions\n                $exclude1 = /URI\\x20?\\x28(mailto|https?:\\x2f\\x2f[^\\x2f]+\\.(goldman|gs|morganstanley|spectrongroup|bloomberg|fisglobal|netxpro)\\.com\\x2f|https?:\\x2f\\x2f(tass)\\.com\\x2f)/\n\n                //PDF exclusions, the samples seen seem to not have /Form entities defined\n                //2019-01-02 - OneDrive phish contains a singular \"/Form/BBox\"\n                $exclude2 = /\\x2fForm[\\x20\\x09]*\\x2f/\n                $include2 = /\\x2fForm[\\x20\\x09]*\\x2fBBox/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n\t\t//2019-02-08 Chasing PDF creators at this point :(\n                //mPDF PHP-based content creator\n\t\t//dompdf content creator\n                $mpdf1 = \"mPDF \"\twide\n\t\t$mpdf2 = \"dompdf \"\twide\n\t\t$mpdf3 = \"CPDF\"\t\twide\n\n\t\t//This might FP a ton, but lets see if any 'wide' version of PDF is just weird/wonky leading/trailing spaced\n\t\t$mpdf4 = \" PDF\"\tnocase wide\n\t\t$mpdf5 = \"PDF \"\tnocase wide\n\n        condition:\n                    (filesize < 1024KB)\n                and uint16(0) == 0x5025\n                and ($pdf at 0)\n\t\tand all of ($perf*)\n                and (#link > 0 and #link < 3 )\n                and not $exclude1\n                and ( not $exclude2 or $include2 )\n                and (\n\t\t\t( not $title1 or $title2 )\n\t\t\t or any of ($mpdf*)\n\t\t)\n}\n\nrule Office_HiddenSheetSheeeeeeeeet\n{\n\tmeta:\n\t\tdescription = \"Office document with hidden or very hidden sheet with non-0x00 6 significant bits\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Didier Stevens\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-10-27\"\n\t\treference = \"https://isc.sans.org/forums/diary/Excel+4+Macros+Abnormal+Sheet+Visibility/26726/\"\n\t\treference = \"https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/b9ec509a-235d-424e-871d-f8e721106501\"\n\n\tstrings:\n\t\t$a = { 8500 ???? ???? ???? (01|02|03)01 }\n\t\t$b = { 8500 0000 0000 0000 (01|02|03)01 }\n\t\t$c = \"Excel\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $c\n\t\tand for any i in (1..#a): (uint16(@a[i] + 2) - uint16(@a[i] + 10) == 8)\n\t\tand not $b\n}\n\nrule PE_MZ_MF_DatJUCO_Action\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-21\"\n        comments = \"Excessive loop-based add xor, xor, add, add, jnz, jnc iteratively\"\n        reference = \"/wiki/qakbot\"\n        feelz = \"https://www.youtube.com/watch?v=fipQisc68dQ\"\n\n    strings:\n\n        //003FEEC8  65007200          add [gs:bp+si+0x0],dh\n        //003FEECC  3300              xor ax,[bx+si]\n        //003FEECE  3200              xor al,[bx+si]\n        //003FEED0  0000              add [bx+si],al\n        //003FEED2  0000              add [bx+si],al\n        //003FEED4  7500              jnz 0xeed6\n        //003FEED6  7300              jnc 0xeed8\n        //003FEED8  65007200          add [gs:bp+si+0x0],dh\n        //003FEEDC  3300              xor ax,[bx+si]\n        //003FEEDE  3200              xor al,[bx+si]\n        //003FEEE0  0000              add [bx+si],al\n        //003FEEE2  0000              add [bx+si],al\n        //003FEEE4  7500              jnz 0xeee6\n        //003FEEE6  7300              jnc 0xeee8\n        $ = {\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n        }\n\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule PE_MZ_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE executable using 0x0b repeatedly and more than 32768 times\"\n                analyst_notes = \"This is potentially highly abnormal, based on PE_MZ_NET_BobThePEBuilder\"\n                author = \"Nathan Fowler\"\n                date = \"2020-10-19\"\n                samples = \"d831b3b3fb3030a9f9a1e9259105e57b\"\n                reference = \"/wiki/qakbot\"\n        thanks = \"Chris Fry\"\n\n        strings:\n                $a = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n\t\t\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #a > 32768\n}\n\nrule Kernel32_Skipping_n_Tripping\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2020-10-16\"\n                description = \"Potential Qakbot maldoc using Kernel32 instancing\"\n                reference = \"/wiki/qakbot\"\n        strings:\n                //0000100: 0200 0000 0800 0000 4b00 6500 7200 6e00  ........K.e.r.n.\n                //0000110: 6500 6c00 3300 3200 0000 3000 0000 1701  e.l.3.2...0.....\n                //0000120: 004b 0017 0100 6500 0817 0100 7200 0817  .K....e.....r...\n                //0000130: 0100 6e00 0817 0100 6500 0817 0100 6c00  ..n.....e.....l.\n                //0000140: 0817 0100 3300 0817 0100 3200 0815 0000  ....3.....2.....\n                $ = \"Kernel32\" nocase ascii wide\n                $ = { 4b[2-8] 65[2-8] 72[2-8] 6e[2-8] 65[2-8] 6c[2-8] 33[2-8] 32 }\n        condition:\n                all of them\n}\n\nrule ta551_maldoc_zip\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-14\"\n\tmodified = \"2020-10-15\"\n        comments = \"Potential encrypted archive containing a singular document matching ta551/icedid naming convention\"\n        thanks = \"Michelle Ticer\"\n        reference = \"/wiki/icedid\"\n        greetz = \"Tony Drake, your FS-ISAC presentation gave me this very idea.\"\n    strings:\n        $d1 = \".docPK\"    ascii\n        $d2 = \".xlsPK\"    ascii\n        $d3 = \".docmPK\"   ascii\n        $d4 = \".xlsmPK\"   ascii\n        $d5 = \".docxPK\"   ascii\n        $d6 = \".xlsxPK\"   ascii\n    condition:\n        uint32be(0) == 0x504b0304\n        and uint32be(4) == 0x14000900\n        and uint16be(8) == 0x0800\n        and ( #d1 == 1 or #d2 == 1 or #d3 == 1 or #d4 == 1 or #d5 == 1 or #d6 == 1 )\n}\n\nrule PE_MZ_LongB64_2048\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-13\"\n\t\tdescription = \"PE/MZ with embedded long base64 starting with AAA, likely packed and obfuscated malware\"\n\t\treference = \"/wiki/asyncrat\"\n\tstrings:\n\t\t$ = /AAA[a-zA-Z0-9\\x2f\\x2b\\x3d-]{2048}/\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Macro_Shell\n{\n    meta:\n        description = \"Office macro contains code to run an executable or system command\"\n        risk = \"high\"\n\tauthor = \"Nathan Fowler\"\n\tmodified = \"2020-10-06\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $shell = \"WScript.Shell\"\n\n\t$exclude1 = { 5753 6372 6970 742e 5368 656c 6c00 2400 5203 0100 2500 5403 0100 b600 0f00 2f2f 434f 4e46 4952 4d31 2e74 7874 2e } //WScript.Shell CONFIRM1.txt\n\t$exclude2 = { 61 7869 6d75 6d20 3420 7461 6273 2066 6f72 2031 2064 6179 41 }\t\t//Maximum 4 tabs for 1 day - literally\n\t$exclude3 = { 70 776d 6f70 736d 7574 7561 6c66 756e 6473 406d 656c 6c6f 6e2e 636f 6d }\t//BNY\n\t$exclude4 = {\t4441 503a 2f2f\n\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and $shell and not any of ($exclude*)\n}\n\nrule Office_Macro_ShellExecute_FSO\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using subclassed ShellExcuteA and FileSystemObject\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\tmodified = \"2020-10-06\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"ShellExecuteA\"\t\t\twide ascii\n\t\t$badness2 = \"shell32.dll\"\t\t\tnocase wide ascii\n\t\t$badness3 = \"Scripting.FileSystemObject\"\tnocase wide ascii\n\n\t\t$exclude = {\n\t\t\t\t4441 503a 2f2f\n\t\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n\t\tand not $exclude\n}\n\nrule Office_WordSoup\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-21\"\n\t\tdescription = \"Office document containing many terse sentences with no periods, likely word soup nonsense\"\n\t\treference = \"/wiki/ta551,/wiki/icedid\"\n\tstrings:\n\t\t$soup = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){2,8}\\x00/\tascii\n\t\t$sauce = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){12}/\tascii\n\t\t$vb1 = \"VBA\"\twide ascii\n\t\t$vb2 = \"VBE\"\twide ascii\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand #soup > 32\n\t\tand not $sauce\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_OLEFormatDoVerb\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-09-16\"\n                description = \"Instanced OleFormat.DoVerb action, likely embedded OLE content with execution\"\n                reference = \"https://isc.sans.org/forums/diary/A+Mix+of+Python+VBA+in+a+Malicious+Word+Document/26578/\"\n\n        strings:\n\t\t$ = /O.?L.?E.?F.?o.?r.?m.?a.?t.?\\..?D.?o.?V.?e.?r.?b/\tnocase ascii\n\n        condition:\n\t\tuint16be(0) == 0xd0cf\n                and all of them\n}\n\nrule Office_XML_CDOMessage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Instanced CDO.Message Object in XML\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\n\t\t$ = \"CDO.Message\"\t\tnocase wide ascii\n\t\t$ = \"GetEncodedContentStream\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand any of them\n}\n\nrule Anyfile_DoubleEncoded_MZ\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Double-base64 encoded MZ, likely extremely malicious and intentionally obfuscated\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\t\t$ = \"UFBQUFBQUFBQUFBQ\"\tascii wide\n\t\t$ = \"VFZxUU\"\t\tascii wide\n\tcondition:\n\t\tall of them\n}\n\nrule Office_SpaceButt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-15\"\n\t\tdescription = \"Office document with excessive 0x20 padding to EOF\"\n\t\treference = \"/wiki/emotet\"\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand uint32(filesize-4)\t== 0x20202020\n\t\tand uint32(filesize-8)\t== 0x20202020\n\t\tand uint32(filesize-12)\t== 0x20202020\n\t\tand uint32(filesize-16)\t== 0x20202020\n}\n\nrule PE_MZ_EofDoom {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-10\"\n                description     = \"PE/MZ with 0xe? partitioned null\"\n                sample          = \"790b0d9e2b17f637c3e03e410aa22d16eccfefd28d74b226a293c9696edb60ad\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_NET_PDB {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-08\"\n                description     = \"PE/MZ with a PDB sandwiched betweren WrapNonExceptionThrows and CoreExeMain with too much 0x2a\"\n                sample          = \"91738cb45f5a36f2c957d9aa58c5ccf07c377a50c7d2e134e203347cbbccd0a1\"\n                reference       = \"/wiki/hawkeye\"\n\n        strings:\n\n\t\t$a = {\t5772 6170 4e6f 6e45 7863 6570 7469 6f6e\n\t\t\t5468 726f 7773 [16-128] 3a 5c [1-128] 2e70\n\t\t\t6462 [1-128] 5f43 6f72 4578 654d 6169 6e\n\t\t}\n\t\t$s = { 2a }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $a\n\t\tand #s > 1024\n}\n\nrule PE_MZ_NET_HeadInStars\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-31\"\n        description = \"PE/MZ with excessive asterisk padding at the beginning of the PE/MZ\"\n        reference = \"/wiki/raccoon\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n\t$s = {\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t}\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and $s in (512..1024)\n}\n\nrule RTF_On3\n:maldoc\n{\n    meta:\n        description = \"Potential Equation 3 Native maldoc using RTF and on.3 byte code\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-26\"\n\n    strings:\n\t$ = \"6f6e2e33000000\" ascii\n\n    condition:\n        uint16(0) == 0x5c7b\n        and all of them\n}\n\nrule Office_ActiveWindowHwnd\n{\n        meta:\n                description = \"Office Document using a call reference to ActiveWindow HWND\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = { \t41[0-1] 63[0-1] 74[0-1] 69[0-1] 76[0-1] 65[0-1] 57[0-1]\n\t\t\t69[0-1] 6e[0-1] 64[0-1] 6f[0-1] 77[0-9] 48[0-1] 77[0-1]\n\t\t\t6e[0-1] 64\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0  //office\n                and all of them\n}\n\nrule PE_MZ_NET_CommaCommaCommaChameleon\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-24\"\n        description = \"PE/MZ with excessive 0x2c padding and a extremely long alphanumeric string\"\n        sample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n        reference = \"/wiki/agenttesla\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n        $c = { 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c }\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #c > 256\n}\n\nrule Office_PipeHead\n{\n        meta:\n                description = \"Office Document using piped command to a URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = /=[\\x20\\x09\\r\\n]*[\\x22\\x27](cmd|powershell|msiexec|certutil|mshta|rundll|regsvr32)[ex.\\x20\\x09]*\\x7c[\\x20\\x09]*[hf]t{1,2}p/\tnocase wide ascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and all of them\n}\n\nrule Office_SpaceAdmin\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc with excessive font declarations and spaced-out Administrator as the author\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-08-17\"\n\t\tmodified = \"2020-08-21\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$f1 = { 4300 6100 6c00 6900 6200 7200 6900 3100 }\n\t\t$a1 = /[^\\x20]Admin(istrator)?[\\x20]{48}/\tascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand ($a1 in (512..2048))\n\t\tand #f1 > 16\n}\n\nrule RTF_HookedOnPhonics\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using RTF with absolutely no letters in the first 1024 bytes.  No one taught them how the alphabet works\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-20\"\n        reference = \"/wiki/njrat\"\n        sample = \"2e72a053bf09d29401a9eaf0cb196b49\"\n\n    strings:\n        $alpha = /\\{\\\\rt.[^a-zA-Z]{1024}/\n\n    condition:\n        uint16(0) == 0x5c7b          //rtf\n        and $alpha at 0\n}\n\nrule Java_Jar_NoClass\n:maljar\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-08-20\"\n                description = \"More than 8 extremely tersely named class files with less than 4 long class file names\"\n                analyst_notes = \"This could potentially be a jRAT or AdWind\"\n                tlp  = \"AMBER\"\n                refernece = \"/wiki/qrat, /wiki/adwind\"\n\n        strings:\n\n                $class1 = /\\x2f[a-z]{1,3}\\.class/\n                $class2 = /\\x2f[^\\x2f]{4,64}\\.class/\n                $meta = \"META-INF/MANIFEST.MF\"\n\n        condition:\n                uint16(0) == 0x4b50\n                and $meta in (0..4096)\n                and #class1 >= 8\n\t\tand #class2 < 4\n}\n\nrule Office_GetObj_Create_Reverse\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using StrReverse, Auto Open behavior, GetObject, and Create -- possibly also Winmgmts\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-06\"\n\t\tupdated = \"2020-08-17\"\n                hash = \"e015e70e7fd1dae6423afaa0352b45f6\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/kpot, /wiki/agenttesla\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"StrReverse\"            nocase wide ascii\n                $bad2 = \"GetObject\"\t\tnocase wide ascii\n                $bad3 = \"Create\"\t\tnocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and ( all of ($bad*) or $bad1 )\n                and any of ($ao*)\n                and any of ($vb*)\n}\n\nrule Office_Biff_Forms_CallByName\n:maldoc\n{\n        meta:\n\t\tdescription = \"Potential maldoc using Biff, Microsoft Forms 2.0, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-14\"\n                reference = \"/wiki/muddywater\"\n                feelz =\t\"https://www.youtube.com/watch?v=sQgd6MccwZc&t=20\"\n\n        strings:\n                $bad1 = \"CallByName\"    nocase ascii\n                $bad2 = \"Biff\"          nocase ascii\n                $bad3 = \"Microsoft Forms 2.0\"   nocase ascii\n\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Auto_Open\"\tnocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"\tnocase wide ascii\n                $ao6 = \"Auto_Exec\"\tnocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and all of ($bad*)\n                and any of ($ao*)\n}\n\nrule Office_IWshRuntimeLibrary_Shell\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc using IWshRuntimeLibrary to avoid CreateObject for Shell\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-05-22\"\n\t\tmodified = \"2020-08-07\"\n\t\thash = \"\"\n\t\tthanks = \"Will Metcalf\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/ursnif, /wiki/ta551\"\n\t\tsample = \"7f6288f4124a41d23db91008fa7341ae\"\n\n\tstrings:\n\t\t$bad1 = \"IWshRuntimeLibrary\"    nocase ascii\n\t\t$bad2 = \"wshom.ocx\"             nocase ascii\n\n\t\t$func1 = \"WshShell\"     nocase ascii\n\t\t$func2 = \".exe\" \t\tnocase ascii\n\t\t$func3 = /S.?c.?r.?i.?p.?t.? .?H.?o.?s.?t/\tnocase ascii\n\t\t$func4 = \"Xor\"\t\t\tnocase ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($bad*)\n\t\tand any of ($func*)\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n}\n\nrule Office_macro_responseBody\n{\n        meta:\n                description = \"Office document with macro code and response.Body\"\n\t\tanalyst_notes = \"This suggests this document interacts with websites and could potentially download malicious code\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//response.Body\n\t\t$badness = { 72[0-1]65[0-1] 73[0-1]70[0-1] 6f[0-1]6e[0-1] 73[0-1]65[0-2] 42[0-1]6f[0-1] 64[0-1]79 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_BIFF_CompObj_SBVBA\n{\n        meta:\n                description = \"Office document with macro code, BIFF compound document, and sheet-bound VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\t\tsample = \"4560ad14320551fa027d5c5006806bb5ba04dde028d7486c6ed2e467e99e8923\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"CompObj\"\t\tnocase wide\n\t\t$badness2 = \"biff\"\t\tnocase ascii\n\t\t$badness3 = { 44 6f63 756d 656e 743d 5368 6565 7420 [1-2]2f 2648 [8] 0d0a }\t//Sheet with Hex\n\t\t$badness4 = { 7d3b 5642 453b 2648 [8] 0d0a 0d0a }\t\t\t\t//Sheet with VBA\n\t\t$badness5 = { 50 4b03 0414 0006 0008 0000 }\t\t\t\t\t//PK Header\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and all of ($badness*)\n\t\tand #badness5 >= 3\n}\n\nrule Office_ChrGen_DoubleWide\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a double-wide CHRGEN string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-03\"\n                tlp = \"GREEN\"\n                reference = \"meows://isc.sans.org/forums/diary/Powershell+Bot+with+Multiple+C2+Protocols/26420/\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = { \t     0000 2e00 0000 2f00 0000 3000 0000\n\t\t\t\t3100 0000 3200 0000 3300 0000 3400 0000\n\t\t\t\t3500 0000 3600 0000 3700 0000 3800 0000\n\t\t\t\t3900 0000 3a00 0000 3b00 0000 3c00 0000\n\t\t\t\t3d00 0000 3e00 0000 3f00 0000 4000 0000\n\t\t\t\t4100 0000 4200 0000 4300 0000 4400 0000\n\t\t\t\t4500 0000 4600 0000 4700 0000 4800 0000\n\t\t\t\t4900 0000 4a00 0000 4b00 0000 4c00 0000\n\t\t\t\t4d00 0000 4e00 0000 4f00 0000 5000 0000\n\t\t\t\t5100 0000 5200 0000 5300 0000 5400 0000\n\t\t\t\t5500 0000 5600 0000 5700 0000 5800 0000\n\t\t\t\t5900 0000 5a00 0000 5b00 0000 5c00 0000\n\t\t\t\t5d00 0000 5e00 0000 5f00 0000 6000 0000\n\t\t\t\t6100 0000 6200 0000 6300 0000 6400 0000\n\t\t\t\t6500 0000 6600 0000 6700 0000 6800 0000\n\t\t\t\t6900 0000 6a00 0000 6b00 0000 6c00 0000\n\t\t\t\t6d00 0000 6e00 0000 6f00 0000 7000 0000\n\t\t\t\t7100 0000 7200 0000 7300 0000 7400 0000\n\t\t\t\t7500 0000 7600 0000 7700 0000 7800 0000\n\t\t\t\t7900 0000 7a00 0000 7b00 0000 7c00 0000\n\t\t\t\t7e00 0000\n\t\t}\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_HyperActiveX\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a Active VBA referencing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-31\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/valak\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"ActiveDocument\"\tnocase wide ascii\n\t\t$badness2 = \"ActiveWindow\"\tnocase wide ascii\n\t\t$badness3 = \"AutoHyphenation\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and all of ($badness*)\n}\n\nrule RealtimeYARA_o365_MacroEnable_Lure_Phish\n{\n        meta:\n                description = \"For use with Realtime Yara, matches md5 hash of image files used to entice recipients to enable macros or in phishing.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-15\"\n\t\tmodified = \"2020-09-09\"\n                tlp = \"GREEN\"\n\n        strings:\n                $jpg = { ffd8 ffe0 }\n\t\t$png =  { 8950 4e47 }\n        condition:\n                ($jpg at 0 or $png at 0)\n\t\tand filesize < 1024KB\n\t\tand (\n\t\t\t   hash.md5(0,filesize) == \"cdd03ba433ed0dd9445f0b4e6dd1a8e0\"\n\t\t\tor hash.md5(0,filesize) == \"2e3bc57790a1d3efe3dc49a398b1d4cd\"\n\t\t\tor hash.md5(0,filesize) == \"be7b5759a393fe1ee984e51de1b7dece\"\n\t\t\tor hash.md5(0,filesize) == \"521e6c2cc53de688260a48038a927afb\"\n\t\t\tor hash.md5(0,filesize) == \"c1267b689e929da51079dbe1ce08a57e\"\n\t\t\tor hash.md5(0,filesize) == \"cb962fa46dd7a02b53de2ff0e3b64094\"\n                        or hash.md5(0,filesize) == \"e5a96401ed343f79689294d1220c1272\"\n                        or hash.md5(0,filesize) == \"0dcb622ae9d718c538b24461c02af774\"\n\t\t\tor hash.md5(0,filesize) == \"c83d6b3b78aaf31ffee261fac2e7da9d\"\n\t\t\tor hash.md5(0,filesize) == \"cb40aa7cfb731ee9ead328dd73b43f72\"\t//Fin7 Maldoc\n\t\t\tor hash.md5(0,filesize) == \"9d4e27858795fe5a3aa23f55766c17db\"\t//AveMaria 2019-04-22\n\t\t\tor hash.md5(0,filesize) == \"eed6d4b6d183733b1ac2e0b2e9b18597\"\t//Retefe 2019-05-22\n\t\t\tor hash.md5(0,filesize) == \"04d8309436013894781a5a7647565783\"\t//CrimsonRat 2020-01-23 Ticket #87466\n\t\t\tor hash.md5(0,filesize) == \"d63b2dee989ac4e41301c9dcb31970a3\"\t//Formbook 2020-01-28\n\t\t\tor hash.md5(0,filesize) == \"d3d219eccad17e0aa11d97765b89014a\"\t//Unknown 2020-03-16\n\t\t\tor hash.md5(0,filesize) == \"766a1b16e29459a47052e183f7e2c3bc\"\t//Maze 2020-04-20 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"82355ce62e9c9ac5ce9b8457751b6d91\"\t//Maze 2020-04-20 image2.png\n\t\t\tor hash.md5(0,filesize) == \"28731825446d8bd37889c4f64c5b2127\"\t//Maze 2020-04-20 image4.jpeg\n\t\t\tor hash.md5(0,filesize) == \"584efa6623128629636a7f9004ecef17\"\t//Trickbot? 2020-40-22 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"2903f9ca73c42c2f9a78cc869746569c\"\t//Trickbot? 2020-40-22 image1.jpg\n\t\t\tor hash.md5(0,filesize) == \"d9d5d51273a8ed68497b6b403cd39b7b\"\t//Valak 2020-07-31\n\t\t\tor hash.md5(0,filesize) == \"26c0efb2b26c8b43ce83bf6f9a53def3\"\t//ta551 2020-08-07\n\t\t\tor hash.md5(0,filesize) == \"3e79a2bfc6dd76b7eef3a025800ba10d\"\t//Azorult XMLHTTP 2020-09-09\n\t\t)\n}\n\nrule Office_SymbolicHex\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto behavior, and a hex-ascii string between a symbol character\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-28\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/valak\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /([\\x21-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7e][0-9]{1,2}){128}/\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand $badness\n}\n\nrule Office_MaxStonksNotStonks\n{\n        meta:\n                description = \"Office document with native Office file magic at offset 0 followed by multiple mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-21\"\n\t\tmodified = \"2020-07-24\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $badness = { 504b 0304 1400 0600 0800 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//005f4b0: ed00 b600 1400 5375 6e47 6172 642e 494f  ......SunGard.IO\n\t\t//005f4c0: 436f 6e6e 6563 7469 6f6e 2400 3602 0100  Connection$.6...\n\t\t$exclude1 = \"SunGard.IOConnection\"\tascii\n\n\t\t//009e940: ffff 0d00 0008 3200 0000 4d61 6b72 6f20  ......2...Makro\n\t\t//009e950: 616d 2031 332e 3037 2e32 3030 3520 766f  am 13.07.2005 vo\n\t\t//009e960: 6e20 686b 7261 7373 6e69 747a 6572 2061  n hkrassnitzer a\n\t\t//009e970: 7566 6765 7a65 6963 686e 6574 0200 0008  ufgezeichnet....\n\t\t$exclude2 = { 4d61 6b72 6f20 616d 2031 332e 3037 2e32 3030 3520 766f 6e20 686b 7261 7373 6e69 747a 6572 2061 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n                and not $badness in (0..8192)\n\t\tand #badness >= 2\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule PE_MZ_MF_ABC123\n:malexe\n{\n        meta:\n                description = \"PE/MZ with excessive chrgen alpha declaration\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2020-07-21\"\n                tlp         = \"AMBER\"\n                reference   = \"/wiki/cobint\"\n\t\tfeelz\t    = \"meows://www.youtube.com/watch?v=sHQ_IEosaT4&t=10\"\n\t\tsample\t    = \"a3cad4f0caf2af2d2dd31aa6ea1b1af4\"\n\n        strings:\n\t\t$a1 = \"IsDebuggerPresent\"\t\tascii\n\t\t$a2 = \"abcdefghijklmnopqrstuvwxyz\"\tascii wide nocase\n\t\t$a3 = \"123456789\"\t\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize < 4096KB\n\t\tand all of ($a*)\n\t\tand #a2 >= 6\n\t\tand #a2 >= ( #a3 * 2 )\n}\n\nrule PE_MZ_DebugBreak\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE/MZ with suspicious API calls\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2020-07-17\"\n\t\ttlp         = \"AMBER\"\n\t\treference   = \"/wiki/icedid\"\n\n\tstrings:\n\n\t\t$ = \"DebugBreak\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"KillTimer\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"UnhandledExceptionFilter\"\n\t\t$ = \"WriteFile\"\n\t\t$ = \"Sleep\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 4096KB\n\t\tand all of them\n}\n\nrule PE_MZ_URL_XOR\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a single byte XOR key containing a URL\"\n        author      = \"Nathan Fowler\"\n\tthanks\t    = \"Sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-24\"\n\tmodified    = \"2020-07-14\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$a1 = \"http://\"\t\txor\n\t$a2 = \"https://\"\txor\n\n\t$exclude = {\n\t\t443a 5c6a\n\t\t656e 6b69 6e73 5c77 6f72 6b73 7061 6365\n\t\t5c43 4943 445f 456e 636f 6d70 6173 735c\n\t\t4375 7272 656e 745c 4275 696c 645c 456d\n\t\t4c69 7465 5c43 6c69 636b 4c6f 616e 5072\n\t\t6f78 7949 6d70 6c5c 6f62 6a5c 4a65 6e6b\n\t\t696e 735c 436c 6963 6b4c 6f61 6e50 726f\n\t\t7879 496d 706c 2e70 6462 00\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($a*)\n\tand not $exclude\n}\n\nrule Office_Macro_PK_Link_4\n{\n        meta:\n                description = \"Office document with Excel 4 macro code, linked cell, and mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-14\"\n                tlp = \"GREEN\"\n                sample = \"9cf44f1dd44ea313a0d931130ebb1aaf\"\n\t\treference = \"/wiki/hancitor\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$badness1 = \"Linked Cell\"\tascii\n\t\t$badness2 = \"Linked Cell\"\twide\n\t\t$badness3 = \"Excel 4.0 Macros\"\tascii\n\t\t$badness4 = { 504b 0304 1400 0600 0800 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n\t\tand not $badness4 in (0..8192)\n}\n\nrule PE_MZ_BuffyBuffs256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-13\"\n\t\treference = \"/wiki/pony\"\n\t\tdescription = \"PE/MZ with a repeated padded byte sequence that makes absolutley no sense.  Buffy Buffs!\"\n\n\tstrings:\n\t\t$ = /a{256}/    nocase ascii\n\t\t$ = /b{256}/    nocase ascii\n\t\t$ = /c{256}/    nocase ascii\n\t\t$ = /d{256}/    nocase ascii\n\t\t$ = /e{256}/    nocase ascii\n\t\t$ = /f{256}/    nocase ascii\n\t\t$ = /g{256}/    nocase ascii\n\t\t$ = /h{256}/    nocase ascii\n\t\t$ = /i{256}/    nocase ascii\n\t\t$ = /j{256}/    nocase ascii\n\t\t$ = /k{256}/    nocase ascii\n\t\t$ = /l{256}/    nocase ascii\n\t\t$ = /m{256}/    nocase ascii\n\t\t$ = /n{256}/    nocase ascii\n\t\t$ = /o{256}/    nocase ascii\n\t\t$ = /p{256}/    nocase ascii\n\t\t$ = /q{256}/    nocase ascii\n\t\t$ = /r{256}/    nocase ascii\n\t\t$ = /s{256}/    nocase ascii\n\t\t$ = /t{256}/    nocase ascii\n\t\t$ = /u{256}/    nocase ascii\n\t\t$ = /v{256}/    nocase ascii\n\t\t$ = /w{256}/    nocase ascii\n\t\t$ = /x{256}/    nocase ascii\n\t\t$ = /y{256}/    nocase ascii\n\t\t$ = /z{256}/    nocase ascii\n\t\t$ = /0{256}/    ascii\n\t\t$ = /1{256}/    ascii\n\t\t$ = /2{256}/    ascii\n\t\t$ = /3{256}/    ascii\n\t\t$ = /4{256}/    ascii\n\t\t$ = /5{256}/    ascii\n\t\t$ = /6{256}/    ascii\n\t\t$ = /7{256}/    ascii\n\t\t$ = /8{256}/    ascii\n\t\t$ = /9{256}/    ascii\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_b64URL\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto-behavior, and a base64 encoded URL\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-10\"\n\t\tthanks = \"Brad Duncan\"\n\t\tsample = \"2433e76542036ab53b138a98eeda548a\"\n\t\treference = \"/wiki/formbook\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$b64_alphabet1 = /a.?b.?c.?d.?e.?f.?g.?h.?i.?j.?k.?l.?m.?n.?o.?p.?q.?r.?s.?t.?u.?v.?w.?x.?y.?z/    ascii\n\t\t$b64_alphabet2 = /A.?B.?C.?D.?E.?F.?G.?H.?I.?J.?K.?L.?M.?N.?O.?P.?Q.?R.?S.?T.?U.?V.?W.?X.?Y.?Z/    ascii\n\n\t\t$encstring_1 = \"R0cD\" ascii wide // http://\n\t\t$encstring_2 = \"HRwOi\" ascii wide // http://\n\t\t$encstring_3 = \"dHA6Ly\" ascii wide // http://\n\t\t$encstring_4 = \"B0AHQAcAA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_5 = \"QAdABwADo\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_6 = \"dAB0AHAAOgA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_7 = \"B0AHQAcAA6AC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_8 = \"HQAdABwADoALw\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_9 = \"dAB0AHAAOgAvAC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_10 = \"HRwcz\" ascii wide // https://\n\t\t$encstring_11 = \"R0cHM\" ascii wide // https://\n\t\t$encstring_12 = \"dHBzOi\" ascii wide // https://\n\t\t$encstring_13 = \"R0cHM6Ly\" ascii wide // https://\n\t\t$encstring_14 = \"dAB0AHAAcwA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_15 = \"B0AHQAcABzADo\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_16 = \"QAdABwAHMAOgA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_17 = \"dAB0AHAAcwA6AC\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_18 = \"B0AHQAcABzADoALw\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_19 = \"HQAdABwAHMAOgAvAC\" ascii wide // Null-spaced wide format of https://\n\n\t\t//Byte reversal of the above in case they call reverse\n\t\t$encstring_20 = \"Dc0R\"\n\t\t$encstring_21 = \"iOwRH\"\n\t\t$encstring_22 = \"yL6AHd\"\n\t\t$encstring_23 = \"AAcAQHA0B\"\n\t\t$encstring_24 = \"oDAwBAdAQ\"\n\t\t$encstring_25 = \"AgOAAHA0BAd\"\n\t\t$encstring_26 = \"CA6AAcAQHA0B\"\n\t\t$encstring_27 = \"wLAoDAwBAdAQH\"\n\t\t$encstring_28 = \"CAvAgOAAHA0BAd\"\n\t\t$encstring_29 = \"zcwRH\"\n\t\t$encstring_30 = \"MHc0R\"\n\t\t$encstring_31 = \"iOzBHd\"\n\t\t$encstring_32 = \"yL6MHc0R\"\n\t\t$encstring_33 = \"AwcAAHA0BAd\"\n\t\t$encstring_34 = \"oDAzBAcAQHA0B\"\n\t\t$encstring_35 = \"AgOAMHAwBAdAQ\"\n\t\t$encstring_36 = \"CA6AwcAAHA0BAd\"\n\t\t$encstring_37 = \"wLAoDAzBAcAQHA0B\"\n\t\t$encstring_38 = \"CAvAgOAMHAwBAdAQH\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($b64_alphabet*)\n\t\tand any of ($encstring*)\n}\n\nrule PE_MZ_MF_NET_FruitLoops\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-10\"\n\t\treference = \"/wiki/asyncrat\"\n\t\tdescription = \"PE/MZ with that has been packed and stuffed with excessive localized address looping\"\n\t\tsample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n\n\tstrings:\n\n\t\t//000289DE  AE                scasb\n\t\t//000289DF  E280              loop 0x8961\n\t\t//000289E1  8CE2              mov dx,fs\n\t\t//000289E3  808BE281AC        or byte [bp+di-0x7e1e],0xac\n\t\t//000289E8  E281              loop 0x896b\n\t\t//000289EA  AA                stosb\n\t\t//000289EB  E280              loop 0x896d\n\t\t//000289ED  8BE2              mov sp,dx\n\t\t//000289EF  80ADE280AC        sub byte [di-0x7f1e],0xac\n\t\t//000289F4  E280              loop 0x8976\n\t\t//000289F6  AD                lodsw\n\t\t//000289F7  E281              loop 0x897a\n\t\t//000289F9  AD                lodsw\n\t\t//000289FA  E281              loop 0x897d\n\t\t//000289FC  AA                stosb\n\t\t//000289FD  E280              loop 0x897f\n\t\t//000289FF  AB                stosw\n\t\t//00028A00  E280              loop 0x8982\n\t\t//00028A02  AC                lodsb\n\t\t//00028A03  E281              loop 0x8986\n\t\t//00028A05  AF                scasw\n\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fruit = { A? E28? [7] A? E28? [7] E28? A? E28? A? E28? A? E28? A? }\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t\tand all of them\n\t\tand #fruit > 2\n}\n\nrule OLE_Packager_Shell_Obj {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-06-18\"\n\t\treference = \"/wiki/get2\"\n\t\tdescription = \"Packer Shell Object use check for embedded item\"\n\n\tstrings:\n\t\t$ = \"<oleObject progId=\\\"Packager Shell Object\\\" shapeId=\\\"\"\n\n\tcondition:\n\t\tall of them\n}\n\nrule crimeware_ta505_html_attachment {\n  meta:\n    author = \"Corsin Camichel, @cocaman\"\n    date = \"2020-06-14\"\n    version = \"1.0\"\n    tlp = \"green\"\n    description = \"Detects html attachments sent by TA505 (June 2020)\"\n\n  strings:\n      $div_style_none = \"<div style=\\\"display:none;\\\">\"\n      $html_div = \"<div\"\n      $html_iframe_attr = \"width: 100%; height: 100%; border: 0px\"\n      $html_element_id_1 = \"placeholder\"\n      $html_element_id_2 = \"iframeTemplate\"\n      $html_rnd_text = \"{{RND_TEXT}}\"\n      $html_javascript = \"<script type=\\\"text/javascript\\\">\"\n\n\n  condition:\n    $div_style_none at 3 and\n      #html_div >= 3 and\n      $html_iframe_attr and\n        (all of ($html_element_id_*) or $html_rnd_text) and\n      $html_javascript\n}\n\nrule Office_Excel4M_StupidEncrypted\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using Excel 4 macro obfuscation that has been encrypted in a rather poor manner\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-06-10\"\n\t\treference = \"/wiki/zloader\"\n\t\treference = \"meows://isc.sans.edu/forums/diary/Job+applicationthemed+malspam+pushes+ZLoader/26222/\"\n\n    strings:\n\t\t$ = \"Excel 4.0 Macros\"\tascii\n\t\t$ = \"Microsoft Enhanced Cryptographic\"\twide\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Active_Env_Shell\n:maldoc\n{\n\tmeta:\n\t\tauthor  = \"Nathan Fowler\"\n\t\tdate    = \"2019-01-30\"\n\t\tmodified = \"2020-06-02\"\n\t\ttlp     = \"GREEN\"\n\t\tdescription = \"Office document which contains a macro, auto execution behavior, environment, SetAttr, and shell functions\"\n\t\tsample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n\tstrings:\n\t\t$magic = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Macro present\n\t\t$vb1 = \"VBE\"    wide ascii\n\t\t$vb2 = \"VBA\"    wide ascii\n\t\t$vb4 = \"OLE\"    wide ascii\n\t\t$vb5 = \"stdole\" wide ascii\n\n\t\t//Auto-behavior\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Document_Open\"\tnocase wide ascii\n                $ao3 = \"Workbook_Open\"\tnocase wide ascii\n\t\t$ao4 = \"AutoExec\"\tnocase wide ascii\n\n\t\t//Badness\n\t\t$bad1 = \"Active\"\tnocase wide ascii\n\t\t$bad2 = \"Environ\"\tnocase wide ascii\n\t\t$bad3 = \"Shell\"\t\tnocase wide ascii\n\t\t$bad4 = \"SetAttr\"\tnocase wide ascii\n\t\t$bad5 = \"Environ\"\tnocase wide ascii\n\n\t\t//Likely bad string manipulation\n\t\t$lbad1 = \"Asc\"\t\tnocase wide ascii\n\t\t$lbad2 = \"Chr\"\t\tnocase wide ascii\n\t\t$lbad3 = \"Right\"\tnocase wide ascii\n\t\t$lbad4 = \"Left\"\t\tnocase wide ascii\n\t\t$lbad5 = \"Mid\"\t\tnocase wide ascii\n\t\t$lbad6 = \"Len\"\t\tnocase wide ascii\n\t\t$lbad7 = \"Xor\"\t\tnocase wide ascii\n\n\t\t//Hex anchor of hex-ascii\n\t\t$anchor = /[A-Fa-f0-9]{64}/\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n\t\t//Other exclusions\n\t\t$exclude5 = { 00 4100 6c00 6c00 6900 6100 6e00 7a00 4700 4900 }\n\n\t\t//FactSet\n\t\t$exclude6 = { 00 4661 6374 5365 748? }\n\n\t\t//SunGard\n\t\t$exclude7 = \"SunGard\"\n    $exclude8 = \"Capital Markets Price Comparison\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $magic at 0 and any of ($vb*) and any of ($ao*) and any of ($bad*) and any of ($lbad*) and not any of ($exclude*) and $anchor\n}\n\nrule PE_MZ_NET_OctoPack\n{\n    meta:\n    author = \"Nathan Fowler\"\n    date = \"2020-05-29\"\n    reference = \"/wiki/nanocore\"\n    description = \"PE/MZ with that has been packed and stuffed with character rotation, OctoPack Packer\"\n    reference = \"https://octopus.com/docs/packaging-applications/create-packages/octopack\"\n\n    strings:\n\n    $net = \"WrapNonExceptionThrows\"\n    $o1 = \"OctoPack\"    nocase ascii\n    $o2 = \"OctopusFileSystem\"\n    $o3 = \"OctopusPhysicalFileSystem\"\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n    and $net and any of ($o*)\n}\n\nrule PE_MZ_PipeHead\n{\n    meta:\n       author = \"Nathan Fowler\"\n       date = \"2020-05-26\"\n       reference = \"/wiki/loki\"\n       description = \"PE/MZ with fixed pipe character 0x7c in the PE/MZ header\"\n\n    strings:\n\n\t$a = { 6d6f 6465 2e0d 0d0a [16-24] 7c [7] 7c [7] 7c [7] 7c [7] 7c }\n\n    condition:\n\tfilesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n        and $a in (100..256)\n}\n\nrule PE_MZ_Qakbot_IEnumConn_GUID\n{\n    meta:\n       author = \"James Quinn/Randy Pargman\"\n       date = \"2020-05-19\"\n       reference = \"/wiki/qakbot\"\n       description = \"PE/MZ packed Qakbot GUID of IEnumConnections Interface seen with packed samples of Qakbot\"\n       modified_author = \"Nathan Fowler\"\n\n    strings:\n\n        $ = \"{b196b287-bab4-101a-b69c-00aa00341d07}\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n        and not pe.is_dll()\n        and all of them\n}\n\nrule win_ragnarlocker_a0 {\n    meta:\n        author = \"BYEMAN@zirconic.net\"\n        last_update = \"2020-04-15\"\n        description = \"detection based on the single Ragnarlocker sample currently found in Malpedia\"\n        hash = \"9bdd7f965d1c67396afb0a84c78b4d12118ff377db7efdca4a1340933120f376\"\n        malpedia_reference = \"https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarlocker\"\n        malpedia_version = \"2020-04-15\"\n        malpedia_license = \"CC BY-NC-SA 4.0\"\n        malpedia_sharing = \"TLP:AMBER\"\n\n    strings:\n        $low0 = \"---RAGNAR SECRET---\"\n        $low1 = \"***********************************************************************************\"\n        $low2 = \"FJTQRH]k(!Y<QQ15K:7)V1s(:DYW6pLCRC)dHC4zIYA)nW\\\"y ,qiy`&v])`Ib}>M\"\n        $low3 = \".ragnar_\" wide\n        $low4 = \"RGNR_\" wide\n        $low5 = \"%s-%s-%s-%s-%s\" wide\n        $hex0 = {66 66 66 0f 1f 84 00 00 00 00 00 0f b7 8c 55 10 f0 ff ff 42 81 f1 ?? ?? ?? ?? 03 f1 8b c6 c1 c0 ?? 2b f0 3b d7 7?}\n        $hex1 = {33 d2 0f b6 cb f? ?? ?? 8b 45 ?? 0f ?? ?? ?? 03 c7 03 c8 0f ?? ?? 8a 84 3d 00 ff ff ff}\n        $hex2 = {40 8d 7f 01 0f b6 d0 8? ?? ?? 8? ?? ?? ?? ?? ?? ?? 0f b6 c1 03 c3 0f b6 d8 [7-14] 8b 45 14 0f b6 d1 [7-16] 03 d1 0f b6 ca 0f [5-8] 30 4f ff 83 ee 01 7?}\n\n    condition:\n            uint16(0) == 0x5a4d\n        and\n            (\n                (1 of ($hex*) and all of ($low*))\n            or\n                (2 of ($hex*) and 3 of ($low*))\n            )\n}\n\nrule Office_OpenXML_veryHidden\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external Excel 4 macro via linking, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-05-07\"\n                tlp = \"GREEN\"\n                sample = \"0ebd48fccb7a7a608bdb800fb34dd235\"\n                reference = \"https://inquest.net/blog/2020/05/06/ZLoader-4.0-Macrosheets-\"\n                thanks = \"WillyMac\"\n\n        strings:\n                $a1 = \"/xlMacrosheet\"\t\t\t\tascii\n                $a2 = \"macrosheet\"\t\t\t\tascii\n\n\t\t$b = /[\\x3e\\x3b][A-Z]{3,6}\\x28[^\\x29]{1,32}\\x29/\tascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n\t\tand (any of ($a*) and #b > 512)\n}\n\nrule PE_MZ_DoYouEvenNullBruh\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a significantly large amount of contigious bytecode without any NUL\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-05-05\"\n\tmodified    = \"2020-05-06\"\n        sample      = \"8fca7af21a18eea054de86c2b061f3e2\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n        $kern = \"kernel32\"      nocase ascii wide\n\t$bruh = /\\x00[^\\x00]{2048}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n\tand not pe.is_dll()\n}\n\nrule RTF_Office_Administrator_Hex\n{\n        meta:\n                description = \"RTF/Office hex or ascii Administrator author with space padding or ADMIN User Path\"\n                author = \"Nathan Fowler\"\n                thanks = \"Cocaman\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2020-04-23\"\n\t\tsample = \"7ce0cbacee78e838d58d01e18ac2efaa\"\n\n        strings:\n\t\t$ = \"41646d696e6973747261746f7220202020202020202020202020202020202020202020202020202020202020202020202020202020\"\tnocase ascii\n\t\t$ = { 5c55 7365 7273 5c41 444d 494e 49 }\t\t//C:\\\\Users\\\\ADMIN\n\n\tcondition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 )\n\t\tand any of them\n}\n\nrule Office_Zip_Image_Lure\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc with Macro code and a singular image, potentially used as a lure to enable Macros\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n\tupdated = \"2020-04-21\"\n        reference = \"/wiki/formbook\"\n        sample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $macro = \"vbaProject.bin\"    ascii\n\n        $img1 = \".jpeg\"    nocase ascii\n        $img2 = \".jpg\"    nocase ascii\n        $img3 = \".png\"    nocase ascii\n\n\t$negation = \"/printerSettings\"\n\n    condition:\n        uint16(0) == 0x4b50\n        and $macro\n\tand (#img1 + #img2 + #img3) > 0\n\tand (#img1 + #img2 + #img3) <= 2\n\tand not $negation\n}\n\nrule Office_Forms_Array_Split\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using embedded form object array splitting\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-20\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/maze\"\n\t\tsample = \"ad30987a53b1b0264d806805ce1a2561\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"Split\"\t\t\tnocase ascii\n\t\t$bad2 = /([0-9]{2,3},){16}/\tascii\n\t\t$bad3 = \"Microsoft Forms 2.0\"\tascii\n\t\t$bad4 = \"Embedded Object\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule PE_MZ_HeadSpace\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with padding of 0x20 in the first 512 bytes of the PE/MZ\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-14\"\n        sample      = \"9e4be44cd94bf353c0a358a1d22d40ce\"\n        reference   = \"\"\n\n    strings:\n\t$space = { 2020 2020 00 }\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and $space in (128..512)\n}\n\n\nrule PE_MZ_100_Dalmations\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of 0x00 between 100-byte non-null data\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-13\"\n        sample      = \"\"\n        reference   = \"/wiki/ursnif\"\n\n    strings:\n        $dalmations = /\\x00([^\\x00]{100}\\x00{328,338}){8}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and all of them\n}\n\nrule PE_MZ_dotNET_PaddedTokenJuice\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of PublicKeyToken\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-09\"\n        sample      = \"973b19554de9736755cfb4a5d1c9ffa8\"\n        reference   = \"/wiki/agenttesla\"\n\tfeelz\t    = \"https://www.youtube.com/watch?v=gaF7kT5Moc0&t=34\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\n\t$ = /Token=[a-f0-9]{16}PAD/\n\n\t$juice = /[\\x2b\\x7e][^\\x20-7f][A-Z]/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand not pe.is_dll()\n        and all of them\n\tand #juice > 4096\n}\n\nrule Office_MsRdpClient\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using MsRdpClientShell or other calls\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                modified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32, e3893a8b21f9226a48ec0e10d5c3f414\"\n                thanks = \"Steve Tai\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad = /MsRdpClient[A-Za-z0-9]+/   ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and $bad\n                and any of ($vb*)\n}\n\nrule Office_StartupPath_CallByName\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using CallByName and StartupPath\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n\t\tmodified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n\t\tthanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"CallByName\"\tascii\n                $bad2 = \"StartupPath\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\n\nrule doc_is_a_jar : maldoc {\n  meta:\n    description = \"Finds docs that are jars.\"\n    date = \"2020-03-20\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    greetz = \"Nathan C. Fowler, sysopfb, Jim Farnish\"\n    samples = \"a29a29c542b44c44f08db0a286dcedcc\"\n    tlp = \"green\"\n    prod = \"true\"\n    family = \"qrat\"\n    notes = \"This is a strange jar that is a doc that is a jar, but it's really silverlight. QRat involved fun-time.\"\n  strings:\n    //.classPK\n    $s0 = { 2e 63 6c 61 73 73 50 4b }\n  condition:\n    uint16(0) == 0xcfd0 and filesize < 2000KB and $s0\n}\n\nrule PE_MZ_AE_AL_UA\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a definition for Accept-Encoding and Accept-Language\"\n        description = \"This implies this PE/MZ is constructing defined and explicit HTTP request headers\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-03-20\"\n\tsample\t    = \"64a1d0dfdbd8cf4ff63682bfc748b1c2\"\n\n    strings:\n\t$ = \"Accept-Encoding\"\tnocase wide ascii\n\t$ = \"Accept-Language\"\tnocase wide ascii\n\t$ = \"User-Agent\"\tnocase wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_JavaScript_Embed_TryCatchFunction\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using JavaScript try, catch, and function\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n                thanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]catch[\\{\\(]/             ascii\n                $bad2 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]try[\\{\\(]/               ascii\n                $bad3 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]function[\\{\\(]/          ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule guloader_encrypted_preamble {\n  meta:\n    description = \"Finds GuLoader encrypted payloads based on the 64-byte preamble the group appends to the front of the file. Ascertains randomness of the file based on entropy afterwards.\"\n    date = \"2020-03-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"c4feebe17bd8750d3b201bcbc1b35f8d, 553b765ae891b259a91c9bbf39b3e0a8, 6d632124adc38e28d60a07f686044b47, b70d3a70fc5c7fc78f16c936fa54f27f, 4b2b2cbbddfe0c3a4a07101f735ca325, 92a222679eee72860e930a11c59ac154, 8a83ddc8696f9c46626e404485c9858f\"\n    tlp = \"green\"\n    prod = \"true\"\n    thanks = \"https://countuponsecurity.com/2016/03/09/unleashing-yara-part-3/\"\n  strings:\n    $s1 = /[a-f0-9]{64}/\n  condition:\n    filesize < 1000KB and filesize > 100KB and\n    $s1 at 0 and\n    math.entropy(65,160) > 6.5\n}\n\n\n\nrule PE_HeaderNonZeroEntropy\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 20 bytes of header with non-zero entropy.\"\n        description = \"This implies there is stuff where stuff usually isn't.\"\n        author      = \"Peter Misurek, Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-03\"\n\tmodified    = \"2020-03-11\"\n        sample      = \"ee0285249e50c5f5272bf8303eee3309\"\n        sample      = \"ca41b469a22a6def1e0b1dc84a57bf64\"\n        sample      = \"c640246c825676d1fc946cbdb7c47644\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$ = { 4f50 6174 6368 496e 7374 616c 6c3a 20 }\t//OPatchInstall seen with Fiddler\n\t$ = { b05b 3f73 df06 3f72 b05b c072 df06 3f72\n\t      b05b 3d73 df06 3f72 5269 6368 de06 3f72\n\t} //Symantec VIP\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n\tand not pe.is_dll()\n\tand not any of them\n}\n\nrule PE_MZ_MF_36 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-11\"\n                description     = \"PE/MZ with specific 0x36 byte spacing\"\n                sample          = \"eb2d39761489978be92e74cd873d7332\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = { 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36 }\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize <= 4096KB\n                and not pe.is_dll()\n                and all of them\n}\n\nrule dll_packer_science_not_feelz_2\n{\n\tmeta:\n\t\tsample=\"98cbaf55376e928b0c78fce3867d95b9ef4b45c1d91f103f00dad403dd524189\"\n\t\tthanks=\"Fowler\"\n\t\tauthor=\"Jason Reaves\"\n\tstrings:\n\t\t$a1 = {c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 [0-20] c1 45 08 04 [0-14] 8b 4? 08 [1-2] 78 77 77 77}\n\tcondition:\n\t\tall of them\n}\n\nrule PE_MZ_MF_CLC {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-03\"\n                description     = \"PE/MZ with specific clc, add, db\"\n                sample          = \"2b69d9463c6439973579fe04a781fb73\"\n                reference       = \"/wiki/netwire\"\n\n        strings:\n\t\t$ = {\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.is_dll()\n                and all of them\n}\n\nrule vbs_sins_reverse_base64 {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using reverse base64. As seen with Gozi/Ursnif.\"\n    date = \"2020-03-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"afc0be7f5fae05d84739b0c40723f5e6\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    // code preamble with == reverse base64 encoding\n    $s0 = { 63 6f 64 65 20 3d 20 22 3d }\n    // base64 detection\n    $s1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n  condition:\n    filesize > 1000KB and uint16(0) == 0x6f63 and\n    $s0 at 0 and $s1\n}\n\nrule vbs_sins_vertical_tab_ascii {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using hundreds of vertical tabs as separators. As seen with Qakbot\"\n    date = \"2020-02-26\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"4e8eeab906ee506e57c186c69048c40a\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s0 = \"Function\" ascii\n    $s1 = /\\x0a\\x0b\\x0b[^\\x0a\\x0b]/\n  condition:\n    filesize > 1000KB and uint8(0) == 0x0a and\n    all of ($s*)\n}\n\nrule PE_MZ_MF_3F_3E {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-24\"\n                description     = \"PE/MZ with specific 0x3F and 0x3E byte spacing\"\n                sample          = \"4762bc6f2a62120c6309036de944d5eb\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F\n\t\t}\n\n\t\t$ = {\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E\n\t\t }\n\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize <= 4096KB\n                and not pe.is_dll()\n\t\tand all of them\n}\n\nrule PE_MZ_Kernel_Not_Kernel {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-21\"\n                description     = \"PE/MZ with specific kernel32.dll instanced as non-kernel32.dll\"\n                sample          = \"699e2a36312b07f677805829b7c832d5\"\n                reference       = \"/wiki/gootkit\"\n\n        strings:\n\t\t//Lets fixate on byte placement and an upper case ASCII set but a lowercase 'dll'\n\t\t//000f660: 6363 5f5f 5f65 655f 735f 5ff1 6f72 7900  cc___ee_s__.ory.\n\t\t//000f670: 4645 524e 4546 3232 2e64 6c6c 0000 5669  FERNEF22.dll..Vi\n\t\t//000f680: 7274 7561 6c41 6c6c 6f63 0000 7871 6f72  rtualAlloc..xqor\n\n\t\t$a = { 00 (4?|5?)(4?|5?) (4?|5?)(4?|5?) (4?|5?)(4?|5?) 3?3? 2e64 6c6c }\n\n\t\t$b1 = \"KERNEL32.DLL\"\tascii\n\t\t$b2 = \"KERNEL32.dll\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n                and $a and not any of ($b*)\n}\n\nrule PE_MZ_MF_CAB_cmp {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-20\"\n                description     = \"PE/MZ with specific byte ordering of cmp\"\n                sample          = \"e81ea61add3e8788672a9190401289e5\"\n                reference       = \"/wiki/ursnif\"\n\n        strings:\n\t\t//000CAB25  3ADC              cmp bl,ah\n\t\t//000CAB27  3AE0              cmp ah,al\n\t\t//000CAB29  3AE4              cmp ah,ah\n\t\t//000CAB2B  3AE8              cmp ch,al\n\n\t\t//000CAB2D  3AEC              cmp ch,ah\n\t\t//000CAB2F  3AF0              cmp dh,al\n\t\t//000CAB31  3AF4              cmp dh,ah\n\t\t//000CAB33  3AF8              cmp bh,al\n\n\t\t//000CAB35  3AFC              cmp bh,ah\n\t\t//000CAB37  3A08              cmp cl,[bx+si]\n\n\t\t//000CAB39  3B0C              cmp cx,[si]\n\t\t//000CAB3B  3B10              cmp dx,[bx+si]\n\t\t//000CAB3D  3B14              cmp dx,[si]\n\t\t//000CAB3F  3B18              cmp bx,[bx+si]\n\n\t\t//000CAB41  3B1C              cmp bx,[si]\n\t\t//000CAB43  3B20              cmp sp,[bx+si]\n\t\t//000CAB45  3B24              cmp sp,[si]\n\t\t//000CAB47  3B28              cmp bp,[bx+si]\n\t\t//000CAB49  3B2C              cmp bp,[si]\n\n\t\t//000CAB4B  3B30              cmp si,[bx+si]\n\n\t\t$ = {\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3??C 3??8\t\t//This part is really odd to me.  Min->Max in one step\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t}\n\n        condition:\n\t\tfilesize <= 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\n}\n\nrule ASCII_Dropper_NeedABreak\n:malhtml\n{\n        meta:\n                description = \"ASCII programming language instancing and excessively long non-linebroken quoted string\"\n                analyst_notes = \"This is potentially an ASCII script-based dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-19\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/adwind\"\n                sample = \"85096e4eb76c8b65c8ce4aed8d17ee4b\"\n\n        strings:\n               $a1 = \"function\"\tnocase ascii\n\t\t$a2 = /[\\x22\\x27][^\\r\\n\\x22\\x27\\x00\\x20\\x09]{2048}/\tascii\n\t\t$b1 = \";base64,\"\tascii\n\n        //exclusions\n               $exclusion1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n               $exclusion2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n               $exclusion3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n               $exclusion4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"     ascii\n               $exclusion5 = \"https://www.broadridge.com/intl/white-paper/shareholder-rights-directive\"\n\n        condition:\n\t            not uint16(0) == 0xcfd0\t//office\n\t\tand not uint32(0) == 0x6d783f3c\t//xml\n\t\tand not uint32(0) == 0x0a786564\t//dex\n                and (      uint8(0) == 0x20\t//Space\n                        or uint8(0) == 0x09\t//Tab\n\t\t\tor uint8(0) == 0x0a\t//LF\n\t\t\tor uint8(0) == 0x0d\t//CR\n\t\t\tor uint8(0) == 0x3c\t//<\n\t\t\tor uint8(0) == 0x24\t//$\n\t\t\tor uint8(0) == 0x27\t//'\n\t\t\tor uint8(0) == 0x22\t//\"\n\t\t\tor uint8(0) == 0x61\t//a...\n\t\t\tor uint8(0) == 0x62\n\t\t\tor uint8(0) == 0x63\n\t\t\tor uint8(0) == 0x64\n\t\t\tor uint8(0) == 0x65\n\t\t\tor uint8(0) == 0x66\n\t\t\tor uint8(0) == 0x67\n\t\t\tor uint8(0) == 0x68\n\t\t\tor uint8(0) == 0x69\n\t\t\tor uint8(0) == 0x6A\n\t\t\tor uint8(0) == 0x6B\n\t\t\tor uint8(0) == 0x6C\n\t\t\tor uint8(0) == 0x6D\n\t\t\tor uint8(0) == 0x6E\n\t\t\tor uint8(0) == 0x6F\n\t\t\tor uint8(0) == 0x70\n\t\t\tor uint8(0) == 0x71\n\t\t\tor uint8(0) == 0x72\n\t\t\tor uint8(0) == 0x73\n\t\t\tor uint8(0) == 0x74\n\t\t\tor uint8(0) == 0x75\n\t\t\tor uint8(0) == 0x76\n\t\t\tor uint8(0) == 0x77\n\t\t\tor uint8(0) == 0x78\n\t\t\tor uint8(0) == 0x79\n\t\t\tor uint8(0) == 0x7A\t//z\n                )\n                and all of ($a*)\n\t\tand not any of ($b*)\n\t\tand not any of ($exclusion*)\n}\n\nrule CryptographyFunction\n{\n  meta:\n    author = \"CISA trusted 3rd party\"\n    incident = \"10271944.r1.v1\"\n    date =    \"2019-12-25\"\n    category = \"Hidden_Cobra\"\n    family = \"HOTCROISSANT\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ALGO_crypto_1 = { 8A [1-5] 32 [1-4] 32 [1-4] 32 [1-4] 88 [1-5] 8A [1-4] 32 [1-4] 22 [1-4] 8B [1-5] 8D [3-7] 33 [1-4] 81 [3-7] C1 [1-5] C1 [1-5] 0B [1-4] 8D [1-5] 33 [1-4] 22 [1-4] C1 [1-5] 33 [1-4] 32 [1-4] 8B [1-4] 83 [1-5] C1 [1-5] 33 [1-4] C1 [1-5] C1 }\n  condition:\n    uint16(0) == 0x5A4D and any of them\n}\n\nrule crypt_constants_2\n{\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n    (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule lsfr_constants {\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n   (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule lazarus_group_password_string {\n  meta:\n    author = \"jim at wm\"\n    date = \"2020-02-14\"\n    weight = 100\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $strings1 = \"!Q@W#E$R%T^Y&U*I(O)P\" wide ascii\n    // UTF8 and UTF16-LE string base64 encoded\n    $encstring_1 = \"hUUBXI0UkUiVUXlkmVSpJKE8\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_2 = \"FRQFcjRSRSJVReWSZVKkkoTyl\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_3 = \"IVFAVyNFJFIlVF5ZJlUqSShPKVB\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_4 = \"ACEAUQBAAFcAIwBFACQAUgAlAFQAXgBZACYAVQAqAEkAKABPACkA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_5 = \"IQBRAEAAVwAjAEUAJABSACUAVABeAFkAJgBVACoASQAoAE8AKQBQ\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_6 = \"AhAFEAQABXACMARQAkAFIAJQBUAF4AWQAmAFUAKgBJACgATwApAFAA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed UTF8 and UTF16-LE string base64 encoded\n    $encstring_7 = \"QKU8oSSpVJlleVCVSJEUjV0B\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_8 = \"ApTyhJKlUmWV5UJVIkRSNXQFE\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_9 = \"UClPKEkqVSZZXlQlUiRFI1dAUSF\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_10 = \"AFAAKQBPACgASQAqAFUAJgBZAF4AVAAlAFIAJABFACMAVwBAAFEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_11 = \"UAApAE8AKABJACoAVQAmAFkAXgBUACUAUgAkAEUAIwBXAEAAUQAh\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_12 = \"BQACkATwAoAEkAKgBVACYAWQBeAFQAJQBSACQARQAjAFcAQABRACEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    // hex encoded string - format present in embedded RTF objects\n    $encstring_13 = \"215140572345245225545e5926552a49284f2950\" ascii wide nocase // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed hex encoded string - format present in embedded RTF objects\n    $encstring_14 = \"50294f28492a5526595e54255224452357405121\" ascii wide nocase // P)O(I*U&Y^T%R$E#W@Q!\n    // base64 encoded, then hex encoded\n    $encstring_15 = \"68555542584930556b55695655586c6b6d5653704a4b4538\" ascii wide nocase // hUUBXI0UkUiVUXlkmVSpJKE8\n    $encstring_16 = \"46525146636a525352534a56526557535a564b6b6b6f54796c\" ascii wide nocase // FRQFcjRSRSJVReWSZVKkkoTyl\n    $encstring_17 = \"4956464156794e464a46496c5646355a4a6c5571535368504b5642\" ascii wide nocase // IVFAVyNFJFIlVF5ZJlUqSShPKVB\n  condition:\n    $strings1 or any of ($encstring_*)\n}\n\n//rule PDF_Encrypted_NC\n//:malpdf\n//{\n//    meta:\n//        author = \"Nathan Fowler\"\n//        date = \"2019-09-10\"\n//        description = \"256KB or less PDF with an Encrypt declaration in the last 128 bytes of the PDF object without a numeric creation date, potentially malicious PDF\"\n//        sample = \"7c1da5d57701743c6d4ad3ab46ba93b4\"\n//\n//    strings:\n//        //00000000: 2550 4446 2d31 2e35 0a25 e2e3 cfd3 0a31  %PDF-1.5.%.....1\n//        //00035c90: 3120 3020 522f 456e 6372 7970 7420 3136  1 0 R/Encrypt 16\n//        //00035d10: 2545 4f46 0a                             %EOF.\n//\n//        $enc = \"/Encrypt \"    ascii\n//\n//        //CreationDate() contains no date object, so no repeating two digits\n//        $create1 = \"CreationDate(\"\n//        $create2 = /CreationDate\\x28[^\\x29]{0,32}[0-9]{2}[^\\x29]{0,32}\\x29/\n//\n//    condition:\n//        filesize < 256KB\n//        and uint32(0) == 0x46445025\n//        and uint32(filesize-4) == 0x0a464f45\n//        and $enc in (filesize-128..filesize)\n//        and $create1 in (16..128)\n//        and not $create2 in (16..128)\n//}\n\nrule Office_Excel_4_Macro_Localized\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using Excel 4.0 Macros with a non-en-US localized 'macro' value\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-05\"\n        reference = \"/wiki/azorult\"\n        sample = \"2c93fb1a782b37146be53bd7c7a829da\"\n\n    strings:\n\t$a1 = { 4578 6365 6c20 342e 3020 4d61 }\n\t$a2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 }\n\t$a3 = \"57863656c20342e30204d61\"\t\t\t\t\tnocase ascii\n\t$a4 = \"45007800630065006c00200034002e00300020004d006100\"\tnocase ascii\n\n\t$b1 = { 4578 6365 6c20 342e 3020 4d61 6372 6f }\n\t$b2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 6300 7200 6f }\n\t$b3 = \"457863656c20342e30204d6163726f\"\t\t\t\t\tnocase ascii\n\t$b4 = \"45007800630065006c00200034002e00300020004d006100630072006f\"\tnocase ascii\n\n    condition:\n\t(\n\t\t   uint16(0) == 0x5c7b\t\t//rtf\n\t\tor uint32(0) == 0x6d783f3c\t//xml\n\t\tor uint16(0) == 0x0a0d\t\t//asc\n                or uint16(0) == 0x0a0a\t\t//asc\n                or uint16(0) == 0x2020\t\t//asc\n                or uint16(0) == 0x0909\t\t//asc\n                or uint16(0) == 0x213c\t\t//html\n\t        or uint16(0) == 0xcfd0\t\t//office\n\t)\n\tand any of ($a*)\n\tand ((#a1 + #a2 + #a3 + #a4) > (#b1 + #b2 + #b3 + #b4))\n}\n\nrule qakbot_sad_math : vbs {\n  meta:\n    description = \"Finds qakbot stage 1 vbs with sad math inside of it.\"\n    date = \"2020-02-04\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ae4cb914039c22b52ab5c2580c537de9\"\n    reference = \"/wiki/qakbot\"\n    tlp = \"green\"\n    notes = \"This is low response (~400 samples ever), but no falses.\"\n  strings:\n    $dim = \"dim \"\n    $sad = /\\x0a[a-zA-Z]{1,6}\\s=\\s([0-9]{1,4}\\s[\\+\\-]\\s){3,32}[0-9]{1,5}\\x0a/\n  condition:\n    filesize > 100KB and\n    $dim and #sad > 20\n}\n\nrule HTML_msBlob\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript .msSaveOrOpenBlob\"\n                analyst_notes = \"This is potentially a maldoc dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-04\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/poshadvisor\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Web/API/Navigator/msSaveOrOpenBlob\"\n\t\tsample = \"e6cd6c3baf1aaf0ad8e74461e9b09cc4\"\n\n        strings:\n                $ = \".msSaveOrOpenBlob\"\tascii\n                $ = \".msSaveBlob\"\tascii\n\n        condition:\n                (\t   uint16(0) == 0x0a0d\n\t\t\tor uint16(0) == 0x0a0a\n\t\t\tor uint16(0) == 0x2020\n\t\t\tor uint16(0) == 0x0909\n\t\t\tor uint16(0) == 0x213c\n\t\t)\n                and any of them\n}\n\nrule Office_VBA_Public\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using regsvr32, wmic process, or C:/Users/Public/ with a URL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-03\"\n        reference = \"\"\n        sample = \"50d518246c2b61f5b427948f87a0aa24\"\n\n    strings:\n\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $bad1 = \"regsvr32\"              nocase ascii\n        $bad2 = \"wmic process\"          nocase ascii\n        $bad3 = \"wmic.exe process\"      nocase ascii\n        $bad4 = \"c:\\\\users\\\\public\\\\\"   nocase ascii\n\n        $url1 = \"https://\"\tnocase ascii\n        $url2 = \"http://\"\tnocase ascii\n        $url3 = \"ftp://\"        nocase ascii\n\n    condition:\n\tuint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($vb*)\n        and any of ($bad*)\n        and any of ($url*)\n}\n\nrule PE_MZ_MF_xor_spacebutt {\n\n        meta:\n\t\tauthor          = \"Nathan Fowler\"\n                date            = \"2020-01-31\"\n                description     = \"PE/MZ with specific byte ordering of xor and and [bx+si],ah to EOF\"\n                sample          = \"d0e0aac1a7a2f82dfbf89fedeee14a40\"\n                reference\t= \"/wiki/bladabindi\"\n\n        strings:\n                //0014EAE1  301E170D          xor [0xd17],bl\n                //0014EAE5  31363031          xor [0x3130],si\n                //0014EAE9  3132              xor [bp+si],si\n                //0014EAEB  3030              xor [bx+si],dh\n                //0014EAED  3030              xor [bx+si],dh\n                //0014EAEF  3030              xor [bx+si],dh\n                $ = { 3030 3030 3030 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and uint32(filesize-4) == 0x20202020\n                and all of them\n\n}\n\nrule PE_MZ_MF_lumberjax6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated push ax at 6 and 8 byte distances\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074FC5  50                push ax\n\t\t//00074FC6  41                inc cx\n\t\t//00074FC7  44                inc sp\n\t\t//00074FC8  44                inc sp\n\t\t//00074FC9  49                dec cx\n\t\t//00074FCA  4E                dec si\n\t\t//00074FCB  47                inc di\n\t\t//00074FCC  50                push ax\n\t\t//00074FCD  41                inc cx\n\t\t//00074FCE  44                inc sp\n\t\t//00074FCF  44                inc sp\n\t\t//00074FD0  49                dec cx\n\t\t//00074FD1  4E                dec si\n\t\t//00074FD2  47                inc di\n\t\t//00074FD3  58                pop ax\n\t\t//00074FD4  58                pop ax\n\t\t//00074FD5  50                push ax\n\t\t$ = {\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule PE_MZ_MF_inc_add_db {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated inc word, add, db, at fixed offsets\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074AAD  FF00              inc word [bx+si]\n\t\t//00074AAF  00FF              add bh,bh\n\t\t//00074AB1  FF                db 0xff\n\t\t//00074AB2  FF                db 0xff\n\t\t//00074AB3  FF                db 0xff\n\t\t//00074AB4  FF                db 0xff\n\t\t//00074AB5  FF00              inc word [bx+si]\n\t\t//00074AB7  00FF              add bh,bh\n\t\t//00074AB9  FF                db 0xff\n\t\t//00074ABA  FF                db 0xff\n\t\t//00074ABB  FF                db 0xff\n\t\t//00074ABC  FF                db 0xff\n\t\t$ = { \tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_Macro_Long\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using &H long manipulation with Chr, Asc, Len, or Mid with high compatibility\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n        reference = \"/wiki/formbook\"\n\tsample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n\t$hc1 = \"VBA6\"\t\tascii\n\t$hc2 = \"VBA7\"\t\tascii\n\t$hc3 = \"Win16\"\t\tascii\n\t$hc4 = \"Win32\"\t\tascii\n\t$hc5 = \"Win64\"\t\tascii\n\t$hc6 = \"Mac\"\t\tascii\n\n\t$f1 = \"Chr\"\t\tascii\n\t$f2 = \"Mid\"\t\tascii\n\t$f3 = \"Asc\"\t\tascii\n\t$f4 = \"Len\"\t\tascii\n\n\t$l1 = \"\\\"&H\\\"\"\t\tascii\n\t$l2 = \"'&H'\"\t\tascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n\tand all of ($hc*)\n\tand any of ($f*)\n\tand any of ($l*)\n}\n\nrule PE_MZ_lumberjax_6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-27\"\n                description     = \"PE/MZ with specific byte ordering of repeated ax\"\n                sample          = \"f6f4e15ed664afc6bdd3abf5ca77edc5\"\n                reference       = \"/wiki/formbook\"\n\n        strings:\n\n        //push ax\n        $ = {\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50\n        }\n\n        //add [b?+?i],ax\n        $ = {\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n        }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_OleObject_Terse_WideURL\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using URL wide encoding in an terse Ole Sheet\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\n    strings:\n        //OLE\n        $a1 = { 00 4f00 6c00 6500 0000 }\n\n        //Numeric \"Sheet[0-9]!Object \"\n        $a2 = { 0000 5368 6565 74?? 214f 626a 6563 7420 }\n\n        //URL embed\n        $u1 = \"http://\"         wide\n        $u2 = \"https://\"        wide\n        $u3 = \"ftp://\"\t        wide\n\n    condition:\n\tfilesize < 3KB\n\tand uint32(0) == 0xe011cfd0\n\tand all of ($a*)\n\tand any of ($u*)\n}\n\nrule Office_XML_Ole_autoLoad\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using an embedded OLE object attempting to auto execute\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\tmore_info = \"meows://docs.microsoft.com/en-us/office/vba/api/excel.oleobject.autoload\"\n\n    strings:\n\t$ = /<oleObjects><oleObject[^\\r\\n]+autoLoad=[\\x22\\x27]?(1|true)[\\x22\\x27]?/\tnocase ascii\n\n    condition:\n\tfilesize < 2KB\n\tand uint32(0) == 0x6d783f3c\n\tand all of them\n}\n\nrule Office_Emotet_JibJAB\n:maldoc\n{\n    meta:\n        description = \"Potential Emotet maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The JAB variables are the use of a dollar-sign at the very beginning of the base64 encoding\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-15\"\n\tmodified = \"2020-01-22\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/emotet\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        //$jab1 = { 0000 4a41 42 }\n        //$jab2 = { 0000 4a00 4100 4200 }\n\n\t//2020-01-15 seen in d79f7d6e6d53c51a1bc68ead8c78a3a6\n\t//00002c0: 2020 2020 4a41 4257 4147 732c 2c2c 2c73      JABWAGs,,,,s\n\t$jab1 = /[\\x00\\x20\\x09\\x3c\\r\\n]{2}J\\x00?A\\x00?B/\tascii\n\n\t//2020-01-22, negation handling for JABIL INC\n\t$neg1 = { 0000 4a41 4249 4c20 494e 43 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n\tand not any of ($neg*)\n}\n\nrule PE_MZ_MF_dridexpacker {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2020-01-22\"\n\t\tdescription     = \"PE/MZ with specific add/xor logic potentially Dridex or similar packer\"\n\t\tsample          = \"551de8d77807cee610e4ed129adde44f\"\n\t\treference       = \"/wiki/dridex\"\n\n\tstrings:\n\t\t//00037014  0020              add [bx+si],ah\n\t\t//00037016  0000              add [bx+si],al\n\t\t//00037018  3000              xor [bx+si],al\n\t\t//0003701A  0000              add [bx+si],al\n\n\t\t$ = { 0020 0000 3000 0000 }\n\n\t\t//0003600E  0100              add [bx+si],ax\n\t\t//00036010  1000              adc [bx+si],al\n\t\t//00036012  0000              add [bx+si],al\n\t\t//00036014  1800              sbb [bx+si],al\n\t\t//00036016  00800000          add [bx+si+0x0],al\n\t\t//0003601A  0000              add [bx+si],al\n\t\t//0003601C  0000              add [bx+si],al\n\t\t//0003601E  0000              add [bx+si],al\n\t\t//00036020  0000              add [bx+si],al\n\t\t//00036022  0000              add [bx+si],al\n\t\t//00036024  0000              add [bx+si],al\n\t\t//00036026  0100              add [bx+si],ax\n\t\t//00036028  0100              add [bx+si],ax\n\t\t//0003602A  0000              add [bx+si],al\n\t\t//0003602C  3000              xor [bx+si],al\n\t\t//0003602E  00800000          add [bx+si+0x0],al\n\t\t//00036032  0000              add [bx+si],al\n\t\t//00036034  0000              add [bx+si],al\n\t\t//00036036  0000              add [bx+si],al\n\n\t\t$ = { 00 00800000 [19] 00 00800000 0000 }\n\n\t\t//Kernel32 use\n\t\t$ = \"KERNEL32.dll\"    ascii\n\t\t$ = \"kernel32\"        ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.characteristics & pe.DLL\n\t\tand all of them\n}\n\nrule PE_MZ_MF_coocoo4coccopuffs {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-21\"\n        description     = \"PE/MZ with specific abnormal add, ror byte, or al\"\n        sample          = \"085ad62be3425cb4d822aec3396a159c\"\n        reference       = \"/wiki/agenttesla\"\n\n    strings:\n\t//000CB3F7  0000              add [bx+si],al\n\t//000CB3F9  0000              add [bx+si],al\n\t//000CB3FB  0000              add [bx+si],al\n\t//000CB3FD  0000              add [bx+si],al\n\t//000CB3FF  0000              add [bx+si],al\n\t//000CB401  C00C00            ror byte [si],byte 0x0\n\t//000CB404  0C00              or al,0x0\n\t//000CB406  0000              add [bx+si],al\n\t//000CB408  1030              adc [bx+si],dh\n\t//000CB40A  0000              add [bx+si],al\n\t//000CB40C  0000              add [bx+si],al\n\t//000CB40E  0000              add [bx+si],al\n\t//000CB410  0000              add [bx+si],al\n\t//000CB412  0000              add [bx+si],al\n\t//000CB414  0000              add [bx+si],al\n\t$ = { 0000 C00C00 0C00 0000 }\n\n\t//000002D9  7310              jnc 0x2eb\n\t//000002DB  0000              add [bx+si],al\n\t//000002DD  0A800100          or al,[bx+si+0x1]\n\t//000002E1  0004              add [si],al\n\t//000002E3  7311              jnc 0x2f6\n\t//000002E5  0000              add [bx+si],al\n\t//000002E7  0A800200          or al,[bx+si+0x2]\n\t//000002EB  0004              add [si],al\n\t//000002ED  7312              jnc 0x301\n\t//000002EF  0000              add [bx+si],al\n\t//000002F1  0A800300          or al,[bx+si+0x3]\n\t//000002F5  0004              add [si],al\n\t//000002F7  7313              jnc 0x30c\n\t//000002F9  0000              add [bx+si],al\n\t//000002FB  0A800400          or al,[bx+si+0x4]\n\t//000002FF  0004              add [si],al\n\t//00000301  7314              jnc 0x317\n\t//00000303  0000              add [bx+si],al\n\t$ = {\n\t\t     0000 [2]0100 [2]\n\t\t[2] 0000 [2]0200 [2]\n\t\t[2] 0000 [2]0300 [2]\n\t\t[2] 0000 [2]0400 [2]\n\t\t[2] 0000\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_MF_nummyC_xorciser {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-17\"\n        description     = \"PE/MZ with specific abnormal xor with excessive cccc byte separation\"\n        sample          = \"\"\n        reference       = \"/wiki/emotet\"\n\n    strings:\n        //0001F379  33B033B4          xor si,[bx+si-0x4bcd]\n        //0001F37D  33B833BC          xor di,[bx+si-0x43cd]\n        //0001F381  33C0              xor ax,ax\n        //0001F383  33C4              xor ax,sp\n        //0001F385  33C8              xor cx,ax\n        //0001F387  33CC              xor cx,sp\n        //0001F389  33D0              xor dx,ax\n        //0001F38B  33D4              xor dx,sp\n        //0001F38D  33F8              xor di,ax\n        //0001F38F  33FC              xor di,sp\n        //0001F391  3314              xor dx,[si]\n        //0001F393  342C              xor al,0x2c\n        //0001F395  3458              xor al,0x58\n        //0001F397  345C              xor al,0x5c\n        //0001F399  3460              xor al,0x60\n        //0001F39B  3464              xor al,0x64\n        $ = { 33C0 33C4 33C8 33CC }\n\n        //0001F3C9  34C0              xor al,0xc0\n        //0001F3CB  34C4              xor al,0xc4\n        //0001F3CD  34C8              xor al,0xc8\n        //0001F3CF  34CC              xor al,0xcc\n        $ = { 34C0 34C4 34C8 34CC }\n\n        //0001F362  803384            xor byte [bp+di],0x84\n        $ = { 8033 }\n\n        //Feelz\n        $ = {\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule Office_Ursnif_PD94\n:maldoc\n{\n    meta:\n        description = \"Potential Ursnif maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The PD94 variables are the use base64 encoded XML likely xsl at the very beginning\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-12-19\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/ursnif\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $jab1 = { 0000 5044 3934 6257 7767 646d 56 }\n        $jab2 = { 0000 5000 4400 3900 3400 6200 5700 7700 6700 6400 6d00 5600 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n}\n\nrule PE_MZ_MF_push_ecx_or {\n\n    meta:\n\tauthor          = \"Nathan Fowler\"\n        thanks          = \"Jerry Zepp\"\n        date            = \"2019-12-06\"\n        description     = \"PE/MZ with too much push ecx with or ecx,ebx\"\n        sample          = \"\"\n        reference\t= \"\"\n\n    strings:\n\n//\t0003F18B  51                push ecx\n//\t0003F18C  51                push ecx\n//\t0003F18D  51                push ecx\n//\t0003F18E  51                push ecx\n//\t0003F18F  51                push ecx\n//\t0003F190  51                push ecx\n//\t0003F191  2C17              sub al,0x17\n//\t0003F193  1010              adc [eax],dl\n//\t0003F195  0B0B              or ecx,[ebx]\n//\t0003F197  0B0B              or ecx,[ebx]\n//\t0003F199  0B050B0B0B0B      or eax,[dword 0xb0b0b0b]\n//\t0003F19F  0C0D              or al,0xd\n\n        $ = { 5151 5151 5151 5151 [2-4] 0B0B }\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule certificate_chicanery_b64_too_long {\n  meta:\n    description = \"Detects pem-encoded certificates that are too long to be real.\"\n    date = \"2019-12-05\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ffe3a6b7edb96c0e33fc50b514d46ac4\"\n    tlp = \"green\"\n    analyst_note = \"Fake pem-encoded certificates that are actually files. Maximum pem length is 32768 by standard.\"\n    prod = \"true\"\n  strings:\n    $head = \"-----BEGIN CERTIFICATE-----\" ascii\n    $tail = \"-----END CERTIFICATE-----\" ascii\n  condition:\n    uint16(0) == 0x2d2d and filesize > 33KB\n    and $head at 0 and $tail in (filesize-32..filesize)\n    and #head == 1 and #tail == 1\n}\n\nrule PE_MZ_MF_xor_enter {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-05\"\n        description     = \"PE/MZ with similar xor against eax dh,bh to enter\"\n        sample          = \"\"\n        reference       = \"/wiki/hawkeye\"\n\n    strings:\n\n        //00151EEC  A030A830AC        mov al,[0xac30a830]\n        //00151EF1  30B030B430B8      xor [eax-0x47cf4bd0],dh\n        //00151EF7  30BC30C030C430    xor [eax+esi+0x30c430c0],bh\n        //00151EFE  C830CC30          enter 0xcc30,0x30\n\n        $ = { A0[4] 30B?[4] 30B?[5] C830 }\n        $ = { CCCC CCCC CCCC }     //Bunch of int3 nonsense\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule PE_MZ_MF_pop_xor {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-02\"\n        description     = \"PE/MZ with similar xor against al 0x?6->0x?e\"\n        sample          = \"6c0bd3a2425bde56d7e827ce036c6c0d\"\n        reference       = \"/wiki/sodinokibi\"\n\n    strings:\n\n        //00028C58  5B                pop ebx\n        //00028C59  3464              xor al,0x64\n        //00028C5B  346B              xor al,0x6b\n        //00028C5D  3480              xor al,0x80\n        //00028C5F  348C              xor al,0x8c\n        //00028C61  3496              xor al,0x96\n        //00028C63  349E              xor al,0x9e\n        //00028C65  34A6              xor al,0xa6\n        //00028C67  34AE              xor al,0xae\n        //00028C69  34B6              xor al,0xb6\n        //00028C6B  34BE              xor al,0xbe\n        //00028C6D  34C6              xor al,0xc6\n        //00028C6F  34CE              xor al,0xce\n        //00028C71  34D6              xor al,0xd6\n        //00028C73  34DE              xor al,0xde\n        //00028C75  34E6              xor al,0xe6\n        //00028C77  34EE              xor al,0xee\n        //00028C79  34F6              xor al,0xf6\n        //00028C7B  34FE              xor al,0xfe\n        //00028C7D  3406              xor al,0x6\n\n        $ = { A6?? AE?? B6?? BE?? C6?? CE?? D6?? DE?? E6?? EE?? F6?? FE }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_VBS_WSHRat {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-12-02\"\n\t\tdescription     = \"PE/MZ or VBS with literal text indicating it is WSHRat\"\n\t\tsample          = \"d2c395fe219cf04c7f57ea75f312f028\"\n\t\treference       = \"/wiki/houdini, /wiki/wshrat\"\n\n\tstrings:\n\n\t\t//00005520: 1243 6f70 7972 6967 6874 20c2 a920 2032  .Copyright ..  2\n\t\t//00005530: 3031 3900 000a 0100 056b 6c70 6c75 0000  019......klplu..\n\t\t//00005540: 1201 000d 5753 4852 6174 2050 6c75 6769  ....WSHRat Plugi\n\t\t//00005550: 6e00 0000 7c71 0000 0000 0000 0000 0000  n...|q..........\n\t\t//00005560: 9e71 0000 0020 0000 0000 0000 0000 0000  .q... ..........\n\t\t$ = \"WSHRat \"\tascii\n\t\t$ = \"NIUm\"\tascii // WSHRat\n\t\t$ = \"0hSYX\"\tascii // WSHRat\n\t\t$ = \"SFJhdC\"\tascii // WSHRat\n\n\tcondition:\n\t\t((uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550)\n\t\tor uint8(0) == 0x27)\n\t\tand any of them\n}\n\nrule Office_Macro_IntBuilding\n{\n        meta:\n                description = \"Office document with an excessively long single byte split-based tokenized string likely using binary write and put to drop an executable\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-21\"\n                sample = \"fbe55179449262e64d524738ab63f00a\"\n                reference = \"/wiki/crimsonrat\"\n\n        strings:\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//YARA will go nuts unless it has a forward anchor generating atoms\n\t\t$bad_mamajama = /\\x00([0-9]{1,3}[^0-9]){1024}/\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $bad_mamajama\n\n}\n\nrule PE_MZ_CrimsonRAT {\n\n        meta:\n                author          = \"Nathan Fowler\"\n\t\tthanks\t\t= \"Jason Blanks, Jason Reaves\"\n                date            = \"2019-11-21\"\n                description     = \"PE/MZ with a fixed unique packer/crypter/attribution string identified by Jason Blanks\"\n                sample          = \"ae23d2c808c2849dcd0cf2f1bdcf98d6\"\n                reference       = \"/wiki/crimsonrat\"\n\n        strings:\n\n\t\t$ = \"dooursuac\"\t\t\t\t\tnocase wide ascii\n\t\t$ = \"71461f04-2faa-4bb9-a0dd-28a79101b599\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_Echo\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto open, and @echo off\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-20\"\n                tlp = \"GREEN\"\n                sample = \"598ae1d71df7dee7c7f8a39fc723cdef, 5ec4fa2f8e0ceb362148da93b98a5839\"\n                reference = \"/wiki/dridex\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness = \"@echo off\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and any of ($ao*)\n                and $badness\n}\n\nrule HTML_Meta_Refresh\n:malhtml\n{\n\tmeta:\n\t\tdescription = \"ASCII HTML attachment using META REFRESH\"\n\t\tanalyst_notes = \"This is potentially phishing or highly abnormal\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-24\"\n\t\tmodified = \"2019-11-19\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$r1 = /<meta[\\x20\\x09\\r\\n]+HTTP-EQUIV=[\\x22\\x27\\r\\n]*REFRESH[\\r\\n\\x22\\x27\\x20\\x09]*content=/\tnocase ascii\n\n\t\t//Exclusions\n\t\t$e1 = \".citrixdata.com/\"\tascii\n\t\t$e2 = \".force.com/\"\t\tascii\n\t\t$e3 = \".sharefile.com/\"\t\tascii\n\t\t$e4 = \".documentforce.com/\"\tascii\n\t\t$e5 = \".salesforce.com/\"\tascii\n\n\tcondition:\n\t\tfilesize < 8KB\n\t\tand uint16(0) != 0xcfd0\n\t\tand any of ($r*)\n\t\tand not any of ($e*)\n}\n\n\nrule PE_MZ_Fixed_100byte_B64 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-14\"\n                description     = \"PE/MZ with a fixed 100 bytes sequentially separated by quad-null at least 32 times\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference       = \"/wiki/emotet\"\n\n        strings:\n\n\t\t$b64 = /(\\x00\\x00\\x00\\x00[A-Za-z0-9\\x2b\\x2f\\x3d]{100}){32}\\x00\\x00\\x00\\x00/\n\t\t$dot_net = \"WrapNonExceptionThrows\"\n\n        condition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $b64\n\t\tand not $dot_net\n}\n\nrule Office_Macro_Forms_DoubleEscapePath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using Microsoft Forms 2.0 with an escaped path string\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"Microsoft Forms 2.0 Form\"\t\twide ascii\n\t\t$badness2 = \"Embedded Object\"\t\t\twide ascii\n\t\t$badness3 = \"c:\\\\\\\\\"\t\t\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n}\n\nrule Office_Forms_ShellV_ActiveWindow\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0, ShellV, and ActiveWindow\"\n\n\tstrings:\n\t\t$ = \"Microsoft Forms 2.0 Form\"\n\t\t$ = \"Embedded Object\"\n\t\t$ = \"ShellV\"\n\t\t$ = \"ActiveWindow\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Macro_Forms_B64\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0 and what appears to be a long base64 embed with macro code\"\n\n\tstrings:\n\t\t//0000e20: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n\t\t//0000e30: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n\t\t//0000e40: 6564 6465 6420 4f62 6a65 6374 000d 0000  edded Object....\n\t\t//0000e50: 0046 6f72 6d73 2e46 6f72 6d2e 3100 f439  .Forms.Form.1..9\n\n\t\t$f1 = \"Microsoft Forms 2.0 Form\"\n\t\t$f2 = \"Embedded Object\"\n\n\t\t//Base64 fixation on \\x2b\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2f]{1,256}\\x2b\\x2b?){8}/\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($f*)\n\t\tand $b64\n\t\tand any of ($vb*)\n}\n\nrule PE_MZ_MF_ButtXorcising_00aa800 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-07\"\n                description     = \"PE/MZ with 0x00 to xor eax,dh at 0x00aa800\"\n                sample          = \"119272817301ed65056fce0a988ca4e2\"\n                reference       = \"/wiki/emotet\"\n\n        condition:\n\t\t//000AA7FC  0000              add [eax],al\n\t\t//000AA7FE  0000              add [eax],al\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3030              xor [eax],dh\n\t\t//000AA804  0000              add [eax],al\n\t\t//000AA806  0000              add [eax],al\n\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3000              xor [eax],al\n\n\t\t//Hold my beer!\n\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d\n\t\tand uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint16(0x00aa800) == 0x3030\n\t\tand (\n\t\t\t   uint16(0x00aa800+2) == 0x0030\n\t\t\tor uint16(0x00aa800+2) == 0x3030\n\t\t\tor uint16(0x00aa800+2) == 0x3000\n\t\t\tor uint16(0x00aa800+2) == 0x0000\n\t\t)\n\t\tand uint32(0x00aa800-4) == 0x00000000\n\t\tand uint32(filesize-4) == 0x00000000\n}\n\nrule PE_MZ_MF_nop_cli_aaa {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with a potential nop loop and plenty of cli to aaa\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference\t= \"/wiki/formbook\"\n\n        strings:\n\t\t//000960C4  00DA              add dl,bl\n\t\t//000960C6  90                nop\n\t\t//000960C7  E200              loop 0x960c9\n\t\t//000960C9  A5                movsd\n\n\t\t$s1 = { 90?? ??a5 }\n\n\t\t//0009691D  FA                cli\n\t\t//0009691E  37                aaa\n\n\t\t$s2 = { fa37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #s2 > 32\n}\n\nrule PE_MZ_MF_aaa_xor {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with aaa to xor likely at fixed byte spaces repeatedly\"\n                sample          = \"2a59b2da2f755298511fb02d0c562d09, ade3222c8a1116639e08ecc6a945f16a\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//0003700B  37                aaa\n\t\t//0003700C  3233              xor dh,[bp+di]\n\t\t//0003700E  363039            xor [ss:bx+di],bh\n\t\t//00037011  363338            xor di,[ss:bx+si]\n\t\t//00037014  3431              xor al,0x31\n\t\t//00037016  37                aaa\n\t\t//00037017  3232              xor dh,[bp+si]\n\t\t//00037019  3034              xor [si],dh\n\t\t//0003701B  3235              xor dh,[di]\n\t\t//0003701D  3131              xor [bx+di],si\n\t\t//0003701F  3838              cmp [bx+si],bh\n\t\t//00037021  37                aaa\n\t\t//00037022  3339              xor di,[bx+di]\n\t\t//00037024  3338              xor di,[bx+si]\n\t\t//00037026  3039              xor [bx+di],bh\n\t\t//00037028  3237              xor dh,[bx]\n\t\t//0003702A  353035            xor ax,0x3530\n\t\t//0003702D  37                aaa\n\n\t\t$s1 = { 37 [8-12] 37 [8-12] 37 [8-12] 37 }\n\n\t\t//00037044  37                aaa\n\t\t//00037045  3137              xor [bx],si\n\t\t//00037047  37                aaa\n\n\t\t$s2 = { 37 [2] 37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $s1 in (filesize-128..filesize)\n\t\tand $s2 in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_xor_add {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with xor edi, and an odd add of null bytes via add eax+eax+0x0\"\n                sample          = \"c65c495d5b6c6141f9075f333376577a\"\n                reference\t= \"/wiki/troldesh\"\n\n        strings:\n\t\t//000F8770  0E                push cs\n\t\t//000F8771  6C                insb\n\t\t//000F8772  33FF              xor edi,edi\n\t\t//000F8774  003A              add [edx],bh\n\t\t//000F8776  00740000          add [eax+eax+0x0],dh\n\n\t\t$ = { 33ff 003a 0074 0000 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MF_ButtXorcising {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a significant amount of cmp and xor at EOF likely\"\n                sample          = \"b89aa47071ff9e25758503b9ebf830e1\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//00045203  3031              xor [ecx],dh\n\t\t//00045205  3534 3438 30        xor eax,0x30383434\n\t\t//0004520A  3335 3931 3736      xor esi,[dword 0x36373139]\n\t\t//00045210  3135 3538 3636      xor [dword 0x36363835],esi\n\t\t//00045216  3536 3936 30        xor eax,0x30363936\n\t\t//0004521B  3238              xor bh,[eax]\n\t\t//0004521D  3239              xor bh,[ecx]\n\t\t//0004521F  3031              xor [ecx],dh\n\t\t//00045221  3335 3333 3733      xor esi,[dword 0x33373333]\n\t\t//00045227  3931              cmp [ecx],esi\n\t\t//00045229  333535373834      xor esi,[dword 0x34383735]\n\t\t//0004522F  3036              xor [esi],dh\n\t\t//00045231  363332            xor esi,[ss:edx]\n\t\t//00045234  3539343034        xor eax,0x34303439\n\t\t//00045239  383533383830      cmp [dword 0x30383833],dh\n\t\t//0004523F  3031              xor [ecx],dh\n\t\t//00045241  3534343830        xor eax,0x30383434\n\t\t//00045246  333539313736      xor esi,[dword 0x36373139]\n\t\t//0004524C  313535383636      xor [dword 0x36363835],esi\n\n\t\t$butt = { 3031 [16-48] 3031 [16-48] 3031 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #butt >= 8\n\t\tand $butt in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_MoveNJump {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a very tight sequence of mov eax,eax with jump dword to similar bytes\"\n                sample          = \"b13338b707a3f01899b967e510470d57\"\n                reference\t= \"/wiki/imminentrat\"\n\n        strings:\n                //0000400  FF252C514100      jmp dword [dword 0x41512c]\n                //00000406  8BC0              mov eax,eax\n                //00000408  FF2528514100      jmp dword [dword 0x415128]\n                //0000040E  8BC0              mov eax,eax\n                //00000410  FF2524514100      jmp dword [dword 0x415124]\n                //00000416  8BC0              mov eax,eax\n                //00000418  FF2520514100      jmp dword [dword 0x415120]\n                //0000041E  8BC0              mov eax,eax\n                //00000420  FF251C514100      jmp dword [dword 0x41511c]\n                //00000426  8BC0              mov eax,eax\n                //00000428  FF2518514100      jmp dword [dword 0x415118]\n                //0000042E  8BC0              mov eax,eax\n                //00000430  FF2538514100      jmp dword [dword 0x415138]\n                //00000436  8BC0              mov eax,eax\n                //00000438  FF2514514100      jmp dword [dword 0x415114]\n                //0000043E  8BC0              mov eax,eax\n                //00000440  FF2510514100      jmp dword [dword 0x415110]\n                //00000446  8BC0              mov eax,eax\n                //00000448  FF250C514100      jmp dword [dword 0x41510c]\n                //0000044E  8BC0              mov eax,eax\n                //00000450  FF2508514100      jmp dword [dword 0x415108]\n                //00000456  8BC0              mov eax,eax\n                //00000458  FF2504514100      jmp dword [dword 0x415104]\n                //0000045E  8BC0              mov eax,eax\n                //00000460  FF2548514100      jmp dword [dword 0x415148]\n                //00000466  8BC0              mov eax,eax\n                //00000468  FF2544514100      jmp dword [dword 0x415144]\n                //0000046E  8BC0              mov eax,eax\n                //00000470  FF2540514100      jmp dword [dword 0x415140]\n                //00000476  8BC0              mov eax,eax\n                //00000478  FF2554514100      jmp dword [dword 0x415154]\n                //0000047E  8BC0              mov eax,eax\n                //00000480  FF2550514100      jmp dword [dword 0x415150]\n                //00000486  8BC0              mov eax,eax\n                //00000488  FF2500514100      jmp dword [dword 0x415100]\n                //0000048E  8BC0              mov eax,eax\n                //00000490  FF25FC504100      jmp dword [dword 0x4150fc]\n\n                $ = {\n                     \tff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n        }\n\n\tcondition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_MF_push_inc_dec_pop_xor {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and xor\"\n\t\tsample\t\t= \"682226ea12f4323a3cbba4f6d05cc731\"\n\t\treference\t= \"/wiki/trickbot\"\n\n        strings:\n                //000C01D4  50                push eax\n                //000C01D5  41                inc ecx\n                //000C01D6  44                inc esp\n                //000C01D7  44                inc esp\n                //000C01D8  49                dec ecx\n                //000C01D9  4E                dec esi\n                //000C01DA  47                inc edi\n                //000C01DB  58                pop eax\n                //000C01DC  58                pop eax\n                //\n                //000C01DD  50                push eax\n                //000C01DE  41                inc ecx\n                //000C01DF  44                inc esp\n                //000C01E0  44                inc esp\n                //000C01E1  49                dec ecx\n                //000C01E2  4E                dec esi\n                //000C01E3  47                inc edi\n\n                $wtf1 = {\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                }\n\n\t\t//0009C001  42                inc edx\n\t\t//0009C002  3130              xor [eax],esi\n\t\t//0009C004  0000              add [eax],al\n\t\t//0009C006  0000              add [eax],al\n\n\t\t$wtf2 = { 42 3130 0000 0000 }\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_MF_push_inc_dec_pop {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and shl dword\"\n\n        strings:\n\t\t//000C01D4  50                push eax\n\t\t//000C01D5  41                inc ecx\n\t\t//000C01D6  44                inc esp\n\t\t//000C01D7  44                inc esp\n\t\t//000C01D8  49                dec ecx\n\t\t//000C01D9  4E                dec esi\n\t\t//000C01DA  47                inc edi\n\t\t//000C01DB  58                pop eax\n\t\t//000C01DC  58                pop eax\n\t\t//\n\t\t//000C01DD  50                push eax\n\t\t//000C01DE  41                inc ecx\n\t\t//000C01DF  44                inc esp\n\t\t//000C01E0  44                inc esp\n\t\t//000C01E1  49                dec ecx\n\t\t//000C01E2  4E                dec esi\n\t\t//000C01E3  47                inc edi\n\n                $wtf1 = {\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t}\n\n\t\t//0003AEE7  C12020            shl dword [eax],byte 0x20\n\t\t$wtf2 = { C12020 }\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_ADD_EAX_4 {\n\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-11-01\"\n\t\tdescription\t= \"PE/MZ with an abnormal amount of 'add eax,4' possitionally concatenated together\"\n\t\tthanks\t\t= \"Rob Simmons, master of math feelz\"\n\n\tstrings:\n\t\t$wtf = { 83c004 [24-29] 83c004 [24-29] 83c004 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #wtf >= 8\n}\n\nrule DirectVBE7DLL_URL\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE7.DLL, password protection, and URLs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-11-01\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$auto1 = \"Workbook_Open\"\n\t\t$auto2 = \"Document_Open\"\n\t\t$auto3 = \"Workbook_Close\"\n\t\t$auto4 = \"Document_Close\"\n\n\t\t$url1 = \":/\"\n\t\t$url2 = \"/:\"\n\n\t\t$pass1 = \"Password\" nocase\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n\t\tuint16(0) == 0xcfd0 and $office1 at 0\n                and all of ($dll*) and any of ($vb*) and any of ($auto*) and any of ($url*) and all of ($pass*)\n\t\tand not any of ($exclude*)\n}\n\n\nrule PE_MZ_NET_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 0x0b repeatedly\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-22\"\n                samples = \"fb4116fc8cb498fd4bd521e0d46a4526\"\n                reference = \"/wiki/agenttesla\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n                $ = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_NET_64x3x3_ABC\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 64 bytes of 3 byte lowercase a-z nonsense null separated\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-16\"\n\t\tsamples = \"0af7e3fe796cd3f1420ae9132ec59078\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$choochoo_it_is_the_idiot_train = /(\\x00[a-z]{3}){64}/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #choochoo_it_is_the_idiot_train > 16\n\n}\n\nrule PE_MZ_DOUBLESTUFFED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed, with an embedded PE/MZ\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"Ronnie T\"\n        risk        = \"high\"\n        date        = \"2019-10-15\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"208f55b5aec627fc100cad0703caf78b,35961988631d38424f0d43acdc3d6040,71ea6fe86188e0b487efbc30678115d0,840072e60195f3f593768b3df42cf99d,8d536592acc6050087ee8b70f7e79c64,8eda0309ee2d27408adf1bc4eba14b82,fa94e348babc6c9d0feaf30f6808fa62\"\n\n    strings:\n        //This program ... be run\n        $p1 = { 2154 6869 7320 7072 6f67 7261 6d20 [4-6] 2062 6520 7275 6e20 }\n\n    condition:\n\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and #p1 >= 2\n}\n\nrule PE_MZ_SHA1_WIDE_VSI_PACKED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed,  with a wide SHA1 hash null separated after VS_VERSION_INFO\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n\t$vsi = \"VS_VERSION_INFO\"\t\t\twide\n\t$sha = /\\x00\\x00([a-fA-F0-9]\\x00){40}\\x00/\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(0x80) != uint32(0x85)\n\tand uint32(0x86) != uint32(0x91)\n\tand uint32(0x92) != uint32(0x95)\n\tand all of them\n\tand @sha > @vsi\n}\n\nrule PE_MZ_NET_Portable_Pads\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable with PADPAD and super-duper portable.\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"    ascii\n\t$ = \"PADPAD\"\n\n\t//Portable + portable\n\t$ = { 7000 6f00 7200 7400 6100 6200 6c00 65 }\n\t$ = { 5000 6f00 7200 7400 6100 6200 6c00 65 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule vbs_sins_many_small_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using thousands of small arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-10-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"637b148a482a96cad07aafec5c9726cf, bc24d1771a323d2ef64aa13ba0c1f29c, 26446c8003ec839ddb9e35bf4a51b154\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /=array\\(([a-z0-9]{2,12},){25}/ nocase\n  condition:\n    filesize > 100KB and filesize < 10000KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 500\n}\n\nrule PE_MZ_NET_Confuser\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable using ConfuserEx\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/quasar\"\n        sample      = \"75602c2990a65a38484bfa45c622edf5\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\tascii\n\t$ = \"ConfuserEx v\"\t\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_2Spooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is making ghost noises\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        $ = {\n            4545 45?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4545 45\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_SoSpooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is probably making ghost noises between a 41 byte separation of 0x03 EOT\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        //Short circuit to avoid long atoms?\n        $johnny5 = { 0303 03[41] 0303 03 }\n\n        //PCRE time\n        $pcre_anchor = /\\x03{3}[^\\x03]{41}\\x03{3}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $johnny5\n        and $pcre_anchor\n}\n\nrule doc_is_an_msi : maldoc {\n  meta:\n    description = \"Finds documents that are actually exes that are actually msis using exe-to-msi converter.\"\n    date = \"2019-10-02\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"12e9bf78f8fcf9bb363031b8095a02ad\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler, Oracle of Delphi Compilers\"\n  strings:\n    // www.exetomsi.com\n    $s1 = { 77 77 77 2e 65 78 65 74 6f 6d 73 69 2e 63 6f 6d }\n    // Exe to msi converter\n    $s2 = { 45 78 65 20 74 6f 20 6d 73 69 20 63 6f 6e 76 65 72 74 65 72 }\n    // This program cannot be run in DOS mode\n    $t1 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f 74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20 6d 6f 64 65 }\n    // This program must be run under Win32\n    $t2 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 6d 75 73 74 20 62 65 20 72 75 6e 20 75 6e 64 65 72 20 57 69 6e 33 32 }\n  condition:\n    uint16(0) == 0xcfd0 and\n    all of ($s*) and ($t1 or $t2)\n}\n\nrule ta505_dll_packer_science_not_feelz\n:malexe\n{\n\tmeta:\n\t\tauthor = \"sysopfb\"\n\t\tadjustments = \"Nathan Fowler\"\n\t\tdate = \"2019-10-01\"\n\t\treference = \"/wiki/ta505\"\n\t\tsample = \"60d670ba325ab1ff6f64b810681a780c\"\n\n\tstrings:\n\t\t$ = { c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 c1 45 08 04 8b 4d 08 81 c1 78 77 77 77 }\n\n\tcondition:\n                (uint16(0) == 0xcfd0 or (uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550))\n\t\tand all of them\n}\n\nrule PE_MZ_HineyButt_PDB\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a PDB in the last 8 bytes of a file\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n        $dll = \".DLL\"       nocase ascii\n\t$pdb = \".pdb\"       nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand $dll in (512..768)\n        and $pdb in (filesize-8..filesize)\n}\n\nrule PE_MZ_Many_kernel32DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 'kernel32.DLL' instanced twice, once at the beginning of the file after the PE header\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$kern = \"kernel32.DLL\"\tnocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $kern in (512..768)\n\tand #kern >= 2\n}\n\nrule PE_MZ_PaddingUpFront_DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with DLL instanced in the beginning of the file and XXPADDING present\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$dll = \".DLL\"\t\tnocase ascii\n\t$pad = \"XXPADDING\"\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $dll in (512..768)\n\tand $pad\n}\n\nrule vbs_sins_yuge_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using yuge arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-09-25\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    greetz = \"Jose Tejada, Miscreant Hunter\"\n    samples = \"ab606edac9743bd38329630496e13bcc, 048a451e99556b0f90576c2a976073d7\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /\\)\\x0a[a-z]{1,15}=array\\(([a-z0-9]{1,2},){500}/ nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 25\n}\n\nrule vbs_sins_funky_const {\n  meta:\n    description = \"Isolates 'interesting'  vbs files that obfuscate using const. As seen in Qakbot\"\n    date = \"2019-09-23\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"fa72ac316f5d4fe20f4b4fcca16033da, c9a59a536d6ee03780c60638a427dbe9\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"creATeOBjEct(\\\"Scripting.FileSystemObject\\\")\" ascii nocase\n    $s2 = \"GetOsVersion\" ascii nocase\n    $s3 = \":const\" ascii nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    all of ($s*) and #s3 > 50\n}\n\n\nrule OLE_Execution_2016\n{\n        meta:\n                description = \"Office document containing shell execution functions and OLE\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-09-24\"\n        strings:\n                $ole1 = \"OLE\"\n\n                //$http1 = \"http://\" nocase\n                //$http2 = \"https://\" nocase\n\t\t$http3 = \"XMLHTTP\"\n\t\t$http4 = \"ResponseBody\" nocase\n\n                $script1 = \"vbscript\" nocase\n                $script2 = \"wscript\" nocase\n                $script3 = \"Scripting.\"\n                $script5 = \"CreatObject\"\n\n                $exe1 = \".exe\" nocase\n                $exe2 = \"Env\"\n                $exe3 = \".Shell\" nocase\n                $exe4 = \".Run \" nocase\n\n        condition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0)\n                and any of ($ole*) and any of ($http*) and any of ($script*) and any of ($exe*)\n}\n\nrule PE_MZ_B_Emotet_IP\n:malexe\n{\n    meta:\n        description = \"PE/MZ with fixed byte offset values\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\tanalyst_notes = \"These byte offset matches appear to be related to a heavily packed PE/MZ with explicit byte offsets used for unpacking.\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint16(0x0003772C) == uint16(0x00000088)\n\tand uint16(0x0003785C) == uint16(0x00000088)\n}\n\nrule PE_MZ_ABC\n:malexe\n{\n    meta:\n        description = \"PE/MZ with some ABC fluff\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\n    strings:\n\t$ = { \t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t}\n\n\t$ = {\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t}\n\n\t$ = { \t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t}\n\n\t$ = {\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t}\n\n\t$ = {\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t}\n\n\t$ = {\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t}\n\n    condition:\n\tfilesize < 768KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_Kernel_No_Kernel\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a Lev Distance transformation of kernel32 of one.\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-12\"\n        tlp         = \"AMBER\"\n\n    strings:\n        //Lev Distance 1 transformations of Kernel32 ASCII non-wide\n        $ = /[^k]ernel32/    nocase ascii\n        $ = /k[^e]rnel32/    nocase ascii\n        $ = /ke[^r]nel32/    nocase ascii\n        $ = /ker[^n]el32/    nocase ascii\n        $ = /kern[^e]l32/    nocase ascii\n        $ = /kerne[^l]32/    nocase ascii\n        $ = /kernel[^3]2/    nocase ascii\n        $ = /kernel3[^2]/    nocase ascii\n\n        //Lev Distance 1 transformations of Kernel32 ASCII wide\n        $ = /[^k]\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00[^e]\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00[^r]\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00[^n]\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00[^e]\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00[^l]\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x00[^3]\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x00[^2]/    nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_NET_SquidFsckers\n:malexe\n{\n        meta:\n\t\tdescription = \"PE/MZ .NET executable with an excessive amount of character-curlybrace embraces and ASCII immediately after assembly\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2019-09-12\"\n                tlp         = \"AMBER\"\n                sample      = \"84c7b34d6f53d8223ac2c2a40b38f831\"\n                reference   = \"/wiki/hawkeye\"\n\n        strings:\n                $net = \"WrapNonExceptionThrows\"\n                $squid1 = /[a-zA-Z][\\x7b\\x7d]/\n                $squid2 = /[\\x7d\\x7d][a-zA-Z]/\n                $ass = /<\\/assembly>[A-Za-z]/\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $net\n                and $ass\n                and (#squid1 + #squid2) > 1024\n}\n\nrule PE_MZ_AspireCrypt\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-06\"\n                description = \"PE MZ packed/encrypted with AspireCrypt\"\n                samples = \"a55b7e19b8990ec82acef9e0248be445\"\n\n        strings:\n\t\t//*protected by AspireCrypt - aspirecrypt.net\n\t\t$ = \"aspirecrypt\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule base64_string_theory {\n  meta:\n    description = \"Identifies hostile .ps1 files that use other files to write/read base64 to exes.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-20\"\n    samples = \"187d6fac509379430c969459e53851a5, 85ac7cda6c50b42ce8be5fb32944f9ae, fd2c513cfb6943b5de95b18acfb25b57\"\n    family = \"remcos\"\n    greetz = \"Nathan Fowler of Clan Feelz, Peter Misurek of Clan Feelz, Reversing Labs and the A1000 Wonder machine\"\n    feelz = \"https://www.youtube.com/watch?v=5FELdBsixGg\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"WriteAllBytes(\" ascii nocase\n    $s2 = \"FromBase64String(\" ascii nocase\n    // .exe encoded as argument\n    $s3 = \"LmV4ZQ==\"\n    // execute the thing\n    //$s4 = \"Start-Process\"\n  condition:\n    filesize < 1MB and\n    for any i in (1..16): ( i == 0x0a ) and\n    all of them\n}\n\nrule base64_wide_theory {\n  meta:\n    description = \"Finds incredibly long wide base64 sections within .net v2 executables, observed in Raccoon for string->executable crafting\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-09-06\"\n    samples = \"2abdc20b86f1be28e8b7fee52cd4f5f0\"\n    reference = \"/wiki/raccoon\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler - Human-Based Machine Learner, Rob Pantz - Base64 Decoder\"\n    tlp = \"green\"\n  strings:\n    //CorExeMain|00|mscoree.dll\n    $s1 = { 43 6f 72 45 78 65 4d 61 69 6e 00 6d 73 63 6f 72 65 65 2e 64 6c 6c }\n    // base64 wide area, fronted by \\x01 (start of heading?)\n    $s2 = { 22 e0 01 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    $s1 and $s2\n}\n\nrule PE_MZ_NET_Cntrline_0xff_Cont\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-05\"\n                reference = \"/wiki/azorult\"\n                description = \"PE MZ with an excessive amount of center-line 4 byte 0xff\"\n                samples = \"2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n\t\tgreetz = \"Ryan Moon\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /([^\\xff]{6}\\xff\\xff\\xff\\xff[^\\xff]{6}){8}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule too_many_high_ascii_ffff : malexe {\n  meta:\n    description = \"Finds out when there are just too many 0xFFFF, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"4716659cf8e22c72fa517ea649009c17, fe6c366a9197d1a9e924fa2a3338e1eb, 2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n    greetz = \"Nathan Fowler, CyberSwordsmith, Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n    prod = \"true\"\n  strings:\n    $xff = { ff ff [14] ff ff }\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    #xff > 100\n}\n\nrule Susp_MS_Lnk_CMD\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File spawning cmd /C\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-09\"\n        sample          = \"b61d0630c4efd55397eedd9e7ab323ae\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n\n       $cmd             = \"cmd.exe\"   ascii nocase\n       $arg             = \"/c\"        wide ascii nocase\n       $set             = \"set\"       wide ascii nocase\n\n    condition:\n        uint16(0) == 0x4c\n        and uint16(0x3c) == 0x7         // start minimized\n        and filesize < 20KB\n        and $bytes at 0x50\n        and @arg[1] - @cmd[#cmd] < 300\n        and @set[1] - @arg[#arg] < 10\n}\n\nrule Susp_MS_Lnk_Embedded_Payload\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File with embedded payload in machine name field\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-12\"\n        sample          = \"\"\n        sample          = \"\"\n        sample          = \"\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes1         = { 00 60 00 00 00 03 00 00\n                            a0 58 00 00 00 00 00 00 }\n        $bytes2         = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n    condition:\n        uint16(0) == 0x004c\n        and uint16(0x3c) == 0x0007       // start minimized\n        and $bytes2 at 0x50\n        and (filesize - @bytes1 > 500)\n}\n\nrule Office_WinHTTP_DirectDLL\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"WinHTTP function call with direct instancing of the WinHTTP DLL\"\n\t\tanalyst_notes = \"This maldoc contains Internet payload/functionality interaction\"\n\n\tstrings:\n\n\t\t//Lowercase wide and non-wide DLL direct instancing coupled with correct 'WinHttp' non-wide\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" ascii\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" wide\n\t\t$ = { 00 5769 6e48 7474 }\n\n\tcondition:\n\t\t//d0cf 11e0 a1b1 1ae1\n\t\tuint32(0) == 0xe011cfd0\n\t\tand all of them\n}\n\nrule PE_MZ_CleanButt_262140_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-04\"\n                reference = \"/wiki/loki\"\n                description = \"PE MZ with no human readable words in the last 262140 bytes to EOF\"\n\t\tanalyst_notes = \"It is very abnormal to have a PE/MZ that contains no human readable words, either in wide or non-wide format, in the last 262140 bytes to EOF.\"\n                samples = \"0ba008a118dc5b6d8d6143c4f9e0c66c\"\n\n        strings:\n\t\t$ascii_word1 = /\\x00[A-Za-z][a-z]{3,32}\\x00/\n\t\t$ascii_word2 = /\\x00[A-Za-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00/\n\n        condition:\n                filesize <= 4096KB\n\t\tand filesize > 262140\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not $ascii_word1 in (filesize-262140..filesize)\n                and not $ascii_word2 in (filesize-262140..filesize)\n}\n\nrule PE_Generic_Stealer\n:malexe\n{\n    meta:\n        description = \"\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-08-08\"\n\tmodified    = \"2019-09-04\"\n        source      = \"https://pastebin.com/raw/Yxsy9t6C\"\n        sample      = \"9982685953def8f730e37c9fab083076\"\n        sample      = \"c71459c3dabf8529ccb6dcade5e10432\"\n        tlp         = \"AMBER\"\n\n    strings:\n        // SELECT .. FROM moz_logins : camel-case\n        $stealer    = { (53|73) 00 (45|65) 00 (4c|6c) 00 (45|65) 00 (43|63)\n                        00 (54|74) 00 20 00 [0-40] 20 00 (46|66) 00 (52|72)\n                        00 (4f|6f) 00 (4d|6d) 00 20 00 6d 00 6f 00 7a 00 5f\n                        00 6c 00 6f 00 67 00 69 00 6e 00 73 00 }\n\n        $stealer2    = { (53|73) (45|65) (4c|6c) (45|65) (43|63)\n                         (54|74) 20 [0-40] 20 (46|66) (52|72)\n                         (4f|6f) (4d|6d) 20 6d 6f 7a 5f\n                         6c 6f 67 69 6e 73 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and 1 of ($stealer*)\n}\n\nrule PE_MZ_416_PipeHead_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ian Slacke\"\n                date = \"2019-09-03\"\n                reference = \"/wiki/raccoon\"\n                description = \"Multiple terse 4-16 byte pipe separated ascii printable values and instanced APIs\"\n                samples = \"239d209251de435fe56ff3cbebd23e2e\"\n\n        strings:\n\t\t$pipes = /\\x7c[\\x20-\\x7b\\x7d-\\x7e]{4,16}\\x7c/\n\n\t\t$api1 = \"WINHTTP.dll\"\tnocase wide ascii\t//Winnernets!\n\t\t$api2 = \"CRYPT32.dll\"\tnocase wide ascii\t//Crytpo API\n\t\t$api3 = \"SHLWAPI.dll\"\tnocase wide ascii\t//Shell API\n\t\t$api4 = \"KTMW32.dll\"\tnocase wide ascii\t//Kernel transaction manager\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #pipes >= 6\n\t\tand any of ($api*)\n}\n\nrule powerdrinkers_and_powerisos {\n  meta:\n    description = \"Identifies PowerISO and MagicISO files containing one exe used as the setup indicator. Observed in Remcos RAT.\"\n    date = \"2019-08-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"9eb841fc96f9f3f810a380bce4f0b459, b93836ecd4bb77e2afc669c1ac728d97, ba3fd5a3054cfe717aa9f1e39ac75cb9\"\n    thanks = \"Peter Misurek for big null rule and the maths, Trevor Jones, Hunter of Threat$, Nathan Fowler, Purveyor of Fine Feelz\"\n    tlp = \"green\"\n    reference = \"/wiki/remcos\"\n    prod = \"true\"\n  strings:\n    // start of iso archive is nulllllllllllllllllls (for like 30k), so pointer at 0 is 0000\n    // iso dvd tags\n    // CD001 type with version 01\n    $cd001 = { 02 43 44 30 30 31 01 }\n    // bea01 type instead, same version 01\n    $bea01 = { 42 45 41 30 31 01 }\n    // autorun this exe on open instruction\n    $run_exe = { 53 65 74 75 70 3d [1-128] 2e }\n    // normally files have names in iso, this exe does not\n    $no_leader_exe = { 00 00 00 00 00 00 00 00 00 00 00 00 00 4d 5a }\n  condition:\n    uint16(0) == 0x0000\n    and filesize > 100KB\n    and ($cd001 or $bea01)\n    and math.entropy(0,4096) == 0\n    and ($run_exe or $no_leader_exe)\n}\n\n\nrule PE_MZ_Mega_Flowbissa\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n\t\tmodified = \"2019-08-28\"\n                reference = \"/wiki/dridex, /wiki/avemaria\"\n                description = \"This very well could be Dridex or another abnormal packer.\"\n                analyst_notes = \"No idea why this actually works.\"\n                samples = \"c69585d584497dbcec267b6a0444a160, 30a6db8fb2b1a148220d9b93d5394380, fc81d570e1985dd47a5cd7bf55a993b9\"\n                feelz = \"https://youtu.be/R4Yu5TIgnTI?t=305\"\n\n        strings:\n                $flowbissa1 = \"^_[]\"\n                $flowbissa2 = \"_^[]\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n\t\t\t   #flowbissa1 > 5\n                \tor #flowbissa2 > 5\n\t\t)\n}\n\nrule PE_1010_2020_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-30\"\n                modified = \"2019-08-28\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and this weird counting stuffs\"\n                analyst_notes = \"This is a strange malware packer usualy with API calls used for VM detection/debugger detection and the 0x10->0x20 byte code is unusual.  The file may also use Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017, eb419cd10c94221e5223deb0e2857c97, 40b5945111a4e5175e731f67671eccb3, e492a6f1791974182879e2f17109d08a\"\n                thanks = \"Ryan Moon\"\n\n        strings:\n                //VM Check\n                $a1 = \"IsProcessorFeaturePresent\"\n                $a2 = \"IsDebuggerPresent\"\n\n                //1010->2020 usually null separated\n                $a3 = {    1010 1010 1010 1010 1010 1010 1010 1010    [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n                //0001f730: 5769 6465 4368 6172 546f 4d75 6c74 6942  WideCharToMultiB\n                //0001f740: 7974 6500 4b45 524e 454c 3332 2e64 6c6c  yte.KERNEL32.dll\n                $c1 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000a940: d600 4465 6c65 7465 4669 6c65 5700 4b45  ..DeleteFileW.KE\n                //000a950: 524e 454c 3332 2e64 6c6c 0000 ed01 4c6f  RNEL32.dll....Lo\n                $c2 = { 4465 6c65 7465 4669 6c65 5700 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000207c0: 0000 d103 4d75 6c74 6942 7974 6554 6f57  ....MultiByteToW\n                //000207d0: 6964 6543 6861 7200 4b45 524e 454c 3332  ideChar.KERNEL32\n                $c3 = { 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 7200 4b45 524e 454c 3332 }\n\n\t\t//00036a70: 616d 6500 0e01 456e 756d 5379 7374 656d  ame...EnumSystem\n\t\t//00036a80: 4c6f 6361 6c65 7345 7800 4b45 524e 454c  LocalesEx.KERNEL\n\t\t//00036a90: 3332 2e64 6c6c 0000 7702 5365 6e64 4d65  32.dll..w.SendMe\n\t\t$c4 = { 456e 756d 5379 7374 656d  4c6f 6361 6c65 7345 7800 4b45 524e 454c }\n\n\t\t//002e480: 6549 6e70 7574 4100 5200 436c 6f73 6548  eInputA.R.CloseH\n\t\t//002e490: 616e 646c 6500 4b45 524e 454c 3332 2e64  andle.KERNEL32.d\n\t\t//002e4a0: 6c6c 0000 6b01 4765 7450 726f 7057 0000  ll..k.GetPropW..\n\t\t$c5 = { 436c 6f73 6548 616e 646c 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n\t\t//0073000: e700 4372 6561 7465 5265 6d6f 7465 5468  ..CreateRemoteTh\n\t\t//0073010: 7265 6164 0000 4b45 524e 454c 3332 2e64  read..KERNEL32.d\n\t\t$c6 = { 4372 6561 7465 5265 6d6f 7465 5468 7265 6164 0000 4b45 524e 454c 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of ($a*)\n                and all of ($b*)\n                and any of ($c*)\n}\n\nrule gzip_contains_fake_exe : malexe {\n  meta:\n    description = \"Finds gzips with fake exe inside it that purports to be something else.\"\n    example = \"gzip containing jello.XLSX.exe in manifest\"\n    date = \"2019-08-28\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"e9b38ecad7856aead9c9a0b7be9a6f81\"\n    tlp = \"green\"\n    reference = \"/wiki/lokibot\"\n    prod = \"true\"\n  strings:\n    $fake_xls = /xlsx?\\.exe/ nocase\n    $fake_pdf = /pdf\\.exe/ nocase\n    $fake_doc = /docx?\\.exe/ nocase\n  condition:\n    uint16(0) == 0x8b1f\n    and any of them\n}\n\n\nrule PE_Big_Null\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-08-02\"\n        description   = \"\"\n        analyst_notes = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 40 i in(0..filesize):\n            (math.entropy(i*4096,4096) == 0)\n}\n\nrule PE_MZ_NET_PoundEquals\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"/wiki/nanocore\"\n                description = \"WrapNonExceptionThrows and 128 or more #=\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR.  This is likely an unpacked .NET executable\"\n                samples = \"8cdbf3c971c5617ae84f4c54ad16f87f\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$pe = \"#=\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #pe >= 128\n}\n\nrule PE_MZ_NET_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"\"\n                description = \"WrapNonExceptionThrows and 64 or more 8 byte fefe's.\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR\"\n                samples = \"6830373dc023bed9653a5e8c45782cd5\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fefe = /[fFeE]{8}/\n\t\t$ = \"VS_VERSION_INFO\"\twide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fefe >= 64\n}\n\nrule dine_and_dash_encoding : vbs {\n  meta:\n    description = \"Finds vbs files that have strange dashes + replace desires as probable field separators.\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"a5674232717a96084184e4b1ee3bd033\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227297/\"\n    tlp = \"green\"\n    notes = \"This is low response (~40 samples ever), but no falses.\"\n  strings:\n    $execute = \"execute(eval\" nocase\n    $replace = \"replace(\" nocase\n    $dine_and_dash = /-([A-Za-z0-9]{1,9}-){30}/\n  condition:\n    filesize < 100KB and\n    $execute and $replace and $dine_and_dash\n}\n\n\nrule Pepe_returns : malexe {\n  meta:\n    description = \"Potential dropper/stealer - PE + NulSoft installer + PEPEs\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"9f4d8bd1cba2681f3bcf642f56342ac7\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227296\"\n    tlp = \"green\"\n    greetz = \"Nathan Fowler, Crypto-PEPE-ologist\"\n  strings:\n    // nsoft installer - \"|c0|.ndata\"\n    $ndata = { 2e 6e 64 61 74 61 }\n    // KERNEL32 no dll, nulls\n    $kernel32 = { 00 4b 45 52 4e 45 4c 33 32 00}\n    // PEPE spice returns\n    $pepe_returns = { 45 ?? 50 8d 45 ?? 50 }\n  condition:\n    filesize > 400KB and filesize < 50MB\n    and uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and $ndata and $kernel32\n    and #pepe_returns > 5\n}\n\n\nrule PE_MZ_NET_MODULE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Peter Misurek\"\n                date = \"2019-08-27\"\n                reference = \"\"\n                description = \".NET executable with a wide URL and a Module pointed to an executable name\"\n                analyst_notes = \"This is likely some unpacked malware that is Internet aware\"\n\t\tsamples = \"80362c16664eec2644ce303a6f022053\"\n\n        strings:\n\t\t$ = \"://\"\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /\\x3cModule\\x3e\\x00[^\\x2e]{1,32}\\.exe\\x00/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MasterP\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-27\"\n                reference = \"/wiki/nemty\"\n                description = \"Looks like an op code or something.\"\n                analyst_notes = \"No idea why this actually works but it's probably an op code\"\n                samples = \"0e0b7b238a06a2a37a4de06a5ab5e615\"\n                feelz = \"meows://youtu.be/yGnMQsG4avI?t=14\"\n\n        strings:\n                $flowbissa1 = \",$P]\"\n                $flowbissa2 = \"4$P^\"\n                $flowbissa3 = \"<$P_\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                         #flowbissa1 > 10\n                      or #flowbissa2 > 10\n                      or #flowbissa3 > 10\n                )\n}\n\nrule PE_Comments_Little_Spaces\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-02\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule PE_MZ_VB6_NULL\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"MSVBVM60.DLL to NUL instanced in first 1024 bytes of file with 0x005642352136\"\n\t\tanalyst_notes = \"This PE/MZ is not packed but appears poorly crafted and malicious in nature\"\n\t\tsamples = \"8244e16cbc0d39564614f3bc2f9be0a5\"\n\n\tstrings:\n\t\t$vbm = {\t4d53 5642 564d 3630 2e44 4c4c 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n\t\t$vb56 = \"VB5!6\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $vbm in (128..1024)\n\t\tand $vb56\n}\n\nrule PE_MZ_SluttyPutty\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"Putty ASCII URL in the PE with IsDebuggerPresent\"\n\t\tanalyst_notes = \"This PE/MZ is attempting to appear like a legitimate Putty application\"\n\t\tsamples = \"7e13b2d92d7490b8b3a1f10edfe2f410\"\n\n\tstrings:\n\t\t$ = \"https://www.chiark.greenend.org.uk/~sgtatham/putty/\"\n\t\t$ = \"IsDebuggerPresent\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_aPlib\n:malexe\n{\n\tmeta:\n\t\tauthor=\"_pusher_\"\n\t\tdate=\"2016-06\"\n\t\tmodified = \"2019-08-23\"\n\t\tmodified_author = \"Nathan Fowler\"\n\t\treference = \"meows://github.com/x64dbg/yarasigs/blob/master/packer.yara\"\n\n\tstrings:\n\t\t$a0 = { 60 8B 74 24 24 8B 7C 24 28 8B 44 24 2C FC 33 DB B2 80 39 18 74 42 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 }\n\t\t$a1 = { 60 8B 74 24 24 8B 7C 24 28 FC 33 DB 33 D2 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a3 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a4 = { 61 94 55 B6 80 A4 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 8B C5 }\n\t\t$a5 = { B2 80 A4 B6 80 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3C AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 26 AC D1 E8 74 2F 13 C9 EB 1A 91 48 C1 E0 08 AC FF 53 04 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a6 = { B2 80 31 DB A4 B3 02 E8 6D 00 00 00 73 F6 31 C9 E8 64 00 00 00 73 1C 31 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 10 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 29 D9 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 ?? 11 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a7 = { 33 C9 FF D3 73 16 33 C0 FF D3 73 23 B6 80 41 B0 10 FF D3 12 C0 73 FA 75 42 AA EB E0 E8 46 00 00 00 02 F6 83 D9 01 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 48 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a8 = { 33 C9 FF 14 24 73 18 33 C0 FF 14 24 73 21 B3 02 41 B0 10 FF 14 24 12 C0 73 F9 75 3F AA EB DC E8 43 00 00 00 2B CB 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 41 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a9 = { 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a10 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 12 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 2B CB 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 4D 13 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule PE_MZ_VP_KernelSanders\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"Terse kernel32 API invocation for VirtualProtect with three or more Kernel32 instances\"\n                analyst_notes = \"This is a strange malware packer usually with API calls used for VM detection/debugger detection may use the 0x10->0x20 byte code\"\n                samples = \"4716659cf8e22c72fa517ea649009c17\"\n                feelz = \"https://youtu.be/DD0Sr2jpgnQ?t=93\"\n\n        strings:\n                //VirtualProtect to Kernel32\n                //0023d70: 5669 7274 7561 6c50 726f 7465 6374 0000  VirtualProtect..\n                //0023d80: 6b65 726e 656c 3332 2e64 6c6c 0000 0000  kernel32.dll....\n                $ = /VirtualProtect\\x00\\x00kernel32\\.dll\\x00\\x00\\x00\\x00/    nocase ascii\n\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #kern > 2\n}\n\nrule too_many_end_of_text_filler : malexe {\n  meta:\n    description = \"Finds out when there are just too many things, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"563735efb7ebe455df3640ecbf8408f8\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n  strings:\n    // EOT ascii\n    $end_of_text = /\\x03{32}/\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    #end_of_text > 10\n}\n\nrule PE_MZ_DoubleDLL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-16\"\n        reference = \"/wiki/guildma, https://isc.sans.edu/forums/diary/Guildma+malware+is+now+accessing+Facebook+andYouTube+to+keep+uptodate/25222/\"\n        description = \"MZP Delphi Executable that is a potential stealer\"\n        sample = \"9411341b781aa43b66b8f83658d5011b\"\n\n    strings:\n\t$dll1 = \"comctl32.dll\"\tnocase ascii\n\t$dll2 = \"kernel32.dll\"\tnocase ascii\n\t$dll3 = \"vcltest3.dll\"\tnocase ascii\n\t$dll4 = \"oleaut32.dll\"\tnocase ascii\n\t$dll5 = \"ole32.dll\"\tnocase ascii\n\n    condition:\n\tuint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #dll1 >= 2\n\tand #dll2 >= 2\n\tand all of them\n}\n\nrule PE_Extra_Naked\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d\n                and pe.characteristics & pe.RELOCS_STRIPPED\n                and pe.characteristics & pe.LINE_NUMS_STRIPPED\n                and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n                and pe.characteristics & pe.DEBUG_STRIPPED\n}\n\nrule PE_MZ_NET_1020_TooManySigns\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-19\"\n        reference = \"/wiki/nanocorehawkeye\"\n        description = \".NET executable with too many signature components\"\n        sample = \"a92669ec8852230a10256ac23bbf4489\"\n\n    strings:\n\t//Assembly to null\n\t$ = { 0d0a 3c2f 6173 7365 6d62 6c79 3e0d 0a00 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t//1010->2020 compiler\n\t$ = { \t1010 1010 1010 1010 1010 1010 1010 1010\n\t     \t[1-8]\n\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t}\n\n\t$s1 = \"Microsoft Code Signing PCA\"\n\t$s2 = \"Microsoft Time-Stamp\"\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n\tand #s1 >= 5\n\tand #s2 >= 5\n}\n\nrule shelling_out_and_being_violent : malexe {\n  meta:\n    description = \"Identifies API calls to Shell32.dll handles using ComSpec instead of cmd as the command interpreter with NUL as the ShellExecA verb.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-13\"\n    samples = \"5a2ad7e2c91b21c03aaf17915595306f\"\n    greetz = \"Brad Duncan, URLHaus, JB and Greg for Phoenix\"\n  strings:\n    $shell_dll = { 53 68 65 6c 6c 33 32 2e 64 6c 6c }\n    $shell_exec = { 53 68 65 6c 6c 45 78 65 63 75 74 65 41 }\n    $shell_default_null_verb = { 4e 55 4c }\n    $shell_comspec_call = { 43 6f 6d 53 70 65 63 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and all of them\n}\n\nrule PE_MZ_WallOfNull_EOF\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an insane amount of explicit NUL to EOF\"\n                author = \"Nathan Fowler\"\n                sample = \"59e255e597dc584a20009385367cc85e\"\n                reference = \"\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x00000000\t\t\t\t//Short-circuit\n\t\tand for all i in(1..1024): (uint32(filesize-(i*4)) == 0x00000000) //4096 bytes to NUL EOF\n}\n\nrule PE_MZ_Assembly_EOF_API\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an assembly tag within 128 bytes to NUL EOF and INET/RDP API calls\"\n                analyst_notes = \"Potential Predator Stealer binary\"\n                author = \"Nathan Fowler\"\n                sample = \"a8d9a1d74d75111d1248932e13545a5d\"\n                reference = \"/wiki/predator\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$assembly = /\\x3c\\x2fassembly\\x3e[\\r\\n]*\\x00{1,128}$/\t//Match NUL to EOF\n\n\t\t$api1 = \"KERNEL32.dll\"\tnocase ascii\n\t\t$api2 = \"WININET.dll\"\tnocase ascii\n\t\t$api3 = \"USER32.dll\"\tnocase ascii\n\t\t$api4 = \"WTSAPI32.dll\"\tnocase ascii\t\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/\n\t\t$api5 = \"WTSSendMessageW\"\tnocase ascii\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/nf-wtsapi32-wtssendmessagew\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $assembly in (filesize-128..filesize)\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000) //16 bytes to NUL EOF\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_Guest_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with a Base64 encoding of the word Guest\"\n                analyst_notes = \"Potential RevengeRAT binary\"\n                author = \"Nathan Fowler\"\n                sample = \"30391066d576f91ec888dad1bc8d7566\"\n                reference = \"/wiki/revengerat\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"R3Vlc3Q=\"\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZP_Winapi_BB\n:malexe\n{\n        meta:\n\t\tdescription = \"PZ MZP with Winapi.Windows call near EOF, potentially Danabot\"\n                analyst_notes = \"Potential Danabot binary\"\n                author = \"Nathan Fowler\"\n                sample = \"8e2a3d781ff800fe400ca50879ecc727, ae4af8f29c1736b15c23dda0bd654235, 2f3db6c096a9b02f3bf8e7abeb1bddad\"\n                reference = \"/wiki/danabot\"\n                risk = \"high\"\n                date = \"2019-08-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $api1 = \"Winapi.\"\n\n\t\t$bytebash1 = {\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t}\n\n\t\t$bytebash2 = { \t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t}\n\n\t\t//Double-pack-built PE?\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n        condition:\n                uint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $api1 in (filesize-1024..filesize)\n\t\tand all of them\n}\n\nrule crypt_sniffer : malexe {\n\tmeta:\n\t\tdescription = \"Finds the crypto API calls used by remcos exes.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \"2019-08-07\"\n\t\tsample = \"9f00c4aeab418866544aef17db3ecac0\"\n\t\tsource = \"https://pastebin.com/raw/JaGe6qX8\"\n\tstrings:\n\t\t// whole tamale is a combination of crypt32.dll and api prep with some error strings between them.\n\t\t$whole_tamale = { 00 00 00 00 43 00 72 00 79 00 70 00 74 00 33 00 32 00 2e 00 64 00 6c 00 6c 00 00 00 43 72 79 70 74 50 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 43 72 79 70 74 55 6e70 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 00 00 43 00 72 00 79 00 70 00 74 00 50 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 00 00 43 00 72 00 79 00 70 00 74 00 55 00 6e 00 70 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 }\n\t\t// our friend xpadding\n\t\t$padding = { 58 50 41 44 44 49 4e 47 }\n\t\t// fake rar reference\n\t\t$fake_rar = { 73 66 78 72 61 72 }\n\t\t// real rar\n\t\t$real_rar = { 77 69 6e 2e 72 61 72 20 47 6d 62 48 }\n\t\t// rar inside it\n\t\t$rar_header = { 52 61 72 21 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $whole_tamale and $rar_header and $fake_rar and $padding\n\t\tand not $real_rar\n}\n\n\nrule PE_Quad_Nul_B64_256_5M\n:malexe\n{\n        meta:\n                description = \"PZ MZ with multiple quad-null separated long 256 byte base64 encoded ascii strings\"\n                analyst_notes = \"Potential Amadey binary\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n                sample = \"35adc7a2f8d0a8d81df65db7a5b7d0d6\"\n                reference = \"/wiki/amadey\"\n                risk = \"high\"\n                date = \"2019-08-06\"\n                tlp = \"GREEN\"\n\n        strings:\n                //Base64\n                $b64 = /[^\\x00][\\x00]{4}[A-Za-z0-9\\x2b\\x2f]{256}/   ascii\n\n        condition:\n\t\tfilesize < 5MB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #b64 >= 2\n}\n\nrule base64_enbiggens : malexe {\n\tmeta:\n\t\tdescription = \"Finds base64 embedded files inside malware.. very very large sections of it.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \t\"2019-08-06\"\n\t\tsamples = \"7a50fd9c8c8a8fc4a42f4a5c51f6394ec26013abee1be3ba7f4285f67d5accb4\"\n\t\tgreetz = \"Thanks to Vitali Kremez for pushing out trickbot/amadey data\"\n\t\tsource = \"https://twitter.com/VK_Intel/status/1158620228261208064\"\n\tstrings:\n\t\t// bomberman?\n\t\t//$ = { 42 6f 6d 62 65 72 6d 61 6e 20 32 70 }\n\t\t// I don't know what this file is, but it's 78k of valid base64.\n\t\t// md5:741c612aa5d39a134879d28c444a0b39\n\t\t$ = /\\x00[a-zA-Z0-9\\x2f\\x2b]{4092}/\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0xfe repetition\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\tstrings:\n\t\t$fe = {\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t}\n\n                $ = \"PADDINGXX\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fe > 128\n}\n\nrule calling_cards : gh0strat\n{\n\tmeta:\n\t\tdescription = \"gh0stRAT's calling cards\"\n\t\tauthor      = \"Ryan C. Moon (moonbas3)\"\n\t\tdate        = \"2019-08-02\"\n\t\treference\t\t= \"/wiki/gh0strat\"\n\t\tsample      = \"530545bbd28da7a01fdf7d6751352f63, c91c85f49bfaecd360639eeb50252707, 037e4546381b718ac32f0ecddfb78871\"\n\t\ttlp \t\t\t\t= \"white\"\n\t\tgreetz\t\t\t= \"@P3pperP0tts and urlhaus\"\n\tstrings:\n\t\t$calling_card2 = { 5f 61 64 6a 75 73 74 5f 66 64 69 76 }\n\t\t$calling_card3 = { 5f 65 78 63 65 70 74 5f 68 61 6e 64 6c 65 72 33 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $calling_card2 and $calling_card3\n}\n\nrule PE_MZ_2E_Trailers\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0x2e trailing bytecode to EOF\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x2e2e2e2e\t\t\t\t//Short-circuit speed\n                and for all i in(1..8): (uint32(filesize-(i*4)) == 0x2e2e2e2e)\t//32 bytes of 0x2e to EOF\n}\n\nrule PE_Weekend_Hacking\n:malexe\n{\n        meta:\n                description = \"PE or resource re-built on weekend\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2019-04-08\"\n\t\tmodified = \"2019-08-01\"\n                hash = \"1f43c6a18bc727b14df2814e91546e0b\"\n                tlp = \"AMBER\"\n\n\tstrings:\n\t\t//001b200: bd06 0000 0200 0000 0000 0401 474e 5520  ............GNU\n\t\t//001b210: 4320 342e 352e 3200 012f 7573 722f 7372  C 4.5.2../usr/sr\n\t\t//001b220: 632f 6d69 6e67 772d 7275 6e74 696d 652f  c/mingw-runtime/\n\t\t$exclude = { 474e 5520 4320 342e 352e 32 [2] 2f 7573 722f 7372 632f 6d69 6e67 772d 7275 6e74 696d 652f }\n\n        condition:\n                uint16(0) == 0x5a4d\n                // #define EPOCH_DOW 3\n                // #define SECS_PER_DAY 86400\n                // dow = ((timestamp / SECS_PER_DAY) + EPOCH_DOW) % 7;\n                and ( ((pe.resource_timestamp\\86400)+3)%7==0 or ((pe.resource_timestamp\\86400)+3)%7==6 )\n\t\tand not #exclude > 4\n}\n\nrule MZ_KERNEL_SANDERS_SPACETIME\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tmodified = \"2019-08-01\"\n\t\tdescription = \"PE/MZ with too much leading or training space or too old, and two or more kernel32.dll calls\"\n\t\treference = \"/wiki/icedid\"\n\t\tsamples = \"b44306f812171715d3e2da7490807050\"\n\n\tstrings:\n\t\t$KW = \"kernel32.dll\"    nocase wide ascii\n\n\t\t//0003440: 0054 4849 5320 4953 2054 4845 204d 4152  .THIS IS THE MAR\n\t\t//0003450: 4b45 5220 5354 5249 4e47 2046 4f52 2054  KER STRING FOR T\n\t\t//0003460: 4845 2045 434c 4950 5345 204f 4f4d 5048  HE ECLIPSE OOMPH\n\t\t//0003470: 2045 5854 5241 4354 4f52 2031 3937 302d   EXTRACTOR 1970-\n\t\t//0003480: 3132 2d30 3320 0000 0000 0000 0000 0000  12-03 ..........\n\t\t$exclude1 = \"THIS IS THE MARKER STRING FOR THE ECLIPSE OOMPH EXTRACTOR 1970-12-03\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand #KW >= 2\n\t\tand not any of ($exclude*)\n\t\tand (\n\t\t\tpe.version_info[\"Comments\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{6,}/\n\n\t\t\tor pe.version_info[\"Comments\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /[\\x20\\x09]{6,}$/\n\n\t\t\t//or pe.resource_timestamp    <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t\tor pe.timestamp            <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t)\n}\n\nrule PE_MZ_Bracket_Storm\n:malexe\n{\n    meta:\n        description     = \"Too many symbols (so many), inspired by Nanocore and Ramnit .scr files\"\n        author          = \"Ryan C. Moon (moonbas3)\"\n        date\t\t= \"2019-07-31\"\n        sample          = \"dd85773f073b2a7e32822960362cf053,c4f7e74f7ed4ae3e54b02c3ae9f0385fb9a1b741,d9bbaaf12acda3f90bee992e41c7147f558c3bcc\"\n        greetz          = \"Nathan Fowler, PCRE Gunfighter\"\n\treference\t= \"/wiki/nanocore, /wiki/ramnit\"\n\n    strings:\n        $wininet_lib = \"WININET.dll\" nocase\n        $r_lulz = /[^\\x7b-\\x7f][\\x7b-\\x7f]{300}/\n        $r_lulz2 = /[^\\x5b-\\x5f][\\x5b-\\x5f]{300}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n        and $wininet_lib and any of ($r*)\n}\n\nrule Java_JarHeads_2F\n:maljar\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-06-26\"\n\t\tmodified = \"2019-07-31\"\n\t\tdescription = \"More than 256 of lowercase folder names to camel-case or alpha-digit class name in a JAVA archive that is less than 1024KB.  Potential RAT and JAR stuffing evasion methods.\"\n\t\tanalyst_notes = \"This could potentially be a jRAT such as qRAT\"\n\t\tsamples = \"cdff7af0290135e0fc4748abf9b9041f, a42be1f121cd7a8d809b449d2e88f468\"\n\t\ttlp  = \"AMBER\"\n\t\trefernece = \"/wiki/qrat, /wiki/adwind\"\n\n\tstrings:\n\t\t$class1 = /\\x00[a-z\\x2f]+[A-Z][a-z]+\\.class/\n\t\t$class2 = /\\x00([a-z][0-9]{6,}\\x2f)+[a-z][0-9]{6,}\\.class/\n\t\t$meta = \"META-INF/MANIFEST.MF\"\n\n\tcondition:\n\t\tuint16(0) == 0x4b50\n\t\tand $meta in (0..4096)\n\t\tand ( #class1 > 256 or #class2 > 16 )\n\t\tand filesize < 1024KB\n}\n\nrule PE_MZ_RARSFX_EXE_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-29\"\n                description = \"PE/MZ RAR SFX containing an additional singular executable that is invoked from RAR SFX Setup\"\n\t\tanalyst_notes = \"This appears to be an attempt to obfuscate a PE/MZ inside of a RAR SFX PE/MZ\"\n                reference = \"/wiki/loki\"\n                samples = \"90dcfd2f25f50c91b61d2f476a0ede21\"\n\n        strings:\n\t\t//0049820: ed00 04ed 0000 bc7a 314d 8000 0003 434d  .......z1M....CM\n\t\t//0049830: 543b 5468 6520 636f 6d6d 656e 7420 6265  T;The comment be\n\t\t//0049840: 6c6f 7720 636f 6e74 6169 6e73 2053 4658  low contains SFX\n\t\t//0049850: 2073 6372 6970 7420 636f 6d6d 616e 6473   script commands\n\t\t//0049860: 0d0a 0d0a 5061 7468 3d25 7465 6d70 250d  ....Path=%temp%.\n\t\t//0049870: 0a53 6574 7570 3d64 6670 6d77 7477 6e67  .Setup=dfpmwtwng\n\t\t//0049880: 2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a  .exe..Silent=1..\n\t\t//0049890: 4f76 6572 7772 6974 653d 310d 0a00 7cbf  Overwrite=1...|.\n\t\t$ = { \t\t\t\t\t53 4658\n\t\t\t2073 6372 6970 7420 636f 6d6d 616e 6473\n\t\t\t0d0a 0d0a 5061 7468 3d25 7465 6d70 250d\n\t\t\t0a53 6574 7570 3d [5-16]\n\t\t\t2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a\n\t\t\t4f76 6572 7772 6974 653d 310d 0a\n\t\t}\n\n\t\t$exe = \".exe\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand $exe in (filesize-256..filesize)\n}\n\nrule PE_MZ_UPX_VERINFO_TOO_MUCH\n:malexe\n{\n\tmeta:\n\t\tauthor \t\t\t= \"Nathan Fowler\"\n\t\tdate \t\t\t= \"2019-07-25\"\n\t\tdescription \t= \"PE/MZ, UPX packed, with too much byte data after the VS_VERSION_INFO field and two or more kernel32.dll calls\"\n\t\tanalyst_notes \t= \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n\t\treference \t\t= \"/wiki/remcos\"\n\t\tsamples \t\t= \"baa0507fe166496d54f332a809c3e77c\"\n\n\tstrings:\n\t\t$V \t\t= \"VS_VERSION_INFO\"\twide\n\t\t$kern \t= \"kernel32\"\t\tnocase wide ascii\n\t\t$UPX \t= \"UPX\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $UPX in (32..512)\n\t\tand #kern >= 2\n\t\tand @V + 655350 < filesize\n}\n\nrule PE_MZ_KERNEL32_TOO_MANY_SOCK\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-24\"\n                description = \"PE MZ with more than or equal to three Kernel32 instances with Socket functionality\"\n                analyst_notes = \"This PE/MZ is highly abnormal and suggests that it may be stuffed with an additional PE\"\n                reference = \"/wiki/lokibot\"\n                samples = \"d9f05847190b022c5dc8d541442e7fd8\"\n                tlp = \"AMBER\"\n\n        strings:\n                $kern = \"kernel32.dll\"  nocase wide ascii\n\n                $exclude1 = \"RAR SFX\"    wide ascii\n                $exclude2 = \"NSIS\"    wide ascii\n\n                $api1 = \"getpeer\"    nocase wide ascii\n                $api2 = \"gethostby\"    nocase wide ascii\n                $api3 = \"getprotoby\"    nocase wide ascii\n                $api4 = \"getservby\"    nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern >= 4\n                and not any of ($exclude*)\n                and any of ($api*)\n}\n\nrule PE_MZ_Text_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n\t\tmodified = \"2019-07-22\"\n                description = \"PE MZ with a wall of text to EOF\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with base64 payload\"\n                reference = \"/wiki/trickbot, /wiki/amadey\"\n                samples = \"eff82b032f6b038987152f2ddc850c6e, e319a1cdcf0a1e5b6395891b6a283590\"\n                tlp = \"AMBER\"\n                feelz = \"meows://www.youtube.com/watch?v=l-O5IHVhWj0&feature=youtu.be&t=205\"\n\n        strings:\n                $b64 = /[a-zA-Z0-9\\x2b\\x2f]{128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and filesize < 4MB\n                and $b64 in (filesize-136..filesize-4)            //4 byte nonsense buffer in either direction\n\n}\n\nrule PE_MZ_KERNEL32_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Robert Simmons\"\n                date = \"2019-07-19\"\n                description = \"PE MZ with Kernel32 in the last 2048 bytes of the file\"\n\t\tanalyst_notes = \"This PE/MZ is highly abnormal\"\n                reference = \"/wiki/sodinokibi\"\n                samples = \"1ce1ca85bff4517a1ef7e8f9a7c22b16\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$kern = \"kernel32.dll\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $kern in (filesize-2048..filesize)\n\n}\n\nrule Office_Macro_Base64_Ascii\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and what appears to be a non-wide long base64 ascii embedded string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /[^A-Za-z0-9\\x2b\\x2f\\x3d_-][A-Za-z0-9\\x2b\\x2f\\x3d_-]{1024}/\t\tascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_Macro_PS_CLSID\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to PowerShell with -enc or a CLSID for WSH Shell Object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Windows Script Host Shell Object\n\t\t$clsid = \"72C24DD5-D70A-438B-8A42-98424B88AFB8\"\t\tnocase wide ascii\n\n\t\t$badness1 = \"PowerShell\"\t\t\t\tnocase wide ascii\n\t\t$badness2 = \"-enc\"\t\t\t\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and ( all of ($badness*) or $clsid )\n}\n\nrule PE_MZ_Sec_Spec_Char\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with special characters in the PE names section\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with another payload, likely a stage 1 dropper\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\tstrings:\n\t\t$reloc = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (0..1024)\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand pe.number_of_sections > 2\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tpe.sections[i].name contains \"!\"\n\t\t\tor pe.sections[i].name contains \"@\"\n\t\t\t//or pe.sections[i].name contains \"#\"\n\t\t\tor pe.sections[i].name contains \"$\"\n\t\t\tor pe.sections[i].name contains \"%\"\n\t\t\tor pe.sections[i].name contains \"^\"\n\t\t\tor pe.sections[i].name contains \"&\"\n\t\t\tor pe.sections[i].name contains \"*\"\n\t\t\tor pe.sections[i].name contains \"(\"\n\t\t\tor pe.sections[i].name contains \")\"\n\t\t\tor pe.sections[i].name contains \"{\"\n\t\t\tor pe.sections[i].name contains \"}\"\n\t\t\tor pe.sections[i].name contains \"|\"\n\t\t\tor pe.sections[i].name contains \";\"\n\t\t\tor pe.sections[i].name contains \":\"\n\t\t\tor pe.sections[i].name contains \"'\"\n\t\t\tor pe.sections[i].name contains \"<\"\n\t\t\tor pe.sections[i].name contains \">\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\t//or pe.sections[i].name contains \"?\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\tor pe.sections[i].name contains \"\\\\\"\n\t\t\tor pe.sections[i].name contains \"+\"\n\t\t\t//or pe.sections[i].name contains \"=\"\n\t\t)\n}\n\nrule PE_Large_B64_Like_Strings\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-07-17\"\n        description   = \"PE with large b64-like strings\"\n        analyst_notes = \"Not a lot of science, but it works.  B64 strings\"\n        analyst_notes = \"seem to have entropy values between 5 and 6 but \"\n        analyst_notes = \"when you push the length out, the gap closes to \"\n        analyst_notes = \"near 5.99.  This may be luck, but seems to work.\"\n        samples       = \"203b4a86dbb01bed35825e7429b20674\"\n        samples       = \"215ed19e4adb725b79b2134926c66287\"\n        samples       = \"1753fd377399233b77344c1a19bd4c60\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 50 i in(0..filesize\\4096):\n            (math.entropy(i*4096,4096) > 5.98\n            and math.entropy(i*4096,4096) < 6)\n}\n\nrule PE_MZ_NextHook_Reloc\n:malexe\n{\n        meta:\n             \tauthor = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with suspicious API calls and PE .reloc\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with additional payload\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"CallNextHookEx\"\n                $ = \"GetModuleFileNameEx\"\n                $ = \"RpcServerRegister\"\n                $ = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n}\n\nrule PE_MZ_NET_Double_Wrap\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n                description = \".NET PE MZ with VS_VERSION_INFO, SkipVerification, and more than one call to WrapNonExceptionThrows\"\n                analyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed with another .NET archive, this is likely a stage-1 dropper\"\n                reference = \"\"\n                samples = \"d08f9c6fd2fafd6383c79d9f6967ecc6\"\n                tlp = \"AMBER\"\n\n        strings:\n                $wrap = \"WrapN\"\n\n                $ = \"VS_VERSION_INFO\" wide\n                $ = \"SkipVerification\"\n                $ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #wrap >= 2\n}\n\nrule MZ_PE_NET_HeadSpace\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-15\"\n                description = \"A .NET/Mono MZ/PE with too much byte code ahead of the actual .NET nonsense stuffs\"\n                reference = \"\"\n                samples = \"036bdbd3d2bac71c2fa46587832398fc\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$n1 = \"WrapNonExceptionThrows\"\n\n\t\t//Six byte Assembly entity spacing\n\t\t$n2 = { 6974 793e 0d0a 2020 2020 2020 3c72 6571 }\n\t\t$n3 = { 6d3a 6173 6d2e 7633 223e 0d0a 2020 2020 2020 2020 3c72 6571 7565 7374 6564 4578 }\n\n\t\t$wordler = /[A-Z][a-z]+[A-Z]/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 512KB\n\t\tand all of ($n*)\n\t\tand for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)\t//64 bytes to NUL EOF\n\t\tand not $wordler in (512..128000)\n}\n\nrule MZ_PE_Kernel_BO_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-07-11\"\n                description = \"MZ PE with 2048 bytes of NUL to EOF and specific byte ordering\"\n                reference = \"/wiki/lokibot, /wiki/pony\"\n                samples = \"1b76734447ec104a4fc399c430dd007a\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//00ccea0: 0000 0000 1000 0404 0900 0000 6b65 726e  ............kern\n\t\t//00cceb0: 656c 3332 0000 0000 0e00 0000 5274 6c4d  el32........RtlM\n\t\t//00ccec0: 6f76 654d 656d 6f72 7900 0000 acce 4c00  oveMemory.....L.\n\t\t$ = { 6b65 726e 656c 3332 [8] 5274 6c4d 6f76 654d 656d 6f72 7900 0000 }\n\t\t$ = \"IsValidURL\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand for all i in(1..512): (uint32(filesize-(i*4)) == 0x00000000)\n}\n\nrule PE_MZ_NET_LONG_WIDE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a trip down stupidland using a large amount of wide words with no breaks\"\n\t\tanalyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed\"\n                reference = \"/wiki/agenttesla\"\n                samples = \"c73b5ff9c01f042ee76b37e527bedc01\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n\n\t\t//Big words, no breaks.\n\t\t$sw = /([A-Za-z0-9]\\x00){128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\t\tand #sw > 128\n}\n\nrule PE_MZ_NET_HTTP_PAD\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a wide HTTP URL\"\n                reference = \"\"\n                samples = \"0f32d7f8a79e0e09cbb309f7cbcfa61b\"\n                tlp = \"AMBER\"\n\n        strings:\n                //byte jump for HTTP and HTTPS\n                $ = { 6800 7400 7400 7000 [0-2] 3a00 2f00 2f00 }\n                $ = \"WrapNonExceptionThrows\"\n                $ = \"XXPADDING\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule RAR_SFX_Terse_EXE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-08\"\n                description = \"RAR SFX file with singular embedded executable and multiple terse files for archive stuffing, likely malicious and used to encapsulate the hostile archive\"\n                reference = \"/wiki/smokeloader\"\n                samples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$RAR = \"RAR SFX\"\t\t\t\t\t\t\tnocase ascii\n\n                $Dropper \t= /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x0a/\tnocase ascii\n                $Srt_Extensions = /\\x00[^\\n][\\x20-\\x7e]{3,6}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\t\t$Lng_Extensions = /\\x00[^\\n][\\x20-\\x7e]{7,256}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $RAR\n                and #Dropper >= 1\n                and #Srt_Extensions >= 16\n\t\tand #Lng_Extensions <= 4\n}\n\nrule Office_Script_XLST\n:maldoc\n{\n    meta:\n\t\tdescription = \"Macro enabled document that contains an XLS/XLST file with JScript, VBScript, CScript, or WScript\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2019-07-08\"\n\t\ttlp         = \"GREEN\"\n\t\treference   = \"meows://isc.sans.edu/forums/diary/A+Stream+O+Maldoc/25096/, meows://isc.sans.edu/forums/diary/Malicious+XSL+Files/25098/\"\n\n    strings:\n\t\t$bad1\t= \"<script\"\t\t\t\t\t\t\t\tnocase wide ascii\n\t\t$bad2\t= /language=[^\\n]?[vbwjc]{1,2}script/\tnocase wide ascii\n\t\t$bad3\t= \"<?xml\"\t\t\t\t\t\t\t\tnocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand filesize < 20MB\n\t\tand all of them\n}\n\nrule CAB_Encapsulation\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tdescription = \"CAB file with singular embedded executable, likely malicious and used to encapsulate the hostile archive\"\n\t\treference = \"\"\n\t\tsamples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\n\tstrings:\n\t\t$Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x00/\tnocase ascii\n\t\t$Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}\\x00/\t\t\tnocase ascii\n\n\tcondition:\n\t\tuint32(0) == 0x4643534d\n\t\tand #Dropper <= 2\n\t\tand #Extensions <= 2\n}\n\nrule RTF_Office_hexascii_API\n{\n        meta:\n                description = \"RTF/Office hex-ascii suspicious API calls or native API calls\"\n                author = \"Nathan Fowler\"\n                attribution = \"Created based on work from Justin Borland Oct 01 2018\"\n                thanks = \"Didier Stevens, sysopfb, Per Morten Sandstad\"\n                risk = \"high\"\n                date = \"2018-10-18\"\n                modified = \"2019-07-03\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $lib1 = \"LoadLibrary\" nocase ascii\n                $lib2 = /[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[46]c([03]0)?[46]9([03]0)?[46]2([03]0)?[57]2([03]0)?[46]1([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib3 = \"GetProcAddress\" nocase ascii\n                $lib4 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]1([03]0)?[46]4([03]0)?[46]4([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib5 = \"ExpandEnvironmentString\" nocase ascii\n                $lib6 = /[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]5([03]0)?[46]e([03]0)?[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[46]f([03]0)?[46]e([03]0)?[46]d([03]0)?[46]5([03]0)?[46]e([03]0)?[57]4([03]0)?[57]3([03]0)?[57]4([03]0)?[57]2([03]0)?[46]9([03]0)?[46]e([03]0)?[46]7([03]0)?[57]3/i\n\n                $lib7 = \"URLDownloadToFile\" nocase ascii\n                $lib8 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[46]e([03]0)?[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[57]4([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                //$lib9 = \"%UserProfile%\" nocase ascii\n                $lib10 = /25([03]0)?[57]5([03]0)?[57]3([03]0)?[46]5([03]0)?[57]2([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?25/i\n\n                $lib11 = \"ExitProcess\" nocase ascii\n                $lib12 = /[46]5([03]0)?[57]8([03]0)?[46]9([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib13 = \"kernel32\" nocase ascii\n                $lib14 = /[46]5([03]0)?[57]2([03]0)?[46]e([03]0)?[46]5([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib15 = \"shell32\" nocase ascii\n                $lib16 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib17 = \"WinExec\" nocase ascii\n                $lib18 = /[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3/i\n\n                $lib19 = \"UrlMon\" nocase ascii\n                $lib20 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]d([03]0)?[46]f([03]0)?[46]e/i\n\n                $lib22 = \"ShellExecute\" nocase ascii\n                $lib23 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3([03]0)?[57]5([03]0)?[57]4([03]0)?[46]5/i\n\n                $lib24 = \"CreateFile\" nocase ascii\n                $lib25 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib26 = \"VirtualAlloc\" nocase ascii\n                $lib27 = /[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[57]4([03]0)?[57]5([03]0)?[46]1([03]0)?[46]c([03]0)?[46]1([03]0)?[46]c([03]0)?[46]c([03]0)?[46]f([03]0)?[46]3/i\n\n                $lib28 = \"WriteFile\" nocase ascii\n                $lib29 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib30 = \"ReadFile\" nocase ascii\n                $lib31 = /[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib32 = \"CloseHandle\" nocase ascii\n                $lib33 = /[46]3([03]0)?[46]c([03]0)?[46]f([03]0)?[57]3([03]0)?[46]5([03]0)?[46]8([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib34 = \"SetFilePointer\" nocase ascii\n                $lib35 = /[57]3([03]0)?[46]5([03]0)?[57]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?[57]0([03]0)?[46]f([03]0)?[46]9([03]0)?[46]e([03]0)?[57]4([03]0)?[46]5([03]0)?[57]2/i\n\n                $lib36 = \"GetSystemDirectory\" nocase ascii\n                $lib37 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]3([03]0)?[57]9([03]0)?[57]3([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib38 = \"GetWindowsDirectory\" nocase ascii\n                $lib40 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[57]3([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib41 = \"GetTempPath\" nocase ascii\n                $lib42 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[57]0([03]0)?[57]0([03]0)?[46]1([03]0)?[57]4([03]0)?[46]8/i\n\n                $lib43 = \"PADDINGXXPADDINGXXPADDINGXXPADDINGXX\" nocase ascii\n                $lib44 = /(50([03]0)?41([03]0)?44([03]0)?44([03]0)?49([03]0)?4[Ee]([03]0)?47([03]0)?58([03]0)?58([03]0)?){4}/\n\n                $lib45 = \"BITXOR\" nocase ascii\n                $lib46 = /[46]2([03]0)?[46]9([03]0)?[57]4([03]0)?[57]8([03]0)?[46]f([03]0)?[57]2/i\n\n                $lib47 = \"SHLWAPI\" nocase ascii\n                $lib48 = /[57]3([03]0)?[46]8([03]0)?[46]c([03]0)?[57]7([03]0)?[46]1([03]0)?[57]0([03]0)?[46]9/i\n\n                $lib49 = \"CreateThread\" nocase ascii\n                $lib50 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[57]4([03]0)?[46]8([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4/i\n\n                $lib51 = \"WriteProcessMemory\" nocase ascii\n                $lib52 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]d([03]0)?[46]5([03]0)?[46]d([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n\t\t//https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.interaction.shell?view=netframework-4.7.2\n\t\t$lib53 = /Interaction[^\\w]{0,16}Shell/ ascii\n\n\t\t//Exclusions\n\t\t//SMA Trading\n\t\t$exclude1 = { 00 4a3a 5c53 4d41 204f 7065 7261 7469 6f6e 735c 5769 6e53 4350 5c77 696e 7363 702e 6578 6520 2f63 6f6e 736f 6c65 202f 636f 6d6d }\n\n        condition:\n                ($rtf at 0 or $office at 0) and any of ($lib*) and not any of ($exclude*)\n}\n\nrule SCT_Excel_By_GUID\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Justin Borland (Snort)/Nathan Fowler (Yara)\"\n\t\tdate = \"2019-07-02\"\n\t\tdescription = \"SCT invoking Excel by GUID, likely hostile activity\"\n\t\treference = \"\"\n\t\ttlp = \"RED\"\n\t\tsamples = \"\"\n\t\tanalyst_notes = \"Not sure what to do with this just yet, but it's likely a targeted double-secret APT\"\n\n\tstrings:\n\t\t$ = \"script language=\\\"vbscript\\\"\"\t\tnocase\n\t\t$ = \"new:00024500-0000-0000-C000-000000000046\"\tnocase\n\t\t$ = \".Workbooks.Add(\"\t\t\t\tnocase\n\t\t$ = \".VBProject.VBComponents.Add(\"\t\tnocase\n\n\t\t$xml = { 3c3f 786d 6c }\n\n\tcondition:\n\t\tuint32(0) == 0x6d783f3c and $xml at 0\n\t\tand all of them\n}\n\nrule MZ_PE_Signed_Not_Signed_Bare\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler/Peter Misurek\"\n                date = \"2019-07-01\"\n                description = \"MZ PE with PE certificate signature data yet the PE/MZ is not explicitly signed\"\n                reference = \"/wiki/hancitor\"\n                samples = \"9a69378f63c39e0f3a148dd3767fa807\"\n                analyst_notes = \"This is highly abnormal and suggests a PE wrapper for a signed PE executable embed.  This could be a loader/dropper of some kind.\"\n\n        strings:\n                //Signing (Internet1.0 where 0x2e is 0x17)\n                $={ 496e 7465 726e 6574 3117 30 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and pe.number_of_signatures == 0\n}\n\nrule PE_njRAT\n:malexe\n{\n    meta:\n        description = \"Potential njRAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-26\"\n        sample      = \"3ea78365488b21f5529b3180494e7c23\"\n        sample      = \"417ec3fda20121b4bec2423e9f9fd54b\"\n        sample      = \"47b2883cd6b6da7478d8104422cd98a3\"\n        tlp         = \"AMBER\"\n\n    strings:\n        $cmd01      = \"etsh firewall add allowedprogram\"  wide ascii nocase\n        $cmd02      = \"md.exe /c\"                         wide ascii nocase\n        $cmd03      = \"ping\"                              wide ascii nocase\n        $cmd04      = \"del\"                               wide ascii nocase\n\n        $mask       = \"NOZONECHECKS\"                      wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_RevengeRAT\n:malexe\n{\n    meta:\n        description = \"Potential Revenge RAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-25\"\n\tmodified    = \"2019-06-26\"\n        sample      = \"0b0798c2657bb23770c8927adff3a272\"\n        sample      = \"e2aff6ddac67c1e12d771ce52beb76d3\"\n        sample      = \"01d70d0a41405eb1e3515c3be2ad0df0\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/revenge\"\n\n    strings:\n        $reflect01  = \"ToBase64String\"                     wide ascii\n        $reflect02  = \"FromBase64String\"                   wide ascii\n        $reflect03  = \"System.Reflection\"                  wide ascii\n        $reflect04  = \"Assembly\"                           wide ascii\n\n        $recon01    = \"select \\x2a from win32_processor\"    wide ascii nocase\n        $recon02    = \"select \\x2a from firewallproduct\"    wide ascii nocase\n        $recon03    = \"select \\x2a from antivirusproduct\"   wide ascii nocase\n\n        $really01   = \"Nuclear Explosion\"                  wide ascii\n\t$asciiart   = { 2a00 2d00 5d00 4e00 4b00 5b00 2d00 2a }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule MZ_PE_Double_Kernel_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-25\"\n                reference = \"/wiki/azorult\"\n                description = \"PE/MZ with interesting API calls for VM checking and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"7545388a6d2d84ce50400a795f4209af\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t$api1 = \"IsDebuggerPresent\"\n\t\t$api2 = \"IsProcessorFeaturePresent\"\n\t\t$api3 = \"Sleep\"\n\t\t$api4 = \"GetActiveWindow\"\n\t\t$api5 = \"GetLastActivePopup\"\n\t\t$api6 = \"GetConsoleMode\"\n\t\t$api7 = \"GetEnvironmentStrings\"\n\t\t$api8 = \"GetTickCount\"\n\t\t$api9 = \"GlobalMemoryStatus\"\n\t\t$api10 = \"SetUnhandledExceptionFilter\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern > 1\n\t\tand all of ($api*)\n}\n\nrule MZ_PE_VI_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n\t\tmodified = \"2019-06-24\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with Assembly after VS_VERSION_INFO\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malformed .NET PE\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n       strings:\n               $byte_order = { 5600 5300 5f00 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [128-1024] 3c61 7373 656d 626c 7920 }        //VERSION_INFO -> Assembly\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)    //64 bytes of nul to EOF\n                and $byte_order in (filesize-8192..filesize)\n}\n\nrule PE_LetsEncrypt\n:malexe\n{\n    meta:\n        description = \"Let's Encrypt does not offer code signing certificates.\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-22\"\n        sample      = \"263d1d61374508250dc16249205df9b1\"\n        sample      = \"6670d53be021319ba3f01076c3e63adb\"\n        sample      = \"b9db97e8c832e5c6703b3e802d3751e5\"\n        tlp         = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=Let\\x27s Encrypt/\n}\n\nrule MZ_PE_Double_Kernel\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-21\"\n                reference = \"/wiki/formbook, /wiki/netwire\"\n                description = \"PE/MZ with an excessive amount of null terminating to EOF and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"bb0c1fd7495aa3261a51615a1b79ceb2, 5367522264386a52e8a8f90f9f7f17c9\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t//Chrome false positive\n\t\t//0003d70: 0100 0000 6d69 6e69 5f69 6e73 7461 6c6c  ....mini_install\n\t\t//0003d80: 6572 2e65 7865 2e70 6462 0000 1000 0030  er.exe.pdb.....0\n\t\t//0003d90: 1000 0050 1700 0060 1700 0080 1700 00c0  ...P...`........\n\t\t$pdb = { 0000 6d69 6e69 5f69 6e73 7461 6c6c 6572 2e65 7865 2e70 6462 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n                //uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 proces$\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n                and #kern > 1\n\t\tand not $pdb\n}\n\nrule Office_Macro_Msiexec_URL\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to msiexec\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-20\"\n                tlp = \"GREEN\"\n\t\tsample = \"987bd2361c0ed6e05400b027c113be44\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//msiexec nocase wide ascii with byte jump to a URL\n\t\t$badness1 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 20 [1-64] 3a2f 2f }\n\t\t$badness2 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 2e (45|65) (58|78)(45|65) 20 [1-64] 3a2f 2f }\n\t\t$badness3 = { (4d|6d)00 (53|73)00 (49|69)00 (45|65)00 (58|78)00 (45|65)00 (43|63)00 2e00 (45|65)00 (58|78)00 (45|65)00 2000 [1-128] 3a00 2f00 2f00 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand any of ($badness*)\n}\n\nrule PE_1010_2020_API_WW_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-14\"\n\t\tmodified = \"2019-06-17\"\n                reference = \"/wiki/ursnif, /wiki/sodinokibi, /wiki/icedid\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices with a wide-word jumble\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.\"\n                samples = \"077cf52855fe85aa60097d6e52cb4ea3, d8b3370d1b4901caccc9c22125171e21\"\n\n       strings:\n\t\t//Odd Stuffs\n                $bytes1 = { 1010 1010 1010 1010 1010 1010 1010 1010 [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$bytes2 = { \t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t1000 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t1000 0201 0201 0201 0201 0201 0201 0201\n\t\t}\n\n\t\t$bytes3 = { \t1000 1000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 0?00\n\t\t}\n\n\t\t//API calls\n                $api1 = \"Sleep\"\n                $api2 = \"EncodePointer\"\n                $api3 = \"DecodePointer\"\n                //$api4 = \"Dinkumware\"\n                $api5 = \"TlsAlloc\"\n                //$api6 = \"GetAsyncKeyState\"\n                $api7 = \"IsProcessorFeaturePresent\"\n                $api8 = \"IsDebuggerPresent\"\n                $api9 = \"GetTickCount\"\n                $api10 = \"RaiseException\"\n                //$api11 = \"GetSystemInfo\"\n\n\t\t//Word jumble, wide and non-wide\n\t\t$wordjumble = /(\\x20\\x00([A-Za-z0-9]\\x00)+){16}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000)\t\t//16 bytes of NUL to EOF\n                and any of ($bytes*)\n\t\tand all of ($api*)\n\t\tand $wordjumble\n}\n\nrule Office_HeadSpace\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc with too much headspace in the first 16-4096 bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-25\"\n\t\tmodified = \"2019-06-17\"\n                hash = \"7ec4e7742de077fde05b0b83bb8a1cee, e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/revenge\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $headspace1 = { 2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020\n\t\t}\n\n                $headspace2 = {\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $headspace1 in (1024..4096)\n                and $headspace2 in (16..1024)\n}\n\nrule Office_Macro_AutoBehavior_Image\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a lure image of type JPEG or PNG.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                modified = \"2019-06-17\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $image1 = { ffd8 ffe? }\n                $image2 = { 8950 4e47 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n\n                $ap1 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"\t\tnocase wide ascii\n                $vb2 = \"VBA\"\t\tnocase wide ascii\n                $vb4 = \"OLE\"\t\tnocase wide ascii\n                $vb5 = \"stdole\"\t\tnocase wide ascii\n                $vb6 = \"macro\"\t\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n                uint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand (\n\t\t\t(\n\t\t\t\t( (#image1 == 1 and #image2 == 0) or (#image1 == 0 and #image2 == 1) )\n\t\t\t\tand any of ($vb*) and any of ($ao*)\n\t\t\t\tand not any of ($exclude*)\n\t\t\t)\n\t\t\tor ($ap1 and #image1 > 0 and #image1 < 3 and #image2 > 0 and #image2 < 3)\n\t\t)\n}\n\nrule Office_Shell_StrConv\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc calling StrConv with byte hiding shuffle capability and ShellV\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-17\"\n                samples = \"e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/strconv-function\n\t\t$api1 = \"ShellV\"\tnocase wide ascii\n\t\t$api2 = \"StrConv\"\tnocase wide ascii\n\n\t\t$uapi1 = \"vbUnicode\"\tnocase wide ascii\n\t\t$uapi2 = \"vbFromUnicode\"\tnocase wide ascii\n\t\t$uapi3 = \"vbWide\"\tnocase wide ascii\n\t\t$uapi4 = \"vbNormal\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n\t\tand all of ($api*)\n\t\tand any of ($uapi*)\n}\n\nrule MZ_PE_PEPE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-10\"\n\t\tmodified = \"2019-06-17\"\n                description = \"Interesting fluffy byte code potentially associated with njrat or .NET Bladabindi\"\n                reference = \"/wiki/njrat, /wiki/bladabindi\"\n                samples = \"a075d07dffdf125e20a57048deaa8abc, 0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n                $pepe1 = { 8000 0000 0000 0000 0000 0000 0000 0001 }\n                $pepe2 = { f0f0 f0ff f0f0 f0ff f0f0 f0ff f0f0 f0ff }\n\t\t$pepe3 = { e0e9 e9ff e0e9 e9ff e0e9 e9ff e0e9 e9ff }\n\t\t$pepe4 = { 7805 7805 7805 7805 7805 7805 7805 7805 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                           #pepe1 > 128\n                        or #pepe2 > 128\n                        or #pepe3 > 128\n                        or #pepe4 > 128\n                )\n}\n\nrule MZ_PE_NET_PDB\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-17\"\n                description = \".NET binary with an alpha PDB, however, there is no path to the PDB\"\n                reference = \"/wiki/bladabindi\"\n                samples = \"0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n\t\t$ = /\\x00[A-Za-z]+\\.pdb\\x00/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_PaddyWhacks_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-11\"\n                reference = \"/wiki/lokibot\"\n                description = \"PE/MZ with 0x0? padding to EOF that is not 0x00\"\n                analyst_notes = \"This is a PE binary with intentional and unusual EOF padding, potentially to evade hash based detections\"\n                samples = \"f905ef29af2a3dfae4ec04f9ddc837f4\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand (\n\t\t\t   for all i in(1..32): (uint32(filesize-(i*4)) == 0x01010101)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x02020202)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x03030303)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x04040404)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x05050505)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x06060606)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x07070707)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x08080808)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x09090909)    //128 bytes of nul to EOF\n\t\t)\n}\n\nrule Potential_Obfuscated_Java_Archive\n{\n        meta:\n                description = \"Pack-200 Zip (or Java Archive) containing abnormal directory structure via 1IL obfuscation likely Armadillo\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-17\"\n\t\tmodified = \"2019-06-04\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$dir = /(\\x2f[1LiI]+){2,5}/\n\t\t$manifest = \"META-INF\"\tnocase wide ascii\n\n        condition:\n\t\tuint16(0) == 0x4b50 and (#dir > 3) and $manifest\n}\n\nrule MZ_PE_UPX_NUL_EOF_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-04\"\n                reference = \"/wiki/remcos\"\n                description = \"PE/MZ which is UPX packed with an excessive amount of null terminating to EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE\"\n                samples = \"fc9cb2d2060b0847a440322b8823c977\"\n\n\tstrings:\n\t\t$ = \"UPX0\"\n\t\t$ = \"UPX1\"\n\t\t$ = \"</assembly>\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n\t\t//uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 processed in 16 byte chunks not 4 byte chunks.\n\t\tand for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand all of them\n}\n\nrule MZ_PE_NET_Crypt_B64\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-03\"\n                reference = \"\"\n                description = \"Potential MZ PE .NET with VS_VERSION_INFO, WrapNonExceptionThrows, suspect API calls, and NUL EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE using Base64 and crypto\"\n                samples = \"227673dc393a3f31a1183e71f7ea6fba\"\n\n\tstrings:\n \t\t$ = \"VS_VERSION_INFO\"\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = \"FromBase64String\"\n\t\t$ = \"ToBase64String\"\n\t\t$ = \"base64Binary\"\n\t\t$ = \"RijndaelManaged\"\n\t\t$ = \"Rfc2898DeriveBytes\"\n\t\t$ = \"Sleep\"\n\t\t$ = \"KillOnExit\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_1010_2020_API_Dink_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-31\"\n                reference = \"/wiki/ursnif\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.  The file also uses Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017\"\n\n       strings:\n\t\t$ = {\t1010 1010 1010 1010 1010 1010 1010 1010\t[1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$ = \"Sleep\"\n\t\t$ = \"EncodePointer\"\n\t\t$ = \"DecodePointer\"\n\t\t$ = \"Dinkumware\"\n\t\t$ = \"TlsAlloc\"\n\t\t$ = \"GetAsyncKeyState\"\n\t\t$ = \"IsProcessorFeaturePresent\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"GetSystemInfo\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\nrule CreateObject_Shell\n{\n\tmeta:\n\t\tdescription = \"Office document using CreateObject to create a shell object and execute a file\"\n\t\tauthor = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n\t\trisk = \"medium\"\n\t\tdate = \"??\"\n\t\tmodified = \"2019-05-29\"\n\n\tstrings:\n\t\t$string1 = /createobject\\([\\x20\\x09]*[\\x22\\x27][a-z]script\\.shell/ nocase\n\t\t$string2 = /\\.(exe|vbs|bat|ps[0-9]+)/ nocase\n\t\t$string3 = \".run\" nocase\n\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\tcondition:\n\tuint16(0) == 0xcfd0 and $office at 0 and all of them\n}\n\nrule MZ_PE_NS_COMMENTS_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with VERSION_INFO comments pounding of the keyboard 1-32 characters lowercase.\"\n\t\tanalyst_notes = \"Someone took the lazy approach and just pounded the keyboard with lowercase characters for the Comments section of this file.  If it is gibberish, it is likely bad\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n\tstrings:\n\t\t$ = \"<assembly\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,32}$/\n\t\tand all of them\n}\n\nrule Office_WMI\n:maldoc\n{\n        meta:\n                description = \"Office Document containing VBA and WMI and Short Path VBE DLL or a URL\"\n\t\tanalyst_notes = \"This is likely a type of maldoc dropper using winmgmts to deliver payload\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-05-23\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\twide ascii\n                $vb2 = \"VBA\"\twide ascii\n                $vb3 = \"OLE\"\twide ascii\n                $vb4 = \"stdole\"\twide ascii\n\n                $wmi1 = \"Win32_Process\"\twide ascii\n                $wmi2 = \"winmgmts:\\\\\\\\\"\twide ascii\n\n\t\t$url1 = \"://\"\twide ascii\n\t\t$url2 = \"//:\"\twide ascii\n\n        condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n                and ( any of ($dll*) or any of ($url*) )\n\t\tand any of ($vb*)\n\t\tand any of ($wmi*)\n}\n\nrule retefe_crypt2\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tmeta_author = \"Nathan Fowler\"\n\t\tsample = \"68ba5f9d5dd775c72711bc86e2c5d9384d7ab4efd6c24805304253e51365d816, 008a9b3ce958689aadc5eb16d557f8f2\"\n\t\tdate = \"2018-11-15\"\n\t\tanalyst_notes = \"This is likely a crypted sample of Retefe embedded in an OLE stream.  This means there is a MZ/PE here.\"\n\t\timplementation_date = \"2019-05-22\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//0x27a8\n\t\t$decode1 = {c1 e0 03 [0-1] b6 c? 8b}\n\t\t//0x280e\n\t\t$decode2 = {b6 0? 11 33 c? 8b}\n\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\t$ActiveScriptParseiid_64 = {58 76 ef c7 ee e1 0e 48 97 ea d5 2c b4 d7 6d 17}\n\t\t$ActiveScriptParseiid_32 = {e2 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\n\tcondition:\n\t\tall of ($decode*) and $iid and any of ($ActiveScriptParseiid_*)\n}\n\nrule PE_MZ_VERSION_NUL\n:malexe\n{\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-05-22\"\n\t\ttlp             = \"AMBER\"\n\t\tdescription     = \"MZ/PE with VERSION_INFO defined that is a explicit NULL value with NULL to EOF\"\n\t\tanalyst_notes\t= \"This is likely some type of malware that may be using a packer similar to Nanocore.  This is highly abnormal to have VERSION_INFO defined yet nothing but NUL\"\n\t\tsample          = \"0b13f3bd55238c71fd8993b658ce0484\"\n\t\treference       = \"/wiki/nanocore\"\n\n\tstrings:\n\t\t//NULL VERSION_INFO\n\t\t$ = {   5600 4500 5200 5300 4900 4f00 4e00 5f00\n\t\t\t4900 4e00 4600 4f00 [8]\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_Reloc_NUL\n:malexe\n{\n        meta:\n                description = \"PZ MZ with any VM-check API calls and .reloc NUL in 1-64 bytes\"\n\t\tanalyst_notes = \"It is likely that this PE/MZ is FlawedAmmy Loader\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"9629772e9ff369dc24dd47ca948fda6c\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$api1 = \"Sleep\"\n\t\t$api2 = \"Interlocked\"\n\t\t$api3 = \"GetStartupInfo\"\n\t\t$api4 = \"SetUnhandledExceptionFilter\"\n\t\t$api5 = \"IsDebuggerPresent\"\n\t\t$api6 = \"QueryPerformanceCounter\"\n\t\t$api7 = \"TerminateProcess\"\n\t\t$api8 = \"GetOEMCP\"\n\t\t$api9 = \"RegisterClass\"\n\n\t\t$spice1 = \"Any use of this Certificate\"\t\twide\n\t\t$spice2 = \"__wgetmain\"\t\t\t\tascii\n\t\t$spice3 = \"STATUS_ABIOS_LID_ALREADY_OWNED\"\tascii\n\t\t$spice4 = \"EV_MMAC_HAP_SHORT_MSG_RECEIVED\"\tascii\n\n\t\t//PE .reloc to NULL\n\t\t$reloc = {   2e72 656c 6f63 [1-64]\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (512..4096)\n\t\tand any of ($spice*)\n\t\tand any of ($api*)\n}\n\nrule PE_API_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with VM-check API calls and multiple long 256-16384 base64 encoded ascii strings\"\n\t\tanalyst_notes = \"Potential Trickbot binary\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"e6dbe5e47dab3b586a10f9b2bfd4312a\"\n\t\treference = \"/wiki/trickbot\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"Sleep\"\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetStartupInfo\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"TerminateProcess\"\n\n\t\t//Assembly -> Null\n\t\t//$ = { 6173 7365 6d62 6c79 3e00 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t\t//Base64\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f]){256,16384}([A-Za-z0-9\\x2b\\x2f]{2}==|[A-Za-z0-9\\x2b\\x2f]{3}=)?\\x00/\tascii\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #b64 > 64\n}\n\nrule PE_UPX_Ass_AutoIT\n:malexe\n{\n    meta:\n        description = \"UPX packed PE/MZ with AutoIT and assembly\"\n\t\tanalyst_notes = \"This is a highly abnormal AutoIT UPX packed binary that is a second stage or first stage dropper payload\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-03\"\n\t\tmodified = \"2019-05-20 (pushed)\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/hawkeye, /wiki/nanocore\"\n\n    strings:\n\t\t$upx = \"UPX\"\n\n        $spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n        $spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\t\t$autoit = { 4100 7500 7400 6f00 4900 7400 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $upx in (0..1024)\n        and any of ($spicyspice*)\n\t\tand $autoit\n}\n\nrule PE_MZ_NBS\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-17\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with NUL to EOF and nothing but whitespace in a singular VERSION_INFO field\"\n\tanalyst_notes\t= \"This PE is very strange in that the VERSION_INFO field values are nothing but 4 chr or more whitespace.  This likely is a malicious file and the miscreant is lazy\"\n        sample          = \"b98fa6c4e71634faa02fff7ed3c43474\"\n        reference       = \"/wiki/formbook\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand (\n\t\t   pe.version_info[\"Comments\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t)\n}\n\nrule MZ_PE_OutOfOrder_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-05-08\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ with PE, API out of order after VERSION_INFO, PADDING, and trailing NUL\"\n\n\tstrings:\n\t\t$ = \"PADDING\"\n\n\t\t//VERSION_INFO -> .dll byte-jump ordering\n\t\t$ = { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [2048-8192] 2e64 6c6c }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\n\nrule PE_WOW_CryptHook_NUL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, CryptStringToBinaryA, and Wow64EnableWow64FsRedirection with NUL EOF\"\n        samples = \"5230d6352f3200d502ea2dcef55989ef\"\n\n    strings:\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"Wow64EnableWow64FsRedirection\"\n\n        //PE but no VERSION_INFO\n        $ver = \"VERSION_INFO\"    wide\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of ($API*)\n        and not $ver\n}\n\nrule PE_Nanocore_Winsock_GetAce\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-13\"\n        description = \"Potential Nanocore MZ with WSOCK32, GetAce, IcmpSendEcho with NUL EOF\"\n        samples = \"d1903c90c8720ca5c4a4efd34b15dff9, 7e88682c452b779ca187e5cf7cc615a1, 907923733bb1a5df6c0732b8303e7bc8, f43c463885fe1963175d454903dc5105\"\n\n    strings:\n\t$ = \"OLEAUT32.dll\"\n\t$ = \"WSOCK32.dll\"\n\t$ = \"GetAce\"\n\t$ = \"IcmpSendEcho\"\n\t$ = \"FtpOpenFileW\"\n\t$ = \"timeGetTime\"\n\t$ = \"IsThemeActive\"\n\n\t$upx = \"UPX\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand $upx in (512..2048)\n\tand all of them\n}\n\nrule UDF_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-04\"\n\tmodified = \"2019-05-09\"\n        reference = \"\"\n        description = \"Single executable file embedded in UDF Image\"\n        sample = \"c0a1a387ae325b83f48cdc210027f160\"\n\n    strings:\n\t\t$udf1 = { 5500 4400 4600 }\n\t\t$udf2 = \"BEA01\"\t\tascii\n\t\t$udf3 = \"TEA01\"\t\tascii\n\n\t\t//Bad file extensions\n\t\t$bad_ext1 = \".exe;\"\tnocase ascii\n\t\t$bad_ext2 = \".scr;\"\tnocase ascii\n\t\t$bad_ext3 = \".bat;\"\tnocase ascii\n\t\t$bad_ext4 = \".cmd;\"\tnocase ascii\n\t\t$bad_ext5 = \".js;\"\tnocase ascii\n\t\t$bad_ext6 = \".vbs;\"\tnocase ascii\n\n\t\t//2019-05-09 Noticed that some UDF images do not adhere to the above and instead use WIDE formatting\n\t\t$bad_ext7  = { 2e00 (45|65)00 (58|78)00 (45|65)00 }\t//.exe\n\t\t$bad_ext8  = { 2e00 (53|73)00 (43|63)00 (52|72)00 }\t//.scr\n\t\t$bad_ext9  = { 2e00 (42|62)00 (41|61)00 (54|74)00 }\t//.bat\n\t\t$bad_ext10 = { 2e00 (43|63)00 (4d|6d)00 (44|64)00 }\t//.cmd\n\t\t$bad_ext11 = { 2e00 (4a|6a)00 (53|73)00 }\t\t//.js\n\t\t$bad_ext12 = { 2e00 (56|76)00 (42|62)00 (53|73)00 }\t//.vbs\n\n\n\t\t//Anchor pattern\n\t\t$anchor = /\\.[a-zA-Z]{3};[0-9]/\n\n    condition:\n        uint16(0) == 0x0000\n        and uint16(2) == 0x0000\n\tand uint16(filesize-2) == 0x0000\n\tand any of ($udf*)\n\tand #anchor == 1\n\tand (\n\t\t   #bad_ext1  == 1\n\t\tor #bad_ext2  == 1\n\t\tor #bad_ext3  == 1\n\t\tor #bad_ext4  == 1\n\t\tor #bad_ext5  == 1\n\t\tor #bad_ext6  == 1\n\t\tor #bad_ext7  == 1\n\t\tor #bad_ext8  == 1\n\t\tor #bad_ext9  == 1\n\t\tor #bad_ext10 == 1\n\t\tor #bad_ext11 == 1\n\t\tor #bad_ext12 == 1\n\t)\n}\n\nrule Susp_MS_Lnk\n:malfile\n{\n        meta:\n                description = \"Suspicious MS Lnk File\"\n                author      = \"Peter Misurek\"\n                risk        = \"high\"\n                date        = \"2019-05-06\"\n                sample      = \"cec1fdf5adb00b9844832d355ef877ab\"\n                sample      = \"6623f573ab668b7da9068a714968e8e9\"\n                sample      = \"fef3a77d195da8a049d583b259e161dd\"\n                tlp         = \"AMBER\"\n\n        strings:\n                $mshta          = \"mshta.exe\" nocase wide ascii\n                $url            = /https?\\x3a\\x2f\\x2f/ nocase wide ascii\n\n                $cmd1           = \"cmd.exe\" nocase wide ascii\n                $cmd2           = \"powershell.exe\" nocase wide ascii\n\n                $surfer         = { 2e 00 2e 00 5c 00 2e 00 2e }\n\n                $attrib         = \"attrib\" nocase wide ascii\n                $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                                    69 10 a2 d8 08 00 2b 30 }\n\n        condition:\n                uint16(0) == 0x4c\n                and uint16(0x3c) == 0x7         // start minimized\n                and filesize < 20KB\n                and $bytes at 0x50\n                and (($mshta and $url)\n                or any of ($cmd*))\n                and ($surfer or $attrib)\n}\n\nrule ZIP_Dropper_ManifestDestiny\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        modified = \"2019-05-06\"\n        reference = \"/wiki/emotet, /wiki/hawkeye\"\n        description = \"Potential dropper encapsulated in a ZIP archive\"\n        sample = \"8f7c62dc6edd6adb31d1dacaf583d7a4\"\n\n    strings:\n        $Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)[^A-Z]/  nocase ascii\n        $Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}[^A-Z\\x2e]/                 nocase ascii\n\n    condition:\n        uint16(0) == 0x4b50\n        and $Dropper in (0..256)\n        and #Dropper <= 2\n        and #Extensions <= 2\n}\n\nrule PE_PADPAD_Wrap_Nul\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-01\"\n        description = \"Potential Hawkeye keylogger with WrapNonExceptionThrows, PADPAD, and assembly to EOF NUL\"\n        sample = \"acb54dd5b48a1e39f3e8bec5fa2d3645\"\n\t\treference = \"/wiki/hawkeye\"\n\n    strings:\n\t$ = { 0d 0a3c 2f61 7373 656d 626c 793e 0000 0000 }\t//</assembly> with no CRLF to NUL\n\t$ = { 50 4144 50 4144 }\t\t\t\t\t// PADPAD\n\t$ = \"WrapNonExceptionThrows\"\t\t\t\t// Wiggity, wiggity, whack, wtf is this crap?\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_MZ_Nymaim_KernelSanders\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-03\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with wide and non-wide kernel32.dll\"\n        sample          = \"fcceb04631384fe845a176a5fc95d51a, 2107473834a847fa4677f72f1e5310f2a\"\n        reference\t= \"/wiki/nymaim\"\n\n   strings:\n\t//kernel32.dll wide and non-wide in the same PE/MZ\n        $= { 6b65 726e 656c 3332 2e64 6c6c 0000 }\n        $= { 6b00 6500 7200 6e00 6500 6c00 3300 3200 2e00 6400 6c00 6c00 0000 }\n\n   condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-48) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-80) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-112) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of them\n}\n\nrule PE_TeeBall_Cert_API\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Signed PE MZ with suspect API calls\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-05-02\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t$utn = \"UTN-USERFirst-Object\"\n\n\t\t//SNR isn't tasty, needs more spices\n\t\t$api1 = \"GetOEMCP\"\n\t\t$api2 = \"WideCharToMultiByte\"\n\t\t$api3 = \"EnterCriticalSection\"\n\t\t$api4 = \"GetACP\"\n\t\t$api5 = \"GetCPInfo\"\n\t\t$api6 = \"GetStartupInfo\"\n\t\t$api7 = \"IsDebuggerPresent\"\n\t\t$api8 = \"Interlocked\"\n\t\t$api9 = \"GetStartupInfo\"\n\t\t$api10 = \"MultiByteToWideChar\"\n\t\t$api11 = \"CriticalSection\"\n\n\t\t$spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\t\t$spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.number_of_signatures >= 1\n\t\tand pe.number_of_signatures <= 3\n\t\tand pe.DEBUG_STRIPPED == 512\n\t\tand pe.RELOCS_STRIPPED == 1\n\t\tand pe.LOCAL_SYMS_STRIPPED == 8\n\t\tand pe.LINE_NUMS_STRIPPED == 4\n\t\tand pe.dll_characteristics == 32768\n\t\tand pe.number_of_imports >= 7\n\t\tand $utn in (filesize-4096..filesize)\n\t\tand any of ($spicyspice*)\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_NUL_GZIP\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with NUL to EOF and gzip-base64 embed\"\n        sample \t\t= \"4e0bfe42fdd08bba60711352e1183f8a\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $gzip1 = { 4834 7349 4141 }\n        $gzip2 = { 4800 3400 7300 4900 4100 41 }\n\n\t$api = \"WrapNonExceptionThrows\"\n\n\t$anchor = /H4sIA[A-Za-z0-9\\x2b\\x2f_-]{1024}/\twide ascii\n\n\t//016cd50: 0100 0000 433a 5c78 616d 7070 5c68 7464  ....C:\\xampp\\htd\n\t//016cd60: 6f63 735c 4173 7069 7265 5c66 696c 6573  ocs\\Aspire\\files\n\t//016cd70: 5c70 7269 6e63 6532 3437 5f61 7545 5552  \\prince247_auEUR\n\t//016cd80: 597a 4944 515a 5678 4f64 6f5c 6175 4555  YzIDQZVxOdo\\auEU\n\t//016cd90: 5259 7a49 4451 5a56 784f 646f 6d61 2e70  RYzIDQZVxOdoma.p\n\t//016cda0: 6462 0000 cceb 1600 0000 0000 0000 0000  db..............\n\t$pdb = { 2e70 6462 }\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand any of ($gzip*)\n\tand $api\n\tand $anchor\n\tand $pdb\n}\n\nrule PE_MZ_keyencryption\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with keyencryption\"\n        sample \t\t= \"e58df1b9d3abe4a296ae03b70c6c2033\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n\t$ke = \"keyencryption\"\tnocase ascii\n\n\t$ = \"</assembly>\"\n\t$ = \"anonymous namespace\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #ke > 32\n\tand all of them\n}\n\nrule Office_OLE_Macro_CMD_Rev\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using string reverse full path to cmd.exe with OLE/Macros, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-01\"\n        hash = \"dba69369133b00caf73be2e071cfc2a0\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/icedid\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t$vb1 = \"VBE\"            nocase wide ascii\n\t$vb2 = \"VBA\"            nocase wide ascii\n\t$vb4 = \"OLE\"            nocase wide ascii\n\t$vb5 = \"stdole\"         nocase wide ascii\n\t$vb6 = \"macro\"          nocase wide ascii\n\n\t//String reversed 'c:\\\\\\windows\\\\\\system32\\\\\\cmd'\n\t$cmd = { \t(44|64)[1-6] (4d|6d)[1-6] (63|43)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (52|32)[1-6]\n\t\t \t(53|33)[1-6] (4d|6d)[1-6] (45|65)[1-6] (54|74)[1-6] (53|73)[1-6] (59|79)[1-6]\n\t\t\t(53|73)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (53|73)[1-6] (57|77)[1-6] (4f|6f)[1-6]\n\t\t\t(44|64)[1-6] (4e|6e)[1-6] (49|69)[1-6] (57|77)[1-6] 5c[1-6] 5c[1-6] 5c[1-6]\n\t\t\t3a[1-6] (43|63)\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n\tand any of ($ao*)\n\tand any of ($vb*)\n\tand $cmd\n}\n\nrule PE_MZ_Ursnif_Eyes\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-30\"\n        description = \"Potential Ursnif PE/MZ with spices that make me think it is bad\"\n        sample = \"3ef2de77f4b4f655a689fdf1bf78b6f5\"\n\n    strings:\n\t$version\t= { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 }\n\t$assembly\t= { 3c2f 6173 7365 6d62 6c79 3e0d 0a }\n\t$chrgen\t\t= {\t2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n\t\t\t\t3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n\t\t\t\t4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n\t\t\t\t6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n\t\t\t\t8081 8283 8485 8687 8889 8a8b 8c8d 8e8f\n\t\t\t\t9091 9293 9495 9697 9899 9a9b 9c9d 9e9f\n\t\t\t  }\n\n\t$api1 = \"GetDoubleClickTime\"\n\t$api2 = \"Sleep\"\n\t$api3 = \"QueryPerformance\"\n\t$api4 = \"IsProcessorFeaturePresent\"\n\t$api5 = \"UnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand $version in (4096..filesize-65535)\n\tand $assembly in (4096..filesize-65535)\n\tand $chrgen\n\tand all of ($api*)\n}\n\nrule PE_Packed_Emotet\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential packed emotet/kryptik PE/MZ\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-29\"\n\t\tsample = \"ea155404e407fe8754a4bd938a87e082\"\n\t\tsample = \"84199eebef97df9e51c9ddc6eb245182\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t// outsd odd port i/o\n\t\t$outsd = { 6F5F 655F 5F4D 656D 6F72 79 }\n\n\t\t$ = \"SHEmptyRecycleBinA\"\n\t\t$ = \"FindExecutableW\"\n\t\t$ = \"CryptSignHashA\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand $outsd\n\t\tand any of them\n}\n\nrule PE_Emotet_BO_CryptSignHashA\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-29\"\n        description = \"Potential Emotet PE/MZ using CryptSignHashA with specific byte ordering\"\n        sample = \"ea155404e407fe8754a4bd938a87e082\"\n\treference = \"/wiki/emotet\"\n\n    strings:\n\n\t$ = \"CryptSignHashA\"\n\n\t//0003c60: 656c 3332 2e64 6c6c 0075 6f61 644c 6962  el32.dll.uoadLib\n\t//0003c70: 7261 7279 4578 5700 0000 0000 0000 0000  raryExW.........\n\t$ = { 656c 3332 2e64 6c6c [1-4] 6f61 644c 6962 7261 7279 4578 5700 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_IPv4_CryptHook\n:malexe\n{\n    meta:\n        author = \"Peter Misurek/Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, embedded IPv4 and CryptStringToBinaryA and SetWindowsHookEx\"\n        sample = \"f50cd8516b988d396505bb340899c6f2\"\n        sample = \"87a95561f405678080472d472c33ceba\"\n        sample = \"4e175051935c7c82232dd0c293ac42ef\"\n\n    strings:\n        //Hardcoded IPv4\n        $IP0 = { 302e3?[0-2]2e3?[0-2]2e3? }\n        $IP1 = { 312e3?[0-2]2e3?[0-2]2e3? }\n        $IP2 = { 322e3?[0-2]2e3?[0-2]2e3? }\n        $IP3 = { 332e3?[0-2]2e3?[0-2]2e3? }\n        $IP4 = { 342e3?[0-2]2e3?[0-2]2e3? }\n        $IP5 = { 352e3?[0-2]2e3?[0-2]2e3? }\n        $IP6 = { 362e3?[0-2]2e3?[0-2]2e3? }\n        $IP7 = { 372e3?[0-2]2e3?[0-2]2e3? }\n        $IP8 = { 382e3?[0-2]2e3?[0-2]2e3? }\n        $IP9 = { 392e3?[0-2]2e3?[0-2]2e3? }\n        $IP10 = { 30002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP11 = { 31002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP12 = { 32002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP13 = { 33002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP14 = { 34002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP15 = { 35002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP16 = { 36002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP17 = { 37002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP18 = { 38002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP19 = { 39002e003?00[0-4]002e003?00[0-4]002e003? }\n\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"SetWindowsHookEx\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($IP*)\n        and all of ($API*)\n}\n\nrule MZ_PE_Osiris_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-26\"\n                reference = \"/wiki/osiris\"\n                description = \"Potential Osiris MZ loader byte order and custom PE section\"\n                samples = \"47a4121b54b59a6914afc2e5607aecd1\"\n\n\tstrings:\n\t\t//00012270: 6541 0000 5001 4765 7453 7461 7274 7570  eA..P.GetStartup\n\t\t//00012280: 496e 666f 4100 4b45 524e 454c 3332 2e64  InfoA.KERNEL32.d\n\t\t//00012290: 6c6c 0000 fd00 4765 7444 4300 0302 5265  ll....GetDC...Re\n\t\t$ = { 4765 7453 7461 7274 7570 496e 666f 41[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000\n\t\tand pe.number_of_sections \t>= 5\n\t\tand pe.number_of_imports\t<= 7\n\t\tand pe.DEBUG_STRIPPED \t\t== 512\n\t\tand pe.MACHINE_32BIT \t\t== 256\n\t\tand pe.LOCAL_SYMS_STRIPPED \t== 8\n\t\tand pe.LINE_NUMS_STRIPPED \t== 4\n\t\tand pe.EXECUTABLE_IMAGE \t== 2\n\t\tand pe.RELOCS_STRIPPED \t\t== 1\n\t\tand pe.BYTES_REVERSED_HI \t== 32768\n\t\tand pe.UP_SYSTEM_ONLY \t\t== 16384\n\t\tand pe.DLL \t\t\t== 8192\n\t\tand pe.SYSTEM \t\t\t== 4096\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tnot pe.sections[i].name matches /^\\.[a-z]+(data|text)$/\n\t\t\tand pe.sections[i].name matches /^\\.[a-z]+$/\n\t\t\tand pe.sections[i].raw_data_size == 4096\n\t\t\tand pe.sections[i].virtual_size % 1024 >> 0\n\t\t)\n\t\tand all of them\n}\n\nrule PE_DungCert_Serial\n:malexe\n{\n\n    meta:\n        author   = \"Peter Misurek\"\n        date     = \"2019-04-23\"\n\tmodified = \"2019-04-26\"\n        tlp      = \"AMBER\"\n        description = \"Bad signing certificate serial number with terse one-word Company Name\"\n        samples  = \"914656e842d407c3e90be6d60592fc55\"\n\n    condition:\n        filesize < 1024KB and uint16(0) == 0x5a4d\n        and not pe.signatures[pe.number_of_signatures - 1].serial matches /^([A-Fa-f0-9]{2}\\x3a?){2,}$/\n        and (\n\t\t   pe.version_info[\"CompanyName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t)\n\n}\n\nrule MZ_PE_Pounders_NC\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-25\"\n                reference = \"/wiki/formbook\"\n                description = \"Potential MZ with PE version information pounding of the keyboard.\"\n                samples = \"7d745da50ef4aca016b759f5387fff1b\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"CompanyName\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"ProductName\"] matches /^[a-z]{1,128}$/\n}\n\nrule API_Amadey\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Amadey Binary API\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"fbe6d341c1b69975be74616d01c6d273\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/amadey\"\n\n\tstrings:\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"CreateEventW\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"GetVersionExW\"\n\t\t$ = \"GetOEMCP\"\n\t\t$ = \"GetEnvironmentStringsW\"\n\t\t$ = \"RegisterClassW\"\n\t\t$ = \"UnregisterClassA\"\n\t\t$ = \"PostMessageW\"\n\t\t$ = \"WinVerifyTrust\"\n\t\t$ = \"GetStartupInfoW\"\n\t\t$ = \"LCMapStringW\"\n\n\t\t$byte_order = { 4b45 524e 454c 3332 2e64 6c6c [1-512] 5553 4552 3332 2e64 6c6c [1-32] 434f 4d43 544c 3332 2e64 6c6c [1-256] 5749 4e54 5255 5354 2e64 6c6c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n\t\tand pe.RELOCS_STRIPPED == 1\n\n}\n\nrule Office_40_URL_Embed\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using legacy Word/Excel 4.0 format and a URL present with a PK embed, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        hash = \"d33fd4d91e78f4e4cda03703159bc37e\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/amadey\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $legacy1 = \"Excel 4.0\"\n        $legacy2 = \"Word 4.0\"\n\n        $bad1 = \"http://\"\n        $bad2 = \"https://\"\n\n        $embed = { 504b 0304 }    //PK\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($legacy*)\n        and any of ($bad*)\n        and $embed in (4096 .. filesize)\n}\n\nrule API_Azorult\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Azorult Binary API with ForceRemove and CRC checking\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"4a0fbf8718587af3ebe26d9a86c5e81f\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/azorult\"\n\t\tfeelz = \"https://www.youtube.com/watch?v=Y-Tjgur2DTM&t=8\"\n\n\tstrings:\n\t\t$ = \"GetACP\"\n\t\t$ = \"GetLocaleInfoA\"\n\t\t$ = \"GetVersionExA\"\n\t\t$ = \"GetSystemTimeAsFileTime\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"MultiByteToWideChar\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"HeapDestroy\"\n\t\t$ = \"HeapCreate\"\n\t\t$ = \"HeapReAlloc\"\n\t\t$ = \"TerminateProcess\"\n\t\t$ = \"GetEnvironmentStrings\"\n\t\t$ = \"FreeEnvironmentStrings\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"EnumSystemLocales\"\n\t\t$ = \"IsValid\"\n\t\t$ = \"GetOEMCP\"\n\n\t\t//Interesting spices\n\t\t$ = \"GetProcessWindowStation\"\n\t\t$ = \"ForceRemove\"\n\t\t//$ = \"CRC Checker,\"\n\t\t//$ = \"Microsoft Visual C++\"\n\t\t$ = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n\t\t$ = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 5553 4552 3332 2e64 6c6c 00 }        //KERNEL32.dll USER32.dll\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule Office_Active_AO_Winmgm_Reverse\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using StrReverse, Auto Open behavior, ActiveDocument, and Winmgmts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-22\"\n\t\thash = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/avemaria\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$bad1 = \"Winmgmts\"\t\tnocase ascii\n\t\t$bad2 = \"StrReverse\"\t\tascii\n\t\t$bad3 = \"ActiveDocument\"\tascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($bad*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_LongInt\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using a long integer in XML\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        sample = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/avemaria\"\n\n    strings:\n        $schema = \"xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"\"\n        $long_int = /=\\x22[0-9]{512,8096}\\x22/\n\n    condition:\n        uint16(0) == 0x3f3c\n        and uint16(2) == 0x6d78\n        and uint16(4) == 0x206c\n        and all of them\n}\n\nrule PE_Avemaria_CHAD\n:malexe\n{\n        meta:\n                description = \"Potential AveMaria Binary CHAD HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-22\"\n                sample = \"f5026299891e9351167633f655c9a682, 56ff38d5a61f29004c1ee68ffd4f29d1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/avemaria\"\n\n        strings:\n                //Nonsense\n\t        $chad1 = { 0d0a 486f 7374 3a20 [1-4] 0d0a 4163 6365 7074 3a20 2a2f 2a0d 0a43 6f6e 6e65 6374 696f 6e3a 2063 6c6f 7365 0d0a 0d0a }\n\t\t$chad2 = { 48 5454 502f 312e 310d 0a55 7365 722d 4167 656e 743a 20 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule PE_CHAD_API_Raccoon\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Raccoon Binary API, null bytes to EOF, No .Net Assembly, Dinkumware libraries, and CHAD HTTP Headers\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-19\"\n\t\tsample = \"4895e1c807a9bb9d2359d4510283fc8a\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/raccoon\"\n\n\tstrings:\n\t\t$api1 = \"HttpOpenRequestA\"\n\t\t$api2 = \"InternetReadFile\"\n\t\t$api3 = \"HttpSendRequestA\"\n\n\t\t//Nonsense\n\t\t$chad1 = { 636f 6e74 656e 742d 6469 7370 6f73 6974 696f 6e3a 2066 6f72 6d2d 6461 7461 3b20 6e61 6d65 3d22 }\n\t\t$chad2 = { 22 0d0a 436f 6e74 656e 742d 5479 7065 3a20 6170 706c 6963 6174 696f 6e2f 6f63 7465 742d 7374 7265 616d 0d0a 0d0a }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Dink_Ass_TPDB_W\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API, null bytes to EOF, .Net Assembly, Dinkumware libraries, and a terse path PDB\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n        date = \"2019-04-18\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17, 1e9a562ecf7a96dd7173d24c438ff8f9, 1e9a562ecf7a96dd7173d24c438ff8f9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n            //$api1 = \"AVVirtualProcessorRoot\"\n            $api2 = \"CreateSymbolicLinkW\"\n            $api3 = \"DecodePointer\"\n            $api4 = \"EncodePointer\"\n            $api5 = \"FlsGetValue\"\n            $api6 = \"FlsSetValue\"\n            $api7 = \"FreeEnvironmentStringsW\"\n            $api8 = \"GetACP\"\n            //$api9 = \"GetAsyncKeyState\"\n            $api10 = \"GetCommandLineA\"\n            //$api11 = \"GetCommandLineW\"\n            $api12 = \"GetConsoleCP\"\n            $api13 = \"GetConsoleMode\"\n            $api14 = \"GetCPInfo\"\n            $api15 = \"GetCurrentProcessorNumber\"\n            //$api16 = \"GetCurrentProcessorNumberEx\"\n            //$api17 = \"GetDC\"\n            $api18 = \"GetEnvironmentStringsW\"\n            $api19 = \"GetFileInformationByHandleEx\"\n            $api20 = \"GetLocaleInfoEx\"\n            $api21 = \"GetLocaleInfoW\"\n            $api22 = \"GetLogicalProcessorInformation\"\n            //$api23 = \"GetLogicalProcessorInformationEx\"\n            //$api24 = \"GetNumaHighestNodeNumber\"\n            $api25 = \"GetOEMCP\"\n            $api26 = \"GetProcAddress\"\n            //$api27 = \"GetProcessAffinityMask\"\n            $api28 = \"GetStartupInfoW\"\n            $api29 = \"GetSystemTimeAsFileTime\"\n            //$api30 = \"GetSystemTimePreciseAsFileTime\"\n            $api31 = \"GetTickCount64\"\n            //$api32 = \"GetTraceEnableFlags\"\n            //$api33 = \"GetTraceEnableLevel\"\n            //$api34 = \"GetTraceLoggerHandle\"\n            $api35 = \"GetUserDefaultLCID\"\n            $api36 = \"GetUserDefaultLocaleName\"\n            //$api37 = \"GetVersionExW\"\n            //$api38 = \"InterlockedFlushSList\"\n            $api39 = \"IsDebuggerPresent\"\n            $api40 = \"IsProcessorFeaturePresent\"\n            $api41 = \"IsValidCodePage\"\n            $api42 = \"IsValidLocale\"\n            $api43 = \"IsValidLocaleName\"\n            //$api44 = \"LocaleNameToLCID\"\n            $api45 = \"MultiByteToWideChar\"\n            $api46 = \"QueryPerformanceCounter\"\n            //$api47 = \"RegCreateKeyA\"\n            //$api48 = \"SchedulerKind\"\n            //$api49 = \"SetThreadAffinityMask\"\n            //$api50 = \"SleepConditionVariableCS\"\n            //$api51 = \"SleepConditionVariableSRW\"\n            //$api52 = \"SystemFunction036\"\n            //$api53 = \"TargetOversubscriptionFactor\"\n            $api54 = \"TlsAlloc\"\n            $api55 = \"TlsFree\"\n            $api56 = \"TlsGetValue\"\n            $api57 = \"TlsSetValue\"\n            //$api58 = \"TryAcquireSRWLockExclusive\"\n            //$api59 = \"TryEnterCriticalSection\"\n            $api60 = \"UnhandledExceptionFilter\"\n            //$api61 = \"UTF-16LEUNICODE\"\n            //$api62 = \"VirtualProtectEx\"\n            $api63 = \"WideCharToMultiByte\"\n\n            //Now, some random spice!\n            $spice1 = \"Dinkumware\"\n            $spice2 = \"assembly>\"\n            $spice3 = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n            $spice4 = \"Sleep\"\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint32(filesize-32) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule PE_gozi_ursnif\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Gozi/Ursnif\"\n        risk = \"high\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n        tlp = \"GREEN\"\n\n    strings:\n        $pdb = /\\x3A\\x5c([A-Za-z-]{2,8}\\\\){1,4}(([A-Za-z]{1,12}\\.pdb){1})/\n\n        $ = \"Sleep\"\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"GetOEMCP\"\n        $ = \"HeapFree\"\n        $ = \"HeapSize\"\n        $ = \"TlsAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"HeapAlloc\"\n        $ = \"RtlUnwind\"\n        $ = \"WriteFile\"\n        $ = \"CloseHandle\"\n        $ = \"ExitProcess\"\n        $ = \"GetFileType\"\n        $ = \"HeapReAlloc\"\n        $ = \"TlsGetValue\"\n        $ = \"TlsSetValue\"\n        $ = \"GetConsoleCP\"\n        $ = \"GetLastError\"\n        $ = \"GetStdHandle\"\n        $ = \"LCMapStringW\"\n        $ = \"SetLastError\"\n        $ = \"SetStdHandle\"\n        $ = \"WriteConsoleW\"\n        $ = \"GetConsoleMode\"\n        $ = \"GetProcAddress\"\n        $ = \"GetStringTypeW\"\n        $ = \"RaiseException\"\n        $ = \"GetStartupInfoW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"GetModuleHandleW\"\n        $ = \"TerminateProcess\"\n        $ = \"GetCurrentProcess\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"EnterCriticalSection\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"SetUnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $pdb\n        and pe.version_info[\"LegalCopyright\"] matches /Copyright\\x20?\\xa9\\x2020[0-2][0-9]\\x2e?\\x2d?(20[0-2][0-9])?/\n        and 40 of them\n}\n\nrule API_Emotet_Dinkumware_eFeelz\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API with pdb on E:\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-17\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //Debugger/VM/system inventory\n                $api1 = \"GetLocaleInfoW\"\n                $api2 = \"IsValidLocale\"\n                $api3 = \"GetUserDefaultLCID\"\n                $api4 = \"EnumSystemLocalesW\"\n                $api5 = \"IsDebuggerPresent\"\n                $api6 = \"AreFileApisANSI\"\n                $api7 = \"IsValidCodePage\"\n                $api8 = \"GetTimeZoneInformation\"\n                $api9 = \"GetOEMCP\"\n                $api10 = \"GetACP\"\n                $api11 = \"QueryPerformanceCounter\"\n                $api12 = \"GetCPInfo\"\n                $api13 = \"IsProcessorFeaturePresent\"\n\t\t$api14 = \"GetConsoleCP\"\n\t\t$api15 = \"GetConsoleMode\"\n\n\t\t//Random API feelz\n\t\t$api20 = \"GetCommandLineA\"\n\t\t$api21 = \"GetCommandLineW\"\n\t\t$api22 = \"Sleep\"\n\n                //Now, some random spice!\n                $spice1 = \"Dinkumware\"\n                $spice2 = \"<assembly\"\n\t\t//0065f00: b794 0556 767d 0d3a 0100 0000 653a 5c42  ...Vv}.:....e:\\B\n\t\t//0065f10: 7572 6e5c 7365 6e64 5c68 6f75 7365 5c45  urn\\send\\house\\E\n\t\t//0065f20: 7861 6d70 6c65 436c 6173 732e 7064 6200  xampleClass.pdb.\n\n        \t$spice3 = {(65|45)3a 5c42 [8-64] 2e 7064 6200 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint16(filesize-2) == 0x0000\n                and all of them\n}\n\nrule PE_Ryuk\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Ryuk\"\n        risk = \"high\"\n        sample = \"1bd7d1b87c5091a9653fe8005892b784\"\n        sample = \"4bb18d5e27f9e75b211f8053a1e0fb4f\"\n        tlp = \"GREEN\"\n\t\treference = \"/wiki/ryuk\"\n\n    strings:\n        // No system is safe\n        $str02  = { 4E6F 2073 7973 7465 6D20 6973 2073 6166 }\n\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"TlsAlloc\"\n        $ = \"HeapSize\"\n        $ = \"HeapFree\"\n        $ = \"GetOEMCP\"\n        $ = \"WriteFile\"\n        $ = \"RtlUnwind\"\n        $ = \"HeapAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"FindClose\"\n        $ = \"TlsSetValue\"\n        $ = \"TlsGetValue\"\n        $ = \"HeapReAlloc\"\n        $ = \"GetFileType\"\n        $ = \"FreeLibrary\"\n        $ = \"ExitProcess\"\n        $ = \"CreateFileW\"\n        $ = \"CloseHandle\"\n        $ = \"SetStdHandle\"\n        $ = \"SetLastError\"\n        $ = \"LCMapStringW\"\n        $ = \"GetStdHandle\"\n        $ = \"GetLastError\"\n        $ = \"GetConsoleCP\"\n        $ = \"WriteConsoleW\"\n        $ = \"DecodePointer\"\n        $ = \"RaiseException\"\n        $ = \"LoadLibraryExW\"\n        $ = \"GetStringTypeW\"\n        $ = \"GetProcessHeap\"\n        $ = \"GetProcAddress\"\n        $ = \"GetConsoleMode\"\n        $ = \"IsValidCodePage\"\n        $ = \"GetStartupInfoW\"\n        $ = \"GetCommandLineW\"\n        $ = \"GetCommandLineA\"\n        $ = \"TerminateProcess\"\n        $ = \"SetFilePointerEx\"\n        $ = \"GetModuleHandleW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"SystemFunction036\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentProcess\"\n        $ = \"GetModuleHandleExW\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"InitializeSListHead\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"EnterCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"IsProcessorFeaturePresent\"\n        $ = \"SetUnhandledExceptionFilter\"\n        $ = \"InitializeCriticalSectionAndSpinCount\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $str02\n        and 20 of them\n}\n\nrule API_BO_BlackMoon\n:malexe\n{\n        meta:\n                description = \"Potential BlackMoon/KRBanker Binary API byte order\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"8f6a31b8eaa70217d80cc419f10285274cf3ec4c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/blackmoon\"\n\n        strings:\n\t\t//00016610: 4c6f 6164 4c69 6272 6172 7941 0000 5669  LoadLibraryA..Vi\n\t\t//00016620: 7274 7561 6c50 726f 7465 6374 0000 5261  rtualProtect..Ra\n\t\t//00016630: 7348 616e 6755 7041 0000 5348 4765 7453  sHangUpA..SHGetS\n\t\t//00016640: 7065 6369 616c 466f 6c64 6572 5061 7468  pecialFolderPath\n\n\t\t$byte_order =  { 4c6f 6164 4c69 6272 6172 7941 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 5261 7348 616e 6755 7041 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Keys\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API using Hot Keys\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"ba9e7159bb92c1525de87f4edd9f5af9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n\t\t$api1 = \"GetProcAddress\"\n\n\t\t//Debugger/VM/system inventory\n\t\t$api2 = \"GetLocaleInfoW\"\n\t\t$api3 = \"IsValidLocale\"\n\t\t$api4 = \"GetUserDefaultLCID\"\n\t\t$api5 = \"EnumSystemLocalesW\"\n\t\t$api6 = \"IsDebuggerPresent\"\n\t\t$api7 = \"AreFileApisANSI\"\n\t\t$api8 = \"IsValidCodePage\"\n\t\t$api9 = \"GetTimeZoneInformation\"\n\t\t$api10 = \"GetOEMCP\"\n\t\t$api11 = \"GetACP\"\n\t\t$api12 = \"QueryPerformanceCounter\"\n\t\t$api13 = \"FreeEnvironmentStringsW\"\n\t\t$api14 = \"OutputDebugStringW\"\n\t\t$api15 = \"GetCPInfo\"\n\t\t$api16 = \"IsProcessorFeaturePresent\"\n\n\t\t//Feelz bad\n\t\t$api20 = \"GetSystemTimeAsFileTime\"\n\t\t$api21 = \"WideCharToMultiByte\"\n\t\t$api22 = \"UnhandledExceptionFilter\"\n\t\t$api23 = \"Sleep\"\n\t\t$api24 = \"GetAsyncKeyState\"\n\t\t$api25 = \"UnregisterHotKey\"\n\t\t$api26 = \"TlsAlloc\"\n\t\t$api27 = \"EncodePointer\"\n\t\t$api28 = \"GetCurrentProcessorNumber\"\n\t\t$api29 = \"GetTickCount64\"\n\t\t$api30 = \"SetFileInformationByHandleW\"\n\t\t$api31 = \"CreateSymbolicLinkW\"\n\n\t\t//Now, some random spice!\n\t\t$spice1 = \"Dinkumware\"\n\t\t$spice2 = \"<assembly\"\n\n\t\t//Tracking threats on whitespace usage!  NextGenHacker101 style skills.\n\t\t//$h4x0r = { 55 2020 2020 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint16(filesize-2) == 0x0000\n\t\tand all of them\n}\n\nrule PE_gozi_ursnif2\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-08\"\n        description = \"Gozi/Ursnif\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n\n    strings:\n        $api01 = \"GetProcAddress\"\n        $api02 = \"TerminateProcess\"\n        $api03 = \"GetCurrentProcess\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and\n        (pe.entry_point == 0x5e8 or pe.entry_point == 0x2abe7\n        or pe.entry_point == 0x2b95d or pe.entry_point == 0x2c3f8\n        or pe.entry_point == 0x2cf18 or pe.entry_point == 0x2ee78\n        or pe.entry_point == 0x308a2 or pe.entry_point == 0x31c2f\n        or pe.entry_point == 0x9d17f2 or pe.entry_point == 0x1281D1\n        or pe.entry_point == 0x1567 or pe.entry_point == 0x6B9D\n        or pe.entry_point == 0x1839F)\n}\n\nrule PE_DungCert_CN\n:malexe\n{\n    meta:\n    author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-04-01\"\n\tmodified = \"2019-04-12\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/emotet\"\n        description = \"Signed PE/MZ with a garbage CN value, reminds me of SSLValidator.pl logic\"\n        samples = \"25f63a7402048eea0955b7468e9ef2c3\"\n\n    condition:\n    uint16(0) == 0x5a4d\n        and (\n               pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[^aAeEiIoOuU]+$/\n            or pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[A-Z]{8,32}$/\n        )\n}\n\nrule PE_DungCert_HackingTooMuchTime\n:malexe\n{\n    meta:\n        author   = \"Nathan Fowler/Peter Misurek\"\n        thanks   = \"The Distinguished Order of the Miscreant Punchers, RHMP\"\n        date     = \"2019-04-02\"\n\tmodified = \"2019-04-12\"\n        tlp      = \"AMBER\"\n        reference   = \"/wiki/emotet\"\n        description = \"Self-Signed PE/MZ with a not_after value so large they are simply hacking too much time.\"\n        samples  = \"25f63a7402048eea0955b7468e9ef2c3\"\n        feelz    = \"https://www.youtube.com/watch?v=fQGbXmkSArs\"\n\n    condition:\n        //MZ and PE\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n        //Null at the end, seen this quite a few times with Emotet\n        and uint16(filesize-2) == 0x0000\n\n        //Certificate expires in 10 years or more and appears to be self-signed\n        and pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + (315569520 * 1.1)\n        and pe.signatures[pe.number_of_signatures -1].version    == 3\n        and pe.signatures[pe.number_of_signatures -1].algorithm  == \"sha1WithRSA\"\n        and pe.signatures[pe.number_of_signatures -1].issuer     == pe.signatures[pe.number_of_signatures -1].subject\n        and pe.signatures[pe.number_of_signatures -1].subject matches /^\\/CN=[^\\x2e]+$/\n\n        //LOL, literally no idea what I'm doing here, but PE isn't PEPE without spices.\n        and pe.NO_BIND           == 2048\n        and pe.NO_SEH            == 1024\n        and pe.NO_ISOLATION      == 512\n        and pe.NX_COMPAT         == 256\n        and pe.DEBUG_STRIPPED    == 512\n        and pe.MACHINE_32BIT     == 256\n        and pe.FORCE_INTEGRITY   == 128\n\n        //Maybe a good idea, https://www.sans.org/reading-room/whitepapers/malicious/attributes-malicious-files-33979 says so.  I grabbed some of these at random feelz.\n        and pe.SUBSYSTEM_WINDOWS_CUI     == 3\n        and pe.SUBSYSTEM_WINDOWS_GUI     == 2\n        and pe.SUBSYSTEM_NATIVE          == 1\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.LINE_NUMS_STRIPPED        == 4\n        and pe.EXECUTABLE_IMAGE          == 2\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n\n}\n\nrule API_Emotet_PE_PEPE\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary using too many feelz\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-12\"\n                sample = \"1e57b56a1e40a89d326ca55ee1df2996\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n                $pepe1 = { 3a00 0000 ffff 8?00 }\n                $pepe2 = { 3b00 0000 ffff 8?00 }\n                $pepe3 = { 3c00 0000 ffff 8?00 }\n                $pepe4 = { 3d00 0000 ffff 8?00 }\n                $pepe5 = { 3e00 0000 ffff 8?00 }\n                $pepe6 = { 3f00 0000 ffff 8?00 }\n                $pepe7 = { 3000 0000 ffff 8?00 }\n                $pepe8 = { 3100 0000 ffff 8?00 }\n                $pepe9 = { 3200 0000 ffff 8?00 }\n                $pepe10 = { 3300 0000 ffff 8?00 }\n                $pepe11 = { 3400 0000 ffff 8?00 }\n                $pepe12 = { 3500 0000 ffff 8?00 }\n                $pepe13 = { 3600 0000 ffff 8?00 }\n                $pepe14 = { 3700 0000 ffff 8?00 }\n                $pepe15 = { 3800 0000 ffff 8?00 }\n                $pepe16 = { 3900 0000 ffff 8?00 }\n\n        condition:\n                uint16(0) == 0x5a4d\n        and $lib\n        and ( #pepe1 + #pepe2 + #pepe3 + #pepe4 + #pepe5 + #pepe6 + #pepe7 + #pepe8 + #pepe9 + #pepe10 + #pepe11 + #pepe12 + #pepe13 + #pepe14 + #pepe15 + #pepe16 >= 10 )\n}\n\nrule API_Trickbot_Voltron\n:malexe\n{\n        meta:\n            description = \"Potential Trickbot binary\"\n            author = \"Nathan Fowler\"\n            risk = \"high\"\n            date = \"2019-04-10\"\n            sample = \"f4cc6daa274bdc484cadd4745ff7a975\"\n            tlp = \"GREEN\"\n            reference = \"/wiki/trickbot\"\n            feelz = \"https://youtu.be/tZZv5Z2Iz_s?t=2\"\n\n        strings:\n            //0025820: c002 496e 7465 726c 6f63 6b65 6449 6e63  ..InterlockedInc\n            //0025830: 7265 6d65 6e74 0000 bc02 496e 7465 726c  rement....Interl\n            //0025840: 6f63 6b65 6444 6563 7265 6d65 6e74 0000  ockedDecrement..\n            //0025850: 2104 536c 6565 7000 bd02 496e 7465 726c  !.Sleep...Interl\n            //0025860: 6f63 6b65 6445 7863 6861 6e67 6500 b402  ockedExchange...\n            //$byte_order = { bc02 496e 7465 726c 6f63 6b65 6444 6563 7265 6d65 6e74 [1-4] 536c 6565 70[1-4] 496e 7465 726c 6f63 6b65 64 }\n\n            //C library\n            $lib = \"Dinkumware\"               wide ascii\n\n            //Crypt stuffs\n            $api1 = \"CryptEncrypt\"            wide ascii\n            $api2 = \"CryptImportKey\"          wide ascii\n            $api3 = \"CryptAcquireContextA\"    wide ascii\n            $api4 = \"InterlockedIncrement\"    wide ascii\n            $api5 = \"InterlockedDecrement\"    wide ascii\n            $api6 = \"InterlockedExchange\"     wide ascii\n            $api7 = \"Sleep\"                   wide ascii\n\n        condition:\n            uint16(0) == 0x5a4d\n            and all of them\n}\n\nrule Baldrs_hate_MZ\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-09\"\n                reference = \"/wiki/baldr\"\n                description = \"Potential Baldr stealer/locker\"\n                samples = \"d673af1e4ca06225f287677943a214fd\"\n\n        strings:\n\t\t$api1 = \"BinaryReader\"\t\t\t\tascii wide\n\t\t$api2 = \"CryptoServiceProvider\"\t\t\tascii wide\n\t\t$api3 = \"TripleDESCryptoServiceProvider\"\tascii wide\n\t\t$api4 = \"SHA1CryptoServiceProvider\"\t\tascii wide\n\t\t$api5 = \"CryptoTransform\"\t\t\tascii wide\n\t\t$api6 = \"TransformFinalBlock\"\t\t\tascii wide\n\t\t$api7 = \"BinaryOperation\"\t\t\tascii wide\n\t\t$api8 = \"BigEndianUnicode\"\t\t\tascii wide\n\t\t$api9 = \"SymmetricAlgorithm\"\t\t\tascii wide\n\t\t$api10 = \"CryptUnprotectData\"\t\t\tascii wide\t//Srsly?\n\t\t$api11 = \"FromBase64String\"\t\t\tascii wide\n\n\t\t//.NET hatred\n\t\t$net1 = \"SkipVerification\"\t\t\tascii wide\n\t\t$net2 = \"WrapNonExceptionThrows\"\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule MZ_Emotet_Debug_Peek\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-09\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ with network mapping events\"\n        samples = \"096ba46194cefe593d39d4a07bb297db\"\n\n    strings:\n\n        //00150c0: 1a03 4d75 6c74 6942 7974 6554 6f57 6964  ..MultiByteToWid\n        //00150d0: 6543 6861 7200 2703 4f70 656e 4576 656e  eChar.'.OpenEven\n        //00150e0: 7441 0000 2b03 4f70 656e 4669 6c65 4d61  tA..+.OpenFileMa\n        //00150f0: 7070 696e 6741 0000 3303 4f70 656e 5072  ppingA..3.OpenPr\n        //0015100: 6f63 6573 7300 3a03 4f75 7470 7574 4465  ocess.:.OutputDe\n        //0015110: 6275 6753 7472 696e 6741 0000 3b03 4f75  bugStringA..;.Ou\n        //0015120: 7470 7574 4465 6275 6753 7472 696e 6757  tputDebugStringW\n        //0015130: 0000 3e03 5065 656b 4e61 6d65 6450 6970  ..>.PeekNamedPip\n        //0015140: 6500 4403 5072 6f63 6573 7333 3246 6972  e.D.Process32Fir\n        $byte_order = { 75 7470 7574 4465 6275 6753 7472 696e 6741 [1-8] 4f75 7470 7574 4465 6275 6753 7472 696e 6757 [1-8] 65 656b 4e61 6d65 6450 6970 65 }\n        $api1 = \"OpenFileMappingA\"    ascii\n        $api2 = \"MultiByteToWideChar\"    ascii\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n}\n\nrule MZ_Emotet_Space_Payload_NN\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-22\"\n\t\tmodified = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential Emotet MZ with oddly indented .NET stuffs or something also seen with Gandcrab\"\n\t\tsamples = \"e38024cae55c8f75236fbfbd0ba8bcda, c734c80b8b1b11417a9358e01b5567ac, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t//I keep coming back to this quad-spaced CRLF stuff.\n\t\t//I think this is an oddity... feelz.\n\t\t//002ae20: 7374 5665 7273 696f 6e3d 2231 2e30 223e  stVersion=\"1.0\">\n\t\t//002ae30: 0d0a 0d0a 2020 2020 3c61 7373 656d 626c  ....    <assembl\n\t\t//002ae40: 7949 6465 6e74 6974 790d 0a20 2020 2020  yIdentity..\n\t\t//002ae50: 2020 7479 7065 3d22 7769 6e33 3222 0d0a    type=\"win32\"..\n\t\t//002ae60: 2020 2020 2020 206e 616d 653d 2244 6973         name=\"Dis\n\t\t//002ae70: 6d2e 3122 0d0a 2020 2020 2020 2070 726f  m.1\"..       pro\n\t\t//002ae80: 6365 7373 6f72 4172 6368 6974 6563 7475  cessorArchitectu\n\t\t//002ae90: 7265 3d22 7838 3622 0d0a 2020 2020 2020  re=\"x86\"..\n\t\t//002aea0: 2076 6572 7369 6f6e 3d22 352e 312e 302e   version=\"5.1.0.\n\t\t//002aeb0: 3022 202f 3e0d 0a20 2020 2020 2020 0d0a  0\" />..       ..\n\t\t//002aec0: 2020 2020 3c64 6573 6372 6970 7469 6f6e      <description\n\t\t//002aed0: 3e57 696e 646f 7773 2064 6570 6c6f 796d  >Windows deploym\n\t\t//002aee0: 656e 7420 696d 6167 6520 7365 7276 6963  ent image servic\n\t\t//002aef0: 696e 6720 616e 6420 6d61 6e61 6765 6d65  ing and manageme\n\t\t//002af00: 6e74 2074 6f6f 6c3c 2f64 6573 6372 6970  nt tool</descrip\n\t\t//002af10: 7469 6f6e 3e0d 0a0d 0a20 2020 203c 6669  tion>....    <fi\n\n\t\t//Oddly spaced indentions\n\t\t$feelz111 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020202020202020 76657273696f6e3d22 }\n\t\t$feelz112 = { 2f3e0d0a \t\t\t\t\t\t\t 2020202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz91 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020202020202020 76657273696f6e3d22 }\n\t\t$feelz92 = { 2f3e0d0a \t\t\t\t\t\t\t202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz71 = { 70726f636573736f724172636869746563747572653d22783836220d0a 20202020202020 76657273696f6e3d22 }\n\t\t$feelz72 = { 2f3e0d0a \t\t\t\t\t\t\t20202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz51 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020 76657273696f6e3d22 }\n\t\t$feelz52 = { 2f3e0d0a \t\t\t\t\t\t\t2020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz31 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020 76657273696f6e3d22 }\n\t\t$feelz32 = { 2f3e0d0a \t\t\t\t\t\t\t202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t//Oddly spaced indentions seen in Gandcrab 2019-04-09\n\t\t$feelz_he_11 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020202020\t3c }\n\t\t$feelz_he_9 = { 3c6170706c69636174696f6e3e200d0a\t202020202020202020\t3c }\n\t\t$feelz_he_7 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020\t\t3c }\n\t\t$feelz_he_5 = { 3c6170706c69636174696f6e3e200d0a\t2020202020\t\t3c }\n\t\t$feelz_he_3 = { 3c6170706c69636174696f6e3e200d0a\t202020\t\t\t3c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t   all of ($feelz11*)\n\t\t\tor all of ($feelz9*)\n\t\t\tor all of ($feelz7*)\n\t\t\tor all of ($feelz5*)\n\t\t\tor all of ($feelz3*)\n\t\t\tor $feelz_he_11\n\t\t\tor $feelz_he_9\n\t\t\tor $feelz_he_7\n\t\t\tor $feelz_he_5\n\t\t\tor $feelz_he_3\n\n\t\t)\n}\n\nrule MZ_ButtPadding\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential MZ with PADDINGXX at EOF or null EOF with PADDINGXX in 1024 bytes to EOF\"\n\t\tsamples = \"d05b9bf3e5093ad39ab60289ba952723, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t$padding = \"PADDINGXX\"\tascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t$padding in (filesize-64..filesize)\n\t\t\tor (\n\t\t\t\t    uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\t\t\tand $padding in (filesize-1024..filesize)\n\t\t\t)\n\t\t)\n}\n\nrule PE_Lots_Of_Evasion\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE with lots of evasive maneuvers\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule Hawkeye_PE_Assembly_Null\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-08\"\n\t\tdescription = \"Potential Hawkeye MZ Payload with .net assembly and null termination EOF\"\n\t\tsample = \"15961181f40ec5ca7c54f0c74dc2dce8\"\n\t\treference = \"/wiki/hawkeye\"\n\n\tstrings:\n\t\t$net = { 3e0d 0a3c 2f61 7373 656d 626c 793e 0d0a 0000 0000 0000 0000 0000 }\n\t\t$pkt = { 5075 626c 6963 4b65 7954 6f6b 656e 3d6e 756c 6c }\n\t\t$pdb = { 2e70 6462 }\n\n\t\t//16 byte value pairs, kind of like PEPE's brother.\n\t\t$byte = { 00\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t00 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand $net in (filesize-1024..filesize)\n\t\tand $pdb in (filesize-4096..filesize)\n\t\tand $pkt in (1024..8192)\n\t\tand #byte > 64\n}\n\nrule Office_Base64_BreakCatchWide\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential Emotet maldoc using base64 wide encoded break->catch\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-21\"\n\t\tmodified = \"2019-04-08\"\n\t\thash = \"534ab5d85e4e439449e3ad11708afcae\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t// UTF8 and UTF16-LE string wide base64 encoded\n\t\t$encstring_1 = \"IAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHs\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_2 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_3 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB\"       ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_4 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB7AH\"      ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_5 = \"HIAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHsAfQ\"     ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_6 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB9AH\"    ascii wide // Null-spaced wide format of break;}}catch{}}\n\n\t\t$encstring_7 = \"MAYQB0AGMAaAB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_8 = \"YwBhAHQAYwBoAHs\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_9 = \"BjAGEAdABjAGgAewB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_10 = \"GMAYQB0AGMAaAB7AH\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_11 = \"YwBhAHQAYwBoAHsAfQ\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_12 = \"BjAGEAdABjAGgAewB9AH\" ascii wide // Null-spaced wide format of }catch{}}\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($encstring_*)\n}\n\nrule MZ_API_PDB_Dropper\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ dropper\"\n        sample = \"5849bacfb97dadc213b48011577b89e2\"\n\n    strings:\n        //Require a PDB\n        $pdb = { 2e70 6462 0000 }\n\n        //API calls (VM/Debugger checking and encoded pointers)\n        $api1 = \"SetUnhandledExceptionFilter\"    wide ascii\n        $api2 = \"IsDebuggerPresent\"        wide ascii\n        $api3 = \"IsProcessorFeaturePresent\"    wide ascii\n        $api4 = \"EncodePointer\"            wide ascii\n        $api5 = \"DecodePointer\"            wide ascii\n        $api6 = \"Sleep\"                wide ascii\n        $api7 = \"GetWindowsDirectoryA\"        wide ascii\n        $api8 = \"GetSystemTimeAsFileTime\"    wide ascii\n        $api9 = \"VirtualProtect\"        wide ascii\n        $api10 = \"GetTempPathA\"            wide ascii\n        $api11 = \"FlsAlloc\"            wide ascii\n\n        //Other stuffs?\n        $stuffs1 = \"AVbad_alloc@std@@\"        wide ascii\n        $stuffs2 = \"AVexception@std@@\"        wide ascii\n        $stuffs3 = \"AVlogic_error@std@@\"    wide ascii\n\n        //.NET stuffs\n        //00035830: 7365 223e 3c2f 7265 7175 6573 7465 6445  se\"></requestedE\n        //00035840: 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a  xecutionLevel>..\n        //00035850: 2020 2020 2020 3c2f 7265 7175 6573 7465        </requeste\n        //00035860: 6450 7269 7669 6c65 6765 733e 0d0a 2020  dPrivileges>..\n        //00035870: 2020 3c2f 7365 6375 7269 7479 3e0d 0a20    </security>..\n\n        $net1 = { 3c2f 7265 7175 6573 7465 6445 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a 2020 2020 2020 3c2f 7265 7175 6573 7465 6450 7269 7669 6c65 6765 733e 0d0a 2020 2020 3c }\n        $net2 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n}\n\nrule Office_Var_512\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a large volume of var definitions or array element index one value references\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-01\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/cobint\"\n\t\tsample = \"4517ceb504a23350ec22508b854e9415\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Var\n\t\t$var1 = \"var \"\t\tnocase wide ascii\n\t\t$var2 = \"[1]\"\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand ( #var1 > 512 or #var2 > 512 )\n}\n\nrule Hawkeye_Keylogger_MZ\n:malexe\n{\n\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-03-22\"\n        description = \"Potential Hawkeye Keylogger based on API byte ordering\"\n        samples = \"7b29c3f38cab047488f259d6cfb29948, 969305f9f01a46e8eee82885d9bde2bd\"\n        reference = \"/wiki/hawkeye\"\n\n    strings:\n        //011ff00: 6900 0000 8d49 4200 5669 7274 7561 6c41  i....IB.VirtualA\n        //011ff10: 6c6c 6f63 0000 0000 6b65 726e 656c 3332  lloc....kernel32\n\n        //008ef00: 4765 744e 6174 6976 6553 7973 7465 6d49  GetNativeSystemI\n        //008ef10: 6e66 6f00 6b65 726e 656c 3332 2e64 6c6c  nfo.kernel32.dll\n\n        $byte_order1 = { 4765 744e 6174 6976 6553 7973 7465 6d49 6e66 6f[1-4] 6b65 726e 656c 3332 2e64 6c6c }\n        $byte_order2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and any of ($byte_order*)\n}\n\nrule Random_Hunt_20190321\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt for VM-check/debugger potentially smokeloader or similar\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-21\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/smokeloader\"\n\t\tsample = \"986e45dd8ddc32d45b2c00dd6f0619ac\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"IsDebuggerPresent\"          wide ascii\n                $badapi2 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi3 = \"UnhandledExceptionFilter\"   wide ascii\n\t\t$badapi4 = \"Sleep\"\t\t\twide ascii\n\t\t$badapi5 = \"GetTimeZone\"\t\twide ascii\n\t\t$badapi6 = \"GetOEMCP\"\t\t\twide ascii\n\t\t$badapi7 = \"GetACP\"\t\t\twide ascii\n\t\t$badapi8 = \"GetCPInfo\"\t\t\twide ascii\n\t\t$badapi9 = \"VirtualProtect\"\t\twide ascii\n\t\t$badapi10 = \"QueryPerformance\"\t\twide ascii\n\t\t$badapi11 = \"GetProcessWindow\"\t\twide ascii\n\t\t$badapi12 = \"GetUserObjectInfo\"\t\twide ascii\n\t\t$badapi13 = \"GetLastActive\"\t\twide ascii\n\t\t$badapi14 = \"PeekMessageW\"\t\twide ascii\n\t\t$badapi15 = \"SetWindowsHook\"\t\twide ascii\n\n\t\t$padding = \"PADDINGXXPADDING\"\t\tascii\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-96) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000000000000000\n                and all of them\n}\n\nrule Win32_XXPADDING_NULL\n:malexe\n{\n    meta:\n        description = \"Potential dropper/stealer 32bit PE with 32byte EOF PADDINGXXPADDING to NULL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-03-21\"\n        hash = \"dd408e70b13d29b37d03b390deed85a8\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/pony, /wiki/lokibot\"\n\n    strings:\n        //This program must be run under Win32\\r\\n\n        $win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n        //PADDINGXXPADDING\n        $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $win32 in (0..256)\n        and $byte_padding in (filesize-1024..filesize)\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and uint32(filesize-256) == 0x00000000000000000000000000000000\n}\n\nrule Troldesh_API_Byte_Order\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                modified        = \"2019-03-21\"\n                description     = \"Potential Troldesh payload\"\n                reference       = \"/wiki/troldesh\"\n                sample          = \"588c44f7d45328df605aaa90902f51b4, e3b60927db92de73e80813fa24a7c61b, d0b32bcb0d2d3c809dd829d0b4f5e36f, 7f9d970c685f7f33aa8a961f2a10173d\"\n\n        strings:\n                $this_program   = {     4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 4000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n        //VirtualAlloc kernel32\n        $api1 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 0000 }\n\n        //VirtualAlloc GetModuleHandle KERNEL32.dll }\n        $api2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4] 4b45 524e 454c 3332 2e64 6c6c }\n\n        //Kernel32.dll ActiveKeyboardLayout\n        $api3 = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 4163 7469 7661 7465 4b65 7962 6f61 7264 4c61 796f 7574 00 }\n\n        //Sleep TerminateProcess TlsAlloc\n        $api4 = { 2104 536c 6565 70[1-4] 2d04 5465 726d 696e 6174 6550 726f 6365 7373 [1-4] 546c 7341 6c6c 6f63 00 }\n\n        //Rich PE\n        $rich = { 5269 6368 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and any of ($api*) and $rich in (0..256)\n}\n\nrule Random_Hunt_20190320\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"SetFileTime\"                wide ascii\n                $badapi2 = \"IsDebuggerPresent\"          wide ascii\n                $badapi3 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi4 = \"IsValidLocale\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Azorult_API_Pad\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Azorult binary based on API ordering and Padding.  May match other families.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                sample = \"56d26fa38657f89c9a7800c9217443c1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/azorult, /wiki/pony, /wiki/lokibot\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //API ordering\n                //006cd10: da10 0700 ee10 0700 0000 0000 6b65 726e  ............kern\n                //006cd20: 656c 3332 2e64 6c6c 0000 0000 4465 6c65  el32.dll....Dele\n                //006cd30: 7465 4372 6974 6963 616c 5365 6374 696f  teCriticalSectio\n                //006cd40: 6e00 0000 4c65 6176 6543 7269 7469 6361  n...LeaveCritica\n                //006cd50: 6c53 6563 7469 6f6e 0000 0000 456e 7465  lSection....Ente\n                //006cd60: 7243 7269 7469 6361 6c53 6563 7469 6f6e  rCriticalSection\n                $byte_order1 = { 6b65 726e 656c 3332 2e64 6c6c [1-4] 4465 6c65 7465 4372 6974 6963 616c 5365 6374 696f 6e00 }\n\n                //006ce10: 7274 7561 6c51 7565 7279 0000 0000 5769  rtualQuery....Wi\n                //006ce20: 6465 4368 6172 546f 4d75 6c74 6942 7974  deCharToMultiByt\n                //006ce30: 6500 0000 4d75 6c74 6942 7974 6554 6f57  e...MultiByteToW\n                //006ce40: 6964 6543 6861 7200 0000 6c73 7472 6c65  ideChar...lstrle\n                //006ce50: 6e41 0000 0000 6c73 7472 6370 796e 4100  nA....lstrcpynA.\n                $byte_order2 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 65[1-4] 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 72[1-4] 6c73 7472 6c65 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n                and $byte_padding in (filesize-48 .. filesize)\n}\n\nrule maldoc_b64_cmd_x20\n:maldoc\n{\n    meta:\n        author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-03-19\"\n        tlp = \"AMBER\"\n        sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n        reference = \"/wiki/ursnif\"\n        description = \"Potential Maldoc Dropper using cmd with trailing spaces and wide base64 encoding\"\n\n    strings:\n        //VBA and OLE embedding\n        $vb1 = \"VBE\" nocase wide ascii\n        $vb2 = \"VBA\" nocase wide ascii\n        $vb4 = \"OLE\" nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n        //AutoExecute Macro Behavior\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        //Base64 encoded camel-case version of 'cmd  ' or 'cmd.  ' in WIDE format\n        $b1 = \"0ARAA\"        wide ascii\n        $b2 = \"0AZAA\"        wide ascii\n        $b3 = \"BNAEQ\"        wide ascii\n        $b4 = \"BNAGQ\"        wide ascii\n        $b5 = \"bQBEAC\"       wide ascii\n        $b6 = \"bQBkAC\"       wide ascii\n        $b7 = \"BtAEQ\"        wide ascii\n        $b8 = \"BtAGQ\"        wide ascii\n        $b9 = \"E0ARAAgAC\"    wide ascii\n        $b10 = \"E0ARAAuAC\"   wide ascii\n        $b11 = \"E0AZAAgAC\"   wide ascii\n        $b12 = \"E0AZAAuAC\"   wide ascii\n        $b13 = \"G0ARAAgAC\"   wide ascii\n        $b14 = \"G0ARAAuAC\"   wide ascii\n        $b15 = \"G0AZAAgAC\"   wide ascii\n        $b16 = \"G0AZAAuAC\"   wide ascii\n        $b17 = \"TQBEAC\"      wide ascii\n        $b18 = \"TQBkAC\"      wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and any of ($vb*)\n        and any of ($ao*)\n        and any of ($b*)\n}\n\nrule ursnif_maldoc_dropper_128byte\n:maldoc\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2019-03-19\"\n                tlp = \"AMBER\"\n                sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n                reference = \"/wiki/ursnif\"\n                description = \"Potential Maldoc Dropper\"\n\n        strings:\n                //128 contigious bytes with no whitespace is odd.\n                $base64 = /[A-Z0-9\\x3b\\x3d_-]{128}/     nocase ascii\n\n                //Office 15 Long Path\n                $office15 = {   433a 5c50 726f 6772 616d 2046 696c 6573\n                                5c43 6f6d 6d6f 6e20 4669 6c65 735c 4d69\n                                6372 6f73 6f66 7420 5368 6172 6564 5c4f\n                                4646 4943 4531 355c 4d53 4f2e 444c 4c\n                        }\n\n                //Win16 compatibility\n                $win16 = \"Win16\"        wide ascii\n\n                //VBA and OLE embedding\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n                //AutoExecute Macro Behavior\n                $ao1 = \"AutoExec\"        nocase wide ascii\n                $ao2 = \"AutoOpen\"        nocase wide ascii\n                $ao3 = \"Workbook_Open\"   nocase wide ascii\n                $ao4 = \"Document_Open\"   nocase wide ascii\n                $ao5 = \"_Eval\"           nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office15 and $win16\n                and any of ($vb*)\n                and any of ($ao*)\n                and $base64\n}\n\nrule Formbook_PE_Packed_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Formbook packed binary, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/formbook\"\n\n        strings:\n\t\t$packed1 = \"aspack\"\tascii\n\t\t$packed2 = \"adata\"\tascii\n\n\n\t\t//00719c0: f9ef 1100 0000 0000 6b65 726e 656c 3332  ........kernel32\n\t\t//00719d0: 2e64 6c6c 0000 0047 6574 5072 6f63 4164  .dll...GetProcAd\n\t\t//00719e0: 6472 6573 7300 0000 4765 744d 6f64 756c  dress...GetModul\n\t\t//00719f0: 6548 616e 646c 6541 0000 004c 6f61 644c  eHandleA...LoadL\n\t\t//0071a00: 6962 7261 7279 4100 0000 0000 0000 0000  ibraryA.........\n\n\t\t$byte_order = { 6b65 726e 656c 3332 2e64 6c6c [1-4]47 6574 5072 6f63 4164 6472 6573 73[1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4]4c 6f61 644c 6962 7261 7279 4100 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule Ursnif_CHRGEN_API_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential ursnif binary with CHRGEN, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/ursnif\"\n\n        strings:\n\n                //Chrgen\n                $chrgen1 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n                                6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n                        }\n                $chrgen2 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a5b 5c5d 5e5f\n                                6041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a7b 7c7d 7e7f\n                        }\n\n                //API Byte Ordering\n\t\t$byte_order = { 536c 6565 70[1-4] 4765 744d 6f64 756c 6546 696c 654e 616d 6557 }\n\n\t\t//.NET Spices\n\t\t$spice = /\\/security>[\\x20\\x0d\\x0a]+</\tascii\n\n\t\t//API calls (VM/Debugger checking and encoded pointers)\n\t\t$api1 = \"SetUnhandledExceptionFilter\"\twide ascii\n\t\t$api2 = \"IsDebuggerPresent\"\t\twide ascii\n\t\t$api3 = \"IsProcessorFeaturePresent\"\twide ascii\n\t\t$api4 = \"EncodePointer\"\t\t\twide ascii\n\t\t$api5 = \"DecodePointer\"\t\t\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule VM_Detect_BadAPI_MZ_Pad\n:malexe\n{\n        meta:\n                 description = \"Potential dropper/stealer\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/pony, /wiki/lokibot, /wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule API_Detect_Crypto_Pad_Think\n:malexe\n{\n        meta:\n                 description = \"Potential miner, malware, or ransomware with VM/Hardware detection and crypto functions w/padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n                $badapi10 = \"GetACP\"                    wide ascii\n                $badapi11 = \"GetOEMCP\"                  wide ascii\n                $badapi12 = \"SetUnhandledExceptionFilter\" wide ascii\n                $badapi13 = \"GetStartupInfoW\"           wide ascii\n                $badapi14 = \"GetLocaleInfoEx\"           wide ascii\n\n                //Ransomware Stuffs\n                $badapi20 = \"AreFileApisANSI\"           wide ascii\n                $badapi21 = \"SystemFunction036\"         wide ascii\n                $badapi22 = \"TlsAlloc\"                  wide ascii\n\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Qakbot_SMB_Feelz2\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-13\"\n                description     = \"Potential Qakbot, API call ordering and potentially SMB Feelz to smb.microsoft.com\"\n                reference       = \"/wiki/qakbot\"\n                sample          = \"61d36e1e058d996b28ae0f8a89fbdc46\"\n\n        strings:\n                $this_program = {       4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 ??00 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n                //Random PEPEs\n                //000789f0: 3e90 2029 0100 0000 5c5c 736d 622e 6d69  >. )....\\\\smb.mi\n                //00078a00: 6372 6f73 6f66 742e 636f 6d5c 7368 6172  crosoft.com\\shar\n                //00078a10: 655c 6465 762e 7064 6200 0000 0000 0000  e\\dev.pdb.......\n\n                //$pepe = { 5c5c 736d 622e 6d69 6372 6f73 6f66 742e 636f 6d5c }\n\n                //Maybe throw some spices in here too just for Spicy Spice (the missing Spice girl)\n                //00078d90: 322e 646c 6c00 d001 4973 4875 6e67 4170  2.dll...IsHungAp\n                //00078da0: 7057 696e 646f 7700 5553 4552 3332 2e64  pWindow.USER32.d\n                //00078db0: 6c6c 0000 2702 5175 6572 7953 6572 7669  ll..'.QueryServi\n                //00078dc0: 6365 4f62 6a65 6374 5365 6375 7269 7479  ceObjectSecurity\n                //00078dd0: 0000 4144 5641 5049 3332 2e64 6c6c 0000  ..ADVAPI32.dll..\n                $spice = {  4973 4875 6e67 4170 7057 696e 646f 77[1-4] 5553 4552 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and $spice\n}\n\nrule njRAT_AutoIT_API\n{\n\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-03-14\"\n                reference = \"/wiki/bladabindi\"\n                description = \"Potential njrat binary or other RAT/stealer\"\n                sample = \"1e1df9886159e73bdf87c1c7ee5b8704\"\n\n        strings:\n\n                //0013bdb0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                //0013bdc0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //0008ebc0: 6900 7400 0000 0000 2f00 4100 7500 7400  i.t...../.A.u.t.\n                //0008ebd0: 6f00 4900 7400 3300 4500 7800 6500 6300  o.I.t.3.E.x.e.c.\n                //0008ebe0: 7500 7400 6500 5300 6300 7200 6900 7000  u.t.e.S.c.r.i.p.\n                //0008ebf0: 7400 0000 2f00 4100 7500 7400 6f00 4900  t.../.A.u.t.o.I.\n                //0008ec00: 7400 3300 4500 7800 6500 6300 7500 7400  t.3.E.x.e.c.u.t.\n                $autoit = { 2f00 4100 7500 7400 6f00 4900 7400 }\n\n                //These are \"bad\" API functions\n                $api1 = \"WNetAddConnection2W\"           nocase wide ascii\n                $api2 = \"WNetUseConnection\"             nocase wide ascii\n                $api3 = \"WNetCancelConnection2W\"        nocase wide ascii\n                $api4 = \"WNetGetConnectionW\"            nocase wide ascii\n                $api5 = \"InternetCloseHandle\"           nocase wide ascii\n                $api6 = \"InternetOpenW\"                 nocase wide ascii\n                $api7 = \"InternetSetOptionW\"            nocase wide ascii\n                $api8 = \"InternetCrackUrlW\"             nocase wide ascii\n                $api9 = \"HttpQueryInfoW\"                nocase wide ascii\n                $api10 = \"InternetQueryOptionW\"         nocase wide ascii\n                $api11 = \"InternetConnectW\"             nocase wide ascii\n                $api12 = \"HttpOpenRequestW\"             nocase wide ascii\n                $api13 = \"HttpSendRequestW\"             nocase wide ascii\n                $api14 = \"FtpOpenFileW\"                 nocase wide ascii\n                $api15 = \"FtpGetFileSize\"               nocase wide ascii\n                $api16 = \"InternetOpenUrlW\"             nocase wide ascii\n                $api17 = \"InternetReadFile\"             nocase wide ascii\n                $api18 = \"InternetQueryDataAvailable\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and $autoit and #byte_padding > 4 and any of ($api*)\n}\n\nrule Formbook_EventSink\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-12\"\n                description     = \"Potential Formbook payload using EVENT_SINK\"\n                reference       = \"/wiki/formbook\"\n                sample          = \"7729ec6cb4d2cd4f30360431f6674471, 2b1e178b9c8e6f84403431a99ba09db3\"\n\n        strings:\n\t\t$this_program = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 ??00 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t//Random PEPEs\n\t\t//0000240: 4d53 5642 564d 3630 2e44 4c4c 0000 0000  MSVBVM60.DLL....\n\t\t//0001380: 0700 0000 5823 4000 5642 3521 3626 2a00  ....X#@.VB5!6&*.\n\t\t//00c9310: 5f61 646a 5f66 7061 7461 6e00 1500 4556  _adj_fpatan...EV\n\t\t//00c9320: 454e 545f 5349 4e4b 5f52 656c 6561 7365  ENT_SINK_Release\n\t\t//00c9330: 0000 5700 5f43 4973 7172 7400 1400 4556  ..W._CIsqrt...EV\n\t\t//00c9340: 454e 545f 5349 4e4b 5f51 7565 7279 496e  ENT_SINK_QueryIn\n\t\t$pepe1 = { 4d53 5642 564d 3630 2e44 4c4c 00 }\n\t\t$pepe2 = { 5642 3521 36 }\n\t\t$pepe3 = { 4556 454e 545f 5349 4e4b }\n\n\t\t//API Byte Ordering\n\t\t//0002330: 6b65 726e 656c 3332 0000 0000 0000 0000  kernel32........\n\t\t//0002340: 1300 0000 4765 7443 7572 7265 6e74 5468  ....GetCurrentTh\n\t\t//0002350: 7265 6164 4964 0000 3023 4000 4423 4000  readId..0#@.D#@.\n\t\t//$byte_order = { 6b65 726e 656c 3332 [1-12] 4765 7443 7572 7265 6e74 5468 7265 6164 4964 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and all of ($pepe*)\n}\n\nrule Stiff_Ursnif_API\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                description     = \"Potential Ursnif/Gozi payload\"\n                reference       = \"/wiki/ursnif\"\n                sample          = \"dceb35aa2bedcb5c04045ebefec86135, 1380815f49012496cf30b7557f10495f\"\n\n        strings:\n                $this_program1   = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 7468\n\t\t\t\t\t6973 2069 7320 6120 5769 6e64 6f77 7320\n\t\t\t\t\t4e54 2028 6f77 6e20 5254 4c29 2064 796e\n\t\t\t\t\t616d 6963 206c 696e 6b20 6c69 6272 6172\n\t\t\t\t\t790d 0a24 0000 0000 0000 0000 0000 0000\n                                }\n\n\t\t$this_program2 = {\t4d5a 5000 0200 0000 0400 0f00 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 ??00 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 00?? 0000\n\t\t\t\t\tba10 000e 1fb4 09cd 21b8 014c cd21 9090\n\t\t\t\t\t5468 6973 2070 726f 6772 616d 206d 7573\n\t\t\t\t\t7420 6265 2072 756e 2075 6e64 6572 2057\n\t\t\t\t\t696e 3332 0d0a 2437 0000 0000 0000 0000\n\t\t\t\t}\n\n\t\t\t\t//00330c0: 0000 0000 5800 456e 756d 4d6f 6e69 746f  ....X.EnumMonito\n\t\t\t\t//00330d0: 7273 5700 5749 4e53 504f 4f4c 2e44 5256  rsW.WINSPOOL.DRV\n\t\t\t\t//00330e0: 0000 1802 4765 744d 6f64 756c 6548 616e  ....GetModuleHan\n\t\t\t\t//00330f0: 646c 6557 0000 ef01 4765 7446 696c 654d  dleW....GetFileM\n\t\t\t\t//0033100: 5549 5061 7468 0000 f301 4765 7446 696c  UIPath....GetFil\n\t\t\t\t//0033110: 6554 7970 6500 5301 466c 7346 7265 6500  eType.S.FlsFree.\n\t\t\t\t//0033120: a303 5175 6572 7949 646c 6550 726f 6365  ..QueryIdleProce\n\t\t\t\t//0033130: 7373 6f72 4379 636c 6554 696d 6500 4b45  ssorCycleTime.KE\n\t\t\t\t//0033140: 524e 454c 3332 2e64 6c6c 0000 9a02 5365  RNEL32.dll....Se\n\t\t\t\t//0033150: 7450 616c 6574 7465 456e 7472 6965 7300  tPaletteEntries.\n\t\t\t\t//0033160: 4744 4933 322e 646c 6c00 ba01 5270 6353  GDI32.dll...RpcS\n\t\t\t\t//0033170: 6572 7665 724c 6973 7465 6e00 5250 4352  erverListen.RPCR\n\t\t\t\t//0033180: 5434 2e64 6c6c 0000 0000 0000 0000 0000  T4.dll..........\n\t\t$api1\t\t= { 5175 6572 7949 646c 6550 726f 6365 7373 6f72 4379 636c 6554 696d 65[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n\t\t\t\t//0065800: 0000 0000 5eab 1200 0000 0000 4b45 524e  ....^.......KERN\n\t\t\t\t//0065810: 454c 3332 2e44 4c4c 0061 6476 6170 6933  EL32.DLL.advapi3\n\t\t\t\t//0065820: 322e 646c 6c00 636f 6d63 746c 3332 2e64  2.dll.comctl32.d\n\t\t\t\t//0065830: 6c6c 0067 6469 3332 2e64 6c6c 0069 7068  ll.gdi32.dll.iph\n\t\t\t\t//0065840: 6c70 6170 692e 646c 6c00 6f6c 6533 322e  lpapi.dll.ole32.\n\t\t\t\t//0065850: 646c 6c00 6f6c 6561 7574 3332 2e64 6c6c  dll.oleaut32.dll\n\t\t\t\t//0065860: 0073 6865 6c6c 3332 2e64 6c6c 0075 7365  .shell32.dll.use\n\t\t\t\t//0065870: 7233 322e 646c 6c00 7665 7273 696f 6e2e  r32.dll.version.\n\t\t\t\t//0065880: 646c 6c00 7769 6e73 706f 6f6c 2e64 7276  dll.winspool.drv\n\t\t\t\t//0065890: 0077 736f 636b 3332 2e64 6c6c 0000 4c6f  .wsock32.dll..Lo\n\t\t\t\t//00658a0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n\t\t\t\t//00658b0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n\t\t\t\t//00658c0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n\t\t\t\t//00658d0: 5072 6f63 6573 7300 0000 5265 6746 6c75  Process...RegFlu\n\t\t\t\t//00658e0: 7368 4b65 7900 0000 496d 6167 654c 6973  shKey...ImageLis\n\t\t\t\t//00658f0: 745f 4164 6400 0000 5361 7665 4443 0000  t_Add...SaveDC..\n\t\t\t\t//0065900: 4765 7441 6461 7074 6572 7349 6e66 6f00  GetAdaptersInfo.\n\t\t\t\t//0065910: 0000 4f6c 6544 7261 7700 0000 5661 7269  ..OleDraw...Vari\n\t\t\t\t//0065920: 616e 7443 6f70 7900 0000 5368 656c 6c45  antCopy...ShellE\n\t\t\t\t//0065930: 7865 6375 7465 4100 0000 4765 7444 4300  xecuteA...GetDC.\n\t\t\t\t//0065940: 0000 5665 7251 7565 7279 5661 6c75 6541  ..VerQueryValueA\n\t\t\t\t//0065950: 0000 4f70 656e 5072 696e 7465 7241 0000  ..OpenPrinterA..\n\t\t\t\t//0065960: 696e 6574 5f6e 746f 6100 0000 0000 0000  inet_ntoa.......\n\t\t$api2\t\t= { 4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[256-328] 696e 6574 5f6e 746f 6100 }\n\n        condition:\n                uint16(0) == 0x5a4d and ($this_program1 at 0 or $this_program2 at 0) and any of ($api*)\n}\n\nrule Office_Link_cmd_powershell\n{\n        meta:\n                description = \"Office Document containing a macro or a lnk with a call to console execution and/or some form of Powershell being called or console string manipulation being used\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-05\"\n                modified = \"2019-03-06\"\n                tlp = \"GREEN\"\n\t\tthanks = \"jwade, cocaman\"\n\t\treference = \"/wiki/ursnif, /wiki/Emotet-Evolutions\"\n\t\tsample = \"926d5f7cf14e3a85e55f5358e14eb2cb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $link = { 4c00 0000 0114 }\n                $rtf = { 7B 5C 72 }\n\n                //Console execution in plain text and hex ascii\n                $stupidland1 = /(start|cmd|comspec\\x25?)(\\.exe)?[\\x20\\x09]+\\/[a-z]/ nocase wide ascii\n                $stupidland2 = /([57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4|[46]3([03]0)?[46]d([03]0)?[46]4|[46]3([03]0)?[46]f([03]0)?[46]d([03]0)?[57]3([03]0)?[57]0([03]0)?[46]5([03]0)?[46]3([03]0)?(25)?)(([03]0)?2e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5)?(20|09|00|30)+2f/ nocase ascii\n\n                $powershellz0 = /p[^\\n]?o[^\\n]?w[^\\n]?e[^\\n]?r[^\\n]?s[^\\n]?h[^\\n]?e[^\\n]?l[^\\n]?l/      nocase wide ascii //Delimited Powershell\n                $powershellz1 = /l[^\\n]?l[^\\n]?e[^\\n]?h[^\\n]?s[^\\n]?r[^\\n]?e[^\\n]?w[^\\n]?o[^\\n]?p/      nocase wide ascii //Delimited Powershell Reversed\n                $powershellz2 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\][\\x20\\x09]*){2}/i      //PowerShell-based functions\n                $powershellz3 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\]\\x3a\\x3a)/i            //PowerShell-based functions\n                $powershellz4 = \"new-\" nocase wide ascii\n                $powershellz5 = \"-wen\" nocase wide ascii\n                $powershellz6 = \"invoke-\" nocase wide ascii\n                $powershellz7 = \"-ekovni\" nocase wide ascii\n                $powershellz8 = \"start-\" nocase wide ascii\n                $powershellz9 = \"-trats\" nocase wide ascii\n                $powershellz10 = \"get-\" nocase wide ascii\n                $powershellz11 = \"-teg\" nocase wide ascii\n                $powershellz12 = /\\x25[A-Za-z0-9_-]+\\x3a/ wide ascii            //See https://ss64.com/nt/syntax.html\n                $powershellz13 = /[57]0([03]0)?[46]f([03]0)?[57]7([03]0)?[46]5([03]0)?[57]2([03]0)?[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c/ nocase ascii      //Powershell in hex-ascii\n                $powershellz14 = /[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[46]8([03]0)?[57]3([03]0)?[57]2([03]0)?[46]5([03]0)?[57]7([03]0)?[46]f([03]0)?[57]0/ nocase ascii      //Powershell in hex-ascii reversed\n\t\t$powershellz15 = /e[^\\n]?n[^\\n]?c[^\\n]?o[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?c[^\\n]?o[^\\n]?m[^\\n]?m[^\\n]?a[^\\n]?n[^\\n]?d/\tnocase wide ascii\n\t\t$powershellz16 = /d[^\\n]?n[^\\n]?a[^\\n]?m[^\\n]?m[^\\n]?o[^\\n]?c[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?o[^\\n]?c[^\\n]?e[^\\n]?n/\tnocase wide ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                    ( $office at 0 and any of ($stupidland*) and any of ($powershellz*) and any of ($vb*))\n                 or ( ( $link at 0 or $rtf at 0 ) and ( any of ($powershellz*) or any of ($stupidland*) ) )\n}\n\nrule xml_office_doc_total_time_0 {\n    meta:\n        author = \"Sam Scholten\"\n        modified = \"2019-03-05\"\n        hashes = \"[42c4f6fadbf09bf7d9da9607a56d1879]\"\n    strings:\n        $xml = { 3c3f 786d 6c }\n\n        $progid_EXCEL = \"mso-application progid=\\\"Excel.Sheet\" nocase ascii\n        $progid_PPT = \"mso-application progid=\\\"PowerPoint.Show\" nocase ascii\n        $progid_WORD = \"mso-application progid=\\\"Word.Document\" nocase ascii\n\n        $macro_enabled_1 = \"application/vnd.ms-word.document.macroEnabled\"\n        $macro_enabled_2 = \"macrosPresent=\\\"yes\\\"\" nocase wide ascii\n\n        $c_0_total_time  = /<(o:)?TotalTime>0<\\/(o:)?TotalTime>/\n\n     condition:\n               $xml at 0 and\n        (\n            $progid_EXCEL in (0..100) or\n            $progid_PPT in (0..100) or\n            $progid_WORD in (0..100)\n               ) and (any of ($macro_enabled_*)) and $c_0_total_time\n}\n\nrule Obfuscated_This_Program\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-03-05\"\n\t\tdescription\t= \"Obfuscated/replaced 'This program cannot be run in DOS mode.' executable\"\n\t\treference\t= \"/wiki/dridex\"\n\t\tsample\t\t= \"1acc8ff2531d3a3feef29e6c06e21d3f\"\n\n\tstrings:\n\t\t$this_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t$dis_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 [38]\n\t\t\t\t\t2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $dis_program at 0 and not $this_program at 0\n}\n\nrule Delphi_Win32_XXPADDING\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential dropper/stealer (Loki/Fareit/Pony/Graftor) 32 bit Delphi PE with 32byte EOF PADDINGXXPADDING\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-05\"\n\t\thash = \"ce86df7e2f57155fc785169f75250dca\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/pony, /wiki/lokibot\"\n\n\tstrings:\n\t\t//00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n\t\t$mz = { 4d5a 5000 }\n\n\t\t//This program must be run under Win32\\r\\n\n\t\t$win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n\t\t$delphi = \"Delphi\"\tnocase wide ascii\n\n\t\t//PADDINGXXPADDING\n\t\t$byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n\t\t//Sprinkle in a little PEPE\n\t\t$pepe_spice = { 508b 45?? 508b 45 }\n\n\t\t//Some byte ordering API calls\n\t\t//0004a90: 656c 3332 2e64 6c6c 0000 0000 4765 744c  el32.dll....GetL\n\t\t//0004aa0: 6f6e 6750 6174 684e 616d 6541 0000 0000  ongPathNameA....\n\t\t$byte_order_API = { 656c 3332 2e64 6c6c [1-6] 4765 744c 6f6e 6750 6174 684e 616d 6541 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand $mz at 0\n\t\tand $win32\n\t\tand $delphi\n\t\tand $byte_padding in (filesize-32..filesize)\n\t\tand $pepe_spice\n\t\tand $byte_order_API\n}\n\nrule OpenXML_Too_Much_Trailing_Space\n{\n    meta:\n        description = \"OpenXML document contains too many trailing bytes of 0x20 (128+)\"\n        risk = \"high\"\n        author = \"Nathan Fowler\"\n        modified = \"2019-03-04\"\n\treference = \"/wiki/Emotet-Evolutions\"\n\n    strings:\n\t$xml\t= { 3c3f 786d 6c }\n\t$space\t= { 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 }\n\t$office = \"//schemas.microsoft.com/\" ascii\n\n    condition:\n        uint32(0) == 0x6d783f3c and $xml at 0\n        and $space in (filesize-128..filesize)\n\tand $office\n}\n\nrule Formbook_Executable_BittyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-01\"\n\t\ttlp = \"GREEN\"\n\t\tdescription = \"Potential Formbook payload 12 byte filename base64 byte offset\"\n\t\thashes = \"f2a94f9130c59e24d8976362fffa1b6a, f1e9add7c5b9ce7a4155f090a5a7263b, 692999bdd3569dad203d17fed1cf92c5\"\n\n\tstrings:\n\t\t$magic = { 4d5a 9000 0300 0000 0400 }\n\n\t\t// Not sure what I'm doing here but it seems like a good idea\n\t\t// 005fc20: ad09 0000 0062 6a55 5442 6e63 6967 676f  .....bjUTBnciggo\n\t\t// 005fc30: 3d2e 6578 6500 5468 6d51 572f 4673 4366  =.exe.ThmQW/FsCf\n\t\t//\n\t\t// 005e050: 0000 7700 720c 7600 5009 0000 0061 386d  ..w.r.v.P....a8m\n\t\t// 005e060: 4e65 6557 5652 4246 452e 6578 6500 6862  NeeWVRBFE.exe.hb\n\t\t// 005e070: 7850 702b 4746 677a 5046 6f59 4775 4f4e  xPp+GFgzPFoYGuON\n\t\t//\n\t\t// 0064340: 450c 7600 8406 0000 0038 3857 3679 2f2f  E.v......88W6y//\n\t\t// 0064350: 6b72 3950 4f2e 6578 6500 6351 632f 464b  kr9PO.exe.cQc/FK\n\t\t// 0064360: 646a 426d 666d 4476 6268 6a6c 664a 4564  djBmfmDvbhjlfJEd\n\n\t\t$pepe1 = { (01|02|03|04|05|06|07|08|09)00 0000 [12]2e 6578 6500 [1-8] (2f|2b) }\n\t\t$pepe2 = /[\\x01-\\x09]\\x00{3}[^\\x00\\r\\n]{12}\\.exe\\x00[A-Za-z0-9\\x2b\\x2f\\x3d_-}{1,8}[\\x2f\\x2b]/\n\n\t\t$dot_net = \"Assembly\"\tascii\n\n\t\t$exclude = \"InstallShield\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $magic at 0 and all of ($pepe*) and $dot_net and not $exclude\n}\n\nrule Executable_Unknown_Dropper\n:maldoc\n{\n        meta:\n                description = \"Executable unknown dropper used with Warzone RAT\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-02-26\"\n                hash = \"2cb663a749b8f07054e8ffc29564f78e\"\n                tlp = \"GREEN\"\n\n        strings:\n                //00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n                $exe = { 4d5a 5000 }\n\n                //Packers\n                $upx0 = \"UPX0\"  ascii\n                $upx1 = \"UPX1\"  ascii\n\n                //API-DLL call ordering\n                //000a8120: 667c 1b00 0000 0000 4b45 524e 454c 3332  f|......KERNEL32\n                //000a8130: 2e44 4c4c 0061 6476 6170 6933 322e 646c  .DLL.advapi32.dl\n                //000a8140: 6c00 636f 6d63 746c 3332 2e64 6c6c 0063  l.comctl32.dll.c\n                //000a8150: 6f6d 646c 6733 322e 646c 6c00 6764 6933  omdlg32.dll.gdi3\n                //000a8160: 322e 646c 6c00 6f6c 6533 322e 646c 6c00  2.dll.ole32.dll.\n                //000a8170: 6f6c 6561 7574 3332 2e64 6c6c 0073 6865  oleaut32.dll.she\n                //000a8180: 6c6c 3332 2e64 6c6c 0073 6866 6f6c 6465  ll32.dll.shfolde\n                //000a8190: 722e 646c 6c00 7573 6572 3332 2e64 6c6c  r.dll.user32.dll\n                //000a81a0: 0076 6572 7369 6f6e 2e64 6c6c 0000 4c6f  .version.dll..Lo\n                //000a81b0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n                //000a81c0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n                //000a81d0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n                //000a81e0: 5072 6f63 6573 7300 0000 5265 674f 7065  Process...RegOpe\n                //000a81f0: 6e4b 6579 4100 0000 496d 6167 654c 6973  nKeyA...ImageLis\n                //000a8200: 745f 4164 6400 0000 4765 7453 6176 6546  t_Add...GetSaveF\n                //000a8210: 696c 654e 616d 6541 0000 5361 7665 4443  ileNameA..SaveDC\n                //000a8220: 0000 436f 496e 6974 6961 6c69 7a65 0000  ..CoInitialize..\n                //000a8230: 5661 7269 616e 7443 6f70 7900 0000 5368  VariantCopy...Sh\n                //000a8240: 656c 6c45 7865 6375 7465 4100 0000 5348  ellExecuteA...SH\n                //000a8250: 4765 7446 6f6c 6465 7250 6174 6841 0000  GetFolderPathA..\n                //000a8260: 4765 7444 4300 0000 5665 7251 7565 7279  GetDC...VerQuery\n                //000a8270: 5661 6c75 6541 0000 0000 0000 0000 0000  ValueA..........\n                $byte_order = {4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[1-4] 636f 6d63 746c 3332 2e64 6c6c [1-4]63 6f6d 646c 6733 322e 646c 6c[1-4] 6764 6933 322e 646c 6c[1-4] 6f6c 6533 322e 646c 6c[1-4] 6f6c 6561 7574 3332 2e64 6c6c [1-4]73 6865 6c6c 3332 2e64 6c6c [1-4]73 6866 6f6c 6465 722e 646c 6c[1-4] 7573 6572 3332 2e64 6c6c [1-4]76 6572 7369 6f6e 2e64 6c6c [1-4] 4c6f 6164 4c69 6272 6172 7941 [1-4] 4765 7450 726f 6341 6464 7265 7373 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 4578 6974 5072 6f63 6573 73[1-4] 5265 674f 7065 6e4b 6579 41[1-4] 496d 6167 654c 6973 745f 4164 64[1-4] 4765 7453 6176 6546 696c 654e 616d 6541 [1-4] 5361 7665 4443 [1-4] 436f 496e 6974 6961 6c69 7a65 [1-4] 5661 7269 616e 7443 6f70 79[1-4] 5368 656c 6c45 7865 6375 7465 41[1-4] 5348 4765 7446 6f6c 6465 7250 6174 6841 [1-4] 4765 7444 43[1-4] 5665 7251 7565 7279 5661 6c75 6541 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and $exe at 0\n                and all of ($upx*)\n                and $byte_order\n}\n\nrule Empire_PEPE\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing magical 0xfd 0xf3 byte ordering\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\t\tfeelz = \"meows://www.youtube.com/watch?v=QsDDXSmGJZA&t=57\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$PEPE = { fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00fd }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office\n\t\tand $PEPE\n\t\tand any of ($vb*)\n}\n\nrule Office_Ink_Automation\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing Ink Automation, OLE, VBE/VBA, and Decode functions\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-07-02\"\n\t\tmodified = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$rtf \t= { 7b5c 72 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$ink1 = \"msinkaut\"\t\tnocase wide ascii\n\t\t$ink2 = \"InkEd.InkEdit\"\tnocase wide ascii\n\n\t\t$decode1 = \"decode\"\tnocase wide ascii\n\t\t$decode2 = \"eval\"\tnocase wide ascii\n\t\t$decode3 = \"base64\"\tnocase wide ascii\n\t\t$decode4 = \"426173653634\"\tnocase wide ascii\n\t\t$decode5 = \"Chr(\"\tnocase wide ascii\n\n\tcondition:\n\t\t(uint16(0) == 0xcfd0 or uint16(0) == 0x7b5c)\n\t\tand ($office at 0 or $rtf at 0)\n\t\tand any of ($ink*)\n\t\tand any of ($decode*)\n\t\tand any of ($vb*)\n}\n\nrule Office_Int_Profile_ShortPath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing a integrer MS-DOS shortpath profile to TEMP\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-19\"\n\t\ttlp = \"AMBER\"\n\t\tsample = \"4b4d15b28d184c0deb43b1632d540731\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t//MS-DOS Short-path C:/DOCUMENT~1/[1-8 DIGITS]~1/LOCALS~1/Temp/VBE/.{1,8}.exd\n\t\t$feelz1 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz2 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz3 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz4 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz5 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 \t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz6 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 \t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz7 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz8 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 \t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\n\t\t//AutoExecute Macro Behavior\n\t\t$ao1 = \"AutoExec\"        nocase wide ascii\n\t\t$ao2 = \"AutoOpen\"        nocase wide ascii\n\t\t$ao3 = \"Workbook_Open\"   nocase wide ascii\n\t\t$ao4 = \"Document_Open\"   nocase wide ascii\n\t\t$ao5 = \"_Eval\"           nocase wide ascii\n\n\t\t//VBA/OLE embedding\n\t\t$vb1 = \"VBE\"    nocase wide ascii\n\t\t$vb2 = \"VBA\"    nocase wide ascii\n\t\t$vb4 = \"OLE\"    nocase wide ascii\n\t\t$vb5 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and any of ($feelz*)\n}\n\nrule Office_Incompetent_Hackerz_rU\n:maldoc\n{\n    meta:\n        description = \"Office Document containing 'Office god' bytecode and CNormalrU\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-02-18\"\n        tlp = \"AMBER\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $feelz1 = { 214f 6666 6963 8467 4f44 00 }    //'Office god'\n        $feelz2 = { 0000 2a5c 434e 6f72 6d61 6c72 5500 0100 0080 0000 }        //CNormalrU\n\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        $vb1 = \"VBE\"    nocase wide ascii\n        $vb2 = \"VBA\"    nocase wide ascii\n        $vb4 = \"OLE\"    nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and all of ($feelz*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_directory_surfing\n:maldoc\n{\n        meta:\n                description = \"Office Document containing a macro and prefix-based Windows directory surfing via slash-dot-dot-slash\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                created = \"2018-11-26\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n                thanks = \"Peter Misurek\"\n                tlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$surfer1 = /\\x5c\\x2e\\x2e\\x5cwindows[\\x5c\\x2e]*system/i\tascii\n\t\t$surfer2 = /[a-zA-Z0-9](\\x5c\\x2e\\x2e)+\\x5c[a-zA-Z0-9]/\tascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb3 = \"OLE\"\tnocase wide ascii\n                $vb4 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($surfer*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_int_array\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, shell and int array\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2016-06-22\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$shell = \"shell\"\tnocase wide ascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$int_array = /([0-9]+[\\x20\\x09\\r\\n]*,[\\x20\\x09\\r\\n]*){50}/\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and $shell and any of ($ao*) and any of ($vb*) and $int_array\n}\n\nrule Office_Mult_Cmdline_Switches_bool\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, multiple terse command line switches and boolean operators\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$switches = /(\\x2f[a-zA-Z]{1,2}[^\\x20\\x09\\x2f]{0,6}[\\x20\\x09]*){2}/\n\n\t\t$boolean1 = \" && \"\tascii\n\t\t$boolean2 = \" || \"\tascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and (#boolean1 >= 2 or #boolean2 >= 2) and $switches\n}\n\nrule Office_Macro_vba_WinHttpReq\n{\n     meta:\n         description = \"Office document containing VBA with Web API calls and .exe\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\t date = \"unknown\"\n\t modified = \"2019-02-01\"\n\n     strings:\n\t $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t $string1 = { 56 00 42 00 41 00 }\n\t $string2 = \"://\"\n\t $string3 = \".exe\" nocase\n\t $http1 = \"WinHttp\" nocase\n\t $http2 = \"URLDownload\" nocase\n\t $http3 = \"urlmon\" nocase\n\t $http4 = \"xmlhttp\" nocase\n\t $http5 = \"internetdownload\" nocase\n\t $http6 = \".responsebody\" nocase\n\t $http7 = \".send\" nocase\n\n\t $exclude1 = \"SunGard.IO\" nocase wide ascii\n\t $exclude2 = \"http://www.investonesupport.com\" nocase wide\n\n     condition:\n         uint16(0) == 0xcfd0 and $office at 0 and all of ($string*) and any of ($http*) and not any of ($exclude*)\n}\n\nrule Env_Var_SubStr\n{\n\tmeta:\n                description = \"NT Environment Variable Substring Manipulation\"\n                author = \"Nathan Fowler\"\n                reference = \"https://ss64.com/nt/syntax.html\"\n                risk = \"high\"\n                date = \"2018-12-31\"\n\t\tmodified = \"2019-01-31\"\n\n\tstrings:\n\t\t//Very terse match with no file magic anchoring, lets assume if we see this style notation anywhere that's it's so uncommon that it is\n\t\t//a malicious indicator.  For more information on this syntax see https://ss64.com/nt/syntax.html\n\n\t\t$substr1 = /([46][0-9A-F]|[57][0-9A])([03]0)?3a([03]0)?7e([03]0)?3[0-9]/\tnocase ascii\t\t//Hex-Ascii version of the substring notation with optional wide format\n\t\t$substr2 = /\\x25[^\\x25]{1,16}\\x3a\\x7e[0-9]+(\\x2c[0-9]+)?\\x25/\t\t\tnocase wide ascii\t//Ascii version of the substring notation\n\n\tcondition:\n\t\t(#substr1 > 2) or (#substr2 > 2)\n}\n\nrule Office_Macro_Chrmap_Wild: maldoc\n{\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-30\"\n        tlp     = \"GREEN\"\n        description = \"Macro-enabled Office document which contains VBA String functions and a character map incrementing by one starting from 0x00.\"\n        sample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"       nocase wide ascii\n\n\t//Charater mapping, incrementing by one\n\t$pepe = { 00[1] 0000 01[1] 0000 02[1] 0000 03[1] 0000 04[1] 0000 05[1] 0000 06[1] 0000 07[1] 0000 08[1] 0000 09[1] 0000 0a[1] 0000 0b[1] 0000 0c[1] 0000 0d[1] 0000 0e[1] 0000 0f[1] 0000 10[1] 0000 11[1] 0000 12[1] 0000 13[1] 0000 14[1] 0000 15[1] 0000 16[1] 0000 17[1] 0000 18[1] 0000 19[1] 0000 1a[1] 0000 1b[1] 0000 1c[1] 0000 1d[1] 0000 1e[1] 0000 1f[1] 0000 20[1] 0000 21[1] 0000 22[1] 0000 23[1] 0000 24[1] 0000 25[1] 0000 26[1] 0000 27[1] 0000 28[1] 0000 29[1] 0000 2a[1] 0000 2b[1] 0000 2c[1] 0000 2d[1] 0000 2e[1] 0000 2f[1] 0000 30[1] 0000 31[1] 0000 32[1] 0000 33[1] 0000 34[1] 0000 35[1] 0000 36[1] 0000 37[1] 0000 38[1] 0000 39[1] 0000 3a[1] 0000 3b[1] 0000 3c[1] 0000 3d[1] 0000 3e[1] 0000 3f[1] 0000 40[1] 0000 41[1] 0000 42[1] 0000 43[1] 0000 44[1] 0000 45[1] 0000 46[1] 0000 47[1] 0000 48[1] 0000 49[1] 0000 4a[1] 0000 4b[1] 0000 4c[1] 0000 4d[1] 0000 4e[1] 0000 4f[1] 0000 50[1] 0000 51[1] 0000 52[1] 0000 53[1] 0000 54[1] 0000 55[1] 0000 56[1] 0000 57[1] 0000 58[1] 0000 59[1] 0000 5a[1] 0000 5b[1] 0000 5c[1] 0000 5d[1] 0000 5e[1] 0000 5f[1] 0000 60[1] 0000 61[1] 0000 62[1] 0000 63[1] 0000 64[1] 0000 65[1] 0000 66[1] 0000 67[1] 0000 68[1] 0000 69[1] 0000 6a[1] 0000 6b[1] 0000 6c[1] 0000 6d[1] 0000 6e[1] 0000 6f[1] 0000 70[1] 0000 71[1] 0000 72[1] 0000 73[1] 0000 74[1] 0000 75[1] 0000 76[1] 0000 77[1] 0000 78[1] 0000 79[1] 0000 7a[1] 0000 7c[1] 0000 fdff ffff 7d[1] 0000 7e[1] 0000 7f[1] 0000 80[1] 0000 }\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and $pepe and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_OLE_Stream_Base64_GZip: maldoc {\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-28\"\n        tlp     = \"GREEN\"\n        description = \"Office document which contains base64 encoded gzip header\"\n        thanks = \"Jason Killam\"\n        sample_hash = \"e1f780c1c25ef948418abc97695c7b9a\"\n        feelz   = \"https://youtu.be/l-O5IHVhWj0?t=85\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //H4sIAAAAAAAA/3SP227CMAxAf\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $feelz1 = { 4834 7349 41 }\n        $feelz2 = /[^A-Za-z0-9\\x2b\\x2f]H4sIA[A-Za-z0-9\\x2b\\x2f\\x3d]{128}/       ascii\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"        nocase wide ascii\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and all of ($feelz*) and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_VB_RegEdit\n{\n        meta:\n                description = \"Office document containing RegEdit functions\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-24\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n\t\t$reg1 = { 07 00 52 00 45 00 47 00 49 00 4e 00 53 00 54 00 }\n\t\t$reg2 = \"\\\\shell\\\\open\\\\command\"\n\t\t$reg3 = \"\\\\run\"\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($reg*)\n}\n\nrule GetCursorPos\n{\n\tmeta:\n\t\tdescription = \"Office Document containing GetCursorPos API call\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-25\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$api = \"GetCursorPos\" nocase wide ascii\n\n\t\t$vb1 = \"VBE\"\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and $api and any of ($vb*)\n}\n\nrule EXE_NameSpace\n{\n        meta:\n                description = \"Executable with a XML namespace defined to a URI object which we do not like\"\n                author = \"Nathan Fowler\"\n                date = \"2019-01-24\"\n                risk = \"high\"\n                tlp = \"GREEN\"\n\n        strings:\n                $magic1 = { 4d5a }       //MZ\n\t\t$magic2 = \"This program \"\tascii\n\n\t\t//https://stackoverflow.com/questions/180985/what-is-tempuri-org\n\t\t$namespace1 = \"://upclick.com/\"\tascii\n\t\t$namespace2 = \"://tempuri.org/\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and $magic1 at 0 and $magic2 and any of ($namespace*)\n}\n\nrule XML_B64_Autoopen\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Wide Encoded AutoOpen\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-22\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t// Null-spaced wide format of 'autoopen' and 'AUTOOPEN'\n\t\t$encstring_1 = \"dQB0AG8AbwB\"\t\tascii\n\t\t$encstring_2 = \"UAdABvAG8AcAB\"\t\tascii\n\t\t$encstring_3 = \"B1AHQAbwBvAHA\"\t\tascii\n\t\t$encstring_4 = \"dQB0AG8AbwBwAG\"\tascii\n\t\t$encstring_5 = \"B1AHQAbwBvAHAAZQ\"\tascii\n\t\t$encstring_6 = \"HUAdABvAG8AcABlAG\"\tascii\n\t\t$encstring_7 = \"VQBUAE8ATwB\"\t\tascii\n\t\t$encstring_8 = \"BVAFQATwBPAFA\"\t\tascii\n\t\t$encstring_9 = \"UAVABPAE8AUAB\"\t\tascii\n\t\t$encstring_10 = \"VQBUAE8ATwBQAE\"\tascii\n\t\t$encstring_11 = \"BVAFQATwBPAFAARQ\"\tascii\n\t\t$encstring_12 = \"FUAVABPAE8AUABFAE\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($encstring_*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule XML_B64_ActiveMime\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Encoded ActiveMime and numeric embedded image\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-17\"\n\t\tmodified = \"2019-01-23\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\t\tthanks = \"Harold Ogden, you rock\"\n\n\tstrings:\n\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t//ActiveMime Base64 Encoded (accounting for leading or trailing characters)\n\t\t$b1 = \"N0aXZ\"\t\tascii\n\t\t$b2 = \"RpdmV\"\t\tascii\n\t\t$b3 = \"dGl2ZU1\"\t\tascii\n\t\t$b4 = \"N0aXZlTW\"\tascii\n\t\t$b5 = \"3RpdmVNaW\"\tascii\n\t\t$b6 = \"dGl2ZU1pbW\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($b*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule Ultimate_PEPE_Silvia\n{\n\tmeta:\n\t\tdescription = \"Office Document containing excessive number of variable assembly or terse variables\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-01-23\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\" nocase wide ascii\n\t\t$vb2 = \"VBA\" nocase wide ascii\n\n\t\t$ole1 = \"OLE\" nocase wide ascii\n\t\t$ole2 = \"stdole\" nocase wide ascii\n\n\t\t//Byte code analysis of the documents indicate the varible assembly patterns for arithmetic operations are these byte pattens below.\n\t\t//Breaking these out into the 160 possible combinations results in elimination of the YARA performance warnings regarding Aho Corsick atoms for\n\t\t//hex wildcard matching.  Plus it totally looks like I have some idea of what I'm doing too!\n\t\t$pepe1= { 80 0000 ff03 030? }\n\t\t$pepe2= { 80 0100 ff03 030? }\n\t\t$pepe3= { 80 0200 ff03 030? }\n\t\t$pepe4= { 80 0300 ff03 030? }\n\t\t$pepe5= { 80 0400 ff03 030? }\n\t\t$pepe6= { 80 0500 ff03 030? }\n\t\t$pepe7= { 80 0600 ff03 030? }\n\t\t$pepe8= { 80 0700 ff03 030? }\n\t\t$pepe9= { 80 0800 ff03 030? }\n\t\t$pepe10= { 80 0900 ff03 030? }\n\t\t$pepe11= { 80 0a00 ff03 030? }\n\t\t$pepe12= { 80 0b00 ff03 030? }\n\t\t$pepe13= { 80 0c00 ff03 030? }\n\t\t$pepe14= { 80 0d00 ff03 030? }\n\t\t$pepe15= { 80 0e00 ff03 030? }\n\t\t$pepe16= { 80 0f00 ff03 030? }\n\t\t$pepe17= { 81 0000 ff03 030? }\n\t\t$pepe18= { 81 0100 ff03 030? }\n\t\t$pepe19= { 81 0200 ff03 030? }\n\t\t$pepe20= { 81 0300 ff03 030? }\n\t\t$pepe21= { 81 0400 ff03 030? }\n\t\t$pepe22= { 81 0500 ff03 030? }\n\t\t$pepe23= { 81 0600 ff03 030? }\n\t\t$pepe24= { 81 0700 ff03 030? }\n\t\t$pepe25= { 81 0800 ff03 030? }\n\t\t$pepe26= { 81 0900 ff03 030? }\n\t\t$pepe27= { 81 0a00 ff03 030? }\n\t\t$pepe28= { 81 0b00 ff03 030? }\n\t\t$pepe29= { 81 0c00 ff03 030? }\n\t\t$pepe30= { 81 0d00 ff03 030? }\n\t\t$pepe31= { 81 0e00 ff03 030? }\n\t\t$pepe32= { 81 0f00 ff03 030? }\n\t\t$pepe33= { 82 0000 ff03 030? }\n\t\t$pepe34= { 82 0100 ff03 030? }\n\t\t$pepe35= { 82 0200 ff03 030? }\n\t\t$pepe36= { 82 0300 ff03 030? }\n\t\t$pepe37= { 82 0400 ff03 030? }\n\t\t$pepe38= { 82 0500 ff03 030? }\n\t\t$pepe39= { 82 0600 ff03 030? }\n\t\t$pepe40= { 82 0700 ff03 030? }\n\t\t$pepe41= { 82 0800 ff03 030? }\n\t\t$pepe42= { 82 0900 ff03 030? }\n\t\t$pepe43= { 82 0a00 ff03 030? }\n\t\t$pepe44= { 82 0b00 ff03 030? }\n\t\t$pepe45= { 82 0c00 ff03 030? }\n\t\t$pepe46= { 82 0d00 ff03 030? }\n\t\t$pepe47= { 82 0e00 ff03 030? }\n\t\t$pepe48= { 82 0f00 ff03 030? }\n\t\t$pepe49= { 83 0000 ff03 030? }\n\t\t$pepe50= { 83 0100 ff03 030? }\n\t\t$pepe51= { 83 0200 ff03 030? }\n\t\t$pepe52= { 83 0300 ff03 030? }\n\t\t$pepe53= { 83 0400 ff03 030? }\n\t\t$pepe54= { 83 0500 ff03 030? }\n\t\t$pepe55= { 83 0600 ff03 030? }\n\t\t$pepe56= { 83 0700 ff03 030? }\n\t\t$pepe57= { 83 0800 ff03 030? }\n\t\t$pepe58= { 83 0900 ff03 030? }\n\t\t$pepe59= { 83 0a00 ff03 030? }\n\t\t$pepe60= { 83 0b00 ff03 030? }\n\t\t$pepe61= { 83 0c00 ff03 030? }\n\t\t$pepe62= { 83 0d00 ff03 030? }\n\t\t$pepe63= { 83 0e00 ff03 030? }\n\t\t$pepe64= { 83 0f00 ff03 030? }\n\t\t$pepe65= { 84 0000 ff03 030? }\n\t\t$pepe66= { 84 0100 ff03 030? }\n\t\t$pepe67= { 84 0200 ff03 030? }\n\t\t$pepe68= { 84 0300 ff03 030? }\n\t\t$pepe69= { 84 0400 ff03 030? }\n\t\t$pepe70= { 84 0500 ff03 030? }\n\t\t$pepe71= { 84 0600 ff03 030? }\n\t\t$pepe72= { 84 0700 ff03 030? }\n\t\t$pepe73= { 84 0800 ff03 030? }\n\t\t$pepe74= { 84 0900 ff03 030? }\n\t\t$pepe75= { 84 0a00 ff03 030? }\n\t\t$pepe76= { 84 0b00 ff03 030? }\n\t\t$pepe77= { 84 0c00 ff03 030? }\n\t\t$pepe78= { 84 0d00 ff03 030? }\n\t\t$pepe79= { 84 0e00 ff03 030? }\n\t\t$pepe80= { 84 0f00 ff03 030? }\n\t\t$pepe81= { 85 0000 ff03 030? }\n\t\t$pepe82= { 85 0100 ff03 030? }\n\t\t$pepe83= { 85 0200 ff03 030? }\n\t\t$pepe84= { 85 0300 ff03 030? }\n\t\t$pepe85= { 85 0400 ff03 030? }\n\t\t$pepe86= { 85 0500 ff03 030? }\n\t\t$pepe87= { 85 0600 ff03 030? }\n\t\t$pepe88= { 85 0700 ff03 030? }\n\t\t$pepe89= { 85 0800 ff03 030? }\n\t\t$pepe90= { 85 0900 ff03 030? }\n\t\t$pepe91= { 85 0a00 ff03 030? }\n\t\t$pepe92= { 85 0b00 ff03 030? }\n\t\t$pepe93= { 85 0c00 ff03 030? }\n\t\t$pepe94= { 85 0d00 ff03 030? }\n\t\t$pepe95= { 85 0e00 ff03 030? }\n\t\t$pepe96= { 85 0f00 ff03 030? }\n\t\t$pepe97= { 86 0000 ff03 030? }\n\t\t$pepe98= { 86 0100 ff03 030? }\n\t\t$pepe99= { 86 0200 ff03 030? }\n\t\t$pepe100= { 86 0300 ff03 030? }\n\t\t$pepe101= { 86 0400 ff03 030? }\n\t\t$pepe102= { 86 0500 ff03 030? }\n\t\t$pepe103= { 86 0600 ff03 030? }\n\t\t$pepe104= { 86 0700 ff03 030? }\n\t\t$pepe105= { 86 0800 ff03 030? }\n\t\t$pepe106= { 86 0900 ff03 030? }\n\t\t$pepe107= { 86 0a00 ff03 030? }\n\t\t$pepe108= { 86 0b00 ff03 030? }\n\t\t$pepe109= { 86 0c00 ff03 030? }\n\t\t$pepe110= { 86 0d00 ff03 030? }\n\t\t$pepe111= { 86 0e00 ff03 030? }\n\t\t$pepe112= { 86 0f00 ff03 030? }\n\t\t$pepe113= { 87 0000 ff03 030? }\n\t\t$pepe114= { 87 0100 ff03 030? }\n\t\t$pepe115= { 87 0200 ff03 030? }\n\t\t$pepe116= { 87 0300 ff03 030? }\n\t\t$pepe117= { 87 0400 ff03 030? }\n\t\t$pepe118= { 87 0500 ff03 030? }\n\t\t$pepe119= { 87 0600 ff03 030? }\n\t\t$pepe120= { 87 0700 ff03 030? }\n\t\t$pepe121= { 87 0800 ff03 030? }\n\t\t$pepe122= { 87 0900 ff03 030? }\n\t\t$pepe123= { 87 0a00 ff03 030? }\n\t\t$pepe124= { 87 0b00 ff03 030? }\n\t\t$pepe125= { 87 0c00 ff03 030? }\n\t\t$pepe126= { 87 0d00 ff03 030? }\n\t\t$pepe127= { 87 0e00 ff03 030? }\n\t\t$pepe128= { 87 0f00 ff03 030? }\n\t\t$pepe129= { 88 0000 ff03 030? }\n\t\t$pepe130= { 88 0100 ff03 030? }\n\t\t$pepe131= { 88 0200 ff03 030? }\n\t\t$pepe132= { 88 0300 ff03 030? }\n\t\t$pepe133= { 88 0400 ff03 030? }\n\t\t$pepe134= { 88 0500 ff03 030? }\n\t\t$pepe135= { 88 0600 ff03 030? }\n\t\t$pepe136= { 88 0700 ff03 030? }\n\t\t$pepe137= { 88 0800 ff03 030? }\n\t\t$pepe138= { 88 0900 ff03 030? }\n\t\t$pepe139= { 88 0a00 ff03 030? }\n\t\t$pepe140= { 88 0b00 ff03 030? }\n\t\t$pepe141= { 88 0c00 ff03 030? }\n\t\t$pepe142= { 88 0d00 ff03 030? }\n\t\t$pepe143= { 88 0e00 ff03 030? }\n\t\t$pepe144= { 88 0f00 ff03 030? }\n\t\t$pepe145= { 89 0000 ff03 030? }\n\t\t$pepe146= { 89 0100 ff03 030? }\n\t\t$pepe147= { 89 0200 ff03 030? }\n\t\t$pepe148= { 89 0300 ff03 030? }\n\t\t$pepe149= { 89 0400 ff03 030? }\n\t\t$pepe150= { 89 0500 ff03 030? }\n\t\t$pepe151= { 89 0600 ff03 030? }\n\t\t$pepe152= { 89 0700 ff03 030? }\n\t\t$pepe153= { 89 0800 ff03 030? }\n\t\t$pepe154= { 89 0900 ff03 030? }\n\t\t$pepe155= { 89 0a00 ff03 030? }\n\t\t$pepe156= { 89 0b00 ff03 030? }\n\t\t$pepe157= { 89 0c00 ff03 030? }\n\t\t$pepe158= { 89 0d00 ff03 030? }\n\t\t$pepe159= { 89 0e00 ff03 030? }\n\t\t$pepe160= { 89 0f00 ff03 030? }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($ole*)\n\t\tand (\n\t\t\t   (#pepe1) > 32 or (#pepe2) > 32 or (#pepe3) > 32 or (#pepe4) > 32 or (#pepe5) > 32 or (#pepe6) > 32\n\t\t\tor (#pepe7) > 32 or (#pepe8) > 32 or (#pepe9) > 32 or (#pepe10) > 32 or (#pepe11) > 32 or (#pepe12) > 32\n\t\t\tor (#pepe13) > 32 or (#pepe14) > 32 or (#pepe15) > 32 or (#pepe16) > 32 or (#pepe17) > 32 or (#pepe18) > 32\n\t\t\tor (#pepe19) > 32 or (#pepe20) > 32 or (#pepe21) > 32 or (#pepe22) > 32 or (#pepe23) > 32 or (#pepe24) > 32\n\t\t\tor (#pepe25) > 32 or (#pepe26) > 32 or (#pepe27) > 32 or (#pepe28) > 32 or (#pepe29) > 32 or (#pepe30) > 32\n\t\t\tor (#pepe31) > 32 or (#pepe32) > 32 or (#pepe33) > 32 or (#pepe34) > 32 or (#pepe35) > 32 or (#pepe36) > 32\n\t\t\tor (#pepe37) > 32 or (#pepe38) > 32 or (#pepe39) > 32 or (#pepe40) > 32 or (#pepe41) > 32 or (#pepe42) > 32\n\t\t\tor (#pepe43) > 32 or (#pepe44) > 32 or (#pepe45) > 32 or (#pepe46) > 32 or (#pepe47) > 32 or (#pepe48) > 32\n\t\t\tor (#pepe49) > 32 or (#pepe50) > 32 or (#pepe51) > 32 or (#pepe52) > 32 or (#pepe53) > 32 or (#pepe54) > 32\n\t\t\tor (#pepe55) > 32 or (#pepe56) > 32 or (#pepe57) > 32 or (#pepe58) > 32 or (#pepe59) > 32 or (#pepe60) > 32\n\t\t\tor (#pepe61) > 32 or (#pepe62) > 32 or (#pepe63) > 32 or (#pepe64) > 32 or (#pepe65) > 32 or (#pepe66) > 32\n\t\t\tor (#pepe67) > 32 or (#pepe68) > 32 or (#pepe69) > 32 or (#pepe70) > 32 or (#pepe71) > 32 or (#pepe72) > 32\n\t\t\tor (#pepe73) > 32 or (#pepe74) > 32 or (#pepe75) > 32 or (#pepe76) > 32 or (#pepe77) > 32 or (#pepe78) > 32\n\t\t\tor (#pepe79) > 32 or (#pepe80) > 32 or (#pepe81) > 32 or (#pepe82) > 32 or (#pepe83) > 32 or (#pepe84) > 32\n\t\t\tor (#pepe85) > 32 or (#pepe86) > 32 or (#pepe87) > 32 or (#pepe88) > 32 or (#pepe89) > 32 or (#pepe90) > 32\n\t\t\tor (#pepe91) > 32 or (#pepe92) > 32 or (#pepe93) > 32 or (#pepe94) > 32 or (#pepe95) > 32 or (#pepe96) > 32\n\t\t\tor (#pepe97) > 32 or (#pepe98) > 32 or (#pepe99) > 32 or (#pepe100) > 32 or (#pepe101) > 32 or (#pepe102) > 32\n\t\t\tor (#pepe103) > 32 or (#pepe104) > 32 or (#pepe105) > 32 or (#pepe106) > 32 or (#pepe107) > 32 or (#pepe108) > 32\n\t\t\tor (#pepe109) > 32 or (#pepe110) > 32 or (#pepe111) > 32 or (#pepe112) > 32 or (#pepe113) > 32 or (#pepe114) > 32\n\t\t\tor (#pepe115) > 32 or (#pepe116) > 32 or (#pepe117) > 32 or (#pepe118) > 32 or (#pepe119) > 32 or (#pepe120) > 32\n\t\t\tor (#pepe121) > 32 or (#pepe122) > 32 or (#pepe123) > 32 or (#pepe124) > 32 or (#pepe125) > 32 or (#pepe126) > 32\n\t\t\tor (#pepe127) > 32 or (#pepe128) > 32 or (#pepe129) > 32 or (#pepe130) > 32 or (#pepe131) > 32 or (#pepe132) > 32\n\t\t\tor (#pepe133) > 32 or (#pepe134) > 32 or (#pepe135) > 32 or (#pepe136) > 32 or (#pepe137) > 32 or (#pepe138) > 32\n\t\t\tor (#pepe139) > 32 or (#pepe140) > 32 or (#pepe141) > 32 or (#pepe142) > 32 or (#pepe143) > 32 or (#pepe144) > 32\n\t\t\tor (#pepe145) > 32 or (#pepe146) > 32 or (#pepe147) > 32 or (#pepe148) > 32 or (#pepe149) > 32 or (#pepe150) > 32\n\t\t\tor (#pepe151) > 32 or (#pepe152) > 32 or (#pepe153) > 32 or (#pepe154) > 32 or (#pepe155) > 32 or (#pepe156) > 32\n\t\t\tor (#pepe157) > 32 or (#pepe158) > 32 or (#pepe159) > 32 or (#pepe160) > 32\n\t\t)\n}\n\nrule PEPE_Silvia_v2_Extreme_Edition\n{\n        meta:\n                description = \"Office Document containing excessive number of variable assembly or terse variables\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n                modified = \"2019-01-22\"\n                tlp = \"GREEN\"\n                thanks = \"sysopfb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $pepe1 = { 80 0000 ff03 030? }\n                $pepe2 = { 84 0800 ff03 030? }  //Seen on 2019-01-22, reported by Justin Borland\n                $pepe3 = { b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and ( #pepe1 > 32 or #pepe2 > 32 or #pepe3 > 32 )\n}\n\nrule Office_AC_Slater\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-22\"\n                risk = \"high\"\n                comments = \"Office document with macro using terse variable assembly similar to PEPE Silvia\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Variable stuffs\n\t\t$ac_slater = { ac00??00240046020100ac00??0?2b003e02010000000000 }\n\n                $vb1 = \"VBE\"    nocase wide ascii\n                $vb2 = \"VBA\"    nocase wide ascii\n                $vb4 = \"OLE\"    nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office and (#ac_slater > 64) and any of ($vb*)\n}\n\nrule RTF_Excel40_Macro_HexASCII\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-15\"\n\t\trisk = \"high\"\n\t\tcomments = \"Office document with an Excel 4.0 macro embedded in an RTF as Hex-Ascii\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$rtf = { 7B 5C 72 }\n\t\t$macro = \"0000457863656c20342e30204d6163726f7300\" nocase ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5c7b and $rtf at 0 and $macro\n}\n\nrule RTF_Large_HexAscii_Embeded\n{\n        meta:\n                description = \"Large RTF Document containing 64, 128, or 256 byte offset hex-ascii encoding with embedded document\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-01-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $em1 = \"5b436f6e74656e745f54797065735d\"         nocase ascii    //[Content_Types]\n                $em2 = \"2e6f70656e786d6c666f726d6174732e\"       nocase ascii    //.openxmlformats.\n                $em3 = \"d0cf11e0a1b11ae1\"                       nocase ascii    //Office File Magic\n\n                $hexascii = /[\\r\\n]([0-9A-Fa-f]{64}|[0-9A-Fa-f]{128}|[0-9A-Fa-f]{256})[\\r\\n]/\n\n        condition:\n                uint16(0) == 0x5c7b and $rtf at 0 and filesize > 1024KB and any of ($em*) and (#hexascii > 1024)\n}\n\nrule Office_qwerty_whoami\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-07\"\n                risk = \"high\"\n                comments = \"Potential macro using naming conventions or paths seen with Nymaim and Icedid\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $odd1 = { 5c 7177 6572 7479 }   // \\qwerty\n                $odd2 = { 5c77 686f 616d 695c } // \\whoami\\\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($odd*) and any of ($vb*)\n}\n\nrule Macro_RTFDocument\n{\n    meta:\n        description = \"RTF document contains an office macro\"\n\tauthor = \"Nathan Fowler\"\n\tdate = \"2019-01-02\"\n\tthanks = \"@Techhelplistcom\"\n\n    strings:\n\n\t$rtf = { 7B 5C 72 }\n\t$macro = \"MacroEnabled.\"\n\n    condition:\n        $rtf at 0 and $macro\n}\n\nrule Generic_Bad_XML_or_RTF\n{\n        meta:\n                description = \"Generic indicators of badness in an RTF, likely hex-ascii functions or excessive padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n\t\tmodified = \"2018-12-31\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7b5c 72 }\n                $xml = { 3c3f 786d 6c }\n\n                //Padding after the RTF header\n                $bad_start1 = { 7b5c 72 [3] (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) }\n\n                //Msxml2.SAXXML\n                $bad1 = /[46]d([03]0)?[57]3([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c([03]0)?32([03]0)?2e([03]0)?[57]3([03]0)?[46]1([03]0)?[57]8([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c/i\n\n                //.openxmlformat as hex-ascii\n                $bad2 = \"6f70656e786d6c666f726d6174\" wide ascii\n\n                //Office file magic as hex-ascii\n                $bad3 = \"d0cf11e0a1b\" nocase wide ascii\n\n                //Office file magic hatefully obfuscated\n                $bad4 = /d[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad5 = /d0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?cf[^\\}]+?\\}[\\x20\\x09\\r\\n]*?11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad6 = /d0c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1b/i\n\n\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\t\t$negate2 = \"534158584d4c5265616465722e362e30\"\tascii\t\t//SAXXMLReader.6.0\n\n        condition:\n                ( $rtf at 0 or $xml at 0 ) and ( any of ($bad*) or $bad_start1 at 0 ) and not any of ($negate*)\n}\n\nrule Office_Admin_Temp_Path_Wide\n{\n        meta:\n                description = \"Office document with wide hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-20\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"      nocase wide\n                $path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"         nocase wide\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\nrule Office_Admin_Temp_Path\n{\n        meta:\n                description = \"Office document with hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"\tnocase ascii\n\t\t$path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"\t\tnocase ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\n//rule Office_hidden_macro_40\n//{\n//        meta:\n//                description = \"Office document with hidden or very hidden macro 4.0 sheet.\"\n//                author = \"Nathan Fowler\"\n//                risk = \"high\"\n//                date = \"2018-12-14\"\n//                tlp = \"AMBER\"\n//               thanks = \"Didier Stevens\"\n//\n//        strings:\n//                $office = { d0cf 11e0 a1b1 1ae1 }\n//                $macro4 = { 8500 ?? ?? ?? ?? ?? ?? [01 - 02] 01 ?? ?? }\n//\n//        condition:\n//\t\t$office at 0 and for any i in (1..#macro4): (uint16(@macro4[i] + 2) - uint16(@macro4[i] + 10) == 8)\n//}\n\nrule Office_Weird_ChrGen_Possible_XLM_Macro\n{\n        meta:\n                description = \"Office document with weird chrgen stuffs possibly an XLM macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-13\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$weird = { 0000000000010f0008021000??0?0?0005002c01 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and (#weird > 1024) and not any of ($vb*)\n}\n\nrule Suspected_PDF_Link_Image_Phish_Many_URIs\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to a high volume of URIs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-12\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n                $uri1 = \"/URI(http\"\n                $uri2 = \"/URI (http\"\n\n                $distance_anchor = /\\x2fURI[\\x20\\x09]*\\(http[^\\)]+.{0,40}\\x2fURI[\\x20\\x09]*\\(http/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n        condition:\n                (filesize < 300KB) and ($pdf at 0) and (#uri1 > 6 or #uri2 > 6) and $distance_anchor and (not $title1 or $title2)\n}\n\nrule Office_Potential_CVE_2018_15982\n{\n        meta:\n                description = \"Office Document suspected of being Adobe Flash CVE2018-15982\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-07\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n\t\t$wtf = { c0deabcdef }\n\n\t\t$beef1 = \">application/x-shockwave-flash<\" nocase wide ascii\n\t\t$beef2 = \"isDebugger\" nocase wide ascii\n\t\t$beef3 = \"com.adobe.tvsdk.\" nocase wide ascii\n\n        condition:\n\t\t($office at 0 or $rtf at 0 or $xml at 0) and ( $wtf or all of ($beef*) )\n}\n\nrule Office_HTML_Export_Links_Phish\n{\n        meta:\n                description = \"Office HTML Wide Document Export with 2 or less HREFs, suspected phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-03\"\n                tlp = \"GREEN\"\n\n                strings:\n\t\t\t$ms_derpffice_magic = {fffe 3c00 6800 7400 6d00 6c00 2000 7800}\n\n\t\t\t$ms_derpffice1 = \"<html xmlns:o=\\\"urn:schemas-microsoft-com:office:office\" wide\n\t\t\t$ms_derpffice2 = \"<meta http-equiv=Content-Type content=\\\"text/html; charset=unicode\\\">\" wide\n\t\t\t$ms_derpffice3 = \"<meta name=ProgId content=\" wide\n\t\t\t$ms_derpffice4 = \"href=\\\"http\" wide\n\n                condition:\n                        $ms_derpffice_magic at 0 and all of ($ms_derpffice*) and (#ms_derpffice4 < 3)\n}\n\nrule Office_URL_Reversed\n{\n        meta:\n                description = \"Office document with a string reversed URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $rev1 = \"//:sptth\"\n                $rev2 = \"//:ptth\"\n                $rev3 = \"//:ptf\"\n\n\n        condition:\n                ($office at 0 or $rtf at 0 or $xml at 0) and any of ($rev*)\n}\n\nrule RTF_Too_Much_Hex\n{\n        meta:\n\t\tdescription = \"RTF with a whole bunch of hex-ascii\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $rtf = { 7B5C72 }\n\n                        $entity1 = { 095c 6? }\n                        $entity2 = { 205c 6? }\n                        $entity3 = { 7b5c 6? }\n\n                        $hex = /([A-Fa-f0-9]{2}){128}/i\n\n\t\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\n                condition:\n                        $rtf at 0 and not $negate1 and (#entity1 > 6 or #entity2 > 6 or #entity3 > 6) and #hex > 16\n}\n\nrule Office_Document_Phishing\n{\n        meta:\n                description = \"Suspected Office Document Phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$link1 = \"://\" nocase wide ascii\n\t\t$link2 = \"HYPERLINK \\\"http\"\n\t\t$link3 = { 0000 5f50 4944 5f48 4c49 4e4b 5300 0200 }\n\n\t\t$phish1 = \"this document is protected by\" nocase ascii\n\t\t$phish2 = \"click here to unlock\" nocase ascii\n\t\t$phish3 = \"click here to reset\" nocase ascii\n\t\t$phish4 = \"sign in to\" nocase ascii\n\n                $macro1 = \"VBE\" nocase wide ascii\n                $macro2 = \"VBA\" nocase wide ascii\n                $macro3 = \"OLE\" nocase wide ascii\n                $macro4 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\t($rtf at 0 or $office at 0) and all of ($link*) and any of ($phish*) and not any of ($macro*)\n}\n\nrule rtf_obfuscated_equation_in_pars\n{\n        meta:\n                description = \"RTF file with Equation hidden in pars\"\n                author = \"Justin Borland & Greg Olmstead\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n\t\tmodified = \"2018-11-20\"\n                sha1_v1 = \"0f535507d02371ebab86fb318c55479d4b11ec7e\"\n        strings:\n                $rtf = { 7b 5c 72 }\n                $equation1 = /4\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 710\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 075\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ff]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 020\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 004\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 760\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 065/s\n                $equation2 = /45\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 750\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ff]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 200\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 04[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 600\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 65/s\n                $equation3 = /450\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 071\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ff]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 002\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 000\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 4[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 076\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 5/s\n        condition:\n                $rtf at 0 and any of ($equation*)\n}\n\nrule Powershell_Obfuscation_Cmd\n{\n        meta:\n                description = \"Office Document suspected of containing Powershell obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-16\"\n\t\tmodified = \"2018-11-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $xml = { 3c3f 786d 6c }\n                $rtf = { 7b5c 72 }\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n                $for1 = \"f^or\" nocase ascii\n                $for2 = \"fo^r\" nocase ascii\n                $for3 = \"f^o^r\" nocase ascii\n\n                $cmd = \"cmd\" nocase ascii\n\n                $rabbits1 = /[a-zA-Z]\\x5e[a-zA-Z]\\x5e/\n\n\t\t$exclude = \"TickersSold\" ascii\n\n        condition:\n                ($xml at 0 or $office at 0 or $rtf at 0)\n                and (\n                        ( #rabbits1 > 64 and not $exclude )\n                        or (\n                                $cmd\n                                and (\n                                           any of ($for*)\n                                        or any of ($set*)\n                                )\n                        )\n                )\n}\n\nrule Thusla_Doom_Set\n{\n        meta:\n                description = \"Office Document containing excessive set obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-15\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and (#set1 > 8 or #set2 > 8 or #set3 > 8)\n}\n\nrule Office_SecurityCryptography\n{\n        meta:\n\t\tdescription = \"Office document using System.Security.Cryptography\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Kirk Sayre\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t$crypt = \"System.Security.Cryptography.\" nocase wide ascii\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $crypt\n}\n\nrule Office_hexascii_binary_copy\n{\n        meta:\n\t\tdescription = \"Office document using binary copy in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//copy /b\n\t\t\t$hexascii = /[46]3([03]0)?[46]f([03]0)?[57]0([03]0)?[57]9([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_Nullsoft_Install\n{\n        meta:\n\t\tdescription = \"Office document with Nullsoft Installer encoded in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//Nullsoft Ins\n\t\t\t$hexascii = /[46]e([03]0)?[57]5([03]0)?[46]c([03]0)?[46]c([03]0)?[57]3([03]0)?[46]f([03]0)?[46]6([03]0)?[57]4([03]0)?20([03]0)?[46]9([03]0)?[46]e([03]0)?[57]3/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_echo_off_and_bad\n{\n        meta:\n\t\tdescription = \"Office document with ECHO OFF and other badness\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n\t\tmodified = \"2018-11-13\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//ECHO OFF\n\t\t\t$bad1 = /[46]5([03]0)?[46]3([03]0)?[46]8([03]0)?[46]f([03]0)?20([03]0)?[46]f([03]0)?[46]6([03]0)?[46]6/i\n\n\t\t\t//TIMEOUT\n\t\t\t$bad2 = /[57]4([03]0)?[46]9([03]0)?[46]d([03]0)?[46]5([03]0)?[46]f([03]0)?[57]5([03]0)?[57]4([03]0)?20/i\n\n\t\t\t//REG DELETE or QUERY\n\t\t\t$bad3 = /[57]2([03]0)?[46]5([03]0)?[46]7([03]0)?20([03]0)?([46]4([03]0)?[46]5([03]0)?[46]c([03]0)?[46]5([03]0)?[57]4([03]0)?[46]5|[57]1([03]0)?[57]5([03]0)?[46]5([03]0)?[57]2([03]0)?[57]9)([03]0)?20/i\n\n\t\t\t//for /f\n\t\t\t$bad4 = /[46]6([03]0)?[46]f([03]0)?[57]2([03]0)?20([03]0)?2f([03]0)?[46]6([03]0)?20/i\n\n\t\t\t//START /b\n\t\t\t$bad5 = /[57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n\t\t\t//Invoke-Expression\n\t\t\t$bad6 = /[46]9([03]0)?[46]e([03]0)?[57]6([03]0)?[46]f([03]0)?[46]b([03]0)?[46]5([03]0)?2d([03]0)?[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]9([03]0)?[46]f([03]0)?[46]e/\n\n                condition:\n                        ($office at 0 or $rtf at 0) and any of ($bad*)\n}\n\nrule Office_VBA_OLE_qwerty\n{\n        meta:\n                description = \"Office document using Microsoft Forms, Embedded Object, VBA, OLE, and literal qwerty\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-24\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\n                        $bad1 = \"qwerty\"\n                        $bad2 = \"Microsoft Forms\"\n                        $bad3 = \"Embedded Object\"\n                        $bad4 = \"VBA\" wide ascii\n                        $bad5 = \"stdole\" wide ascii nocase\n\n                condition:\n                        $office at 0 and all of ($bad*)\n}\n\nrule RTF_Embedded_Office_Doc_OLE\n{\n        meta:\n\t\tdescription = \"RTF document with OLE-enabled embedded Office document.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-22\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $office1 = \"D0CF11E0A1B11AE1\" nocase\n                $office2 = \"D000CF001100E000A100B1001A00E1\" nocase\n\n                $ole = /[46]F([03]0)?[46]C([03]0)?[46]5/i\n\n        condition:\n                ($rtf at 0) and any of ($office*) and $ole\n}\n\nrule Office_ChrGen_Eval_Reverse\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, Reverse, and ChrGen\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n\t\tmodified = \"2018-11-01\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n\n                $bad1 = \"Evaluate\"\n                $bad2 = \"Reverse\"\n\n\t\t$exclude1 = { 5265 7665 7273 6520 582d 4469 7669 6465 }\t\t//Reverse X-Divide\n\t\t$exclude2 = /Reverse[A-Za-z]/\t\t\t\t\t//Handle ReverseOrder\n\t\t$exclude3 = \"_Evaluate\"\t\t\t\t\t\t//Handle Evaluate\n\n                $chrgen1 = { 0000 2f01 0000 3001 0000 3101 0000 3201 0000 3301 0000 3401 0000 3501 0000 3601 0000 3701 0000 3801 0000 3901 0000 3a01 0000 3b01 0000 3c01 0000 3d01 0000 3e01 0000 3f01 0000 4001 0000 4101 0000 4201 0000 4301 0000 4401 0000 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and all of ($bad*) and $chrgen1 and not any of ($exclude*)\n}\n\nrule doc_with_applicationRun_vba_autoopen\n{\n        meta:\n                description = \"DOC + Application.Run +VBA + Macro\"\n                author = \"Ryan Moon & Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $autoopen = /A\\x00?u\\x00?t\\x00?o\\x00?O\\x00?p\\x00?e\\x00n/\n                $vba = \"_VBA_PROJECT\" wide nocase\n                $run = /A\\x00?p\\x00?p\\x00?l\\x00?i\\x00?c\\x00?a\\x00t\\x00?i\\x00?o\\x00?n\\x00?.\\x00?R\\x00?u\\x00?n\\x00?\\x20?\\x00?\\x22/\n        condition:\n               $office at 0 and $autoopen and $vba and $run\n}\n\nrule hostile_vbs_lokibot {\n\tmeta:\n\t\tauthor = \"Ryan C. Moon\"\n\t\tdate = \"2018-10-01\"\n\t\tdescription = \"Identifies hostile vbs files used by lokibot malspam\"\n\t\tweight = 100\n\n\tstrings:\n\t\t// script calls with external resources\n\t\t$header = \"strLinhaComandoAddRegistro\" ascii\n\t\t$username_as_file = \"=%USERNAME%.vbs\" ascii\n\t\t$set_nothing = \" = Nothing\" ascii\n\n\tcondition:\n\t\t$header and $username_as_file and #set_nothing > 3\n}\n\nrule xls_w_autoopen_eval_vba\n{\n        meta:\n                description = \"Generic rule looking for autoOpen and _Evaluate within xls\"\n                author = \"Ryan Moon & Justin Borland & Nathan Fowler also ran\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n        strings:\n                $document_header = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $happy_trees1 = \"VBAProject\"\n                $happy_trees2 = \"_Evaluate\"\n                $happy_trees3 = \"Document_Open\"\n\n                $vba_to_eval_to_document_open = /VBAProject.{1,128}_Evaluate.{1,128}Document_Open/\n\n        condition:\n                $document_header at 0 and all of ($happy_trees*) and $vba_to_eval_to_document_open\n}\n\nrule Office_CharacterDict\n{\n        meta:\n                description = \"Office Document containing a numeric character dictionary and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-10-02\"\n\t\ttlp = \"GREEN\"\n        strings:\n\t        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$stupidland1 = {3132 3334 3536 3738 3930 00}\n\t\t$stupidland2 = {3031 3233 3435 3637 3839 00}\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule doc_with_encoded_cmd_and_vbs\n{\n        meta:\n                description = \"Office document with 'cmd.exe /c' and 'LANGUAGE=VBScript>' in base64\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $cmd = \"Y21kLmV4ZSAvYyAg\" // 'cmd.exe /c  ' in base64\n                $vbscript = \"IExBTkdVQUdFPSJWQlNjcmlwdCI+\"  // ' LANGUAGE=\"VBScript\">' in base64\n        condition:\n                $office at 0 and $cmd and $vbscript\n}\n\nrule rtf_cve_2017_8570\n{\n        meta:\n                description = \"RTF with embedded classid used in CVE-2017-8570\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-24\"\n\n        strings:\n                $rtf =  { 7b5c 7274 66 }\n                $classid = { 37 6233 3233 3033 3433 3733 3733 3434 3334 3632 6434 3433 3233 3533 3132 6433 3434 3633 3033 3232 6433 3833 3533 3534 3232 6433 3234 3234 3533 3733 3033 3533 3833 3533 3133 3833 3434 3237 64 }// Actual Hex in the Ascii -> 7b32303437373443462d443235312d344630322d383535422d3242453730353835313834427d which is actually -> {204774CF-D251-4F02-855B-2BE70585184B}  - ref https://github.com/rxwx/CVE-2017-8570/blob/master/calc.sct\n                $cdata = { 33 6332 3135 6234 3334 3434 3135 3434 3135 62 } // Actual Hex in Ascii -> 3c215b43444154415b -> <![CDATA[\n        condition:\n                $rtf at 0 and $classid and $cdata\n}\n\nrule Office_6_pif_hta_exe\n{\n        meta:\n                description = \"Office Document containing a macro, .exe, .hta, and 6.pif filename in base64.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"XDYucGlm\" wide ascii\n\t\t$stupidland2 = \".hta\" wide ascii\n\t\t$stupidland3 = \".exe\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_jpeg_recompress\n{\n        meta:\n                description = \"Office Document containing a macro and an image from jpeg-recompress.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"UNICODE\" wide ascii\n\t\t$stupidland2 = \"by jpeg-recompress\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_KeyString\n{\n        meta:\n                description = \"Office Document containing ExeName32, mid, right, and KeyString macro commands.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"KeyString\" wide ascii\n\t\t$stupidland2 = \"Mid\" wide ascii\n\t\t$stupidland3 = \"Right\" wide ascii\n\t\t$stupidland4 = \"ExeName32\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_PING\n{\n        meta:\n                description = \"Office Document containing command instruction to run the PING command and stdole/VBE/VBA.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"cmd.exe /c  ping\"\n\t\t$stupidland2 = \"Y21kLmV4ZSAvYyAgcGluZyBsb2NhbGhvc3QgLW4\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_stdole_CallByName_ActiveDocument\n{\n        meta:\n                description = \"Office Document containing ole, CreateObject, ActiveDocument, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-18\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"CallByName\" nocase wide ascii\n\t\t$stupidland2 = \"CreateObject\" nocase wide ascii\n\t\t$stupidland3 = \"ActiveDocument\" nocase wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule retefe_crypt1\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tsample = \"f4081aced73a37fdb4fa589925ac31f86fec83b9aed6b12d3ad06880bb880401\"\n\t\tstrings:\n\t\t\t$decode1 = {8b d? d3 ea 83 c1 08 [0-1] 88 1? [0-1] 4? [0-3] 83 f9 20 72}\n\t\t\t$decode2 = {8b c? [0-3] 83 e0 03 [0-2] 8a 04 1? 30 0? [0-3]  4? 3b}\n\t\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\tcondition:\n\t\t\tall of them\n}\n\nrule RTF_CVE_11882_suspect_3030\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882 with excessive 0x30 byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-09-12\"\n\t\ttlp = \"GREEN\"\n\t\tmodified = \"2018-09-28\"\n\t\trevision = \"4\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 72 }\n\n\t\t$stuffs = { 3030 3030 3030 3030 3030 3030 3030 3030 }\n\n\t\t$magical_cocaman1 = /[46]500[57]100[57]500[46]100[57]400[46]900[46][Ff]00[46][Ee]00(2000[46][Ee]00[46]1|2[Ee]0033)/\n\t\t$magical_cocaman2 = /[46]5[57]1[57]5[46]1[57]4[46]9[46][Ff][46][Ee](20[46][Ee][46]1|2[Ee]33)/\n\n\tcondition:\n\t\t$rtf at 0 and $stuffs and any of ($magical_cocaman*)\n}\n\nrule RTF_x27_spaced_out\n{\n        meta:\n                description = \"RTF Document containing x27 weird stuffs and lots of space padding, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-04\"\n\n        strings:\n\t\t$badrtf1 = { 7b 5c 72 74 ?? ?? ?? ?? 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                $badrtf1 at 0 and $quote1\n}\n\nrule rtf_rtv0_obfuscated_http {\n  meta:\n    description = \"Yara rule to detect obfuscated download URLs in RTF file\"\n    urlhaus = \"https://urlhaus.abuse.ch/browse/tag/rtfkit/\"\n    author = \"Corsin Camichel, @cocaman\"\n    version = \"2018-09-04\"\n    version = \"1.3 Modified 2018-09-19\"\n    in_the_wild = true\n    payload = \"Formbook, AZOrult, Loki, RemcosRAT, AgentTesla\"\n    tlp = \"green\"\n\n  strings:\n    $magic = /{\\\\rt./     // most headers are rtv0, I have seen others too\n    $nop_1 = \"\\\\'9X\"      // different NOP strings seen over time\n    $nop_2 = \"\\\\90\"\n    $nop_3 = \"\\\\'7S\"\n    $nop_4 = /\\\\'../      // this seems like a bad idea and could generate FP (so good so far)\n    $http = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..3A\\\\'..2F\\\\'..2F/           // start of http://\n    $https = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..73\\\\'..3A\\\\'..2F\\\\'..2F/   // start of https://\n    $null = /\\'..00/      // null bytes, sometimes in URL\n    $slash = /\\\\'..2F/\n\n  condition:\n    $magic at 0\n      and (#nop_1 > 50 or #nop_2 > 50 or #nop_3 > 50 or #nop_4 > 15)\n      and ($http or $https or $null or $slash)\n}\n\nrule RTF_par_par_party\n{\n        meta:\n                description = \"Tiny RTF 0a0d par par par Party and 0d 0a was not invited, potentially Emotet RTF.\"\n                author = \"Nathan Fowler/Ryan C. Moon\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$party = { 5c 7061 720a 0d5c 7061 720a 0d }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $party and filesize < 10KB\n}\n\nrule RTF_SpacedLink_Emotet\n{\n        meta:\n                description = \"Tiny RTF Document containing spaced-out (woooo space) link, potentially Emotet RTF.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$link1 = { 0a0d 5c70 6172 0a0d 6874 7470 3a2f 2f }\n\t\t$link2 = { 0a0d 5c70 6172 0a0d 6874 7470 733a 2f2f }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and any of ($link*) and filesize < 10KB\n}\n\nrule RTF_x27_ampersand\n{\n        meta:\n                description = \"RTF Document containing x27 and ampersand weird stuffs, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-19\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$amp1 = { 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $amp1 and $quote1\n}\n\nrule RTF_CVE_11882_8570_suspect\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882/8570 with excessive byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-05-21\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 7274 6631 5c }\n\t\t$stuffs1 = { 3031 3035 3030 3030 3032 3030 3030 3030 3038 3030 3030 3030 }\n\t\t$stuffs2 = { 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 }\n\t\t//$stuffs3 = { 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 }\n\n\tcondition:\n\t\t$rtf at 0 and all of ($stuffs*)\n}\n\n\nrule PowerShell_Dropper\n{\n\tmeta:\n\t\tdescription = \"Base64 encoded PowerShell commands used in droppers\"\n\t\tauthor = \"Nathan Fowler / Justin Borland / Ryan Moon\"\n\t\trisk = \"high\"\n\t\tdate = \"2017-10-19\"\n\n\tstrings:\n\t\t$b1 = \"IABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0\"\n\t\t$b2 = \"RABvAHcAbgBsAG8AYQBkAEYAaQBsAGUA\"\n\t\t$b3 = \"AFMAdABhAHIAdAAtAFAAcgBvAGMAZQBzAHMA\"\n\n\tcondition:\n\t\tall of them\n}\n\nrule Javascript_Hatefulness_3\n{\n        meta:\n                description = \"Suspected JavaScript loader, locky\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $js1 = \"var \"\n                $js2 = \"fromCharCode(\"\n                $js3 = \"catch (\"\n                $js4 = \"\\\\u00\"\n\n\t\t$js_wordlist = /\\((\\x22[a-z]{4,32}\\x22\\x20?,\\x20?){4}/\n\n        condition:\n                all of them\n}\n\nrule VBE_Padding_MZ\n{\n        meta:\n                description = \"Office Document containing VBE and A and MZ padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n                $padding2 = { 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d }\n\n\t\t$slashyslashes1 = { 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f }\n\n        condition:\n                all of ($office*) and any of ($vb*) and all of ($padding*) and any of ($slashyslashes*)\n}\n\nrule ZIP_HTA\n{\n        meta:\n                description = \"Zip archive containing a .hta file\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $hta1 = \".hta\" nocase\n\n        condition:\n                $zip1 at 0 and ($hta1 in (filesize-100..filesize))\n}\n\nrule PDF_PowerShell\n{\n        meta:\n                description = \"PDF Document containing Powershell Hidden/Encoded\"\n                author = \"Nathan Fowler/Michelle Ticer\"\n                risk = \"high\"\n\n        strings:\n                $pdf1 = \"%PDF-\"\n\n                $ps1 = \"powershell.exe\" nocase\n                $ps2 = \"-EncodedCommand\" nocase\n                $ps3 = \" hidden\"\n\n        condition:\n                $pdf1 at 0 and all of ($ps*)\n}\n\nrule Office_WordPress_Evaluate\n{\n        meta:\n                description = \"Office Document containing VBA, Evaluation, and TurdPress URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$eval1 = \"Eval\"\n\n\t\t$turdpress1 = \"/wp-\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($eval*) and any of ($turdpress*)\n}\n\nrule Office_VBE_ByVal_CharGen\n{\n        meta:\n                description = \"Office Document containing VBA, Short Path VBE DLL, ByVal, and Chargen CHRs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$byval1 = \"ByVal\"\n\t\t$byval2 = \"CallBy\"\n\n\t\t$chargen1 = { 16 1718 191a 2526 2728 292a 3435 3637 3839 3a43 4445 4647 4849 4a53 5455 5657 5859 5a63 6465 6667 6869 6a73 7475 7677 7879 7a }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($byval*) and all of ($chargen*)\n}\n\nrule VBE_Autofit_Padding\n{\n        meta:\n                description = \"Office Document containing VBE, FileSystemObject, and autofit with 'A' or 'B' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n\t\t$fso1 = \"emObject\"\n\n\t\t$fit1 = \"Autofit\" nocase\n\n        condition:\n                all of ($office*) and any of ($fso*) and any of ($vb*) and any of ($padding*) and any of ($fit*)\n}\n\nrule Office_Powershell\n{\n        meta:\n                description = \"Office Document containing Powershell hidden/process injection\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n\t\t$ps1 = \"powershell.exe\" nocase\n\t\t$ps2 = \"-NoP\"\n\t\t$ps3 = \"-NonI\"\n\t\t$ps4 = \"Hidden\"\n\t\t$ps5 = \"-Enc\"\n\n        condition:\n                all of ($ps*)\n}\n\nrule DirectVBE6DLL_Padding\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE6.DLL or VBE7.dll with 'A' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($padding*)\n}\n\nrule JS_in_a_Rar\n{\n        meta:\n                description = \"Detects a js inside a rar file.\"\n                author = \"Ryan C. Moon\"\n                risk = \"high\"\n\n        strings:\n                $rar_header = { 52 61 72 21 }\n                $js_extension = { 2e 6a 73 00 }\n\n        condition:\n                $rar_header at 0 and $js_extension\n}\n\nrule MiscreantPunch_PiratedOfficeVersionWMacrosXBAG\n{\n        meta:\n                description = \"Office Document containing cracked Office miscreant fingerprint\"\n                author = \"Will Metcalf/Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $cracked1 = \"RePack by Diakov\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                all of ($office*) and all of ($cracked*) and any of ($vb*)\n}\n\nrule ZIP_JS\n{\n        meta:\n                description = \"Zip archive containing a .js file potentially locky\"\n                author = \"Nathan Fowler / P.Burbage\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $js1 = \".js\" nocase\n\t\t$js2 = \".jse\" nocase\n\n        condition:\n                $zip1 at 0 and ( ($js1 in (filesize-100..filesize)) or ($js2 in (filesize-100..filesize)) )\n}\n\nrule Office_CacheControl\n{\n        meta:\n                description = \"Office document containing Cache-Control HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$cc1 = \"Cache-Control\"\n\t\t$cc2 = \"no-cache\"\n\t\t$cc3 = \"no-store\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($cc*)\n}\n\nrule Office_RTF_Sandworm\n{\n        meta:\n                description = \"Office RTF Document containing Sandworm\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { 7b5c 7274 6631 205c 6164 6566 6c61 6e67 }\n\t\t$office2 = \"generator Msftedit \"\n\n\t\t$bad1 = \" Sandworm \"\n\t\t$bad2 = \"abcdefghijk\"\n\t\t$bad3 = \"ABCDEFGHIJK\"\n\n        condition:\n                all of ($office*) and all of ($bad*)\n}\n\nrule jsocket_v2_6 {\n    meta:\n        description = \"JSocket v2.6\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-19\"\n        reference = \"34f5bfeee44b545554c3112a68461282\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"javas/MaIn.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\n\nrule jsocket_v2_5 {\n    meta:\n        description = \"JSocket v2.5\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-08\"\n        reference = \"0249b3cbeb6742fafb946ae3a916b054\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_4 {\n    meta:\n        description = \"JSocket v2.4\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-01\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"windows/windows.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_3 {\n    meta:\n        description = \"JSocket v2.3\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-17\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2_a {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-07\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.pl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2 {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.perl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_1 {\n\tmeta:\n    \tdescription = \"JSocket v2.1\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-09\"\n        reference = \"2c7cb88dc26d1b5cb0edd62d79f66ee7\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/resource.xsx\"\n        $misc_2 = \"java/textito.text\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v2_a {\n\tmeta:\n    \tdescription = \"JSocket v2.0(?)a\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-10-29\"\n        reference = \"25197708fb1fa081efa21822a62358d6\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/stubcito.opp\"\n        $misc_2 = \"java/textito.isn\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v1_2_dropper {\n\tmeta:\n    \tdescription = \"JSocket v1.2 dropper\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-07-22\"\n        reference_md5 = \"020e6397cdf1ba26470295fc32175de2\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = { 00 61 2e 74 78 74 50 4b } // \"a.txtPK\"\n        $misc_2 = { 00 62 2e 74 78 74 50 4b } // \"b.txtPK\"\n        $misc_3 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule java_rc5_6_class {\n\tmeta:\n    \tdescription = \"Java RC5 Key Expansion constants\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n    \t$magic = { CA FE BA BE }\n        $const_1 = { 3f f9 e3 77 9b 97 f0 51 }\n        $const_2 = { 40 05 bf 0a 8b 14 57 69 }\n        $const_3 = { b7 e1 51 63 }\n        $const_4 = { 9e 37 79 b9 }\n\tcondition:\n    \t$magic at 0 and\n        all of ($const_*)\n}\n\nrule Java_Malware_Allatori_Obfuscated\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"com/java/Manifest.mf\"\n        $cls1 = \"com/java/Main.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_QRat\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"e-data\"\n        $data2 = \"data\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"Qrypt.class\"\n        $cls3 = \"ReplacedInputStream.class\"\n        $do = \"_Do.class\"\n\n    condition:\n        $mf and any of ($data*) and (all of ($cls*) or $do)\n}\n\nrule Java_Malware_AlienSpy\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config.ini\"\n        $data2 = \"password.ini\"\n        $cls1 = \"plugins/Server.class\"\n        $cls2 = \"DecryptStub.class\"\n        $cls3 = \"LoadPassword.class\"\n        $cls4 = \"LoadStub.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_A\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"a.txt\"\n        $data2 = \"b.txt\"\n        $cls1 = \"Main.class\"\n\n    condition:\n        $mf and all of ($data*) and any of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_B\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"MANIFEST.MF\"\n        $data2 = \"ID\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"plugins/Server.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_JSocket_C\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"resource/password.txt\"\n        $data2 = \"resource/server.dll\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_D\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/stubcito.opp\"\n        $data2 = \"java/textito.isn\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/textito.text\"\n        $data2 = \"java/resource.xsx\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E2\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"amarillo/asdasd.asd\"\n        $data2 = \"amarillo/adqwdqwd.asdwf\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_F\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.perl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_G\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.pl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $cls1 = \"org/jsocket/\"\n        $cls2 = \"org.jsocket.\"\n\n    condition:\n        $mf and all of ($cls*)\n}\n\nrule Office_Calibri_VBA\n{\n        meta:\n                description = \"Office document containing VBA, excessive Calibri declarations, and HTTP Response.Body with OLE Automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$office2 = { 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 0068 0101 0038 00bc }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $http1 = \"eBody\" nocase\n\t\t$http2 = \"HTTPRequest\" nocase\n\t\t$http3 = \"XMLH\" nocase\n\n                $script1 = \"Env\" nocase\n                $script2 = \"Script\" nocase\n\n                $ole1 = \"00020819-0000-0000-C000-000000000046\"\n                $ole2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($script*)\n}\n\nrule Access_Hidden_Tables_HTTP\n{\n        meta:\n                description = \"Office document containing VBA, Access linked databases, and HTTP Requests with OLE automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n\t\t$http1 = \"HTTPRequest\" nocase\n\t\t$http2 = \"XMLH\" nocase\n\t\t$http3 = \"ResponseBody\" nocase\n\n\t\t$ole1 = \"OLE\"\n\t\t$ole2 = { 23 00 4f 00 4c 00 45 00 }\n\t\t$ole3 = { 73 00 74 00 64 00 6f 00 6c 00 65 00 }\n\n\t\t$access1 = \"LinkedDatabase\" nocase\n\t\t$access2 = \"MSysObject\" nocase\n\t\t$access3 = \"DATABASE=\" nocase\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($access*)\n}\n\nrule Word2007_Interop_Assy_Excessive_Space\n{\n        meta:\n                description = \"Office document containing Word 2007 Interop Assemblies, excessive space (heap spray?), and VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $string1 = \"00020905-0000-0000-C000-000000000046\"\n                $string2 = { 7b 00 30 00 30 00 30 00 32 00 30 00 39 00 30 00 35 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $subclass1 = \"ByVal\" nocase\n\t\t$subclass2 = \"Private Declare Function\" nocase\n\t\t$subclass3 = \"Alias \" nocase\n\t\t$subclass4 = \" Alias\" nocase\n\n                $bad1 = { 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\n        condition:\n                any of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*) and any of ($subclass*)\n}\n\nrule Outlook_Automation_Cyrillic\n{\n\tmeta:\n\t\tdescription = \"Office document containing Outlook automation and VBA with Cyrillic fonts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$string1 = \"00020819-0000-0000-C000-000000000046\"\n\t\t$string2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\t\t$vb1 = { 56 00 42 00 41 00 }\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = \"VBE\"\n\n\t\t$bad1 = { 00 43 00 79 00 72 00 31 00 }\n\n\tcondition:\n\t\tany of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*)\n}\n\nrule OLE_Embedded_Jar\n{\n     meta:\n         description = \"Office document containing OLE embedded java archive\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n\t $string1 = { 4f 00 6c 00 65 00 }\n\t $string2 = { 01 00 43 00 6f 00 6d 00 70 00 4f 00 62 00 6a 00 }\n\t $java1 = \".jar\" nocase\n\t $java2 = \"META-INF/MANIFEST.MF\" nocase\n\n     condition:\n         all of ($string*) and any of ($java*)\n}\n\nrule OLEFormCipher\n{\n     meta:\n        description = \"Office document using form data reference AJAX, XML, or Java with Cipher and form submission\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $string1 = \"Content-Disposition: form-data\" nocase\n        $string2 = \"MULTIPART_BOUNDARY\" nocase\n\t$app1 = \"AJAX\" nocase\n\t$app2 = \"JAVA\" nocase\n\t$app3 = \"XML\" nocase\n\t$action1 = \"Submit\"\n\t$cipher1 = \"Cipher\" nocase\n\n     condition:\n\tany of ($office*) and any of ($string*) and any of ($app*) and all of ($action*) and all of ($cipher*)\n}\n\nrule rtf_includepicture\n{\n\tmeta:\n\t\tdescription = \"Detects rtf docs with includepicture, possibly MWI\"\n\t\tdate = \"2015-04-30\"\n\t\tauthor = \"culina@gmail.com\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$magic = \"{\\\\rt\"\n\t\t$string1 = \"INCLUDEPICTURE\"\n\t\t$string2 = \"http://\"\n\t\t$string3 = /\\.php\\?id=\\d/\n\n\tcondition:\n\t\t$magic at 0 and all of ($string*)\n}\n\nrule OLEHeapSpray\n{\n     meta:\n        description = \"Office document usin 0a heap spray with OLE\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = \"objemb\" nocase\n        $string2 = \"objdata\" nocase\n        $string3 = \"0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0\"\n\n     condition:\n        all of them\n}\n\nrule Subclassed_API\n{\n     meta:\n        description = \"Office document using obfuscated API subclassing to call DLL libraries using VBA that perform shell or Internet functions\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = /Private Declare [^\\x20\\x09]+ Function/ nocase\n        $url1 = \"download\" nocase\n        $url2 = \"shell32\" nocase\n        $url3 = \"urlmon\" nocase\n        $url4 = \"inet\" nocase\n        $url5 = \"urlopen\" nocase\n        $url6 = \"createurl\" nocase\n        $url7 = \"internetopen\" nocase\n        $url8 = \"wininet\" nocase\n        $url9 = \"internetget\" nocase\n\n     condition:\n        all of ($string*) and any of ($url*)\n}\n\nrule PowerShell\n{\n     meta:\n         description = \"Office document using PowerShell to execute a file hidden with bypass policy\"\n         author = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"powershell\" nocase\n\t $string2 = /[\\x22\\x27]powershell/ nocase\n\t $string3 = /-ExecutionPolicy[\\x20\\x09]+Bypass/ nocase\n\t $string4 = /-WindowStyle[\\x20\\x09]+hidden/ nocase\n\n     condition:\n         all of them\n}\n\nrule URL_Concat\n{\n     meta:\n         description = \"Office document using string building/concatenation for URLs\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"'ht'+'tp://'\" nocase\n         $string2 = \"'ht' + 'tp://'\" nocase\n\n     condition:\n         any of them\n}\n\nrule Office_Macro_ActiveMime\n{\n     meta:\n         description = \"M$ Office document containing macro with ActiveMime \"\n         author = \"Roberto Martinez\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"Content-Location: file:///\"\n         $string2 = \"Content-Transfer-Encoding: base64\"\n         $string3 = \"Content-Type: application/x-mso\"\n         $string4 = \"QWN0aXZlTWltZQAA\"\n\n     condition:\n         all of them\n}\n\nrule Macro_HTTPCall\n{\n    meta:\n        description = \"Office document contains code for HTTP communications\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $http1 = \".open\" nocase\n        $http2 = \".send\" nocase\n        $http3 = \"HTTP.Status\" nocase\n        $http4 = \"User-Agent\" nocase\n        $http5 = \"Mozilla/\"\n        $http6 = \"200 Then\"\n\n    condition:\n        any of ($office*) and 3 of ($http*)\n}\n\nrule Macro_PayloadDownload\n{\n    meta:\n        description = \"Office document contains macro code indicating payload download capabilities\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $payload_1 = \"URLDownloadToFile\"\n        $payload_2 = \"Msxml2.XMLHTTP\"\n        $payload_3 = \"Microsoft.XMLHTTP\"\n\n    condition:\n        any of ($office*) and any of ($payload*)\n}\n\nrule Macro_ExecutesEXE\n{\n    meta:\n        description = \"Office document contains code that executes an executable file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $execute1_1 = /c\\:\\\\/\n        $execute1_2 = /\\.exe/\n        $execute1_3 = \"del \"\n\n    condition:\n        any of ($office*) and all of ($execute*)\n}\n\nrule Macro_CreateFile\n{\n    meta:\n        description = \"Office document macro contains code to create a file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $create1 = \"CreateTextFile\"\n        $create2 = \"ADODB.Stream\"\n        $create3 = \"WriteText\"\n        $create4 = \"SaveToFile\"\n\n    condition:\n        any of ($office*) and any of ($create*)\n}\n\nrule ObfuscatedURL\n{\n    meta:\n        description = \"Office document contains an obfuscated URL string\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $url1 = \"687474703A2F2F\"\n        $url2 = \"Chr(68), Chr(74), Chr(74), Chr(70), Chr(3A), Chr(2F), Chr(2F)\"\n\n    condition:\n        any of ($office*) and any of ($url*)\n}\n\nrule Macro_XMLDocument\n{\n    meta:\n        description = \"XML document contains an office macro\"\n        reference = \"isc.sans.edu/diary/XML%3A+A+New+Vector+For+An+Old+Trick/19423\"\n        reference = \"www.trustwave.com/Resources/SpiderLabs-Blog/Attackers-concealing-malicious-macros-in-XML-files/?page=1&year=0&month=0\"\n\n    strings:\n\n        $xmlmacro1 = \"<?xml\"\n        $xmlmacro2 = \"<?mso-application progid=\\\"Word.Document\\\"?>\"\n        $xmlmacro3 = \"w:macrosPresent=\\\"yes\\\"\"\n\n    condition:\n        all of them\n}\n\n\n\nrule Office_VBA_OLE_Eval_Open\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, and Document_Open\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-09-06\"\n        strings:\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n                $eval1 = \"Evaluate\"\n                $open1 = \"Document_Open\"\n        condition:\n                any of ($vb*) and any of ($ole*) and any of ($eval*) and any of ($open*)\n}\n\nrule formbook_ace_archive\n{\n    meta:\n        description = \"Finds ace archives, not typically used for today's business but enjoyed by formbook malware\"\n        author = \"Sean Dalnodar\"\n        contact = \"sdalnodar@seic.com\"\n        date = \"2021-10-22\"\n        samples = \"fe8141ad1869a8ac34a4c258ce4c62d09ede71e1ea9f819c22e954aee473df4d\"\n\tsamples = \"76e745479aa92ba3a9d7aa6448aab35758ab2ef7ece2a66d4988bd0cde207771\"\n        tlp = \"green\"\n        prod = \"true\"\n    strings:\n        $a = {2a 2a 41 43 45 2a 2a} // **ACE**\n\t$b = {55 4e 52 45 47 49 53 54 45 52 45 44 20 56 45 52 53 49 4f 4e} // UNREGISTERED VERSION\n    condition:\n\t$a and $b\n\tand filesize < 1MB\n}\n\nrule AMSBypass {\n  meta:\n    description = \"Looks for powershell AntiMalwareSystem bypass method calls\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-10\"\n    samples = \"b9bf4200f9ca08904344c468e6848af7af740b8db8521184aafcbfce878fad24\"\n    samples = \"35f7add57f5349448f9db9f6d2ae22bac227d4ed398d21c9110407c6e7e7eb4d\"\n    tlp = \"green\"\n    prod = \"true\"\n    AMSI_bypass_Info = \"https://pentestlaboratories.com/2021/05/17/amsi-bypass-methods/\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {47 65 74 2D 4D 70 43 6F 6D 70 75 74 65 72 53 74 61 74 75 73} // Get-MpComputerStatus\n    $b = {41 4D 53 65 72 76 69 63 65 45 6E 61 62 6C 65 64} // AMServiceEnabled\n    $c = {52 65 66 6C 65 63 74 69 6F 6E 2E 41 73 73 65 6D 62 6C 79} // Reflection.Assembly\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule icedID_doc_20211109 {\n  meta:\n    description = \"Looks for VBA methods found in IcedID sample on 9Nov21\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-09\"\n    samples = \"4d1ba7c3d9cf95d861266734c00defbb10d3aae10aae1380029976a340a9e270\"\n    tlp = \"green\"\n    prod = \"true\"\n    twinwaveAnalysis = \"https://app.twinwave.io/shared/b2c47010-4473-446b-ae8a-debcefe50e60/3cd850201781c94e53272f83612fa46716db55eb36029d1d26c2cdb2dc7b2b89\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 77 73 63 72 69 70 74 2e 73 68 65 6c 6c 22 29 0a} // CreateObject(\"wscript.shell\")\n  condition:\n    $a and filesize <1MB\n}",
        "custom": true,
        "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "updatedBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "createdAt": "2022-08-17T17:13:12.567Z",
        "updatedAt": "2022-08-17T17:13:12.567Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "c01ed599-e2cf-4b68-9b52-47af653d789a",
          "yaraGroupRuleId": "61b58c0e-b791-4c0a-a6a7-09f4c53715c6"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/c01ed599-e2cf-4b68-9b52-47af653d789a"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "7b81becd-abba-4333-acb1-8db9cbd81e20",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "88a213ad-202e-49bb-8488-e8a14a215855",
    "name": "144prod",
    "description": "144 testing",
    "grouping": null,
    "includePaths": [
      "/home/abacus"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "4e2fe4f4-cf31-47b4-8830-35f48464886e",
    "updatedBy": "4e2fe4f4-cf31-47b4-8830-35f48464886e",
    "createdAt": "2023-12-02T11:56:22.732Z",
    "updatedAt": "2023-12-02T11:56:22.732Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/7b81becd-abba-4333-acb1-8db9cbd81e20"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "4697379b-9ce2-4b81-ac46-06fd22e62f20",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "cfd0f4ee-7dcb-4b70-9171-877763e1b19e",
    "name": "146-prod",
    "description": "146-prod",
    "grouping": null,
    "includePaths": [
      "/home/abacus/quality2/fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-01-06T09:24:09.135Z",
    "updatedAt": "2024-01-06T09:24:09.135Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/4697379b-9ce2-4b81-ac46-06fd22e62f20"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "82de7e20-8129-4905-a9f7-b432529f46b0",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "834d0c2a-a680-4c0c-b32f-6794678aea4a",
    "name": "148 prod",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/quality2/fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "b303ff47-4d40-4093-a2ae-8a7b77a6177b",
    "updatedBy": "b303ff47-4d40-4093-a2ae-8a7b77a6177b",
    "createdAt": "2024-02-10T10:50:25.902Z",
    "updatedAt": "2024-02-10T11:05:40.005Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/82de7e20-8129-4905-a9f7-b432529f46b0"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "62a33fde-cd89-4882-815d-932146b70b2c",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "16076a65-f245-462b-895b-0a6989c2216c",
    "name": "149prod",
    "description": "149prod",
    "grouping": null,
    "includePaths": [
      "/home/abacus/quality2/inc/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-02-24T07:54:32.826Z",
    "updatedAt": "2024-02-24T07:54:42.962Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/62a33fde-cd89-4882-815d-932146b70b2c"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "dafe3802-6443-45ef-b5d3-fb33e52b0f05",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "945a8955-9029-45ba-9a8f-ec881eaa9849",
    "name": "150 validation",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/anshaj/akr%%",
      "/etc%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "updatedBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "createdAt": "2024-03-16T06:29:28.935Z",
    "updatedAt": "2024-03-16T06:48:07.955Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/dafe3802-6443-45ef-b5d3-fb33e52b0f05"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "def716e8-a970-4b5d-9fd5-e28877477852",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "3d0734f8-e2fc-4c6d-bd3a-732ce3130b96",
    "name": "151_prod",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/quality2/fim/151/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-03-30T06:16:59.917Z",
    "updatedAt": "2024-03-30T06:16:59.917Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/def716e8-a970-4b5d-9fd5-e28877477852"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "fb84e099-7eaa-43bb-b4be-7cca87e8be3f",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "78a8201a-a390-467e-ae02-d391df570faf",
    "name": "153_fim_path_testing",
    "description": "153_fim_path_testing",
    "grouping": null,
    "includePaths": [
      "/tmp/fim_testing/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "996089a7-b3d8-462c-86a6-6167e3cea727",
    "updatedBy": "996089a7-b3d8-462c-86a6-6167e3cea727",
    "createdAt": "2024-04-27T08:48:43.430Z",
    "updatedAt": "2024-04-27T09:33:53.834Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "6160c8da-ce7e-442b-8dfb-f03b4dd02bd9",
        "seedId": "b472a0e2-0e2f-4ffa-9177-7348afebccf4",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "153_yara_testing",
        "description": "153_yara_testing",
        "rules": "rule sprint\n{\n    meta:\n        description = \"This is just an example\"\n        threat_level = 3\n        in_the_wild = true\n    strings:\n        $a = \"malware\"\n        $b = \"ransomeware\"\n    condition:\n        $a or $b\n}",
        "custom": true,
        "createdBy": "996089a7-b3d8-462c-86a6-6167e3cea727",
        "updatedBy": "996089a7-b3d8-462c-86a6-6167e3cea727",
        "createdAt": "2024-04-27T09:32:47.185Z",
        "updatedAt": "2024-04-27T09:50:19.401Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "fb84e099-7eaa-43bb-b4be-7cca87e8be3f",
          "yaraGroupRuleId": "6160c8da-ce7e-442b-8dfb-f03b4dd02bd9"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/fb84e099-7eaa-43bb-b4be-7cca87e8be3f"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "369a3ffa-6556-45d3-a50c-6a5d1bc447e3",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "1120c224-4218-4cfd-b0b9-96ab45c2302c",
    "name": "154_PROD",
    "description": "154_PROD",
    "grouping": null,
    "includePaths": [
      "/home/abacus/jothi/quality2/fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-05-11T06:38:04.907Z",
    "updatedAt": "2024-05-11T06:38:04.907Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/369a3ffa-6556-45d3-a50c-6a5d1bc447e3"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "9461831d-3fb3-47d0-8ff1-345ef20bda86",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "68b41b54-6eac-4101-b1da-68685e6c1fe3",
    "name": "155_prod",
    "description": "155_prod",
    "grouping": null,
    "includePaths": [
      "/home/abacus/Jothi/quality2/155_prod_fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-05-25T07:28:40.011Z",
    "updatedAt": "2024-05-25T07:28:40.011Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/9461831d-3fb3-47d0-8ff1-345ef20bda86"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "3b6852d2-f45f-47ed-944b-17bc26bc2d6e",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "4a7df11b-0af8-483a-b3db-0d084a8d8af0",
    "name": "156_PROD",
    "description": "156_PROD",
    "grouping": null,
    "includePaths": [
      "/home/abacus/Jothi/quality2/156/FIM/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-06-08T12:24:35.351Z",
    "updatedAt": "2024-06-08T12:24:35.351Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/3b6852d2-f45f-47ed-944b-17bc26bc2d6e"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "15e2b843-ba93-4118-b0d0-420021bddef7",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "d6b5b51c-7eb0-40c5-9adb-f9ee104f9cef",
    "name": "157_prod",
    "description": "157_prod",
    "grouping": null,
    "includePaths": [
      "/home/abacus/jothi/157_prod/fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2024-06-22T06:35:45.870Z",
    "updatedAt": "2024-06-22T06:35:45.870Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/15e2b843-ba93-4118-b0d0-420021bddef7"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "3aa8ce25-f36a-4a1a-8c2a-b55646120dd1",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "eae6e5f0-144f-4133-9a58-a713a47c0309",
    "name": "Demo Malware Test",
    "description": "FIM for demo malware test",
    "grouping": null,
    "includePaths": [
      "/tmp/%",
      "/usr/bin/%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "ad3f6416-9d9b-4bb5-aab8-e270ca9437b8",
    "updatedBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "createdAt": "2020-12-11T12:46:46.634Z",
    "updatedAt": "2023-07-10T19:37:30.813Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/3aa8ce25-f36a-4a1a-8c2a-b55646120dd1"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "27daf35b-e648-481c-b31f-876d799c14d5",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "6ec9ad9f-4fea-4c1e-9805-e47f352c2417",
    "name": "EICAR_Linux_test",
    "description": "Testing EICAR string file in linux",
    "grouping": null,
    "includePaths": [
      "%%/Downloads/%%",
      "/snap/bin/%",
      "/etc/%",
      "/home/ejanaki/Downloads/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "updatedBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "createdAt": "2024-10-04T08:30:33.487Z",
    "updatedAt": "2024-10-25T18:45:58.748Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/27daf35b-e648-481c-b31f-876d799c14d5"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "2293d5e6-e2b7-4eae-a68a-f84f54efa3b3",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "b61acb02-1958-4591-a155-744c45a8f1af",
    "name": "Etc_hosters",
    "description": "Who edits etc hosts",
    "grouping": null,
    "includePaths": [
      "c:\\Windows\\system32\\drivers\\etc\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "updatedBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "createdAt": "2023-04-26T14:05:19.075Z",
    "updatedAt": "2023-04-26T14:05:19.075Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/2293d5e6-e2b7-4eae-a68a-f84f54efa3b3"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "91a5bf28-9e5f-40e6-962b-ce38bd928dfa",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "2d1b572f-b809-4799-9e36-49dd7ab44d89",
    "name": "Everything",
    "description": "",
    "grouping": null,
    "includePaths": [
      "C:\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "updatedBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "createdAt": "2023-07-25T09:54:32.876Z",
    "updatedAt": "2023-07-25T09:54:32.876Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/91a5bf28-9e5f-40e6-962b-ce38bd928dfa"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "0b229f3c-c24a-4151-8d60-2af7c9866529",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "8943cbcb-5fb4-4141-add8-803b609843b1",
    "name": "FIM_102",
    "description": "test",
    "grouping": null,
    "includePaths": [
      "C:\\Users\\Anusha\\Downloads\\testfile\\alert.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "9886260f-39ee-4b19-b73a-c056a3738214",
    "createdAt": "2022-03-14T09:06:49.675Z",
    "updatedAt": "2023-04-03T18:50:25.726Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/0b229f3c-c24a-4151-8d60-2af7c9866529"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "920c52cf-4c04-47d1-923d-2c5fe9dc8335",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "c74d0287-d2c5-4613-a74d-6ff93182dc3a",
    "name": "FIM_108",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2022-07-04T11:22:59.107Z",
    "updatedAt": "2022-07-04T11:22:59.107Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/920c52cf-4c04-47d1-923d-2c5fe9dc8335"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "5418d484-c649-429c-9bb0-f8be6650f4ba",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "9a637f4b-e87e-4f7b-957e-b4c57939abaf",
    "name": "FIM_109",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2022-07-18T08:49:12.115Z",
    "updatedAt": "2022-07-18T08:49:12.115Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/5418d484-c649-429c-9bb0-f8be6650f4ba"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "0e9780b6-d0f6-4e3d-9a17-64d63850043d",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "02cb8ed1-d90e-4391-b6cb-2bfce7de7d68",
    "name": "FIM_114",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/anu.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2022-09-26T11:49:47.805Z",
    "updatedAt": "2022-09-26T11:49:47.805Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/0e9780b6-d0f6-4e3d-9a17-64d63850043d"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "33f7b1f3-66d0-4168-8200-85d790a02b26",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "7dfe165d-856a-4ef8-a8b3-a5e653a7dd64",
    "name": "FIM_126",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2023-03-21T08:59:24.657Z",
    "updatedAt": "2023-03-21T08:59:24.657Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/33f7b1f3-66d0-4168-8200-85d790a02b26"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "8e140fad-91e0-4f6a-80e3-04a357ba1b5d",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "f106acb7-d062-49eb-9923-dec60fa46eb3",
    "name": "FIM_128",
    "description": "test",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2023-04-18T06:35:06.250Z",
    "updatedAt": "2023-04-18T06:35:06.250Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/8e140fad-91e0-4f6a-80e3-04a357ba1b5d"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "b773a32b-4c14-4856-a605-b83b3dcf6c91",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "83b8f992-7509-448a-9620-7e7ac7225f92",
    "name": "FIM_1322",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2023-06-12T14:23:31.472Z",
    "updatedAt": "2023-06-12T14:23:31.472Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/b773a32b-4c14-4856-a605-b83b3dcf6c91"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "5dda6d17-8f12-410b-a041-06a7f7f3a47a",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "4164578b-09a2-4220-8cd0-f67561db5868",
    "name": "FIM_135",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2023-07-13T11:42:41.582Z",
    "updatedAt": "2023-07-13T11:42:41.582Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/5dda6d17-8f12-410b-a041-06a7f7f3a47a"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "040ece53-d10f-41bd-b3eb-8a44b732a43f",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "115c5ac2-55f0-4f04-bb17-cccb4161211d",
    "name": "FIM_143",
    "description": "FIM_143",
    "grouping": null,
    "includePaths": [
      "/home/abacus/jothi/pv_143/fim/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
    "createdAt": "2023-11-11T09:10:49.821Z",
    "updatedAt": "2023-11-11T09:10:49.821Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "01dce716-29e4-4509-a0c6-f1d3c99426be",
        "seedId": "4f16d01e-0d16-4f1c-8074-871bc27709d9",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "YARA_143",
        "description": "YARA_143",
        "rules": "rule FindHelloString\n{\n    strings:\n        $hello_string = \"hello\"\n\n    condition:\n        $hello_string\n}",
        "custom": true,
        "createdBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
        "updatedBy": "59beaa73-7ae0-4e0b-8349-e9e0f536d957",
        "createdAt": "2023-11-11T09:09:41.766Z",
        "updatedAt": "2023-11-11T09:09:41.768Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "040ece53-d10f-41bd-b3eb-8a44b732a43f",
          "yaraGroupRuleId": "01dce716-29e4-4509-a0c6-f1d3c99426be"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/040ece53-d10f-41bd-b3eb-8a44b732a43f"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "27f971df-d30b-4736-a06e-48fc7456beaa",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "b97caf23-8f14-4272-980e-4298987eb878",
    "name": "FIM_99",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/anu.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2022-02-14T14:50:44.435Z",
    "updatedAt": "2022-02-14T14:50:44.435Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/27f971df-d30b-4736-a06e-48fc7456beaa"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "df7aa202-e60c-497a-8577-73a503ed4938",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "d30fac3d-3e56-41a2-a728-aa6da4f614df",
    "name": "FIM_ANU",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2021-08-06T16:37:15.755Z",
    "updatedAt": "2021-08-06T16:59:04.833Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/df7aa202-e60c-497a-8577-73a503ed4938"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "4e2c5e48-0b54-48c3-af41-b8da8524d412",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "5245bd19-dcbc-41ae-8936-35e0c81d2bd5",
    "name": "FIM_ANU_98",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2022-01-31T11:26:20.362Z",
    "updatedAt": "2022-01-31T11:26:20.362Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/4e2c5e48-0b54-48c3-af41-b8da8524d412"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "8780c01d-8a17-4831-bcb5-e1cb4f80f2b9",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a6eee850-ccb7-4dfa-987f-52cb89b8744f",
    "name": "FIM_monitor_downloads_vani",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/Users/%/Downloads"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
    "updatedBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
    "createdAt": "2023-10-04T13:16:01.180Z",
    "updatedAt": "2023-10-04T13:16:01.180Z",
    "signatures": [
      {
        "id": "1a3bfb20-efe5-4706-baf5-7c3371b43b50",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "8ba1cca9-12b8-4bb1-be9a-e4373d02781b",
        "name": "Download_test_yara",
        "description": null,
        "paths": [
          "/Users/%/Downloads"
        ],
        "createdBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
        "updatedBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
        "createdAt": "2023-10-04T13:15:39.515Z",
        "updatedAt": "2023-10-04T13:15:39.517Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "8780c01d-8a17-4831-bcb5-e1cb4f80f2b9",
          "signatureId": "1a3bfb20-efe5-4706-baf5-7c3371b43b50"
        }
      }
    ],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/8780c01d-8a17-4831-bcb5-e1cb4f80f2b9"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "ae8600ff-676c-407c-981e-e7718770e1dc",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "5125f596-8cd1-4835-adca-c571ac671a64",
    "name": "FIM_monitor_downloads_vani_copy",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/Users/%/Downloads"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
    "updatedBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
    "createdAt": "2024-03-30T16:56:34.852Z",
    "updatedAt": "2024-03-30T16:56:34.852Z",
    "signatures": [
      {
        "id": "1a3bfb20-efe5-4706-baf5-7c3371b43b50",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "8ba1cca9-12b8-4bb1-be9a-e4373d02781b",
        "name": "Download_test_yara",
        "description": null,
        "paths": [
          "/Users/%/Downloads"
        ],
        "createdBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
        "updatedBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
        "createdAt": "2023-10-04T13:15:39.515Z",
        "updatedAt": "2023-10-04T13:15:39.517Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "ae8600ff-676c-407c-981e-e7718770e1dc",
          "signatureId": "1a3bfb20-efe5-4706-baf5-7c3371b43b50"
        }
      },
      {
        "id": "04428cd9-1a45-472d-87f5-c17b87dad879",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "f96e4a00-92b0-4213-b221-c280ee13474e",
        "name": "test",
        "description": null,
        "paths": [
          "%test%"
        ],
        "createdBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "updatedBy": "751c8192-e99e-442b-ba80-9ee5bc28a9d5",
        "createdAt": "2024-03-30T16:56:21.586Z",
        "updatedAt": "2024-03-30T18:16:42.349Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "ae8600ff-676c-407c-981e-e7718770e1dc",
          "signatureId": "04428cd9-1a45-472d-87f5-c17b87dad879"
        }
      }
    ],
    "yaraGroupRules": [
      {
        "id": "9170fe06-a15d-4014-8390-8a055b6512bf",
        "seedId": "caa7f17c-d7a8-4332-a984-c1bcf8bf71bc",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "AmazonAccessKeyId",
        "description": "amazon access key id",
        "rules": "rule AwsAccessKeyIdRule : AWS\n{\n    meta:\n        name = \"AWS Access Key ID\"\n        author = \"github.com/pseudo-security\"\n        date = \"2020-01-01\"\n\n        /* Test Cases */\n        test_match_1 = \"AKIA00TESTAWSIDKEY00\"\n\n    strings:\n        $ = /(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}/ fullword\n\n    condition:\n        any of them\n}",
        "custom": false,
        "createdBy": "00000000-0000-0000-0000-000000000000",
        "updatedBy": "00000000-0000-0000-0000-000000000000",
        "createdAt": "2022-01-17T10:18:01.523Z",
        "updatedAt": "2022-04-09T08:14:33.357Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "ae8600ff-676c-407c-981e-e7718770e1dc",
          "yaraGroupRuleId": "9170fe06-a15d-4014-8390-8a055b6512bf"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/ae8600ff-676c-407c-981e-e7718770e1dc"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "2c60160e-467a-4e12-8fc6-8c4b1c26e18a",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "2b5d7160-6f82-47f4-9a00-e8ab1d52a9aa",
    "name": "Fim-test-154",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/fim/q2/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "updatedBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "createdAt": "2024-05-05T05:00:13.254Z",
    "updatedAt": "2024-05-05T05:00:13.254Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/2c60160e-467a-4e12-8fc6-8c4b1c26e18a"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "0645f6b7-1399-4473-9735-59fd966271e6",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a22ebcf2-f7b0-4615-a4fb-8c828fd93af8",
    "name": "Microsoft critical files",
    "description": "Monitors creation and modification of executable file types in important Microsoft locations",
    "grouping": null,
    "includePaths": [
      "%SystemRoot%\\Sys%\\Microsoft\\%.dll",
      "%SystemRoot%\\Sys%\\Microsoft\\%.exe",
      "%SystemRoot%\\Sys%\\Microsoft\\%.bat",
      "%SystemDrive%\\Users\\%\\AppData\\%\\Microsoft\\%.exe",
      "%SystemDrive%\\Users\\%\\AppData\\%\\Help\\%.exe",
      "%SystemDrive%\\Users\\%\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "ec93456e-5405-48ed-b72d-a4bf0bdcc226",
    "createdAt": "2019-09-23T02:28:00.272Z",
    "updatedAt": "2024-06-03T15:29:25.418Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/0645f6b7-1399-4473-9735-59fd966271e6"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "532ca51c-1844-4ba8-a7a5-2557791157ac",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "d7972428-e34a-44a4-840f-ff5e292e088f",
    "name": "NtDllPATH",
    "description": "",
    "grouping": null,
    "includePaths": [
      "c:\\Windows\\system32\\ntdll.dll"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "updatedBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "createdAt": "2024-04-05T00:04:23.958Z",
    "updatedAt": "2024-04-05T00:04:23.958Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/532ca51c-1844-4ba8-a7a5-2557791157ac"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "5183b6e2-35b5-4c7b-97c4-14f0b1afe7b5",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "75b687e4-f168-4c49-b04b-4e4e7636071d",
    "name": "PH FIM",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/tmp/testing/%",
      "/home/%/.bash_history",
      "/%/.bash_history",
      "/opt/app-root/src/.bash_history"
    ],
    "includePathExtensions": null,
    "excludePaths": [
      "/tmp/testing/%.swp",
      "/tmp/testing/%.swx"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "9f2cd3a0-5790-4325-99db-d602b7110f9f",
    "updatedBy": "9f2cd3a0-5790-4325-99db-d602b7110f9f",
    "createdAt": "2020-04-26T20:51:33.357Z",
    "updatedAt": "2020-06-18T02:47:01.990Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/5183b6e2-35b5-4c7b-97c4-14f0b1afe7b5"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "b53c9439-2e08-4993-b7f6-6b43266e78ab",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "f30b28a8-4900-4413-adde-aa8889583884",
    "name": "QA-145",
    "description": "test",
    "grouping": null,
    "includePaths": [
      "/home/abacus/%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "updatedBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "createdAt": "2023-12-16T07:48:59.614Z",
    "updatedAt": "2023-12-16T08:15:29.593Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/b53c9439-2e08-4993-b7f6-6b43266e78ab"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "2502be2c-2c74-4046-a2f0-08108a2410c6",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "68cfc212-28b0-4c8e-9972-4632d289bfb9",
    "name": "R2D2",
    "description": "",
    "grouping": null,
    "includePaths": [
      "c:\\test\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [
      "c:\\test\\exludeme\\%%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "updatedBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
    "createdAt": "2023-11-03T16:48:21.031Z",
    "updatedAt": "2023-11-15T22:53:40.835Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "c13413ae-79b7-449a-91bb-f43f14f1c2f3",
        "seedId": "aee01b33-f414-4752-b03d-502929b5431d",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "GlenMaxwell",
        "description": null,
        "rules": "rule Rule_1\n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"63a86932a5bad5da32ebd1689aa814b3\"\n\t\tplatform = \"LinuxOS\"\n\t\tdate = \"29-07-2023\"\n\n// REplaced $XorDDOS_IRCBot_iv2_2 and changed condition\n\n\tstrings:\n\t\t$String_1 = \"Anadi\" ascii wide\n\n\n\tcondition:\n\t\tall of them\n}\nrule Rule_2\n{\n\tmeta:\n\t\tmalware_name = \"NPSTOOL\"\n\t\tdescription = \"NPS is a lightweight, high-performance,powerful intranet penetration proxy server, with a powerful web management terminal.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"64cc88ff3f8735ee8b0a6687c84dee1d\"\n\t\tplatform = \"LinuxOS\"\n\t\tdate = \"26-10-2023\"\n\n\n\tstrings:\n\t\t$String_1 = \"Visa\" ascii wide\n\n\n\tcondition:\n\t\tall of them\n}",
        "custom": true,
        "createdBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
        "updatedBy": "2fbf2fa5-db0d-4769-baa6-a3d6d191ccc7",
        "createdAt": "2023-11-07T17:40:49.221Z",
        "updatedAt": "2023-11-07T17:40:49.224Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "2502be2c-2c74-4046-a2f0-08108a2410c6",
          "yaraGroupRuleId": "c13413ae-79b7-449a-91bb-f43f14f1c2f3"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/2502be2c-2c74-4046-a2f0-08108a2410c6"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "e11a37c3-70a6-4039-8286-80d890bcf467",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "2e416d4a-7b74-4b27-a25e-d56693d692df",
    "name": "Ryan Test",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/tmp/scan/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "99a34322-3a0f-4abb-b016-117f476fab71",
    "updatedBy": "bae9552b-9daf-448b-b374-48180091d303",
    "createdAt": "2020-06-29T13:55:25.313Z",
    "updatedAt": "2023-01-23T21:44:33.350Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "469a90de-9434-43d4-9fee-09af1e7bfb26",
        "seedId": "966cc53c-80fb-46ab-9cef-417a6570087f",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "upt_intel_linux_yara_rules",
        "description": "Contextual detection rules",
        "rules": "rule Uptycs_Fysbis\n{\n\tmeta:\n\t\tmalware_name = \"Fysbis\"\n\t\tdescription = \"Fysbis is a modular Linux trojan / backdoor that can install itself to a victim system with or without root privileges.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Fysbis0 = \"ls /etc | egrep -e\\\"fedora*|debian*|gentoo*|mandriva*|mandrake*|meego*|redhat*|lsb-*|sun-*|SUSE*|release\" ascii wide\n\t\t$Fysbis1 = \"WantedBy=multi-user.target' >> /usr/lib/systemd/system/\" ascii wide\n\t\t$Fysbis2 = \"Your command not writed to pipe\" ascii wide\n\t\t$Fysbis3 = \"Success execute command or long for waiting executing your command\" ascii wide\n\t\t$Fysbis4 = \"RemoteKeylogger\" ascii wide\n\t\t$Fysbis5 = \"RemoteShell\" ascii wide\n\t\t$Fysbis6 = \"RemoteShell.cpp\" ascii wide\n\t\t$Fysbis7 = \"HttpChannel.cpp\" ascii wide\n\t\t$Fysbis8 = \"data_start\" ascii wide\n\n\tcondition:\n\t\t8 of ($Fysbis*)\n}\nrule Uptycs_WellMess\n{\n\tmeta:\n\t\tmalware_name = \"WellMess\"\n\t\tdescription = \"WellMess is a malware used by APT actors to establish encrypted command and control (C2) sessions and to securely pass and execute scripts on an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$WellMess0 = \"src/bot/botlib\" ascii wide\n\t\t$WellMess1 = \"Server/BotUI/App_Data\" ascii wide\n\t\t$WellMess2 = \"askOrReply\" ascii wide\n\t\t$WellMess3 = \"botlib.rc6cipher\" ascii wide\n\t\t$WellMess4 = \"botlib.wellMess\" ascii wide\n\t\t$WellMess5 = \"Start bot:\" ascii wide\n\t\t$WellMess6 = \"Hello from Proxy\" ascii wide\n\n\tcondition:\n\t\t3 of ($WellMess*)\n}\n\nrule Uptycs_PenguinTurla\n{\n\tmeta:\n\t\tmalware_name = \"PenguinTurla\"\n\t\tdescription = \"PenguinTurla is a linux malware that maintains stealth without requiring elevated privileges while running arbitrary remote commands.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$PenguinTurla0 = \"/tmp/.xdfg\" ascii wide\n\t\t$PenguinTurla1 = \"__we_are_happy__\" ascii wide\n\t\t$PenguinTurla2 = \"TREX_PID=%u\" ascii wide\n\t\t$PenguinTurla3 = \"File already exist on remote filesystem !\" ascii wide\n\t\t$PenguinTurla4 = \"/tmp/.sync.pid\" ascii wide\n\t\t$PenguinTurla5 = \"Remote VS is empty !\" ascii wide\n\t\t$PenguinTurla6 = \"Deleting ...\" ascii wide\n\t\t$PenguinTurla7 = \"File already exist on VS !\" ascii wide\n\t\t$PenguinTurla8 = \"Err open on remote side: %s\" ascii wide\n\n\tcondition:\n\t\t5 of ($PenguinTurla*)\n}\n\nrule Uptycs_Messagetap\n{\n\tmeta:\n\t\tmalware_name = \"Messagetap\"\n\t\tdescription = \"Messagetap is an ELF data miner to selectively intercept SMS messages from the infrastructure of telecoms operators.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Messagetap0 = \"Operation_Global_Code_tag\" ascii wide\n\t\t$Messagetap1 = \"%04d%02d%02d_%d.dump\" ascii wide\n\t\t$Messagetap2 = \"%04d%02d%02d.csv\" ascii wide\n\t\t$Messagetap3 = \"send sms from %s imsi:%s to %s\" ascii wide\n\n\tcondition:\n\t\t4 of ($Messagetap*)\n}\n\nrule Uptycs_Kinsing\n{\n\tmeta:\n\t\tmalware_name = \"Kinsing\"\n\t\tdescription = \"Kinsing is a Golang-based Linux based cryptominer that contains cryptominer and a shell script to laterally spread Kinsing across the container network.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Kinsing0 = \"main.masscan\" ascii wide\n\t\t$Kinsing1 = \"main.minerRunningCheck\" ascii wide\n\t\t$Kinsing2 = \"main.isMinerRunning\" ascii wide\n\t\t$Kinsing3 = \"main.redisBrute\" ascii wide\n\n\tcondition:\n\t\t3 of ($Kinsing*)\n}\n\nrule Uptycs_Snoopy\n{\n\tmeta:\n\t\tmalware_name = \"Snoopy\"\n\t\tdescription = \"Snoopy is a backdoor trojan that can be executed both as a command line tool and as a daemon that opens HTTP and/or DNS services on a compromised system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Snoopy0 = \"-s IPv4[:PORT:{udp|tcp}:{dns|http|none}]\" ascii wide\n\t\t$Snoopy1 = \"rm -rf /tmp/rrtserver-lock\" ascii wide\n\t\t$Snoopy2 = \"log_mode=%d, log_level=%d, server_addr=0x%x, server_port=%d, tunnel=%s, proto=%s, timeout=%d, pid=%d\" ascii wide\n\t\t$Snoopy3 = \"/proc/sys/rrootkit\" ascii wide\n\t\t$Snoopy4 = \"rrootkit-negotiation:\" ascii wide\n\t\t$Snoopy5 = \"view-shell:\" ascii wide\n\t\t$Snoopy6 = \"rrootkit_\" ascii wide\n\t\t$Snoopy7 = \"view-myproto:\" ascii wide\n\n\tcondition:\n\t\t6 of ($Snoopy*)\n}\n\nrule Uptycs_Keylogger_Linux\n{\n\tmeta:\n\t\tmalware_name = \"Keylogger\"\n\t\tdescription = \"Keylogger is a software that is used to monitor and record the keystrokes entered by the user.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$common_Linux0 = \"XListInputDevices\" ascii wide\n\t\t$common_Linux1 = \"XOpenDevice\" ascii wide\n\t\t$common_Linux2 = \"XOpenIM\" ascii wide\n\t\t$common_Linux3 = \"XGetIMValues\" ascii wide\n\t\t$common_Linux4 = \"XmbLookupString\" ascii wide\n\t\t$common_Linux5 = \"XFree\" ascii wide\n\t\t$common_Linux6 = \"XCreateIC\" ascii wide\n\t\t$common_Linux7 = \"XOpenDisplay\" ascii wide\n\t\t$common_Linux8 = \"XNextEvent\" ascii wide\n\t\t$common_Linux9 = \"XInternAtom\" ascii wide\n\t\t$common_Linux10 = \"XSelectExtensionEvent\" ascii wide\n\t\t$common_Linux11 = \"XFreeDeviceList\" ascii wide\n\t\t$common_Linux12 = \"XGetWindowProperty\" ascii wide\n\t\t$common_Linux13 = \"XkbKeycodeToKeysym\" ascii wide\n\t\t$common_Linux14 = \"XQueryKeymap\" ascii wide\n\t\t$common_Linux15 = \"XKeysymToString\" ascii wide\n\t\t$common_Linux16 = \"XGetInputFocus\" ascii wide\n\t\t$Keylogger_Linux_0 = \"Backspace\"  ascii wide\n\t\t$Keylogger_Linux_1 = \"Enter\"  ascii wide\n\t\t$Keylogger_Linux_2 = \"Left-Ctrl\"  ascii wide\n\t\t$Keylogger_Linux_3 = \"Right-Ctrl\"  ascii wide\n\t\t$Keylogger_Linux_4 = \"NumLock\"  ascii wide\n\t\t$Keylogger_Linux_5 = \"Left-Shift\"  ascii wide\n\t\t$Keylogger_Linux_6 = \"Right-Shift\"  ascii wide\n\t\t$Keylogger_Linux_7 = \"CapsLock\"  ascii wide\n\t\t$Keylogger_Linux_8 = \"Delete\"  ascii wide\n\t \n\n\tcondition:\n\t\t6 of ($common_Linux*) and 6 of ($Keylogger_Linux_*)\n}\n\nrule Uptycs_Kaiji\n{\n\tmeta:\n\t\tmalware_name = \"Kaiji\"\n\t\tdescription = \"Kaiji is a malware that spreads by finding exposed SSH ports on Linux servers and IoT devices on the internet and tries to get root access with a brute-force attack.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Kaiji0 = \"main.runghost\" ascii wide\n\t\t$Kaiji1 = \"main.rundingshi\" ascii wide\n\t\t$Kaiji2 = \"main.runganran\" ascii wide\n\t\t$Kaiji3 = \"main.runshouhu\" ascii wide\n\t\t$Kaiji4 = \"main.runkaiji\" ascii wide\n\t\t$Kaiji5 = \"ddos.rdemokill\" ascii wide\n\t\t$Kaiji6 = \"ddos.Rotkit\" ascii wide\n\t\t$Kaiji7 = \"main.runkshell\" ascii wide\n\n\tcondition:\n\t\t4 of ($Kaiji*)\n}\n\nrule Uptycs_HiddenWasp\n{\n\tmeta:\n\t\tmalware_name = \"HiddenWasp\"\n\t\tdescription = \"HiddenWasp is a fully developed suite of malware that is used for targeted attacks against victims who have already been infected.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$HiddenWasp0 = \"hiding_\" ascii wide\n\t\t$HiddenWasp1 = \"patch_\" ascii wide\n\t\t$HiddenWasp2 = \"_ZN4Json\" ascii wide\n\t\t$HiddenWasp3 = \"_ZNK4Json\" ascii wide\n\t\t$HiddenWasp4 = \"_ZN7Command\" ascii wide\n\t\t$HiddenWasp5 = \"check_mpreload\" ascii wide\n\t\t$HiddenWasp6 = \"adler32_\" ascii wide\n\t\t$HiddenWasp7 = \"_ZN12FileOpration\" ascii wide\n\t\t$HiddenWasp8 = \"ExecuteCMD\" ascii wide\n\n\tcondition:\n\t\t8 of ($HiddenWasp*)\n}\n\nrule Uptycs_Doki\n{\n\tmeta:\n\t\tmalware_name = \"Doki\"\n\t\tdescription = \"Doki is a backdoor for Linux that utilizes DynDNS service and a unique Domain Generation Algorithm (DGA) based in order to find the domain of its C2 in real time.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Doki0 = \" dumping '%s' (%u bytes)\" ascii wide\n\t\t$Doki1 = \"flush-199:\" ascii wide\n\t\t$Doki2 = \"flush-253:\" ascii wide\n\t\t$Doki3 = \"cpuhp_\" ascii wide\n\t\t$Doki4 = \"dmpdaemon\" ascii wide\n\t\t$Doki5 = \"/api/v1/address/sent/\" ascii wide\n\n\tcondition:\n\t\t5 of ($Doki*)\n}\n\nrule Uptycs_BOtB\n{\n\tmeta:\n\t\tmalware_name = \"BOtB\"\n\t\tdescription = \"BOtB is a container analysis and exploitation tool that performs container post-exploitation actions.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$BOtB0 = \"main.autopwn\" ascii wide\n\t\t$BOtB1 = \"brompwnie/botb/\" ascii wide\n\t\t$BOtB2 = \"[!] Token found\" ascii wide\n\t\t$BOtB3 = \"[+] Attempting to\" ascii wide\n\n\tcondition:\n\t\tall of ($BOtB*)\n}\n\nrule Uptycs_AgeLocker\n{\n\tmeta:\n\t\tmalware_name = \"AgeLocker\"\n\t\tdescription = \"AgeLocker is a ransomware that attempts to encrypt the files of victims by using the “Age” encryption tool.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$AgeLocker0 = \"agelocker.go\" ascii wide\n\t\t$AgeLocker1 = \"filippo.io/age/age.go\" ascii wide\n\t\t$AgeLocker2 = \"main.encrypt\" ascii wide\n\n\tcondition:\n\t\tall of ($AgeLocker*)\n}\n\nrule Uptycs_DreamBus_1\n{\n\tmeta:\n\t\tmalware_name = \"DreamBus\"\n\t\tdescription = \"DreamBus is a modular Linux-based botnet with worm-like behavior that can spread to systems that are not directly exposed to the internet.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\tstrings:\n\t\t$Dreambus_10 = \"/tmp/.X11-unix/01\" ascii wide\n\t\t$Dreambus_11 = \"/dev/null\" ascii wide\n\t\t$Dreambus_12 = {2D 63 00 2F 62 69 6E 2F 73 68 00}\n\t\t$Dreambus_13 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"  ascii wide\n\n\tcondition:\n\t\tall of ($Dreambus_1*)\n}\n\nrule Uptycs_Peirates\n{\n\tmeta:\n\t\tmalware_name = \"Peirates\"\n\t\tdescription = \"Peirates is a Kubernetes penetration tool that enables an attacker to escalate privilege and pivot through a Kubernetes cluster.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\tstrings:\n\t\t$Peirates0 = \"inguardians/peirates.\" ascii wide\n\t\t$Peirates1 = \"peirates.ExecKubectlAndExit\" ascii wide\n\t\t$Peirates2 = \"injectIntoAPodViaAPIServer\" ascii wide\n\t\t$Peirates3 = \"inject-and-exec\" ascii wide\n\t\t$Peirates4 = \"Peirates:>#\" ascii wide\n\n\tcondition:\n\t\t3 of ($Peirates*)\n}\nrule Uptycs_Mirai_Satori\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Satori0 = \"tftp -r satori\" ascii wide\n\t\t$Mirai_Satori1 = \"/bins/satori\" ascii wide\n\t\t$Mirai_Satori2 = \"satori\" ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_Satori*)\n}\n\nrule Uptycs_Mirai_Gen\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Gen0 = \"SERVZUXO\" ascii wide\n\t\t$Mirai_Gen1 = \"-loldongs\" ascii wide\n\t\t$Mirai_Gen2 = \"loadURL>$(echo HUAWEIUPNP)</NewDownloadURL></u:Upgrade></s:Body></s:Envelope>\" ascii wide\n\t\t$Mirai_Gen3 = \"/bin/busybox\" ascii wide\n\t\t$Mirai_Gen4 = \"pass\\\" value=\\\"[^\\\"]*\\\"\" ascii wide\n\t\t$Mirai_Gen5 = \"GET /bins/mirai.x86 HTTP/1.0\" ascii wide\n\t\t$Mirai_Gen6 = \"LCOGQGPTGP\" ascii wide\n\t\t$Mirai_Gen7 = \"QUKLEKLUKVJOG\" ascii wide\n\t\t$Mirai_Gen8 = \"CFOKLKQVPCVMP\" ascii wide\n\t\t$Mirai_Gen9 = \"QWRGPTKQMP\" ascii wide\n\t\t$Mirai_Gen10 = \"HWCLVGAJ\" ascii wide\n\t\t$Mirai_Gen11 = \"NKQVGLKLE\" ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_Gen*)\n}\n\nrule Uptycs_Emp3r0r\n{\n\tmeta:\n\t\tmalware_name = \"Emp3r0r\"\n\t\tdescription = \"Emp3r0r is a post-exploitation linux framework that contains post-exploitation tools and stealth modules.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Emp3r0r0 = \"emp3r0r/core/internal/agent/\" ascii wide\n\t\t$Emp3r0r1 = \"runtime.injectglist\" ascii wide\n\t\t$Emp3r0r2 = \"runtime.runq\" ascii wide\n\t\t$Emp3r0r3 = \"emp3r0r/core/internal/tun.\" ascii wide\n\n\n\tcondition:\n\t\tall of ($Emp3r0r*)\n}\n\nrule Uptycs_RansomEXX\n{\n\tmeta:\n\t\tmalware_name = \"RansomEXX\"\n\t\tdescription = \"RansomEXX is a highly targeted ransomware that contains a hardcoded name of the victim organization.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$RansomEXX0 = \"mbedtls_\" ascii wide\n\t\t$RansomEXX1 = \"EIGSI!!\" ascii wide\n\t\t$RansomEXX2 = \".31gs1\" ascii wide\n\t\t$RansomEXX3 = \"encrypt_worker\" ascii wide\n\t\t$RansomEXX4 = \"PKCS#1 encryption :\" ascii wide\n\n\n\tcondition:\n\t\tall of ($RansomEXX*)\n}\n\nrule Uptycs_Speculoos\n{\n\tmeta:\n\t\tmalware_name = \"Speculoos\"\n\t\tdescription = \"Speculoos is an ELF backdoor compiled with GCC to run on a FreeBSD system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Speculoos0 = \"badshell\" ascii wide\n\t\t$Speculoos1 = \"hw.physmem\" ascii wide\n\t\t$Speculoos2 = \"uname -\" ascii wide\n\t\t$Speculoos3 = \"enter MessageLoop...\" ascii wide\n\t\t$Speculoos4 = \"exit StartCBProcess...\" ascii wide\n\t\t$Speculoos5 = \"machdep.tsc_freq\" ascii wide\n\t\t$Speculoos6 = \"hw.model\" ascii wide\n\t\t$Speculoos7 = \"hw.ncpu\" ascii wide\n\t\t$Speculoos8 = \"hw.usermem\" ascii wide\n\n\tcondition:\n\t\tall of ($Speculoos*)\n}\n\n\nrule Uptycs_FritzFrog\n{\n\tmeta:\n\t\tmalware_name = \"FritzFrog\"\n\t\tdescription = \"FritzFrog is a highly sophisticated peer-to-peer (P2P) botnet that has been actively breaching SSH servers worldwide.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$FritzFrog0 = \"main.AntivirOnce\" ascii wide\n\t\t$FritzFrog1 = \"main.Antivir\" ascii wide\n\t\t$FritzFrog2 = \"main.run_crack_mode\" ascii wide\n\t\t$FritzFrog3 = \"main.LogCrack\" ascii wide\n\t\t$FritzFrog4 = \"main.TargetFeed\" ascii wide\n\t\t$FritzFrog5 = \"main.ManageCrackers\" ascii wide\n\t\t$FritzFrog6 = \"main.ManageTargets\" ascii wide\n\t\t$FritzFrog7 = \"main.encrypt_bin\" ascii wide\n\t\t$FritzFrog8 = \"main.decrypt_bin\" ascii wide\n\t\t$FritzFrog9 = \"main.RemotePing\" ascii wide\n\t\t$FritzFrog10 = \"main.RemoteGetArgs\" ascii wide\n\t\t$FritzFrog11 = \"main.RemoteGetDB\" ascii wide\n\t\t$FritzFrog12 = \"main.RemoteGetDBNoTargets\" ascii wide\n\t\t$FritzFrog13 = \"main.RemotePushDBNoTargets\" ascii wide\n\t\t$FritzFrog14 = \"main.RemoteGetDBZip\" ascii wide\n\t\t$FritzFrog15 = \"main.RemotePushDBZip\" ascii wide\n\t\t$FritzFrog16 = \"main.puttargets\" ascii wide\n\t\t$FritzFrog17 = \"main.pushtargets\" ascii wide\n\t\t$FritzFrog18 = \"main.forcetargets\" ascii wide\n\t\t$FritzFrog19 = \"main.puttargetpool\" ascii wide\n\t\t$FritzFrog20 = \"main.getdbnotargets\" ascii wide\n\t\t$FritzFrog21 = \"main.RunMiner\" ascii wide\n\t\t$FritzFrog22 = \"main.distribute_target\" ascii wide\n\t\t$FritzFrog23 = \"main.ShellCommand\" ascii wide\n\t\t$FritzFrog24 = \"main.kill_\" ascii wide\n\n\tcondition:\n\t\t15 of ($FritzFrog*)\n}\n\n\nrule Uptycs_PGMiner\n{\n\tmeta:\n\t\tmalware_name = \"PGMiner\"\n\t\tdescription = \"PGMiner is a cryptocurrency mining botnet that is delivered via PostgreSQL.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$PGMiner0 = \"hostaddr=%s password=%s\" ascii wide\n\t\t$PGMiner1 = \"172.16.0.0/12\" ascii wide\n\t\t$PGMiner2 = \"192.168.0.0/16\" ascii wide\n\t\t$PGMiner4 = \"%s/pg_service.conf\" ascii wide\n\t\t$PGMiner5 = \"00 00 00 08 04 D2 16 00\" ascii wide\n\t\t$PGMiner6 = \"PQcancel() -- \" ascii wide\n\t\t$PGMiner7 = \"%s/.s.PGSQL.%d\" ascii wide\n\n\tcondition:\n\t\tall of ($PGMiner*)\n}\n\n\nrule Uptycs_Prometei\n{\n\tmeta:\n\t\tmalware_name = \"Prometei\"\n\t\tdescription = \"Prometei is a multi-modular botnet with multiple ways to spread and a payload focused on providing financial benefits for the attacker by mining the Monero online currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Prometei0 = \"pthread_kill\" ascii wide\n\t\t$Prometei1 = \"pthread_create\" ascii wide\n\t\t$Prometei2 = \"Usermode install...\" ascii wide\n\t\t$Prometei3 = \"System install...\" ascii wide\n\t\t$Prometei4 = \"Fail!\" ascii wide\n\t\t$Prometei5 = \"start_mining\" ascii wide\n\t\t$Prometei6 = \"stop_mining\" ascii wide\n\t\t$Prometei7 = \"/prometei.cgi\" ascii wide\n\n\tcondition:\n\t\t7 of ($Prometei*)\n}\n\n\nrule Uptycs_Plead\n{\n\tmeta:\n\t\tmalware_name = \"Plead\"\n\t\tdescription = \"The Plead malware is a backdoor which is used by the BlackTech group in targeted attacks focused on cyberespionage in Asia.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Plead0 = \"CFileManager\" ascii wide\n\t\t$Plead1 = \"CFileTransfer\" ascii wide\n\t\t$Plead2 = \"CPortForwardManager\" ascii wide\n\t\t$Plead3 = \"%s\t<DIR>\t%s\" ascii wide\n\t\t$Plead4 = \"CPortForward\" ascii wide\n\t\t$Plead5 = \"create read pipe thread %d\" ascii wide\n\t\t$Plead6 = \"create monitor thread %d\" ascii wide\n\t\t$Plead7 = \"CRemoteShell\" ascii wide\n\t\t$Plead8 = \"x86_64\" ascii wide\n\t\t$Plead9 = \"CSockClient\" ascii wide\n\n\tcondition:\n\t\tall of ($Plead*)\n}\n\n\nrule Uptycs_Mirai_DDOS\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots,those bots are often used to launch Ddos attacks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n \n \n\tstrings:\n\t\t$MIRAI_0 = \"TCP\"  ascii wide\n\t\t$MIRAI_1 = \"UDP\"  ascii wide\n\t\t$MIRAI_2 = \"HOLD\"  ascii wide\n\t\t$MIRAI_3 = \"HTTP\"  ascii wide\n\t\t$MIRAI_4 = \"STOP\"  ascii wide\n\t\t$MIRAI_5 = \"TLS\"  ascii wide\n\t\t$MIRAI_6 = \"sendHTTP\"  ascii wide\n\t\t$MIRAI_7 = \"sendHOLD\"  ascii wide\n\t\t$MIRAI_8 = \"sendUDP\"  ascii wide\n\t\t$MIRAI_9 = \"sendJUNK\"  ascii wide\n\t\t$MIRAI_10 = \"recvLine\"  ascii wide\n\t\t$MIRAI_11 = \"killer_pid\"  ascii wide\n\t\t$MIRAI_12 = \"killer_kill_by_port\"  ascii wide\n\n\tcondition:\n\t\t9 of ($MIRAI*)\n}\n\n\nrule Uptycs_Gobfuscate\n{\n\tmeta:\n\t\tmalware_name = \"Gobfuscate\"\n\t\tdescription = \"Gobfuscate is a Go binary that obfuscates source code making a lot of information difficult or impossible to decipher from the binary.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gobfuscate0 = \"/gobfuscate/\" ascii wide\n\t\t$Gobfuscate1 = \"main.keepTests\" ascii wide\n\t\t$Gobfuscate2 = \"main.winHide\" ascii wide\n\t\t$Gobfuscate3 = \"main.noStaticLink\" ascii wide\n\t\t$Gobfuscate4 = \"main.verbose\" ascii wide\n\t\t$Gobfuscate5 = \"main.obfuscate.stkobj\" ascii wide\n\n\tcondition:\n\t\tall of ($Gobfuscate*)\n}\n\n\nrule Uptycs_QnapCrypt \n{\n    meta:\n\t\tmalware_name = \"QnapCrypt\"\n\t\tdescription = \"QnapCrypt is a ransomware family that was found to target Network Attached Storage (NAS) devices from Taiwanese companies QNAP Systems and Synology.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$QnapCrypt_0 = \"EncEAS\"  ascii wide\n\t\t$QnapCrypt_1 = \"EncFile\"  ascii wide\n\t\t$QnapCrypt_2 = \"makesecret\"  ascii wide\n\t\t$QnapCrypt_3 = \"chDir\"  ascii wide\n\t\t$QnapCrypt_4 = \"writemessage\"  ascii wide\n\t\t$QnapCrypt_5 = \"randSeq\"  ascii wide\n        \n    condition:\n\t\tall of ($QnapCrypt*)\n}\n\n\nrule Uptycs_DarkSide \n{\n\tmeta:\n\t\tmalware_name = \"DarkSide\"\n\t\tdescription = \"Darkside is a ransomware which targets and encrypts ESXi servers/systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$DarkSide_0 = \"/sbin/esxcli\"  ascii wide\n\t\t$DarkSide_1 = \"darkside\"  ascii wide\n\t\t$DarkSide_2 = \"darkside_readme.txt\"  ascii wide\n\t\t$DarkSide_3 = \"Your computers and servers are encrypted, backups are deleted.\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($DarkSide*)\n}\n\n\nrule Uptycs_Mirai_CVE_2019_19781 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is a malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots,those bots are often used to launch Ddos attacks.Some Mirai variants also exploit CVE 2019-19781 that is citrix ADCs for remote code execution.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Mirai_CVE2019_19781_0 = \"/vpns/portal/scripts/newbm.pl\"  ascii wide\n\t\t$Mirai_CVE2019_19781_1 = \"/netscaler/portal/templates/\"  ascii wide\n\t\t$Mirai_CVE2019_19781_2 = \"NSC_USER\"  ascii wide\n\t\t$Mirai_CVE2019_19781_3 = \"processcmd\"  ascii wide\n\t\t$Mirai_CVE2019_19781_4 = \"sendhttp\"  ascii wide\n\t\t$Mirai_CVE2019_19781_5 = \"killer_pid\"  ascii wide\n\t\t$Mirai_CVE2019_19781_6 = \"killer_kill_by_port\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_CVE2019_19781*)\n}\n\n\nrule Uptycs_Gafgyt_CVE_2017_17215 \n{\n    meta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\tstrings:\n\t\t$Gafgyt_cve2017_17215_0 = \"HuaweiHomeGateway\"  ascii wide\n\t\t$Gafgyt_cve2017_17215_1 = \"/ctrlt/DeviceUpgrade_1\"  ascii wide\n\t\t$Gafgyt_cve2017_17215_2 = \"http://schemas.xmlsoap.org/soap/envelope/\"  ascii wide\n\t\t$Gafgyt_cve2017_17215_3 = \"L33T HaxErS\"  ascii wide\n        \n    condition:\n\t\tall of ($Gafgyt_cve2017_17215*)\n}\n\n\nrule Uptycs_Mirai_ADSL \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Mirai_ADSL_0 = \"ADSL Router\"  ascii wide\n\t\t$Mirai_ADSL_1 = \"Tajuana@72\"  ascii wide\n\t\t$Mirai_ADSL_2 = \"telnet\"  ascii wide\n\t\t$Mirai_ADSL_3 = \"cisco\"  ascii wide\n\t\t$Mirai_ADSL_4 = \"busybox\"  ascii wide\n\t\t$Mirai_ADSL_5 = \"huawei\"  ascii wide\n\t\t$Mirai_ADSL_6 = \"9xsspnvgc8aj5pi7m28p\"  ascii wide\n\n\n\n\tcondition:\n\t\tall of ($Mirai_ADSL*)\n}\n\n\nrule Uptycs_Mirai_DMSNA \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Mirai_DMSNA_0 = \"DMSNA\"  ascii wide\n\t\t$Mirai_DMSNA_1 = \"suckmyass.cf\"  ascii wide\n\t\t$Mirai_DMSNA_2 = \"teamtnt\"  ascii wide\n\t\t$Mirai_DMSNA_3 = \"batkek\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_DMSNA*)\n}\n\n\nrule Uptycs_ZHTrap\n{\n\tmeta:\n\t\tmalware_name = \"ZHTrap\"\n\t\tdescription = \"ZHTrap is a botnet malware which exploits various existing vulnerabilities in IOT devices later doing DDos attacks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$ZHTrap_0 = \"ZoneSec\"  ascii wide\n\t\t$ZHTrap_1 = \".onion\"  ascii wide\n\t\t$ZHTrap_2 = \"JAWS/1.0\"  ascii wide\n\t\t$ZHTrap_3 = \"NETGEAR DGN1000\"  ascii wide\n\t\t$ZHTrap_4 = \"Hello, pee\"  ascii wide\n\t\t$ZHTrap_5 = \"NETGEAR DGN2200\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ZHTrap*)\n}\n\n\nrule Uptycs_DirtyCow_CVE_2016_5195 \n{\n\tmeta:\n\t\tmalware_name = \"DirtyCow\"\n\t\tdescription = \"DirtyCOW(copy-on-write) is a vulnerability that exploits a race condition in the implementation of copy on write mechanism in linux kernel memory management systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$DirtyCow_cve_2016_5195_0 = \"DirtyCow root privilege escalation\"  ascii wide\n\t\t$DirtyCow_cve_2016_5195_1 = \"Backing up %s to /tmp/bak\"  ascii wide\n\t\t$DirtyCow_cve_2016_5195_2 = \"/usr/bin/passwd\"  ascii wide\n\t\t$DirtyCow_cve_2016_5195_3 = \"/tmp/bak\"  ascii wide\n\t\t$DirtyCow_cve_2016_5195_4 = \"/usr/bin/passwd\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($DirtyCow_cve_2016_5195*)\n}\n\n\nrule Uptycs_Ganiw \n{\n\tmeta:\n\t\tmalware_name = \"Ganiw\"\n\t\tdescription = \"Ganiw is a malware which conducts various types of Ddos attacks mostly targeting MIPS architecture.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Ganiw_0 = \"cpu %llu %llu %llu %llu\"  ascii wide\n\t\t$Ganiw_1 = \"%7s %llu %lu %lu %lu %lu %lu %lu %lu %llu %lu %lu %lu %lu %lu %lu %lu\"  ascii wide\n\t\t$Ganiw_2 = \"/proc/net/route\"  ascii wide\n\t\t$Ganiw_3 = \"/proc/cpuinfo\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ganiw*)\n}\n\n\nrule Uptycs_Gafgyt_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Gafgyt_v2_0 = \"/usr/sbin/telnetd\"  ascii wide\n\t\t$Gafgyt_v2_1 = \"HTTPSTOMP\"  ascii wide\n\t\t$Gafgyt_v2_2 = \"CHAOS\"  ascii wide\n\t\t$Gafgyt_v2_3 = \"/etc/config/hosts\"  ascii wide\n\t\t$Gafgyt_v2_4 = \"172.245.110.109\"  ascii wide\n\t\t$Gafgyt_v2_5 = \"/proc/net/route\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\t5 of ($Gafgyt_v2*)\n}\n\n\nrule Uptycs_Gafgyt_V2019 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_2019_version_0 = \"TELNET PAYLOAD\"  ascii wide\n\t\t$Gafgyt_2019_version_1 = \"APOLLO-V3~Made By DaddyL33T\"  ascii wide\n\t\t$Gafgyt_2019_version_2 = \"DaddyL33T Is Back Bitche\"  ascii wide\n\t\t$Gafgyt_2019_version_3 = \"/etc/rc.d/rc.local\"  ascii wide\n\t\t$Gafgyt_2019_version_4 = \"KILLME\"  ascii wide\n\t\t$Gafgyt_2019_version_5 = \"STOPATTK\"  ascii wide\n\t\t$Gafgyt_2019_version_6 = \"Apollo-V3\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\t5 of ($Gafgyt_2019_version*)\n}\n\n\nrule Uptycs_Mirai_Cloudbot \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Mirai_cloudbot_0 = \"killer_save_by_sysproc\"  ascii wide\n\t\t$Mirai_cloudbot_1 = \"kileer_xywz\"  ascii wide\n\t\t$Mirai_cloudbot_2 = \"terrattack\"  ascii wide\n\t\t$Mirai_cloudbot_3 = \"knownBots\"  ascii wide\n\t\t$Mirai_cloudbot_4 = \"killer_killnymaps\"  ascii wide\n\t\t$Mirai_cloudbot_5 = \"udpshit\"  ascii wide\n\t\t$Mirai_cloudbot_6 = \"netbot\"  ascii wide\n\t\t$Mirai_cloudbot_7 = \"hackmy\"  ascii wide\n\t\t$Mirai_cloudbot_8 = \"minattack\"  ascii wide\n\n\n\tcondition:\n\t\t6 of ($Mirai_cloudbot*)\n}\n\n\nrule Uptycs_Gafgyt_2019_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Gafgyt_2019_v4_0 = \"TELNETSCANNER\"  ascii wide\n\t\t$Gafgyt_2019_v4_1 = \"None Killed\"  ascii wide\n\t\t$Gafgyt_2019_v4_2 = \"XMAS\"  ascii wide\n\t\t$Gafgyt_2019_v4_3 = \"Killed %d\"  ascii wide\n\t\t$Gafgyt_2019_v4_4 = \"STOP\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_2019_v4*)\n}\n\n\nrule Uptycs_Gafgyt_Helibot_Demon \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Helibot_demon_0 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\"  ascii wide\n\t\t$Gafgyt_Helibot_demon_1 = \"Demonserv\"  ascii wide\n\t\t$Gafgyt_Helibot_demon_2 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_Helibot_demon_3 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Helibot_demon*)\n}\n\nrule Uptycs_Gafgyt_RyM \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gaggyt_RyM_0 = \"RyMGang\"  ascii wide\n\t\t$Gaggyt_RyM_1 = \"1j1&5E\"  ascii wide\n\t\t$Gaggyt_RyM_2 = \"(vp-+5w)\"  ascii wide\n\t\t$Gaggyt_RyM_3 = \"3j2$1&-!\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($Gaggyt_RyM*)\n}\n\n\nrule Uptycs_Mirai_Tempus\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Tempus_0 = \"Tempus\"  ascii wide\n\t\t$Mirai_Tempus_1 = \"KILLFLOODS\"  ascii wide\n\t\t$Mirai_Tempus_2 = \"KILLPID\"  ascii wide\n\n\n\tcondition:\n\t\t2 of ($Mirai_Tempus*)\n}\n\n\nrule Uptycs_Mirai_GNG \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_GNG_0 = \"FTPjGNRGP\"  ascii wide\n\t\t$Mirai_GNG_1 = \"FGNGVGF\"  ascii wide\n\t\t$Mirai_GNG_2 = \"CLKOG\"  ascii wide\n\t\t$Mirai_GNG_3 = \"UCVAJFME\"  ascii wide\n\t\t\n\n\tcondition:\n\t\tall of ($Mirai_GNG*)\n}\n\n\nrule Uptycs_Mirai_REAR \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_REAR_0 = \"YVZRDREARE7\"  ascii wide\n\t\t$Mirai_REAR_1 = \"EVME7\"  ascii wide\n\t\t$Mirai_REAR_2 = \"PRYR7\"  ascii wide\n\t\t$Mirai_REAR_3 = \"XUUX7\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($Mirai_REAR*)\n}\n\nrule Uptycs_Mirai_BFCVE \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Mirai_BFCVE_0 = \"1&1t\"  ascii wide\n\t\t$Mirai_BFCVE_1 = \"88tymtT\"  ascii wide\n\t\t$Mirai_BFCVE_2 = \"188T\"  ascii wide\n\t\t$Mirai_BFCVE_3 = \"w95513\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_BFCVE*)\n}\n\n\nrule Uptycs_Mirai_CVE_2017_17215 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_CVE_2017_17215_0 = \"&&17\"  ascii wide\n\t\t$Mirai_CVE_2017_17215_1 = \"88tymtT\"  ascii wide\n\t\t$Mirai_CVE_2017_17215_2 = \"DeviceUpgrade_1\"  ascii wide\n\t\t$Mirai_CVE_2017_17215_3 = \"NewDownloadURL\"  ascii wide\n\t\t$Mirai_CVE_2017_17215_4 = \"HuaweiHomeGateway\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($Mirai_CVE_2017_17215*)\n}\n\n\nrule Uptycs_GetShell \n{\n\tmeta:\n\t\tmalware_name = \"GetShell\"\n\t\tdescription = \"GetShell is a backdoor which comes as a part of malware attack on multiple platforms\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_GetShell_Backdoor_0 = \"SCSj\"  ascii wide\n\t\t$Linux_GetShell_Backdoor_1 = \"jfXPQW\"  ascii wide\n\t\t$Linux_GetShell_Backdoor_2 = \"Nt=h\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($Linux_GetShell_Backdoor*)\n}\n\nrule Uptycs_Mirai_UFZ \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_UFZ_0 = \"hacktheworld1337\"  ascii wide\n\t\t$Mirai_UFZ_1 = \"Pon521\"  ascii wide\n\t\t$Mirai_UFZ_2 = \"lolgetfuk\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_UFZ*)\n}\n\n\nrule Uptycs_Mirai_Rearv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Rearv2_0 = \"w5q6he3dbrsgmclkiu4to18npavj702f\"  ascii wide\n\t\t$Mirai_Rearv2_1 = \"RPMHGAVCNKGLLGV\"  ascii wide\n\t\t$Mirai_Rearv2_2 = \"LCOGQGPTGP\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Rearv2*)\n}\n\n\nrule Uptycs_Mirai_EOCE \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_EOCE_0 = \"udpplainattack\"  ascii wide\n\t\t$Mirai_EOCE_1 = \"tcpattack\"  ascii wide\n\t\t$Mirai_EOCE_2 = \"xmasattack\"  ascii wide\n\t\t$Mirai_EOCE_3 = \"gameattack\"  ascii wide\n\t\t$Mirai_EOCE_4 = \"icmpattack\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_EOCE*)\n}\n\n\nrule Uptycs_Mirai_GLC \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_GLC_0 = \"/proc/net/tcp\"  ascii wide\n\t\t$Mirai_GLC_1 = \"/dev/watchdog\"  ascii wide\n\t\t$Mirai_GLC_2 = \"/dev/misc/watchdog\"  ascii wide\n\t\t$Mirai_GLC_3 = \"LCOGQGPTGP\"  ascii wide\n\t\t$Mirai_GLC_4 = \"AMLD\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_GLC*)\n}\n\n\nrule Uptycs_Gafgyt_bashlite \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Gafgyt_bashlite_0 = \"gayfgt\"  ascii wide\n\t\t$Gafgyt_bashlite_1 = \"PONG\"  ascii wide\n\t\t$Gafgyt_bashlite_2 = \"KILLATTK\"  ascii wide\n\t\t$Gafgyt_bashlite_3 = \"killed\"  ascii wide\n\t\t$Gafgyt_bashlite_4 = \"LOLNOGTFO\"  ascii wide\n\t\t$Gafgyt_bashlite_5 = \"JUNK\"  ascii wide\n\t\t$Gafgyt_bashlite_6 = \"Flooding\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_bashlite*)\n}\n\nrule Uptycs_Mirai_DSA \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_DSA_0 = \"lolgetfuk\"  ascii wide\n\t\t$Mirai_DSA_1 = \"%d.%d.%d.%d\"  ascii wide\n\t\t$Mirai_DSA_2 = \"hunt\"  ascii wide\n\t\t$Mirai_DSA_3 = \"DNXFCOW\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_DSA*)\n}\n\n\nrule Uptycs_Mirai_Bashlitev2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Bashlitev2_0 = \"BOGOMIPS\"  ascii wide\n\t\t$Mirai_Bashlitev2_1 = \"PING\"  ascii wide\n\t\t$Mirai_Bashlitev2_2 = \"KILLATTK\"  ascii wide\n\t\t$Mirai_Bashlitev2_3 = \"DONGS\"  ascii wide\n\t\t$Mirai_Bashlitev2_4 = \"PROBING\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Bashlitev2*)\n}\n\n\nrule Uptycs_Mirai_JOB \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_JOB_0 = \"DBwwtr!3Bw\"  ascii wide\n\t\t$Mirai_JOB_1 = \"7ujMko0admin\"  ascii wide\n\t\t$Mirai_JOB_2 = \"Ak47\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_JOB*)\n}\n\n\nrule Uptycs_Gafgyt_RyMv2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_RyMv2_0 = \"FGDCWNV\"  ascii wide\n\t\t$Gafgyt_RyMv2_1 = \"QWRRMPV\"  ascii wide\n\t\t$Gafgyt_RyMv2_2 = \"watchdog\"  ascii wide\n\t\t$Gafgyt_RyMv2_3 = \"scanning\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_RyMv2*)\n}\n\n\nrule Uptycs_Gafgyt_RyMv3 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_RyMv3_0 = \"SHEX\"  ascii wide\n\t\t$Gafgyt_RyMv3_1 = \"kill\"  ascii wide\n\t\t$Gafgyt_RyMv3_2 = \"fuck_niggers\"  ascii wide\n\t\t$Gafgyt_RyMv3_3 = \"FUCKSBOYS\"  ascii wide\n\t\t$Gafgyt_RyMv3_4 = \"RHEX\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_RyMv3*)\n}\n\n\nrule Uptycs_Mirai_cloudbotv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\t\n\t\t$mirai_cloudbotv2_0 = \"xmaxattack\"  ascii wide\n\t\t$mirai_cloudbotv2_1 = \"pshattack\"  ascii wide\n\t\t$mirai_cloudbotv2_2 = \"minecraft\"  ascii wide\n\t\t$mirai_cloudbotv2_3 = \"udphexattack\"  ascii wide\n\t\t$mirai_cloudbotv2_4 = \"khoshuRiKhoslqj\"  ascii wide\n\t\t$mirai_cloudbotv2_5 = \"terrar\"  ascii wide\n\t\t$mirai_cloudbotv2_6 = \"cloudbot\"  ascii wide\n\n\n\tcondition:\nall of ($mirai_cloudbotv2*)\n}\n\n\nrule Uptycs_Gafgyt_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_v3_0 = \"Snoopy\"  ascii wide\n\t\t$Gafgyt_v3_1 = \"HTTPSTOMP\"  ascii wide\n\t\t$Gafgyt_v3_2 = \"STOP\"  ascii wide\n\t\t$Gafgyt_v3_3 = \"STDHEX\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_v3*)\n}\n\nrule Uptycs_Prometei_IOTv2\n{\n\tmeta:\n\t\tmalware_name = \"Prometei\"\n\t\tdescription = \"Prometei is a multi-modular botnet with multiple ways to spread and a payload focused on providing financial benefits for the attacker by mining the Monero online currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Promtei_IOT_0 = \"prometei\"  ascii wide\n\t\t$Promtei_IOT_1 = \"crashed.dump\"  ascii wide\n\t\t$Promtei_IOT_2 = \"uplugplay\"  ascii wide\n\t\t$Promtei_IOT_3 = \"feefreepool\"  ascii wide\n\t\t$Promtei_IOT_4 = \"Starting...\"  ascii wide\n\n\tcondition:\n\t\tall of ($Promtei_IOT*)\n}\n\n\nrule Uptycs_Mirai_deed \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_deed_0 = \"deedbeat\"  ascii wide\n\t\t$Mirai_deed_1 = \"bot\"  ascii wide\n\t\t$Mirai_deed_2 = \"dedd\"  ascii wide\n\t\t$Mirai_deed_3 = \"uohtjthmnitkklz\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_deed*)\n}\n\n\nrule Uptycs_linux_Exploit2014_0038 \n{\n\tmeta:\n\t\tmalware_name = \"Linux_Exploit\"\n\t\tdescription = \"Local root exploit for linux versions before 3.13.2 when CONFIG_X64_X32 is enabled.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$linux_Exploit2014_0038_0 = \"somaxconn\"  ascii wide\n\t\t$linux_Exploit2014_0038_1 = \"not root, ya blew it\"  ascii wide\n\t\t$linux_Exploit2014_0038_2 = \"w00p w00p\"  ascii wide\n\t\t$linux_Exploit2014_0038_3 = \"no offsets for this kernel\"  ascii wide\n\t\t$linux_Exploit2014_0038_4 = \"/bin/sh -i\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($linux_Exploit2014_0038*)\n}\nrule Uptycs_Linux_flooder \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_flooder_0 = \"UDPBYPASS\"  ascii wide\n\t\t$Linux_flooder_1 = \"TARGET\"  ascii wide\n\t\t$Linux_flooder_2 = \"PORT\"  ascii wide\n\t\t$Linux_flooder_3 = \"HDRINCL\"  ascii wide\n\t\t$Linux_flooder_4 = \"THREADS\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_flooder*)\n}\n\n\nrule Uptycs_Mirai_xor \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_xor_0 = \"NMACVKML\"  ascii wide\n\t\t$Mirai_xor_1 = \"AMMIKG\"  ascii wide\n\t\t$Mirai_xor_2 = \"GLAMFKLE\"  ascii wide\n\t\t$Mirai_xor_3 = \"BuEzAs\"  ascii wide\n\t\t$Mirai_xor_4 = \"/dev/watchdog\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_xor*)\n}\n\n\nrule Uptycs_Gafgyt_Demonv2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Demonv2_0 = \"Demon\"  ascii wide\n\t\t$Gafgyt_Demonv2_1 = \"STOP\"  ascii wide\n\t\t$Gafgyt_Demonv2_2 = \"YasT2\"  ascii wide\n\t\t$Gafgyt_Demonv2_3 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Demonv2*)\n}\n\n\nrule Uptycs_Mirai_Nig \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Nig_0 = \"838ybj8mnfi\"  ascii wide\n\t\t$Mirai_Nig_1 = \"NiGGeR69xd\"  ascii wide\n\t\t$Mirai_Nig_2 = \"dropbear\"  ascii wide\n\t\t$Mirai_Nig_3 = \"Sofia\"  ascii wide\n\t\t$Mirai_Nig_4 = \"rcwe4dcfiq\"  ascii wide\n\t\t$Mirai_Nig_5 = \"farted\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Nig*)\n}\n\n\nrule Uptycs_Mirai_CVE_2017_17215v3 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_CVE_2017_17215v3_0 = \"killattk\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_1 = \"thanks for inviting me\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_2 = \"DeviceUpgrade_1\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_3 = \"ctrlt\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_4 = \"botkill\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_5 = \"Suck\"  ascii wide\n\t\t$Mirai_CVE_2017_17215v3_6 = \"Cock\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_CVE_2017_17215v3*)\n}\n\n\nrule Uptycs_Mirai_bdohv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_bdohv2_0 = \"fwwkbs\"  ascii wide\n\t\t$Mirai_bdohv2_1 = \"bdoh\"  ascii wide\n\t\t$Mirai_bdohv2_2 = \"WHTS\"  ascii wide\n\t\t$Mirai_bdohv2_3 = \"aunbic\"  ascii wide\n\t\t$Mirai_bdohv2_4 = \"ponkb\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_bdohv2*)\n}\n\n\nrule Uptycs_Mirai_GLCv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_GLCv2_0 = \"Simps Botnet\"  ascii wide\n\t\t$Mirai_GLCv2_1 = \"AMLD\"  ascii wide\n\t\t$Mirai_GLCv2_2 = \"LCOGQGPTGP\"  ascii wide\n\t\t$Mirai_GLCv2_3 = \"Java/1.4.1_04\"  ascii wide\n\t\t$Mirai_GLCv2_4 = \"STOPALL\"  ascii wide\n\t\t$Mirai_GLCv2_5 = \"GAIM\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_GLCv2*)\n}\n\n\nrule Uptycs_Mirai_XORv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_XORv2_0 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\\n\"  ascii wide\n\t\t$Mirai_XORv2_1 = \"deadbdf\"  ascii wide\n\t\t$Mirai_XORv2_2 = \"88tymtT\"  ascii wide\n\t\t$Mirai_XORv2_3 = \"MMIKG\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_XORv2*)\n}\n\nrule Uptycs_Linux_Tsunami \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_Tsunami_0 = \"h4kkr uzi bot written by ZH\"  ascii wide\n\t\t$Linux_Tsunami_1 = \"PACKETSIZECHANGE\"  ascii wide\n\t\t$Linux_Tsunami_2 = \"MAXBOOTCHANGE\"  ascii wide\n\t\t$Linux_Tsunami_3 = \"MAXATTACKTHREADS\"  ascii wide\n\t\t$Linux_Tsunami_4 = \"Alchemist\"  ascii wide\n\t\t$Linux_Tsunami_5 = \"KILLALL\"  ascii wide\n\n\n\tcondition:\n\t\t5 of ($Linux_Tsunami*)\n}\n\n\nrule Uptycs_Linux_OSF \n{\n\tmeta:\n\t\tmalware_name = \"OSF\"\n\t\tdescription = \"Linux OSf is a virus which infects elf executables and also creates a backdoor in the victim PC.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Linux_Osf_0 = \"HOLY SHIT I RECEIVED A FUCKING PACKET HEH\"  ascii wide\n\t\t$Linux_Osf_1 = \"Incorrect %s port specified! Exiting\"  ascii wide\n\t\t$Linux_Osf_2 = \"o:x:s:h:c:w:t:plrvm:ua:n\"  ascii wide\n\t\t$Linux_Osf_3 = \"proxybnc\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_Osf*)\n}\n\n\nrule Uptycs_Mirai_Man \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_man_0 = \"Totally made by greek fucking helios yes yes\"  ascii wide\n\t\t$Mirai_man_1 = \"idk man\"  ascii wide\n\t\t$Mirai_man_2 = \"EXXC\"  ascii wide\n\t\t$Mirai_man_3 = \"linuxshell\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_man*)\n}\n\n\nrule Uptycs_Mirai_Bed \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Bed_0 = \"lzrd cock fest\"  ascii wide\n\t\t$Mirai_Bed_1 = \"operation now in progress\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Bed*)\n}\n\n\nrule Uptycs_Mirai_SMJ \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_SMJ_0 = \"[Shelling]-->[%s]-->[%s]-->[%s]-->[%s]-->[%s]\"  ascii wide\n\t\t$Mirai_SMJ_1 = \"Sending TCP Packets To: %s:%d for %d seconds\"  ascii wide\n\t\t$Mirai_SMJ_2 = \"STOMP\"  ascii wide\n\t\t$Mirai_SMJ_3 = \"STOP\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_SMJ*)\n}\n\n\nrule Uptycs_Mirai_FLYNET \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_FLYNET_0 = \"flynet\"  ascii wide\n\t\t$Mirai_FLYNET_1 = \"[FLYNET ] TELNET ON | OFF\"  ascii wide\n\t\t$Mirai_FLYNET_2 = \"[FLYNET ] STOPPING TELNET SCANNER\"  ascii wide\n\t\t$Mirai_FLYNET_3 = \"[FLYNET ] STARTING TELNET SCANNER\"  ascii wide\n\t\t$Mirai_FLYNET_4 = \"[FLYNET ] SCANNER ON | OFF\"  ascii wide\n\t\t$Mirai_FLYNET_5 = \"[FLYNET ] STOPPING 105 SCANNER\"  ascii wide\n\t\t$Mirai_FLYNET_6 = \"[FLYNET ] STARTING 105 SCANNER\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_FLYNET*)\n}\n\n\nrule Uptycs_Gafgyt_CVE_2017_17215v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_CVE_2017_17215v2_0 = \"this device has been pwned\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v2_1 = \"LOCKED %s:23 %s:%s %s\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v2_2 = \"[scanner] login attempt [%s:23 %s:%s]\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v2_3 = \"[scanner] sending payload to: %s\\n\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v2_4 = \"lolman\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v2_5 = \"NLOOPHQRZ\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_CVE_2017_17215v2*)\n}\n\n\nrule Uptycs_Gafgyt_CVE2017_2014 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$gafgyt_0 = \"ctrlt/DeviceUpgrade_1\"  ascii wide\n\t\t$gafgyt_1 = \"HuaweiHome\"  ascii wide\n\t\t$gafgyt_2 = \"HUAWEIUPNP\"  ascii wide\n\t\t$gafgyt_3 = \"NewDownloadURL\"  ascii wide\n\t\t$gafgyt_4 = \"TheSuBot\"  ascii wide\n\t\t$gafgyt_5 = \"picsdesc.xml\"  ascii wide\n\t\t$gafgyt_6 = \"WANIPConnection\"  ascii wide\n\n\n\tcondition:\n\t\t6 of ($gafgyt*)\n}\n\n\nrule Uptycs_Mirai_BrZ_Uni \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_BrZ_Uni_0 = \"[http flood] FD%d connection gracefully closed\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_1 = \"[http flood] FD%d lost connection\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_2 = \"[http flood] HTTP_CONN_QUEUE_RESTART FD%d connection gracefully closed\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_3 = \"[http flood] HTTP_CONN_QUEUE_RESTART FD%d lost connection\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_4 = \"[attack] Killing all ongoing attacks\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_5 = \"[killer] Trying to kill port 23\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_6 = \"[killer] Killed tcp/23 (telnet)\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_7 = \"[killer] Failed to kill port 23\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_8 = \"[killer] Bound to tcp/23 (telnet)\\n\"  ascii wide\n\t\t$Mirai_BrZ_Uni_9 = \"[killer] Machine does not have /proc/$pid/exe\\n\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_BrZ_Uni*)\n}\n\n\nrule Uptycs_Mirai_Advarch \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Advarch_0 = \"GVDD@XES\"  ascii wide\n\t\t$Mirai_Advarch_1 = \"ADCVETVZ\"  ascii wide\n\t\t$Mirai_Advarch_2 = \"DBGGXEC\"  ascii wide\n\t\t$Mirai_Advarch_3 = \"DAPXS^R\"  ascii wide\n\t\t$Mirai_Advarch_4 = \"BDRE\"  ascii wide\n\t\t$Mirai_Advarch_5 = \"PBRDC\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Advarch*)\n}\n\n\nrule Uptycs_Gafgyt_Rebirth \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Rebirth_0 = \"ReVeCiTy\"  ascii wide\n\t\t$Gafgyt_Rebirth_1 = \"XMAS\"  ascii wide\n\t\t$Gafgyt_Rebirth_2 = \"STOMP\"  ascii wide\n\t\t$Gafgyt_Rebirth_3 = \"UDPREG\"  ascii wide\n\t\t$Gafgyt_Rebirth_4 = \"UDPHEX\"  ascii wide\n\t\t$Gafgyt_Rebirth_5 = \"UDPRAW\"  ascii wide\n\t\t$Gafgyt_Rebirth_6 = \"HTTPSTOPM\"  ascii wide\n\t\t$Gafgyt_Rebirth_7 = \"HTTP\"  ascii wide\n\t\t$Gafgyt_Rebirth_8 = \"STOP\"  ascii wide\n\t\t$Gafgyt_Rebirth_9 = \"dayzddos\"  ascii wide\n\n\n\tcondition:\n\t\t8 of ($Gafgyt_Rebirth*)\n}\n\n\nrule Uptycs_Gafgyt_RyMv4 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_RyMv4_0 = \"RymGang\"  ascii wide\n\t\t$Gafgyt_RyMv4_1 = \"Whitehats suck dick, Greyhats on top\"  ascii wide\n\t\t$Gafgyt_RyMv4_2 = \"[ACID] You have been infected by urmommy there is a killer made by freak so good luck getting rid of this shit\"  ascii wide\n\t\t$Gafgyt_RyMv4_3 = \"OVH\"  ascii wide\n\t\t$Gafgyt_RyMv4_4 = \"g6m\"  ascii wide\n\t\t$Gafgyt_RyMv4_5 = \"mDej\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_RyMv4*)\n}\n\n\nrule Uptycs_Linux_Tsunamiv2 \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_Tsunamiv2_0 = \"AS-ARMY\"  ascii wide\n\t\t$Linux_Tsunamiv2_1 = \"assword\"  ascii wide\n\t\t$Linux_Tsunamiv2_2 = \"PRIVMSG\"  ascii wide\n\t\t$Linux_Tsunamiv2_3 = \"Hitting\"  ascii wide\n\t\t$Linux_Tsunamiv2_4 = \"Nice try...\"  ascii wide\n\t\t$Linux_Tsunamiv2_5 = \"target\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_Tsunamiv2*)\n}\n\n\nrule Uptycs_Mirai_Genv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_Genv2_0 = \"HTTPKILL\"  ascii wide\n\t\t$Mirai_Genv2_1 = \"UDPHEX\"  ascii wide\n\t\t$Mirai_Genv2_2 = \"OVHUDP\"  ascii wide\n\t\t$Mirai_Genv2_3 = \"$#/6!.#)w!+2$+!E\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Genv2*)\n}\n\n\nrule Uptycs_Linux_flooderv3 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_flooderv3_0 = \"HDRINCL\"  ascii wide\n\t\t$Linux_flooderv3_1 = \"r4M6t2g9\"  ascii wide\n\t\t$Linux_flooderv3_2 = \"target IP\"  ascii wide\n\t\t$Linux_flooderv3_3 = \"port\"  ascii wide\n\t\t$Linux_flooderv3_4 = \"Starting Flood...\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_flooderv3*)\n}\n\n\nrule Uptycs_Linux_flooderv2 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Linux_flooderv2_0 = \"getPayload\"  ascii wide\n\t\t$Linux_flooderv2_1 = \"Pyromancy\"  ascii wide\n\t\t$Linux_flooderv2_2 = \"HDRINCL\"  ascii wide\n\t\t\n\n\n\tcondition:\n\t\tall of ($Linux_flooderv2*)\n}\n\n\nrule Uptycs_StealthWorker \n{\n\tmeta:\n\t\tmalware_name = \"StealthWorker\"\n\t\tdescription = \"StealthWorker is a brute-force malware that mainly targets popular web services and platforms like Wordpress,Drupal,Jumla.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$StealthWorker_0 = \"Stealth\"  ascii wide\n\t\t$StealthWorker_1 = \"userEnumerate\"  ascii wide\n\t\t$StealthWorker_2 = \"Htpasswd\"  ascii wide\n\t\t$StealthWorker_3 = \"saveGood\"  ascii wide\n\t\t$StealthWorker_4 = \"brut\"  ascii wide\n\t\t$StealthWorker_5 = \"passwd\"  ascii wide\n\t\t$StealthWorker_6 = \"DetectCMS\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($StealthWorker*)\n}\n\n\nrule Uptycs_Gafgyt_Mul_CVEs \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Mul_CVEs_0 = \"[realtek]\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_1 = \"[asus]\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_2 = \"killer\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_3 = \"[thinkphp]\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_4 = \"[[comtrend]\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_5 = \"[Netlink]\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_6 = \"[[[huawei][\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_7 = \"Infected:)\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_8 = \"dscantnefor\"  ascii wide\n\t\t$Gafgyt_Mul_CVEs_9 = \"aiinled\"  ascii wide\n\n\tcondition:\n\t\t7 of ($Gafgyt_Mul_CVEs*)\n}\n\n\nrule Uptycs_Gafgyt_kosha \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_kosha_0 = \"mKosha\"  ascii wide\n\t\t$Gafgyt_kosha_1 = \"Marking\"  ascii wide\n\t\t$Gafgyt_kosha_2 = \"STOP\"  ascii wide\n\t\t$Gafgyt_kosha_3 = \"STOMP\"  ascii wide\n\t\t$Gafgyt_kosha_4 = \"telnetd\"  ascii wide\n\t\t$Gafgyt_kosha_5 = \"oodbye\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_kosha*)\n}\n\n\nrule Uptycs_Mirai_phone \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_phone_0 = \"Mirai\"  ascii wide\n\t\t$Mirai_phone_1 = \"bash_history\"  ascii wide\n\t\t$Mirai_phone_2 = \"killall\"  ascii wide\n\t\t$Mirai_phone_3 = \"PHONE\"  ascii wide\n\t\t$Mirai_phone_4 = \"Infected\"  ascii wide\n\t\t$Mirai_phone_5 = \"FASTLOAD\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_phone*)\n}\n\n\nrule Uptycs_Mozi\n{\n\tmeta:\n\t\tmalware_name = \"Mozi\"\n\t\tdescription = \"Mozi is a malware that evolved from the source code of several known malware families and attacks IoT devices.\"\n\t\tauthor = \"Uptycs Inc.\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mozi_0 = \"[dip]\"  ascii wide\n\t\t$Mozi_1 = \"mozi\"  ascii wide\n\t\t$Mozi_2 = \"[atk]\"  ascii wide\n\t\t$Mozi_3 = \"[/atk]\"  ascii wide\n\t\t$Mozi_4 = \"[/dip]\"  ascii wide\n\t\t$Mozi_5 = \"ipinfo\"  ascii wide\n\t\t$Moziexp_1 = \"Huawei\"  ascii wide\n\t\t$Moziexp_2 = \"netgear\"  ascii wide\n\t\t$Moziexp_3 = \"gpon\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mozi*)\n}\n\n\nrule Uptycs_Simps\n{\n\tmeta:\n\t\tmalware_name = \"Simps\"\n\t\tdescription = \"Simps is a Botnet that uses several DDOS modules from Mirai and Gafgyt\"\n\t\tauthor = \"Uptycs Inc.\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$simps_0 = \"Infected By Simps Botnet\"  ascii wide\n\t\t$simps_1 = \"This Device Has successfully Been Infected\"  ascii wide\n\n\t\t\n\tcondition:\n\t\tall of ($simps*)\n}\n\nrule Uptycs_Gafgyt_vse \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\nstrings:\n\t\t$Gafgyt_vse_0 = \"TSource Engine\"  ascii wide\n\t\t$Gafgyt_vse_1 = \"BYPASS\"  ascii wide\n\t\t$Gafgyt_vse_2 = \"STOP\"  ascii wide\n\t\t$Gafgyt_vse_3 = \"mInfect\"  ascii wide\n\t\t$Gafgyt_vse_4 = \"Amanda\"  ascii wide\n\t\t$Gafgyt_vse_5 = \"VckeqgSPaAA5\"  ascii wide\n\n\n\tcondition:\n\t\t5 of ($Gafgyt_vse*)\n}\n\n\nrule Uptycs_Simpsv2\n{\n\tmeta:\n\t\tmalware_name = \"Simps\"\n\t\tdescription = \"Simps is a Botnet that uses several DDOS modules from Mirai and Gafgyt\"\n\t\tauthor = \"Uptycs Inc.\"\n\t\tversion = \"2\"\n\n\n\tstrings:\n\t\t$simps_0 = \"[Ryuk DDoS]\"  ascii wide\n\t\t$simps_1 = \"InfectedNigger.log\"  ascii wide\n\n\t\t\n\tcondition:\n\t\tall of ($simps*)\n}\n\n\nrule Uptycs_XorDDOs_v3\n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"3\"\n\n\n\tstrings:\n\t\t$XorDdos_0 = \"gcc4.sh\"  ascii wide\n\t\t$XorDdos_1 = \"/etc/crontab\"  ascii wide\n\t\t$XorDdos_2 = \"gmfcflwouzxangmwmgswtlqlmhfqxewe\"  ascii wide\n\n\n\n\tcondition:\n\t\tall of ($XorDdos*)\n}\n\n\nrule Uptycs_Satdos\n{\n\tmeta:\n\t\tmalware_name = \"Satdos\"\n\t\tdescription = \"Satdos is a linux malware which performs various types of DDOS attacks like UDP, Syn,TCP.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Satdos0 = \"grep \\\"processor\\\" /proc/cpuinfo | sort -u | wc -l\" ascii wide\n\t\t$Satdos1 = \"grep \\\"MemTotal\\\" /proc/meminfo | cut -d \\\":\\\" -f 2\" ascii wide\n\t\t$Satdos2 = \"SuSEfirewall2 stop > /dev/null\" ascii wide\n\t\t$Satdos3 = \"ln -s /etc/init.d/%s /etc/rc2.d/S77%s\" ascii wide\n\n\tcondition:\n\t\tall of ($Satdos*)\n}\n\n\nrule Uptycs_Gafgyt_anti\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_anti_0 = \"pkill -9 busybox\"  ascii wide\n\t\t$Gafgyt_anti_1 = \"Execution Bruted -> %s [ %s:%s ]\"  ascii wide\n\t\t$Gafgyt_anti_2 = \"service iptables stop\"  ascii wide\n\t\t$Gafgyt_anti_3 = \"service firewalld stop\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_anti*)\n}\n\n\nrule Uptycs_Gafgyt_dayz\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_dayz_0 = \"lolololololdayzddos.co\"  ascii wide\n\t\t$Gafgyt_dayz_1 = \"this lol then you tcp dumped it\"  ascii wide\n\t\t$Gafgyt_dayz_2 = \"REDSYN\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_dayz*)\n}\n\nrule Uptycs_TeamTNT_Nov2020\n{\n\tmeta:\n\t\tmalware_name = \"TeamTNTWorm\"\n\t\tdescription = \"TeamTNT Worm is a malware that belongs to TNT group of attackers which targets misconfigured Docker environments and systems\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$TeamTNT_0 = \"echo $LOCKFILE | base64 -d > $tmpxmrigfile\"  ascii wide\n\t\t$TeamTNT_1 = \"function KILLMININGSERVICES()\"  ascii wide\n\t\t$TeamTNT_2 = \"rm -rf /etc/init.d/agentwatch\"  ascii wide\n\t\t$TeamTNT_3 = \"hilde\"  ascii wide\n\t\t$TeamTNT_4 = \"sugarcrm\"  ascii wide\n\t\t$TeamTNT_5 = \"checksshkeys()\"  ascii wide\n\t\t$TeamTNT_6 = \"Downloading $LATEST_XMRIG_LINUX_RELEASE\"  ascii wide\n\n\n\tcondition:\n\t\t3 of ($TeamTNT*)\n}\n\n\nrule Uptycs_Mirai_xeon\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_x0 = \"Xra6pjYVF81D1cLppv1Ey\" ascii wide\n\t\t$Mirai_x1 = \"cheems\" ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_x*)\n}\n\n\nrule Uptycs_Rootkit_BrZUni\n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"Rootkit is a type of malware which is used by threat actors to hide process and network connections.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$rootkit_0 = \"B2FA36AAA9541F0\"  ascii wide\n\t\t$rootkit_1 = \"114.114.114.114\"  ascii wide\n\t\t$rootkit_2 = \"CheckLKM\"  ascii wide\n\t\t$rootkit_3 = \"del_dir\"  ascii wide\n\t\t$rootkit_4 = \"HidePidPort\"  ascii wide\n\t\t$rootkit_5 = \"bypass_iptables\"  ascii wide\n\n\n\tcondition:\n\t\t5 of ($rootkit*)\n}\n\n\nrule Uptycs_Linux_flooder_v2\n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$flooder_0 = \"%s%Lu%Lu%Lu%Lu%Lu%Lu%Lu\"  ascii wide\n\t\t$flooder_1 = \"sed -i -e '/%s/d' /etc/rc.local\"  ascii wide\n\t\t$flooder_2 = \"bXlzcy50ZXIudGY=\"  ascii wide\n\t\t$flooder_3 = \"/proc/cpuinfo\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($flooder*)\n}\n\n\nrule Uptycs_TeamTNT_IRC\n{\n\tmeta:\n\t\tmalware_name = \"TNTBotinger\"\n\t\tdescription = \"TNTBotinger is a malware that belongs to TNT group of attackers which targets misconfigured Docker environments and systems\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$TeamTNT_0 = \"teamtnt\"  ascii wide\n\t\t$TeamTNT_1 = \"IRC\"  ascii wide\n\t\t$TeamTNT_2 = \"HACKPKG\"  ascii wide\n\t\t$TeamTNT_3 = \"GETSSH\"  ascii wide\n\t\t$TeamTNT_4 = \"chimaera\"  ascii wide\n\t\t$TeamTNT_5 = \"spoof\"  ascii wide\n\t\t$TeamTNT_6 = \"rc.local\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($TeamTNT*)\n}\n\n\nrule Uptycs_Gafgyt_dayz_v2\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_dayz_0 = \"dayzddos.co\"  ascii wide\n\t\t$Gafgyt_dayz_1 = \"HTTP-GOD-KILL\"  ascii wide\n\t\t$Gafgyt_dayz_2 = \"JokeV2\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_dayz*)\n}\n\n\nrule Uptycs_Peirates_v1\n{\n\tmeta:\n\t\tmalware_name = \"Peirates\"\n\t\tdescription = \"Pieirates is a kubernetes pentest tool. This tool is capable of escalating privileges and pivoting.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$peirates_0 = \"peirates\"  ascii wide\n\t\t$peirates_1 = \"kubectl\"  ascii wide\n\t\t$peirates_2 = \"credentials\"  ascii wide\n\t\t$peirates_3 = \"processcreds\"  ascii wide\n\t\t$peirates_4 = \"Hijack\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($peirates*)\n}\n\n\nrule Uptycs_Tmate_v1\n{\n\tmeta:\n\t\tmalware_name = \"Tmate\"\n\t\tdescription = \"Tmate application is mainly used to share terminal over SSH.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$tmate_0 = \"tmate\"  ascii wide\n\t\t$tmate_1 = \"tmate-%s-%ld.log\"  ascii wide\n\t\t$tmate_2 = \"[tmate] %s\"  ascii wide\n\t\t$tmate_3 = \"tmate-server-port\"  ascii wide\n\t\t$tmate_4 = \"tmate-webhook-userdata\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($tmate*)\n}\n\n\nrule Uptycs_Portainer_v1\n{\n\tmeta:\n\t\tmalware_name = \"Portainer\"\n\t\tdescription = \"Portainer is a user interface (UI) management tool that offers a convenient way to manage multiple Docker environments\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$portt_0 = \"timeout %d docker -H %d.%d.%d.%d exec %s apt-get -yq update\"  ascii wide\n\t\t$portt_1 = \"timeout %d docker -H %d.%d.%d.%d exec %s bash --norc -c\"  ascii wide\n\t\t$portt_2 = \"timeout %d docker -H %d.%d.%d.%d exec %s apt-get -yq install masscan docker.io\"  ascii wide\n\t\t$portt_3 = \"CONTAINER ID\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($portt*)\n}\n\n\nrule Uptycs_Kinsing_Rootkit\n{\n\tmeta:\n\t\tmalware_name = \"Kinsing\"\n\t\tdescription = \"Kinsing is a Golang-based Linux based cryptominer that contains cryptominer and a shell script to laterally spread Kinsing across the container network.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Kinsing0 = \"chopN\" ascii wide\n\t\t$Kinsing1 = \"is_hidden_file.c\" ascii wide\n\t\t$Kinsing2 = \"/proc/%s/stat\" ascii wide\n\t\t$Kinsing3 = \"is_attacker\" ascii wide\n\t\t$Kinsing4 = \"get_process_name\" ascii wide\n\n\tcondition:\n\t\t4 of ($Kinsing*)\n}\nrule Uptycs_Ngrok\n{\n\tmeta:\n\t\tmalware_name = \"Ngrok\"\n\t\tdescription = \"Ngrok is a cross-platform software mainly used for tunneling and file sharing.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$ngrok_0 = \"ngrok.com\"  ascii wide\n\t\t$ngrok_1 = \"ngrok\"  ascii wide\n\t\t$ngrok_2 = \"Tunnel\"  ascii wide\n\t\t$ngrokv_0 = \"GetAccountID\"  ascii wide\n\t\t$ngrokv_1 = \"GetID\"  ascii wide\n\t\t$ngrokv_2 = \"GetMetadata\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ngrok*)\n}\n\n\nrule Uptycs_Fbot\n{\n\tmeta:\n\t\tmalware_name = \"Fbot\"\n\t\tdescription = \"Fbot is a linux botnet malware which is based on Mirai malware.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$fbot0 = \"fbot\" ascii wide\n\t\t$fbot1 = \"OGp9P6QvMjY\" ascii wide\n\t\t$fbot2 = \"239.255.255.250\" ascii wide\n\t\t$fbot3 = \"2YvNWd05\" ascii wide\n\n\tcondition:\n\t\tall of ($fbot*)\n}\n\n\nrule Uptycs_Gorsair\n{\n\tmeta:\n\t\tmalware_name = \"Gorsair\"\n\t\tdescription = \"Gorsair is a penetration testing tool for discovering and remotely accessing Docker APIs from vulnerable Docker containers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$gorsair0 = \"rootAccess\" ascii wide\n\t\t$gorsair1 = \"gatherInformation\" ascii wide\n\t\t$gorsair2 = \"gorsair\" ascii wide\n\t\t$gorsair3 = \"NewScanner\" ascii wide\n\t\t$gorsair4 = \"WithSpoofMAC\" ascii wide\n\t\t$gorsair5 = \"WithProxies\" ascii wide\n\n\tcondition:\n\t\tall of ($gorsair*)\n}\n\n\nrule Uptycs_Mirai_dayz\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$mir_dayz_0 = \"lolololololdayzddos.co\"  ascii wide\n\t\t$mir_dayz_1 = \"YakuzaBotnet\"  ascii wide\n\t\t$mir_dayz_2 = \"lol then you tcp dumped\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($mir_dayz*)\n}\n\n\nrule Uptycs_Netwire_Linux\n{\n\tmeta:\n\t\tmalware_name = \"Netwire\"\n\t\tdescription = \"Netwire is a publicly available multi-platform RAT mostly targeting Middle East Regions and has capability to log keystroke and steal credentials.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$netwire_0 = \"profiles.ini\"  ascii wide\n\t\t$netwire_1 = \"autostart\"  ascii wide\n\t\t$netwire_2 = \"Login Data\"  ascii wide\n\t\t$netwire_3 = \"signons.sqlite\"  ascii wide\n\t\t$netwire_4 = \"/proc/%s/exe\"  ascii wide\n\t\t$netwire_5 = \"[Num Lock]\"  ascii wide\n\t\t$netwire_6 = \"[Arrow Left]\"  ascii wide\n\n\tcondition:\n\t\tall of ($netwire*)\n}\n\n\nrule Uptycs_Mirai_Aj4x \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_d_0 = \"Developed by Aj4x\"  ascii wide nocase\n\t\t$Mirai_d_1 = \"ZOJFKRA\"  ascii wide nocase\n\t\t$Mirai_d_2 = \"XJMLG\"  ascii wide nocase\n\t\t\n\n\n\tcondition:\n\t\tall of ($Mirai_d*)\n}\n\n\nrule Uptycs_Gafgyt_Yakuza\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_yak_0 = \"Yakuza\"  ascii wide nocase\n\t\t$Gafgyt_yak_1 = \"FLoad Mode Activated\"  ascii wide nocase\n\t\t$Gafgyt_yak_2 = \"Infecting\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Gafgyt_yak*)\n}\n\n\nrule Uptycs_Gafgyt_Rebirth_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Rebirth_0 = \"Joined Rebirth\"  ascii wide nocase\n\t\t$Gafgyt_Rebirth_1 = \"VsE On UR FuCkKKkKkKiNNNG FoReAhEAD OOOooPs I SpeLlEd ThAT WrOnG FuCk ME GodDAmN ImmA SkiD\"  ascii wide nocase\n\t\t\n\t\t\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Rebirth*)\n}\n\n\nrule Uptycs_Gafgyt_main\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$gafgyt_0 = \"[main] bot deployed\"  ascii wide nocase\n\t\t$gafgyt_1 = \"wajd8ajda7hd\"  ascii wide nocase\n\t\t$gafgyt_2 = \"10325476\"  ascii wide nocase\n\t\t\n\n\tcondition:\n\t\tall of ($gafgyt*)\n}\n\n\nrule Uptycs_Gafgyt_Taurus \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_tau_0 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\"  ascii wide nocase\n\t\t$Gafgyt_tau_1 = \"suckmadick\"  ascii wide nocase\n\t\t$Gafgyt_tau_2 = \"Taurus\"  ascii wide nocase\n\t\t$Gafgyt_tau_3 = \"ovhPwned\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Gafgyt_tau*)\n}\n\n\nrule Uptycs_Mirai_jack\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_d_0 = \"klocko\"  ascii wide nocase\n\t\t$Mirai_d_1 = \"F1raB2ot\"  ascii wide nocase\n\t\t$Mirai_d_2 = \"jcokmknomokea\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Mirai_d*)\n}\n\n\nrule Uptycs_Gafgyt_Yakuza_v2\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_yak_0 = \"Yakuza\"  ascii wide nocase\n\t\t$Gafgyt_yak_1 = \"dayzddos.co\"  ascii wide nocase\n\t\t$Gafgyt_yak_2 = \"Infection Success\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Gafgyt_yak*)\n}\n\n\nrule Uptycs_Ziggy_Startux\n{\n\tmeta:\n\t\tmalware_name = \"Ziggy\"\n\t\tdescription = \"ZiggyStartux is an opensource IRC based DDOS service cleint.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$ziggy_0 = \"HACKPKG\"  ascii wide\n\t\t$ziggy_1 = \"KILLALL\"  ascii wide\n\t\t$ziggy_2 = \"ShellzrUs\"  ascii wide\n\t\t$ziggy_3 = \"SPOOF\"  ascii wide\t\t\n\n\tcondition:\n\t\tall of ($ziggy*)\n}\n\n\nrule Uptycs_Mirai_GZG \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_g_0 = \"w5q6he3dbrsgmclkiu4to18npavj702f\"  ascii wide\n\t\t$Mirai_g_1 = \"UCVAJFME\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_g*)\n}\n\n\n\nrule Uptycs_PnScan\n{\n\tmeta:\n\t\tmalware_name = \"PnScan\"\n\t\tdescription = \"Pnscan is a tool that can be used to survey IPv4 TCP network services.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t $Pn0 = \"PNScan\" ascii wide\n\t $Pn1 = \"<ABORT>\" ascii wide\n\t $Pn2 = \"<SUSP>\" ascii wide\n\n\tcondition:\n\t\tall of ($Pn*)\n}\n\nrule Uptycs_Lightaidra\n{\n\tmeta:\n\t\tmalware_name = \"Lightaidra\"\n\t\tdescription = \"Lightaidra is an IRC botnet malware which targets vulnerable routers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$lightaidra0 = \"Kaden1337\" ascii wide\n\t\t$lightaidra1 = \"Okami\" ascii wide\n\t\t$lightaidra2 = \"INFECT\" ascii wide\n\t\t$lightaidra3 = \"Telnet\" ascii wide\n\n\n\tcondition:\n\t\tall of ($lightaidra*)\n}\n\n\nrule Uptycs_Erebus\n{\n\tmeta:\n\t\tmalware_name = \"Erebus\"\n\t\tdescription = \"Erebus is a ransomware which infects linux servers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$erebus0 = \"EREBUS\" ascii wide\n\t\t$erebus1 = \"CRYPT_PK_RANDOM_STRING\" ascii wide\n\t\t$erebus2 = \"filename=\" ascii wide\n\t\t$erebus3 = \"%c%c==\" ascii wide\n\t\t$erebus4 = \"eckey.Q\" ascii wide\n\n\tcondition:\n\t\tall of ($erebus*)\n}\n\nrule Uptycs_Coinminer_GoMiner\n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Coinminer0 = \"xmrig\" ascii wide nocase\n\t\t$Coinminer1 = \"stratum+ssl://\" ascii wide nocase\n\t\t$Coinminer2 = \"modprobe\" ascii wide nocase\n\t\t$Coinminer3 = \"msr\" ascii wide nocase\n\n\tcondition:\n\t\tall of ($Coinminer*)\n}\n\nrule Uptycs_Rootkit_Azazel\n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"Rootkit is a type of malware which is used by threat actors to hide process and network connections.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5= \"e90c2fee0e12cf304e27ca467d5828ec\"\n\n// Replaced $rootkit_3 and added $rootkit_6\n\n\tstrings:\n\t\t$rootkit_0 = \"pam_authenticate\"  ascii wide\n\t\t$rootkit_1 = \"pam_get_item\"  ascii wide\n\t\t$rootkit_2 = \"openpty\"  ascii wide\n\t\t$rootkit_3 = \"Azazel\"  ascii wide\n\t\t$rootkit_4 = \"ptrace\"  ascii wide\n\t\t$rootkit_5 = \"ttyname\"  ascii wide\n\t\t$rootkit_6 = { 9f 9d 9d 9b 8e 8a 00 9f 9d 9d 9b 8d 8d 00 9b 86 9b 9d 88 9b 00 92 97 90 95 00 a1 a1 92 86 8d 8a 9f 8a 00 a1 a1 92 86 8d 8a 9f 8a c8 ca 00 91 8e 9b 90 00 8c 93 9a 97 8c 00 8b 90 92 97 90 95 }  // obfuscated API found in Azazel rootkits\n\n\tcondition:\n\t\tall of ($rootkit*)\n}\nrule Uptycs_Gafgyt_Yakuza_V3\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_yak_0 = \"YakuzaBotnet\"  ascii wide nocase\n\t\t$Gafgyt_yak_1 = \"Scarface1337\"  ascii wide nocase\n\n\tcondition:\n\t\tall of ($Gafgyt_yak*)\n}\n\nrule Uptycs_Mirai_omri \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_omri_0 = \"Omri\"  ascii wide\n\t\t$Mirai_omri_1 = \"6KafCk3x0a\"  ascii wide\n\t\t$Mirai_omri_2 = \"Skyline\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_omri*)\n}\n\n\nrule Uptycs_Gafgyt_dayz_v3\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_yak_0 = \"lXfYC7TFaCq5H\"  ascii wide nocase\n\t\t$Gafgyt_yak_1 = \"d4mQasDSH6\"  ascii wide nocase\n\t\t$Gafgyt_yak_2 = \"lololololol\"  ascii wide nocase\n\n\n\tcondition:\n\t\t2 of ($Gafgyt_yak*)\n}\n\n\nrule Uptycs_Mirai_peachy\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_p_0 = \"peachy botnet\"  ascii wide nocase\n\t\t$Mirai_p_1 = \"xc3511\"  ascii wide nocase\t\n\n\n\tcondition:\n\t\tall of ($Mirai_p*)\n}\n\n\nrule Uptycs_Mirai_Dropbear \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_drp_0 = \"dropbear\"  ascii wide nocase\n\t\t$Mirai_drp_1 = \"nf1dk5a8eisr9i32\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Mirai_drp*)\n}\n\n\nrule Uptycs_Gafgyt_antiv2\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_anti_0 = \"pkill -9 busybox\"  ascii wide\n\t\t$Gafgyt_anti_1 = \"TSource Engine Query\"  ascii wide\n\t\t$Gafgyt_anti_2 = \"service iptables stop\"  ascii wide\n\t\t$Gafgyt_anti_3 = \"service firewalld stop\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_anti*)\n}\n\nrule Uptycs_Gafgyt_leaked      \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_1 = \"initconnect\"  ascii wide nocase\n\t\t$Gafgyt_2 = \"processcmd\"  ascii wide nocase\n\t\t$Gafgyt_3 = \"recvline\"  ascii wide nocase\n\t\t$Gafgyt_4 = \"random\"  ascii wide nocase\n\t\t$Gafgyt_5 = \"listfork\"  ascii wide nocase\n\t\t$Gafgyt_6 = \"cmwc\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Gafgyt*)\n}\n\n\nrule Uptycs_Gafgyt_Mtm\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_0 = \"plzjustfuckoff\"  ascii wide nocase\n\t\t$Gafgyt_1 = \"Tsunami\"  ascii wide nocase\n\t\t$Gafgyt_2 = \"MtmKilledYou\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($Gafgyt*)\n}\n\n\nrule Uptycs_DarkSide_V1\n{\n\tmeta:\n\t\tmalware_name = \"DarkSide\"\n\t\tdescription = \"Darkside is a ransomware which targets and encrypts ESXi servers/systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n    strings:\n\t\t$DarkSide_0 = \"/sbin/esxcli\"  ascii wide nocase\n\t\t$DarkSide_1 = \"kill-vm.enable\"  ascii wide nocase\n\t\t$DarkSide_2 = \"kill-vm.ignore-list\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($DarkSide*)\n}\n\n\nrule Uptycs_Ziggy\n{\n\tmeta:\n\t\tmalware_name = \"Ziggy\"\n\t\tdescription = \"Ziggy is a Golang malware that contains AES encrypted IRC bot.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$ziggy_0 = \"ZIGGY StarTux\"  ascii wide nocase\n\t\t$ziggy_1 = \"Kaiten Reborn\"  ascii wide nocase\n\t\t$ziggy_2 = \"Kaiten Ziggy StarTux\"  ascii wide nocase\n\n\n\tcondition:\n\t\tall of ($ziggy*)\n}\n\n\nrule Uptycs_CCAT\n{\n\tmeta:\n\t\tmalware_name = \"CCAT\"\n\t\tdescription = \"Cloud Container Attack Tool(CCAT) is an open source security tool for testing security of container environments.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Wat_0 = \"DOCKER_BACKDOOR\" ascii wide nocase\n\t\t$Wat_1 = \"PULL_ECR_REPOS\" ascii wide nocase\n\t\t$Wat_2 = \"SWAP_AWS_PROFILE\" ascii wide nocase\n\t\n\n\tcondition:\n\t\tall of ($Wat*)\n}\n\nrule Uptycs_Mirai_common\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_d_0 = \"HTTPHEX\" ascii wide\n\t\t$Mirai_d_1 = \"nameserver\" ascii wide\n\t\t$Mirai_d_2 = \"STOP\" ascii wide\n\t\t$Mirai_d_3 = \"hlLjztqZ\" ascii wide\n\t\t$Mirai_d_4 = \"8.8.8\" ascii wide\n\t\t\n\tcondition:\n\t\tall of ($Mirai_d*)\n}\n\nrule Uptycs_Nmap \n{\n\tmeta:\n\t\tmalware_name = \"Nmap\"\n\t\tdescription = \"Nmap is a network scanning tool that uses IP packets to identify all the devices connected to a network and provides information on the services and operating systems they are running.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Nmap_0 = \"NmapOps\"  ascii wide\n\t\t$Nmap_1 = \"NmapService\"  ascii wide\n\t\t$Nmap_2 = \"TargetiP\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Nmap*)\n}\n\n\nrule Uptycs_Nipe \n{\n\tmeta:\n\t\tmalware_name = \"Nipe\"\n\t\tdescription = \"Nipe is an engine, developed in Perl, that aims on making the Tor network your default network gateway.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Nipe_0 = \"Nipe must be run as root\"  ascii wide\n\t\t$Nipe_1 = \"Engine\"  ascii wide\n\t\t$Nipe_2 = \"tor\"  ascii wide\n\t\t$Nipe_3 = \"Start\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Nipe*)\n}\n\n\nrule Uptycs_Hwacha \n{\n\tmeta:\n\t\tmalware_name = \"Hwacha\"\n\t\tdescription = \"Hwacha is a tool to quickly execute payloads on *Nix based systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Hwacha_0 = \"hwacha\"  ascii wide\n\t\t$Hwacha_1 = \"mimipenguin\"  ascii wide\n\t\t$Hwacha_2 = \"serverpenguin\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Hwacha*)\n}\n\n\nrule Uptycs_VeilEvasion \n{\n\tmeta:\n\t\tmalware_name = \"VeilEvasion\"\n\t\tdescription = \"Veil-Evasion is a tool designed to generate metasploit payloads that bypass common anti-virus solutions.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$VeilEvasion_0 = \"Veil\"  ascii wide\n\t\t$VeilEvasion_1 = \"VeilEvasionServer\"  ascii wide\n\t\t$VeilEvasion_2 = \"meterpreter\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($VeilEvasion*)\n}\n\n\nrule Uptycs_Fierce \n{\n\tmeta:\n\t\tmalware_name = \"Fierce\"\n\t\tdescription = \"Fierce is a DNS reconnaissance tool for locating non-contiguous IP space.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Fierce_0 = \"fierce\"  ascii wide\n\t\t$Fierce_1 = \"unvisited\"  ascii wide\n\t\t$Fierce_2 = \"resolver\"  ascii wide\n\t\t$Fierce_3 = \"nearby\"  ascii wide\n\t\t$Fierce_4 = \"reverse_query\"  ascii wide\n\t\t$Fierce_5 = \"NXDOMAIN\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Fierce*)\n}\n\n\nrule Uptycs_Zmap \n{\n\tmeta:\n\t\tmalware_name = \"Zmap\"\n\t\tdescription = \"Zmap is a network scanning tool which is capable of scanning the IP addresses at a very high speed.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Zmap_0 = \"zmap\"  ascii wide\n\t\t$Zmap_1 = \"target_port\"  ascii wide\n\t\t$Zmap_2 = \"hosts_scanned\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Zmap*)\n}\n\n\nrule Uptycs_S7scanner \n{\n\tmeta:\n\t\tmalware_name = \"S7scanner\"\n\t\tdescription = \"S7scanner tool enumerates Siemens S7 PLCs on a TCP/IP stack or LLC network.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$S7scanner_0 = \"PLC_Scanner\"  ascii wide\n\t\t$S7scanner_1 = \"s7scan\"  ascii wide\n\t\t$S7scanner_2 = \"get_if_hwaddr\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($S7scanner*)\n}\n\nrule Uptycs_Exaramel_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Exaramel\"\n\t\tdescription = \"Exaramal is a cross platform backdoor that can run on windows and linux.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Exaramel_Linux_0 = \"dialDNS\"  ascii wide\n\t\t$Exaramel_Linux_1 = \"LocalAddr\"  ascii wide\n\t\t$Exaramel_Linux_2 = \"RemoteAddr\"  ascii wide\n\t\t$Exaramel_Linux_3 = \"SelfDelete\"  ascii wide\n\t\t$Exaramel_Linux_4 = \"SetReadDeadline\"  ascii wide\n\t\t$Exaramel_Linux_5 = \"findcrontabStrings\"  ascii wide\n\t\t$Exaramel_Linux_6 = \"cronAutoStart\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Exaramel_Linux*)\n}\n\nrule Uptycs_CobaltStrike_linux \n{\n\tmeta:\n\t\tmalware_name = \"Cobalt Strike\"\n\t\tdescription = \"Cobalt strike is used to generate custom payloads which are used by adversaries.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$CobaltStrike_linux_0 = {48 C1 F8 03 48 85 C0 75}\n\t\t$CobaltStrike_linux_1 = {69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69}\n\t\t$CobaltStrike_linux_2 = {C1 F9 1F F7 EB C1 FA 06}\n\t\t$CobaltStrike_linux_3 = \"libssl.so.10\"  ascii wide\n\t\t$FP = \"chrome-search\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($CobaltStrike_linux*) and (not any of ($FP))\n}\n\n\nrule Uptycs_Gafgyt_Hakai \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Hakai_0 = \"Bash-Lite\"  ascii wide\n\t\t$Gafgyt_Hakai_1 = \"INFECTION SUCCESS\"  ascii wide\n\t\t$Gafgyt_Hakai_2 = \"HAKAI\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Hakai*)\n}\n\n\nrule Uptycs_Gafgyt_hahano \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_hahano_0 = \"IMAASSHOLETHATBOTKILLS\"  ascii wide\n\t\t$Gafgyt_hahano_1 = \"DDOS STOPPED\"  ascii wide\n\t\t$Gafgyt_hahano_2 = \"HUMANS KILLING\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_hahano*)\n}\n\nrule Uptycs_Tsunami_log4j\n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\tstrings:\n\t\t$Tsunami_log4j_0 = \"KILL_PORT\"  ascii wide\n\t\t$Tsunami_log4j_1 = \"IRC\"  ascii wide\n\t\t$Tsunami_log4j_2 = \"PING\"  ascii wide\n\t\t$Tsunami_log4j_3 = \"NICK\"  ascii wide\n\t\t$Tsunami_log4j_4 = \"NOTICE\"  ascii wide\n\t\t$Tsunami_log4j_5 = \"RPMA\"  ascii wide\n\t\t$Tsunami_log4j_6 = \"crontab\"  ascii wide\n\t\t$Tsunami_log4j_7 = \"udp flood\"  ascii wide\n\tcondition:\n\t\tall of ($Tsunami_log4j*)\n}\n\n\nrule Uptycs_TellYouThePass_linux \n{\n\tmeta:\n\t\tmalware_name = \"TellYouThePass\"\n\t\tdescription = \"TellYouThePass is a Linux ransomware that harvests SSH keys and moves laterally throughout the victim network.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"865cae328976d4d9810b5f959c31a549\"\n\n\n\tstrings:\n\t\t$TellYouThePass_linux_update_0 = \"delete your encrypted data or reinstall your system\"  ascii wide\n\t\t$TellYouThePass_linux_update_1 = \"send ITSBTC btc to my wallet address ITSADDR\"  ascii wide\n\t\t$TellYouThePass_linux_update_2 = \"All your files have been encryptd\"  ascii wide\n\t\t$TellYouThePass_linux_update_3 = \"please contact some data recovery company\"  ascii wide\n\t\t$TellYouThePass_linux_update_4 = \"may they can contact to me .your id:\"  ascii wide\n\t\t$TellYouThePass_linux_update_5 = \"ITSBTC btc .contact email:\"  ascii wide\n\t\t$TellYouThePass_linux_update_6 = \"SHOWKEY\"  ascii wide\n\t\t$TellYouThePass_linux_update_7 = \"total encrypt\"  ascii wide\n\n\n\tcondition:\n\t\t5 of ($TellYouThePass_linux_update*)\n}\n\n\nrule Uptycs_Mirai_bashlitev3 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_bashlitev3_0 = \"HTTPFLOOD\"  ascii wide\n\t\t$Mirai_bashlitev3_1 = \"HOLD\"  ascii wide\n\t\t$Mirai_bashlitev3_2 = \"JUNK\"  ascii wide\n\t\t$Mirai_bashlitev3_3 = \"KILLATTK\"  ascii wide\n\t\t$Mirai_bashlitev3_4 = \"LOLNOGTFO\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_bashlitev3*)\n}\n\n\nrule Uptycs_Mirai_peace \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_peace_0 = \"Attempting To Brute\"  ascii wide\n\t\t$Mirai_peace_1 = \"STOLENBOTS\"  ascii wide\n\t\t$Mirai_peace_2 = \"DDOSING\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_peace*)\n}\n\nrule Uptycs_FritzFrogv2 \n{\n\tmeta:\n\t\tmalware_name = \"FritzFrog\"\n\t\tdescription = \"FritzFrog is a highly sophisticated peer-to-peer (P2P) botnet that has been actively breaching SSH servers worldwide.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$FritzFrog_0 = \"xor_amd64.go\"  ascii wide\n\t\t$FritzFrog_1 = \"kill_9\"  ascii wide\n\t\t$FritzFrog_2 = \"isNetcat\"  ascii wide\n\t\t$FritzFrog_3 = \"Antivir\"  ascii wide\n\t\t$FritzFrog_4 = \"CopyToRemote\"  ascii wide\n\t\t$FritzFrog_5 = \"isRootUser\"  ascii wide\n\t\t$FritzFrog_6 = \"remoteServerReady\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($FritzFrog*)\n}\n\n\nrule Uptycs_Ransomware_hasfu \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Ransomware_hasfu_0 = \"hasfu\"  ascii wide\n\t\t$Ransomware_hasfu_1 = \"Your network is encrypted\"  ascii wide\n\t\t$Ransomware_hasfu_2 = \"Encrypting: %s\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_hasfu*)\n}\n\nrule Uptycs_Mirai_PMMV \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_PMMV_0 = \"QMNMIG\"  ascii wide\n\t\t$Mirai_PMMV_1 = \"PMMV\"  ascii wide\n\t\t$Mirai_PMMV_2 = \"XJMLG\"  ascii wide\n\t\t$Mirai_PMMV_3 = \"TKXZT\"  ascii wide\n\t\t$Mirai_PMMV_4 = \"ZOJFKRA\"  ascii wide\n\t\t$Mirai_PMMV_5 = \"VGNLGVCFOKL\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_PMMV*)\n}\n\n\nrule Uptycs_PupyRAT_linux\n{\n\tmeta:\n\t\tmalware_name = \"Pupy\"\n\t\tdescription = \"Pupy is a multi-platform Remote Access trojan (RAT) utilized by advanced persistent threat (APT) groups.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$PupyRATv2_0 = \"LD_PRELOAD=%s HOOK_EXIT=%d CLEANUP=%d\"  ascii wide\n\t\t$PupyRATv2_1 = \"linux-inject\"  ascii wide\n\t\t$PupyRATv2_2 = \"pupy\"  ascii wide\n\t\t$PupyRATv2_3 = \"reflective_inject_dll\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($PupyRATv2*)\n}\n\n\nrule Uptycs_Hive_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Hive\"\n\t\tdescription = \"\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Hive_Linux_0 = \"Your network has been breached and all data were encrypted\"  ascii wide\n\t\t$Hive_Linux_1 = \"HOW_TO_DECRYPT\"  ascii wide\n\t\t$Hive_Linux_2 = \"onion\"  ascii wide\n\t\t$Hive_Linux_3 = \"EmzuuBo6Ydpt\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Hive_Linux*)\n}\n\n\nrule Uptycs_kaiji_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Kaiji\"\n\t\tdescription = \"Kaiji is a malware that spreads by finding exposed SSH ports on Linux servers and IoT devices on the internet and tries to get root access with a brute-force attack.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$kaiji_v2_0 = \"Rkit\"  ascii wide\n\t\t$kaiji_v2_1 = \"Tcpflood\"  ascii wide\n\t\t$kaiji_v2_2 = \"tcpddosag\"  ascii wide\n\t\t$kaiji_v2_3 = \"Udpflood\"  ascii wide\n\t\t$kaiji_v2_4 = \"Ackddos\"  ascii wide\n\t\t$kaiji_v2_5 = \"Runshellkill\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($kaiji_v2*)\n}\n\n\nrule Uptycs_Mirai_katana \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_katana_0 = \"[http flood] FD%d error while connecting = %d\"  ascii wide\n\t\t$Mirai_katana_1 = \"[http flood] headers:\"  ascii wide\n\t\t$Mirai_katana_2 = \"[http flood] FD%d connection gracefully closed\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_katana*)\n}\n\n\nrule Uptycs_B1txor20 \n{\n\tmeta:\n\t\tmalware_name = \"B1txor20\"\n\t\tdescription = \"b1txor20 is a linux backdoor which targets ARM and x64 CPU architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$b1txor20_0 = \"b4d4b1t\"  ascii wide\n\t\t$b1txor20_1 = \"/var/run/.netns.pid\"  ascii wide\n\t\t$b1txor20_2 = \"/dev/pamd\"  ascii wide\n\t\t$b1txor20_3 = \"M3T4M0RF1LKM\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($b1txor20*)\n}\n\n\nrule Uptycs_Mirai_bootnet \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_bootnet_0 = \"your device just got infected to a bootnoot\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_bootnet*)\n}\n\n\nrule Uptycs_Mirai_EnemyBot\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$EnemyBot_Mirai_0 = \"enemybot\"  ascii wide\n\t\t$EnemyBot_Mirai_1 = \"IObeE\"  ascii wide\n\t\t$EnemyBot_Mirai_2 = \"killing\"  ascii wide\n\t\t$EnemyBot_Mirai_3 = \"xmrig\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($EnemyBot_Mirai*)\n}\n\nrule Uptycs_Mirai_goldfishgang \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_goldfishgang_0 = \"[main] Deployed\"  ascii wide\n\t\t$Mirai_goldfishgang_1 = \"[main] sending query\"  ascii wide\n\t\t$Mirai_goldfishgang_2 = \"mkdir /%s/ && >/%s/%s && cd /%s/ >/dev/null\"  ascii wide\n\t\t$Mirai_goldfishgang_3 = \"mv %s /%s/%s && chmod 777 /%s/%s >/dev/null\"  ascii wide\n\t\t$Mirai_goldfishgang_4 = \"[main] Auth built and proc hidden\"  ascii wide\n\t\t$Mirai_goldfishgang_5 = \"[main] Attempting to connect to CNC\"  ascii wide\n\t\t$Mirai_goldfishgang_6 = \"[main] Tearing down connection to CNC!\"  ascii wide\n\t\t$Mirai_goldfishgang_7 = \"[main] Failed to connect to CNC\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_goldfishgang*)\n}\n\n\nrule Uptycs_Simps_v3\n{\n\tmeta:\n\t\tmalware_name = \"Simps\"\n\t\tdescription = \"Simps is a Botnet that uses several DDOS modules from Mirai and Gafgyt\"\n\t\tauthor = \"Uptycs Inc.\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$simps_0 = \"Infected By Makapaka Botnet\"  ascii wide\n\t\t$simps_1 = \"Infected.log\"  ascii wide\n\n\t\t\n\tcondition:\n\t\tall of ($simps*)\n}\n\n\nrule Uptycs_Gafgyt_piglint \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_piglint_0 = \"piglin\"  ascii wide\n\t\t$Gafgyt_piglint_1 = \"telhacktheworld1337\"  ascii wide\n\t\t$Gafgyt_piglint_2 = \"12.12.12.12\"  ascii wide\n\t\t$Gafgyt_piglint_3 = \"%d.%d.%d.%d\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_piglint*)\n}\n\n\nrule Uptycs_Venom_dlive \n{\n\tmeta:\n\t\tmalware_name = \"Venom RAT\"\n\t\tdescription = \"Venom RAT is a clone of Quasar RAT family which is a open source windows Remote Administration tool written in C#.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Venom_dlive_0 = \"venom_admin\"  ascii wide\n\t\t$Venom_dlive_1 = \"sshconnect\"  ascii wide\n\t\t$Venom_dlive_2 = \"Download files from the target node\"  ascii wide\n\t\t$Venom_dlive_3 = \"RemoteAddr\"  ascii wide\n\t\t$Venom_dlive_4 = \"SendDownloadCmd\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Venom_dlive*)\n}\n\n\nrule Uptycs_Gafgyt_dropbear \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_dropbear_0 = \"TSource Engine Query\"  ascii wide\n\t\t$Gafgyt_dropbear_1 = \"UDPRANDOM\"  ascii wide\n\t\t$Gafgyt_dropbear_2 = \"TCPRANDOM\"  ascii wide\n\t\t$Gafgyt_dropbear_3 = \"STORMBREAK\"  ascii wide\n\t\t$Gafgyt_dropbear_4 = \"[cobalt][%s][%s][%s][%s]\"  ascii wide\n\t\t$Gafgyt_dropbear_5 = \"Dropbear\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_dropbear*)\n}\n\n\nrule Uptycs_Mirai_openass \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_openass_0 = \"scanner_kill\"  ascii wide\n\t\t$Mirai_openass_1 = \"ipToCnc\"  ascii wide\n\t\t$Mirai_openass_2 = \"scanner_pid\"  ascii wide\n\t\t$Mirai_openass_3 = \"sendTCP\"  ascii wide\n\t\t$Mirai_openass_4 = \"OpenAss\"  ascii wide\n\t\t$Mirai_openass_5 = \"ZOJFKRA\"  ascii wide\n\t\t$Mirai_openass_6 = \"PMMV\"  ascii wide\n\t\t$Mirai_openass_7 = \"HWCLVGAJ\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_openass*)\n}\n\n\n\nrule Uptycs_Mirai_goldfishgangv2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_goldfishgang_0 = \"BDOHCHIB\"  ascii wide\n\t\t$Mirai_goldfishgang_1 = \"fwwkbs\"  ascii wide\n\t\t$Mirai_goldfishgang_2 = \"mkdir /%s/ && >/%s/%s && cd /%s/ >/dev/null\"  ascii wide\n\t\t$Mirai_goldfishgang_3 = \"mv %s /%s/%s && chmod 777 /%s/%s >/dev/null\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_goldfishgang*)\n}\n\n\nrule Uptycs_Mythic_poseidon_linux\n{\n\tmeta:\n\t\tmalware_name = \"Mythic\"\n\t\tdescription = \"Mythic is a multiplayer, command and control platform for red teaming tool\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$poseidon_0 = \"MythicAgents/poseidon\"  ascii wide\n\t\t$poseidon_1 = \"xwindow.Capture\"  ascii wide\n\t\t$poseidon_2 = \"sshauth.SSHBruteForce\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($poseidon*)\n}\n\nrule Uptycs_Zgrab \n{\n\tmeta:\n\t\tmalware_name = \"Zgrab\"\n\t\tdescription = \"Zgrab is a fast application-layer network scanner designed for completing large Internet-wide surveys.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Zgrab_0 = \"RunScanner\"  ascii wide\n\t\t$Zgrab_1 = \"zgrab\"  ascii wide\n\t\t$Zgrab_2 = \"scanner\"  ascii wide\n\t\t$Zgrab_3 = \"zmap\"  ascii wide\n\t\t$Zgrab_4 = \"numerate\"  ascii wide\n\t\t$Zgrab_5 = \"grabTarget\"  ascii wide\n\t\t$Zgrab_6 = \"ScanTarget\"  ascii wide\n\t\t$Zgrab_7 = \"fakeDNS\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Zgrab*)\n}\n\n\nrule Uptycs_Blackcat_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Blackcat Ransomware\"\n\t\tdescription = \"Blackcat ransomware also known as ALPHV targets ESXi servers to encrypt sensitive PC data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Blackcat_Linux_0 = \"volumesKilling\"  ascii wide\n\t\t$Blackcat_Linux_1 = \"VMSencrypt\"  ascii wide\n\t\t$Blackcat_Linux_2 = \"Important files on your network was ENCRYPTED\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Blackcat_Linux*)\n}\n\n\n\nrule Uptycs_Ech0raix_Linux\n{\n\tmeta:\n\t\tmalware_name = \"Ech0raix Ransomware\"\n\t\tdescription = \"Ech0raix is a ransomware which targets *nix based devices and systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$ech0raix_0 = \"README_FOR_DECRYPT.txt\"  ascii wide\n\t\t$ech0raix_1 = \"getPidPath\"  ascii wide\n\t\t$ech0raix_2 = \"CheckIsRunning\"  ascii wide\n\t\t$ech0raix_3 = \"encrypt\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ech0raix*)\n}\n\n\nrule Uptycs_VSingle \n{\n\tmeta:\n\t\tmalware_name = \"VSingle\"\n\t\tdescription = \"VSingle malware accesses GitHub to obtain new C2 servers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$VSingle_0 = \"Wr0te\"  ascii wide\n\t\t$VSingle_1 = \"Arcan3\"  ascii wide\n\t\t$VSingle_2 = \"luxuryboypnpg\"  ascii wide\n\t\t$VSingle_3 = \"happyv1m\"  ascii wide\n\t\t$VSingle_4 = \"Dronek\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($VSingle*)\n}\n\n\nrule Uptycs_Meterpreter_PayloadV3 \n{\n\tmeta:\n\t\tmalware_name = \"REVERSESHELL\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Meterpreter_PayloadV3_0 = \"MSF_LICENSE\"  ascii wide\n\t\t$Meterpreter_PayloadV3_1 = \"mettlesploit!\"  ascii wide\n\t\t$Meterpreter_PayloadV3_2 = \"reflectively executing\"  ascii wide\n\t\t$Meterpreter_PayloadV3_3 = \"NTLM handshake\"  ascii wide\n\t\t$Meterpreter_PayloadV3_4 = \"audio_mic\"  ascii wide\n\t\t$Meterpreter_PayloadV3_5 = \"/etc/passwd\"  ascii wide\n\t\t$Meterpreter_PayloadV3_6 = \"/etc/hosts\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Meterpreter_PayloadV3*)\n}\n\n\nrule Uptycs_CVE_2021_4034 \n{\n\tmeta:\n\t\tmalware_name = \"CVE20214034\"\n\t\tdescription = \"CVE20214034 is a Local Privilege Escalation Vulnerability Discovered in polkit’s pkexec. \"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$CVE_2021_4034_0 = \"CHARSET=PWNKIT\"  ascii wide\n\t\t$CVE_2021_4034_1 = \"SHELL=pwnkit\"  ascii wide\n\t\t$CVE_2021_4034_2 = \"/usr/bin/pkexec\"  ascii wide\n\t\t$CVE_2021_4034_3 = \"PATH=GCONV_PATH=\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($CVE_2021_4034*)\n}\n\n\nrule Uptycs_FritzFrogV1 \n{\n\tmeta:\n\t\tmalware_name = \"Fritzfrog\"\n\t\tdescription = \"FritzFrog is a highly sophisticated peer-to-peer (P2P) botnet that has been actively breaching SSH servers worldwide.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$FritzFrog_0 = \"main.RunMiner\"  ascii wide\n\t\t$FritzFrog_1 = \"main.isNetcat\"  ascii wide\n\t\t$FritzFrog_2 = \"main.Log4ShellCracker\"  ascii wide\n\t\t$FritzFrog_3 = \"main.Log4ShellCrackerWorker\"  ascii wide\n\t\t$FritzFrog_4 = \"main.AntivirOnce\"  ascii wide\n\t\t$FritzFrog_5 = \"hijacked\"  ascii wide\n\t\t$FritzFrog_6 = \"RemoteAddr\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($FritzFrog*)\n}\n\n\nrule Uptycs_Orbit \n{\n\tmeta:\n\t\tmalware_name = \"Orbit\"\n\t\tdescription = \"Orbit malware infects all the running processes that are running on the victim machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Orbit_0 = \"/lib/libntpVnQE6mk/.boot.sh\"  ascii wide\n\t\t$Orbit_1 = \"/lib/libntpVnQE6mk/.logpam\"  ascii wide\n\t\t$Orbit_2 = \"cp -p %s /dev/shm/ldx/.backup_ld.so\"  ascii wide\n\t\t$Orbit_3 = \"mv /lib/libntpVnQE6mk/libdl.so /dev/shm/ldx\"  ascii wide\n\t\t$Orbit_4 = \"/lib/libntpVnQE6mk/sshpass.txt\"  ascii wide\n\t\t$Orbit_5 = \"chown -R 920366:920366 /lib/libntpVnQE6mk/\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Orbit*)\n}\n\nrule Uptycs_Iodine \n{\n\tmeta:\n\t\tmalware_name = \"Iodine\"\n\t\tdescription = \"Iodine is a tool that lets users tunnel IPv4 data through a DNS server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Iodine_0 = \"tunnel\"  ascii wide\n\t\t$Iodine_1 = \"iodine\"  ascii wide\n\t\t$Iodine_2 = \"SERVFAIL\"  ascii wide\n\t\t$Iodine_3 = \"IODINE_PASS\"  ascii wide\n\t\t$Iodine_4 = \"write_tun\"  ascii wide\n\t\t$Iodine_5 = \"dns%d\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Iodine*)\n}\n\n\nrule Uptycs_Yamabot \n{\n\tmeta:\n\t\tmalware_name = \"Yamabot\"\n\t\tdescription = \"Yamabot steals sensitive info from the victim PC.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Yamabot_0 = \"CIpaddress\"  ascii wide\n\t\t$Yamabot_1 = \"kaos\"  ascii wide\n\t\t$Yamabot_2 = \"kandidatKaufhaus\"  ascii wide\n\t\t$Yamabot_3 = \"getSessionStr\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Yamabot*)\n}\n\n\nrule Uptycs_Backdoorit \n{\n\tmeta:\n\t\tmalware_name = \"Backdoorit\"\n\t\tdescription = \"Backdoorit is a multiplatform RAT written in Go programming language.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Backdoorit_0 = \"BackdoorEnvironment.go\"  ascii wide\n\t\t$Backdoorit_1 = \"backdoor\"  ascii wide\n\t\t$Backdoorit_2 = \"injected\"  ascii wide\n\t\t$Backdoorit_3 = \"backdoorIt\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoorit*)\n}\n\n\nrule Uptycs_RPCclient \n{\n\tmeta:\n\t\tmalware_name = \"RPCclient\"\n\t\tdescription = \"RPCclient is a utility initially developed to test MS-RPC functionality in Samba.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$RPCclient_0 = \"credentials_get_kerberos_state\"  ascii wide\n\t\t$RPCclient_1 = \"get_credentials\"  ascii wide\n\t\t$RPCclient_2 = \"conn_remote_name\"  ascii wide\n\t\t$RPCclient_3 = \"dump_data\"  ascii wide\n\t\t$RPCclient_4 = \"lookup_sids\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($RPCclient*)\n}\n\n\nrule Uptycs_Godropper \n{\n\tmeta:\n\t\tmalware_name = \"Godropper\"\n\t\tdescription = \"Godropper uses fileless techniques to drop malicious payloads.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Godropper_0 = \"guitmz/ezuri\"  ascii wide\n\t\t$Godropper_1 = \"/proc/self/fd/%d\"  ascii wide\n\t\t$Godropper_2 = \"main.aesDec\"  ascii wide\n\t\t$Godropper_3 = \"scan.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Godropper*)\n}\n\n\nrule Uptycs_Fscan \n{\n\tmeta:\n\t\tmalware_name = \"Fscan\"\n\t\tdescription = \"Fscan is an intranet scanning tool, which is convenient for one-click automation and all-round missed scanning.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Fscan_0 = \"fscan\"  ascii wide\n\t\t$Fscan_1 = \"WebScan\"  ascii wide\n\t\t$Fscan_2 = \"shadow1ng\"  ascii wide\n\t\t$Fscan_3 = \"Payload\"  ascii wide\n\t\t$Fscan_4 = \"exploit\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Fscan*)\n}\n\n\nrule Uptycs_LightningFramework \n{\n\tmeta:\n\t\tmalware_name = \"LightningFramework\"\n\t\tdescription = \"LightningFramework is a malicious framework containing other malicious components like sshhijacker,rootkit.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$LightningFramework_0 = \"Linux.Plugin.Lightning.Sshd\"  ascii wide\n\t\t$LightningFramework_1 = \"Linux.Plugin.Lightning.iftop\"  ascii wide\n\t\t$LightningFramework_2 = \"Linux.Plugin.Lightning.iptraf\"  ascii wide\n\t\t$LightningFramework_3 = \"Plugin.Lightning.SsHijacker\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($LightningFramework*)\n}\n\n\nrule Uptycs_LightningFramework_Core \n{\n\tmeta:\n\t\tmalware_name = \"LightningFramework\"\n\t\tdescription = \"LightningFramework is a malicious framework containing other malicious components like sshhijacker,rootkit.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$LightningFramework_0 = \"RootkieHideVersion\"  ascii wide\n\t\t$LightningFramework_1 = \"KernelHideVersion\"  ascii wide\n\t\t$LightningFramework_2 = \"Hide Ports Success\"  ascii wide\n\t\t$LightningFramework_3 = \"Hide Pids Success\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($LightningFramework*)\n}\n\n\nrule Uptycs_Ransomware_dark \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Linux_Ransomware_dark_0 = \"encrypt\"  ascii wide\n\t\t$Linux_Ransomware_dark_1 = \"decrypt\"  ascii wide\n\t\t$Linux_Ransomware_dark_2 = \".onion\"  ascii wide\n\t\t$Linux_Ransomware_dark_3 = \"HELLO dear Management of\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_Ransomware_dark*)\n}\n\nrule Uptycs_Flooderv4 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Flooder_0 = \"flood\"  ascii wide\n\t\t$Flooder_1 = \"setsockopt() - Cannot set HDRINCL\"  ascii wide\n\t\t$Flooder_2 = \"Usage: %s\"  ascii wide\n\t\t$Flooder_3 = \"rand_cmwc\"  ascii wide\n\t\t$Flooder_4 = \"init_rand\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder*)\n}\n\nrule Uptycs_RudeMiner \n{\n\tmeta:\n\t\tmalware_name = \"RudeMiner\"\n\t\tdescription = \"RudeMiner is a cryptominer which infects a device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$RudeMiner_0 = \"In China, it's hard to buy a suite\"  ascii wide\n\t\t$RudeMiner_1 = \"you can give me XmR\"  ascii wide\n\t\t$RudeMiner_2 = \"several organizations report my Trojan recently\"  ascii wide\n\t\t$RudeMiner_3 = \"stratum+tcp://\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($RudeMiner*)\n}\n\n\nrule Uptycs_Manjusaka_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Manjusaka\"\n\t\tdescription = \"Manjusaka is a post-exploitation attack framework.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Manjusaka_Linux_0 = \"attack\"  ascii wide\n\t\t$Manjusaka_Linux_1 = \"manjusaka\"  ascii wide\n\t\t$Manjusaka_Linux_2 = \"main.ClientRouter.func1\"  ascii wide\n\t\t$Manjusaka_Linux_3 = \"main.ClientRouter.func2\"  ascii wide\n\t\t$Manjusaka_Linux_4 = \"main.AgentRouter.func1\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Manjusaka_Linux*)\n}\n\n\nrule Uptycs_Infostealer_genericv1 \n{\n\tmeta:\n\t\tmalware_name = \"Infostealer\"\n\t\tdescription = \"Infostealers are malwares that can steal credentials from browsers, FTP clients, email clients etc from victim machines.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Infostealer_genericv1_0 = \"kooky.ReadCookies.func2\"  ascii wide\n\t\t$Infostealer_genericv1_1 = \"main.generateWebhooks\"  ascii wide\n\t\t$Infostealer_genericv1_2 = \"main.GenerateWebhook\"  ascii wide\n\t\t$Infostealer_genericv1_3 = \"Argos/analysis.Scan\"  ascii wide\n\t\t$Infostealer_genericv1_4 = \"main.unpackUrl\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Infostealer_genericv1*)\n}\n\n\nrule Uptycs_Gafgyt_Momentum \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_Momentum_0 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\"  ascii wide\n\t\t$Gafgyt_Momentum_1 = \"UCVAJFME\"  ascii wide\n\t\t$Gafgyt_Momentum_2 = \"GZG\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Momentum*)\n}\n\n\nrule Uptycs_RapperBot \n{\n\tmeta:\n\t\tmalware_name = \"RapperBot\"\n\t\tdescription = \"RapperBot exclusively scans and attempts to brute force SSH servers configured to accept password authentication.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$RapperBot_0 = \"follow me on instant gram @2tallforfood\"  ascii wide\n\t\t$RapperBot_1 = \"SSH-2.0-HELLOWORLD\"  ascii wide\n\t\t$RapperBot_2 = \"Fuck Bosco\"  ascii wide\n\t\t$RapperBott_0 = \"SSH-2.0-HELLOWORLD\"  ascii wide\n\t\t$RapperBott_1 = \"tiz1an75869wpdr4f0tsqmkxhv3bgyuecljt2o\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($RapperBot*) or all of ($RapperBott*)\n}\n\n\nrule Uptycs_Gwisinlocker \n{\n\tmeta:\n\t\tmalware_name = \"Gwisinlocker\"\n\t\tdescription = \"Gwisinlocker ransomware family targets Linux-based systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gwisinlocker_0 = \"Once again failing to protect very sensitive data and communications of your customers.\"  ascii wide\n\t\t$Gwisinlocker_1 = \"Delete all sensitive data we have exfiltrated, instead of selling it\"  ascii wide\n\t\t$Gwisinlocker_2 = \"GWISIN\"  ascii wide\n\t\t$Gwisinlocker_3 = \"We have exfiltrated a lot of sensitive data from your networks\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gwisinlocker*)\n}\n\n\nrule Uptycs_Rootkit_prochider \n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"Rootkit is a type of malware which is used by threat actors to hide process and network connections.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Rootkit_prochider_0 = \"processhider.c\"  ascii wide\n\t\t$Rootkit_prochider_1 = \"filterProcess\"  ascii wide\n\t\t$Rootkit_prochider_2 = \"getDirectoryName\"  ascii wide\n\t\t$Rootkit_prochider_3 = \"/proc/self/fd/%d\"  ascii wide\n\t\t$Rootkit_prochider_4 = \"readdirOriginal\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Rootkit_prochider*)\n}\n\n\nrule Uptycs_BlueShell \n{\n\tmeta:\n\t\tmalware_name = \"BlueShell\"\n\t\tdescription = \"BlueShell is a continuous remote control tool written in Go language.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$BlueShell_0 = \"BlueShell/client.go\"  ascii wide\n\t\t$BlueShell_1 = \"BlueShell/shell.DownloadFile\"  ascii wide\n\t\t$BlueShell_2 = \"BlueShell/shell.GetInteractiveShell\"  ascii wide\n\t\t$BlueShell_3 = \"BlueShell/shell.UploadFile\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($BlueShell*)\n}\n\nrule Uptycs_Mirai_drvhelper \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_drvhelper_0 = \"mirai\"  ascii wide\n\t\t$Mirai_drvhelper_1 = \"dvrHelper\"  ascii wide\n\t\t$Mirai_drvhelper_2 = \"/bin/busybox ECCHI\"  ascii wide\n\t\t$Mirai_drvhelper_3 = \"/bin/busybox kill -9 %d\"  ascii wide\n\t\t$Mirai_drvhelper_4 = \"rm -rf dvrHelper upnp\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_drvhelper*)\n}\n\n\nrule Uptycs_XorDDOS_chaos \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"544643e3831dbfee90905b0209e1849f\"\n\n\n\tstrings:\n\t\t$XorDDOS_chaos_0 = \"COMMAND_DDOS_GET\"  ascii wide\n\t\t$XorDDOS_chaos_1 = \"CHAOS\"  ascii wide\n\t\t$XorDDOS_chaos_2 = \"/dev/shm/sem\"  ascii wide\n\t\t$XorDDOS_chaos_3 = \"Fuck your ass\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOS_chaos*)\n}\n\nrule Uptycs_Keylogger_logkeys \n{\n\tmeta:\n\t\tmalware_name = \"Keylogger\"\n\t\tdescription = \"Keylogger is a software that is used to monitor and record the keystrokes entered by the user.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"26520c0b64d472aa659f0661c0d6e760\"\n\n\n\tstrings:\n\t\t$Keylogger_logkeys_0 = \"start_remote_upload\"  ascii wide\n\t\t$Keylogger_logkeys_1 = \"src/logkeys.cc\"  ascii wide\n\t\t$Keylogger_logkeys_2 = \"/var/run/logkeys.pid\"  ascii wide\n\t\t$Keylogger_logkeys_3 = \"is_char_key\"  ascii wide\n\t\t$Keylogger_logkeys_4 = \"kill_existing_process\"  ascii wide\n\t\t$Keylogger_logkeys_5 = \"determine_input_device\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Keylogger_logkeys*)\n}\n\nrule Uptycs_DNScatv2 \n{\n\tmeta:\n\t\tmalware_name = \"DNScat\"\n\t\tdescription = \"DNScat is designed to create an encrypted command-and-control (C&C) channel over the DNS protocol.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"db398de45c7d6f3285de6c3a9c775095\"\n\n\n\tstrings:\n\t\t$DNScatv2_0 = \"The dnscat2 client couldn't connect to the remote host\"  ascii wide\n\t\t$DNScatv2_1 = \"[Tunnel %d]\"  ascii wide\n\t\t$DNScatv2_2 = \"Usage: %s [args] [domain]\"  ascii wide\n\t\t$DNScatv2_3 = \"It looks like you're running dnscat2 with the system DNS server\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($DNScatv2*)\n}\n\nrule Uptycs_WStunnel \n{\n\tmeta:\n\t\tmalware_name = \"WStunnel\"\n\t\tdescription = \"Wstunnel establishes a TCP socket tunnel over a web socket connection, for circumventing strict firewalls.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"00f26564b1821616fe146fc4b023e2d8\"\n\n\n\tstrings:\n\t\t$WStunnel_0 = \"main.lookupWhois\"  ascii wide\n\t\t$WStunnel_1 = \"rightscale/wstunnel/tunnel\"  ascii wide\n\t\t$WStunnel_2 = \"wstunnel/tunnel.payloadPrefixHandler\"  ascii wide\n\t\t$WStunnel_3 = \"RemoteAddr\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($WStunnel*)\n}\n\n\nrule Uptycs_Flooderv5 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"58fdd928f0ae1c23722a8f76b88ae468\"\n\n\n\tstrings:\n\t\t$Flooderv5_0 = \"[x] Error msg:\"  ascii wide\n\t\t$Flooderv5_1 = \"[x] Cannot set socket options: %i (are we r00t?)\"  ascii wide\n\t\t$Flooderv5_2 = \"[x] Error sending packet\"  ascii wide\n\t\t$Flooderv5_3 = \"[*] Start...ACK By.DDoS\"  ascii wide\n\t\t$Flooderv5_4 = \"Usage: %s <destip> <destport> <time sec>\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooderv5*)\n}\n\n\nrule Uptycs_Flooderv6 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9b02ff9673753cce4733e462f404be00\"\n\n\n\tstrings:\n\t\t$Flooderv6_0 = \"[92mOVH ATTACK EDIT BY MORGAN 2018\"  ascii wide\n\t\t$Flooderv6_1 = \"Usage: %s [IP] [PORT] [THREADS] [SIZE] [TIME]\"  ascii wide\n\t\t$Flooderv6_2 = \"Flooding IP: %s | PORT: %d  | BY MORGAN\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooderv6*)\n}\nrule Uptycs_Responder \n{\n\tmeta:\n\t\tmalware_name = \"Responder\"\n\t\tdescription = \"Responder is a LLMNR, NBT-NS and MDNS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Responder_0 = \"serve_NBTNS_poisoner\"  ascii wide\n\t\t$Responder_1 = \"serve_thread_udp_broadcast\"  ascii wide\n\t\t$Responder_2 = \"serve_LLMNR_poisoner\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Responder*)\n}\n\n\nrule Uptycs_Gafgyt_Teamspeak \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"beb7fe0a39f016fb54376a69af3ebbeb\"\n\n\n\tstrings:\n\t\t$Gafgyt_NKIG_0 = \"UCVAJFME\"  ascii wide\n\t\t$Gafgyt_NKIG_1 = \"QGVaMMIKG\"  ascii wide\n\t\t$Gafgyt_NKIG_2 = \"PGDPGQJ\"  ascii wide\n\t\t$Gafgyt_NKIG_3 = \"NMACVKML\"  ascii wide\n\t\t$Gafgyt_NKIG_4 = \"AMMIKG\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_NKIG*)\n}\n\nrule Uptycs_ReverseShell_V1 \n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c1e48c9d71cb7518366530c415f30718\"\n\n\n\tstrings:\n\t\t$Reverseshell_0 = \"/home/compilepeace/SHELLCODING_INTEL\"  ascii wide\n\t\t$Reverseshell_1 = \"reverse_shell.s\"  ascii wide\n\t\t$Reverseshell_2 = \"cc4i2iYJ\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Reverseshell*)\n}\n\n\nrule Uptycs_Traitor \n{\n\tmeta:\n\t\tmalware_name = \"Traitor\"\n\t\tdescription = \"Traitor packages up a bunch of methods to exploit local misconfigurations and vulnerabilities in order to pop a root shell.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1ae91a54322b39219e634c6779fad1df\"\n\n\n\tstrings:\n\t\t$Traitor_0 = \"liamg/traitor\"  ascii wide\n\t\t$Traitor_1 = \"acquireSudog\"  ascii wide\n\t\t$Traitor_2 = \"freezetheworld\"  ascii wide\n\t\t$Traitor_3 = \"This program can only be run on processors with MMX support\"  ascii wide\n\t\t$Traitor_4 = \"liamg/tml\"  ascii wide\n\t\t$Traitor_5 = \"backdoor\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Traitor*)\n}\n\nrule Uptycs_Merlin \n{\n\tmeta:\n\t\tmalware_name = \"Merlin\"\n\t\tdescription = \"Merlin is a cross-platform post-exploitation Command & Control server and agent written in Go.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7c2438d59a1c26dbdf5903c17c681663\"\n\n\n\tstrings:\n\t\t$Merlin_0 = \"github.com/Ne0nd0g/merlin/\"  ascii wide\n\t\t$Merlin_1 = \"shellcode.go\"  ascii wide\n\t\t$Merlin_2 = \"shell_linux.go\"  ascii wide\n\t\t$Merlin_3 = \"merlin/pkg/agent/commands/execute.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Merlin*)\n}\n\n\nrule Uptycs_Blackcat_Linuxv2 \n{\n\tmeta:\n\t\tmalware_name = \"Blackcat Ransomware\"\n\t\tdescription = \"Blackcat ransomware also known as ALPHV targets ESXi servers to encrypt sensitive PC data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a45b51d65c12e10b318d870bf326540d\"\n\n\n\tstrings:\n\t\t$Blackcat_Linuxv2_0 = \"vm_snapshot_killenable_esxi_vm_saper\"  ascii wide\n\t\t$Blackcat_Linuxv2_1 = \"esxi_vm_kill_exciscovery\"  ascii wide\n\t\t$Blackcat_Linuxv2_2 = \"volumesKilling\"  ascii wide\n\t\t$Blackcat_Linuxv2_3 = \"VMSencrypt\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Blackcat_Linuxv2*)\n}\nrule Uptycs_kaiji_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Kaiji\"\n\t\tdescription = \"Kaiji is a malware that spreads by finding exposed SSH ports on Linux servers and IoT devices on the internet and tries to get root access with a brute-force attack.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e3050cc4c89c34ddcae8897cfb665dbc\"\n\n\n\tstrings:\n\t\t$kaiji_v3_0 = \"main.chaos_ssh_attack\"  ascii wide\n\t\t$kaiji_v3_1 = \"main.chaos_tcp_send\"  ascii wide\n\t\t$kaiji_v3_2 = \"main.chaos_cve_run\"  ascii wide\n\t\t$kaiji_v3_3 = \"main.chaos_cve_list\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($kaiji_v3*)\n}\n\nrule Uptycs_Sidewalk \n{\n\tmeta:\n\t\tmalware_name = \"Sidewalk\"\n\t\tdescription = \"Sidewalk is a trojan which targets linux based operating systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8309ef02bec30b1e69815b5134ee1f43\"\n\n\n\tstrings:\n\t\t$Sidewalk_0 = \"StageClient20ISetNetworkStatusNap\"  ascii wide\n\t\t$Sidewalk_1 = \"StageClient20ThreadNetworkReverse\"  ascii wide\n\t\t$Sidewalk_2 = \"StageClient19ThreadBizMsgHandler\"  ascii wide\n\t\t$Sidewalk_3 = \"StageClient19ThreadPollingDriven\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Sidewalk*)\n}\n\nrule Uptycs_Fscan_v1\n{\n\tmeta:\n\t\tmalware_name = \"Fscan\"\n\t\tdescription = \"Fscan is an intranet scanning tool, which is convenient for one-click automation and all-round missed scanning.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tMd5 = \"ace5f100df7691b56ea97b934f4a076b\"\n\n\n\tstrings:\n        $string_1 = \"github.com/shadow1ng/fscan/Plugins\" ascii wide\n        $string_2 = \"github.com/shadow1ng/fscan/WebScan\" ascii wide\n        $string_3 = \"fscan version:\" ascii wide\n        $string_4 = \"github.com/shadow1ng/fscan/Plugins\" ascii wide\n\t\t\n\n\tcondition:\n\t\tall of them\n}\n\nrule Uptycs_Flooder_go \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Flooder_go_0 = \"main.flood\"  ascii wide\n\t\t$Flooder_go_1 = \"main.flood.func1\"  ascii wide\n\t\t$Flooder_go_2 = \"main.flood.func2\"  ascii wide\n\t\t$Flooder_go_3 = \"httpflood.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_go*)\n}\n\nrule Uptycs_Sneak \n{\n\tmeta:\n\t\tmalware_name = \"Sneak\"\n\t\tdescription = \"Sneak can be dropped in a cloud environment to leak and exfiltrate sensitive data from the instance metadata service.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Sneak_0 = \"main.cloudMeta\"  ascii wide\n\t\t$Sneak_1 = \"main.webhook\"  ascii wide\n\t\t$Sneak_2 = \"ex0dus-0x/sneak.Container\"  ascii wide\n\t\t$Sneak_3 = \"ex0dus-0x/sneak.VirtMachine\"  ascii wide\n\t\t$Sneak_4 = \"ex0dus-0x/sneak.(*CloudSsrf).Exploit\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Sneak*)\n}\n\nrule Uptycs_Tsunami_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Tsunami_v3_0 = \"NOTICE %s :SERVER <server>\"  ascii wide\n\t\t$Tsunami_v3_1 = \"NOTICE %s :GETSPOOFS\"  ascii wide\n\t\t$Tsunami_v3_2 = \"NOTICE %s :SPOOFS <subnet>\"  ascii wide\n\t\t$Tsunami_v3_3 = \"NOTICE %s :NICK <nick>\"  ascii wide\n\t\t$Tsunami_v3_4 = \"Killing\"  ascii wide\n\t\t$Tsunami_v3_5 = \"NOTICE %s :PAN <target> <port> <secs>\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Tsunami_v3*)\n}\n\nrule Uptycs_kaiji_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Kaiji\"\n\t\tdescription = \"Kaiji is a malware that spreads by finding exposed SSH ports on Linux servers and IoT devices on the internet and tries to get root access with a brute-force attack.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$kaiji_v4_0 = \"main.Yeskit\"  ascii wide\n\t\t$kaiji_v4_1 = \"main.Yeskit.func1\"  ascii wide\n\t\t$kaiji_v4_2 = \"main.chaos_ssh_attack\"  ascii wide\n\t\t$kaiji_v4_3 = \"main.chaos_sshread_history\"  ascii wide\n\t\t$kaiji_v4_4 = \"main.chaos_cve\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($kaiji_v4*)\n}\n\nrule Uptycs_Gafgyt_genv1 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Gafgyt_genv1_0 = \"stdflood\"  ascii wide\n\t\t$Gafgyt_genv1_1 = \"udpflood\"  ascii wide\n\t\t$Gafgyt_genv1_2 = \"tcpflood\"  ascii wide\n\t\t$Gafgyt_genv1_3 = \"httpflood\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_genv1*)\n}\n\nrule Uptycs_Ransomware_genericv1 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Ransomware_genericv1_0 = \"Your files have been encrypted.\"  ascii wide\n\t\t$Ransomware_genericv1_1 = \"data leak\"  ascii wide\n\t\t$Ransomware_genericv1_2 = \"/vmfs/volumes\"  ascii wide\n\t\t$Ransomware_genericv1_3 = \"torproject\"  ascii wide\n\t\t$Ransomware_genericv1_4 = \"Tor Browser\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_genericv1*)\n}\n\nrule Uptycs_FontOnLake \n{\n\tmeta:\n\t\tmalware_name = \"Fontonlake\"\n\t\tdescription = \"Fontonlake malware provides remote access to the operators, collect credentials, and serve as a proxy server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$FontOnLake_0 = \"h2_record_key\"  ascii wide\n\t\t$FontOnLake_1 = \"inject.so\"  ascii wide\n\t\t$FontOnLake_2 = \"%lld.%1lld%c\"  ascii wide\n\t\t$FontOnLake_3 = \"x11_request_forwarding_with_spoofing\"  ascii wide\n\t\t$FontOnLake_4 = \"x11_create_display_inet\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($FontOnLake*)\n}\n\n\nrule Uptycs_Mirai_Strip\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Mirai_d_0 = {C1 FE 02 EB 08}\t\t//sar esi,2; jmp short\n\t\t$Mirai_d_1 = {83 38 00 8D 40 04 75 F8}\t//cmp dword ptr[eax]; lea eax,[eax+4]; jnz short\n\t\t$Mirai_d_2 = {C1 E9 02 F3 A5}\t\t// shr ecx,2; rep movsd\n\t\t\n\tcondition:\n\t\tall of ($Mirai_d*)\n}\n\n\nrule Uptycs_CVE202226134 \n{\n\tmeta:\n\t\tmalware_name = \"CVE202226134\"\n\t\tdescription = \"CVE202226134 is an unauthenticated remote code execution vulnerability in Confluence Server and Data Center.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$CVE202226134_0 = \"/var/www/html/a.go\"  ascii wide\n\t\t$CVE202226134_1 = \"gc%d(%d): %D+%D+%D ms, %D -> %D MB %D -> %D (%D-%D) objects, %D(%D) handoff, %D(%D) steal, %D/%D/%D yields\"  ascii wide\n\t\t$CVE202226134_2 = \"main.gclocals\"  ascii wide\n\t\t$CVE202226134_3 = \"main.gcargs\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($CVE202226134*)\n}\n\nrule Uptycs_Mirai_Sonia \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4b54860c7a08f94d335d86c68377c8c3\"\n\n\n\tstrings:\n\t\t$Mirai_Sonia_0 = \"PMMV\"  ascii wide\n\t\t$Mirai_Sonia_1 = \"VVLGV\"  ascii wide\n\t\t$Mirai_Sonia_2 = \"JKITKQKML\"  ascii wide\n\t\t$Mirai_Sonia_3 = \"AJKL\"  ascii wide\n\t\t$Mirai_Sonia_4 = \"KACVAJ\"  ascii wide\n\t\t$Mirai_Sonia_5 = \"GJMOG\"  ascii wide\n\t\t$Mirai_Sonia_6 = \"VGNLGV\"  ascii wide\n\t\t$Mirai_Sonia_7 = \"ZOJFKRA\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Sonia*)\n}\n\n\nrule Uptycs_Evilginx2 \n{\n\tmeta:\n\t\tmalware_name = \"Evilginx2\"\n\t\tdescription = \"evilginx2 is a man-in-the-middle attack framework used for phishing login credentials along with session cookies, which in turn allows to bypass 2-factor authentication protection.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"048a558c7e08ddbe75731611de071238\"\n\n\tstrings:\n\t\t$Evilginx2_0 = \".evilginx\"  ascii wide\n\t\t$Evilginx2_1 = \"/usr/share/evilginx/\"  ascii wide\n\t\t$Evilginx2_2 = \"data.dbdefault\"  ascii wide\n\t\t$Evilginx2_3 = \"blacklist.txt\"  ascii wide\n\t\t$Evilginx2_4 = \"phishlets\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Evilginx2*)\n}\n\n\nrule Uptycs_Zgrab_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Zgrab\"\n\t\tdescription = \"Zgrab is a fast application-layer network scanner designed for completing large Internet-wide surveys.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b0b11d8ade6da7565e8fe7e6b61d27db\"\n\n\tstrings:\n\t\t$Zgrab_v2_0 = \"github.com/zmap/zgrab\"  ascii wide\n\t\t$Zgrab_v2_1 = \"ztools\"  ascii wide\n\t\t$Zgrab_v2_2 = \"grabTarget\"  ascii wide\n\t\t$Zgrab_v2_3 = \"ClientAuth\"  ascii wide\n\t\t$Zgrab_v2_4 = \"AppVersion\"  ascii wide\n\t\t$Zgrab_v2_5 = \"ClientHello\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Zgrab_v2*)\n}\n\n\nrule Uptycs_Ezuri_Crypter \n{\n\tmeta:\n\t\tmalware_name = \"Ezuri\"\n\t\tdescription = \"Ezuri is a Simple Linux ELF Runtime Crypter.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Ezuri_0 = \"ezuri/stub/main.go\"  ascii wide\n\t\t$Ezuri_1 = \"main.aesDec\"  ascii wide\n\t\t$Ezuri_2 = \"main.runFromMemory\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ezuri*)\n}\n\n\nrule Uptycs_Chisel \n{\n\tmeta:\n\t\tmalware_name = \"Chisel\"\n\t\tdescription = \"Chisel is a fast TCP/UDP tunnel, transported over HTTP, secured via SSH.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7d2547f4be36361a9db8ea186ed95227\"\n\n\tstrings:\n\t\t$Chisel_0 = \"github.com/jpillora/chisel\"  ascii wide\n\t\t$Chisel_1 = \"tunnel.Tunnel\"  ascii wide\n\t\t$Chisel_2 = \"tunnel.sshTunnel\"  ascii wide\n\t\t$Chisel_3 = \"tunnel..inittask\"  ascii wide\n\t\t$Chisel_4 = \"main.generatePidFile\"  ascii wide\n\t\t$Chisel_5 = \"main.server\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Chisel*)\n}\n\n\nrule Uptycs_Platypus \n{\n\tmeta:\n\t\tmalware_name = \"Platypus\"\n\t\tdescription = \"A modern multiple reverse shell sessions/clients manager via terminal written in go\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e14d2c2d6b53f31e9e8514ff6df45138\"\n\n\tstrings:\n\t\t$Platypus_0 = \"github.com/WangYihang/Platypus\"  ascii wide\n\t\t$Platypus_1 = \"github.com/WangYihang/readline\"  ascii wide\n\t\t$Platypus_2 = \"update..inittask\"  ascii wide\n\t\t$Platypus_3 = \"ui..inittask\"  ascii wide\n\t\t$Platypus_4 = \"raas..inittask\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Platypus*)\n}\n\n\nrule Uptycs_Tsunami_IRC\n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1a1f8aa818d05f982a8b0e9ce8fe6a72\"\n\n\tstrings:\n\t\t$Tsunami_IRC_0 = \"RAWUDP\"  ascii wide\n\t\t$Tsunami_IRC_1 = \"IRC\"  ascii wide\n\t\t$Tsunami_IRC_2 = \"PRIVMSG\"  ascii wide\n\t\t$Tsunami_IRC_3 = \"PING\"  ascii wide\n\t\t$Tsunami_IRC_4 = \"NICK\"  ascii wide\n\t\t$Tsunami_IRC_5 = \"vseattack\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Tsunami_IRC*)\n}\n\n\nrule Uptycs_Pywerview \n{\n\tmeta:\n\t\tmalware_name = \"Pywerview\"\n\t\tdescription = \"Pywerview provides a list of domain users which were added to the local administrators group of a machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$Pywerview_0 = \"get-netdomaincontroller\"  ascii wide\n\t\t$Pywerview_1 = \"find-gpocomputeradmin\"  ascii wide\n\t\t$Pywerview_2 = \"get-adserviceaccount\"  ascii wide\n\t\t$Pywerview_3 = \"get-dfsshare\"  ascii wide\n\t\t$Pywerview_4 = \"pywerview\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Pywerview*)\n}\n\n\nrule Uptycs_frp_client_and_server\n{\n\tmeta:\n\t\tmalware_name = \"FRP\"\n\t\tdescription = \"frp is a fast reverse proxy that helps expose a machine behind a NAT or firewall to the Internet.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ec632040deb431a8c0fdd2e71ff8f331\"\n\n\tstrings:\n\t\t$frps_0 = \"cookiecreiss\"  ascii wide\n\t\t$frps_1 = \"cryptodajnko\"  ascii wide\n\t\t$frps_2 = \"frenchgascon\"  ascii wide\n\t\t$frps_3 = \"gophergrital\"  ascii wide\n\t\t$frps_4 = \"alphaaluku\"  ascii wide\n\n\tcondition:\n\t\tall of ($frps*)\n}\n\n\nrule Uptycs_Alchimist_C2\n{\n\tmeta:\n\t\tmalware_name = \"Alchimist\"\n\t\tdescription = \"A single-file C2 framework that includes a beacon called Insekt RAT.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d94453c5ead661c4a46ef9095c4476d0\"\n\n\tstrings:\n\t\t$Alchimist_C2_0 = \"0.0.0.0:8443\"  ascii wide\n\t\t$Alchimist_C2_1 = \"start alchimist err:star\"  ascii wide\n\t\t$Alchimist_C2_2 = \"TMPDIRTRADE\"  ascii wide\n\t\t$Alchimist_C2_3 = \"Uploads\"  ascii wide\n\t\t$Alchimist_C2_4 = \".local.onion\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Alchimist_C2*)\n}\n\n\nrule Uptycs_Insekt\n{\n\tmeta:\n\t\tmalware_name = \"Insekt\"\n\t\tdescription = \"Insekt RAT is the beacon and RAT found as part of the Alchimist campaign.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"04342be193caa1fc2f572c0dcf3bc637\"\n\n\tstrings:\n\t\t$Insekt_0 = \"${DEAMON}\"  ascii wide\n\t\t$Insekt_1 = \"${ssh_key}\"  ascii wide\n\t\t$Insekt_2 = \"${add_ssh_key}\"  ascii wide\n\t\t$Insekt_3 = \"${show_ida_key}\"  ascii wide\n\t\t$Insekt_4 = \"rshc.QuickConnectShell\"  ascii wide\n\t\t$Insekt_5 = \"connect.ConnReverseListener\"  ascii wide\n\t\t$Insekt_6 = \"connect.NewReverseChannle\"  ascii wide\n\t\t$Insekt_7 = \"rshc.RawExec\"  ascii wide\n\t\t$Insekt_8 = \"rshc.PipeToShell\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Insekt*)\n}\n\n\nrule Uptycs_gohtran\n{\n\tmeta:\n\t\tmalware_name = \"gohtran\"\n\t\tdescription = \"gohtran is a connection bouncer, proxy that forwards connections from victims to the attacker.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"19e373b13297de1783cecf856dc48eb0\"\n\n\tstrings:\n\t\t$gohtran_0 = \"main.handleClientRequest\"  ascii wide\n\t\t$gohtran_1 = \"toAddr\"  ascii wide\n\t\t$gohtran_2 = \"%d.%d.%d.%d:%d\"  ascii wide\n\t\t$gohtran_3 = \"main.slave\"  ascii wide\n\t\t$gohtran_4 = \"sockIP\"  ascii wide\n        $gohtran_5 = \"gohtran/client.go\" ascii wide\n\n\n\tcondition:\n\t\tall of ($gohtran*)\n}\n\n\nrule Uptycs_CobaltStrike_Geacon \n{\n    meta:\n        malware_name = \"Cobalt Strike\"\n        description = \"Cobalt strike is used to generate custom payloads which are used by adversaries.\"\n        author = \"Uptycs Inc\"\n        version = \"1\"\n        md5 = \"f5434354cba2a3e9933991b188e8a3c8\"\n\n    strings:\n        $CobaltStrike_Geacon_0 = \"packet.Shell\"  ascii wide\n        $CobaltStrike_Geacon_1 = \"packet.Upload\"  ascii wide\n        $CobaltStrike_Geacon_2 = \"packet.HttpGet\"  ascii wide\n        $CobaltStrike_Geacon_3 = \"packet.MakeMetaInfo\"  ascii wide\n        $CobaltStrike_Geacon_4 = \"packet.MakePacket\"  ascii wide\n        $CobaltStrike_Geacon_5 = \"packet.ParsePacket\"  ascii wide\n\n\n    condition:\n        all of ($CobaltStrike_Geacon*)\n}\n\n\n\nrule Uptycs_Linux_flooderv4\n{\n    meta:\n        malware_name = \"Flooder\"\n        description = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n        author = \"Uptycs Inc\"\n        version = \"1\"\n        md5 = \"fe0132b16a3b75b808f19fbcd8b9ede7\"\n\n\n    strings:\n        $Linux_flooderv4_0 = \"HDRINCL\"  ascii wide\n        $Linux_flooderv4_1 = \"target IP\"  ascii wide\n        $Linux_flooderv4_2 = \"port\"  ascii wide\n        $Linux_flooderv4_3 = \"Starting Flood...\"  ascii wide\n\n\n    condition:\n        all of ($Linux_flooderv4*)\n}\n\nrule Uptycs_DDosClient \n{\n\tmeta:\n\t\tmalware_name = \"DDosClient\"\n\t\tdescription = \"DDosClient is a DDOS client that has been used by ChinaZ APT group.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1238d28a22a90bcd88639f58e86620b8\"\n\n\tstrings:\n\t\t$DDosClient_0 = \"RunByPM\"  ascii wide\n\t\t$DDosClient_1 = \"DDosClient\"  ascii wide\n\t\t$DDosClient_2 = \"ICMP_Flood\"  ascii wide\n\t\t$DDosClient_3 = \"SYN_Flood\"  ascii wide\n\t\t$DDosClient_4 = \"UDP_Flood\"  ascii wide\n\t\t$DDosClient_5 = \"DNS_Flood\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($DDosClient*)\n}\n\n\nrule Uptycs_Gafgyt_apt \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"953a349559f5ddf5093a25a92e7315a0\"\n\n\tstrings:\n\t\t$Gafgyt_apt_0 = \"Unknown Port\"  ascii wide\n\t\t$Gafgyt_apt_1 = \"ALPHA\"  ascii wide\n\t\t$Gafgyt_apt_2 = \"GAME\"  ascii wide\n\t\t$Gafgyt_apt_3 = \"SPEC2\"  ascii wide\n\t\t$Gafgyt_apt_4 = \"ICMP\"  ascii wide\n\t\t$Gafgyt_apt_5 = \"KICK\"  ascii wide\n\t\t$Gafgyt_apt_6 = \"Device Connected:\"  ascii wide\n\t\t$Gafgyt_apt_7 = \"PATCH /%s HTTP/1.1\"  ascii wide\n\t\t$Gafgyt_apt_8 = \"PGET\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_apt*)\n}\n\nrule Uptycs_Space_botnet \n{\n\tmeta:\n\t\tmalware_name = \"Space\"\n\t\tdescription = \"Space is a DDoS client that targets Linux machines, ZTE and Huawei routers in particular.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d43a396b2b4b12ae81bb80b8fb2441ba\"\n\n\tstrings:\n\t\t$Space_botnet_0 = \"BOTINFO\"  ascii wide\n\t\t$Space_botnet_1 = \"[HONEY POT]\"  ascii wide\n\t\t$Space_botnet_2 = \"[KILLER]\"  ascii wide\n\t\t$Space_botnet_3 = \"bot/lib/attack.NewAttack\"  ascii wide\n\t\t$Space_botnet_4 = \"bot/lib/network.GetBot\"  ascii wide\n\t\t$Space_botnet_5 = \"bot/lib/network.CncSocket\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Space_botnet*)\n}\n\nrule Uptycs_Evilginx2_Robinbanks\n{\n\tmeta:\n\t\tmalware_name = \"Evilginx2\"\n\t\tdescription = \"evilginx2 is a man-in-the-middle attack framework used for phishing login credentials along with session cookies, which in turn allows to bypass 2-factor authentication protection.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4c922384f1fe21468d80146feb4967db\"\n\n\tstrings:\n\t\t$Evilginx2_Robinbanks_0 = \"evilginx2\"  ascii wide\n\t\t$Evilginx2_Robinbanks_1 = \"/usr/share/robinbanks/\"  ascii wide\n\t\t$Evilginx2_Robinbanks_2 = \"data.dbdefault\"  ascii wide\n\t\t$Evilginx2_Robinbanks_3 = \"blacklist.txt\"  ascii wide\n\t\t$Evilginx2_Robinbanks_4 = \"phishlets\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Evilginx2_Robinbanks*)\n}\n\nrule Uptycs_Merlin_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Merlin\"\n\t\tdescription = \"Merlin is a cross-platform post-exploitation Command & Control server and agent written in Go.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2ec8821e45f9de163a962689a5a6d89c\"\n\n\tstrings:\n\t\t$Merlin_v2_0 = \"github.com/Ne0nd0g/merlin-agent\"  ascii wide\n\t\t$Merlin_v2_1 = \"github.com/Ne0nd0g/merlin\"  ascii wide\n\t\t$Merlin_v2_2 = \"Hash\"  ascii wide\n\t\t$Merlin_v2_3 = \"IsDownload\"  ascii wide\n\t\t$Merlin_v2_4 = \"os.Getuid\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Merlin_v2*)\n}\n\n\nrule Uptycs_Venom_proxy \n{\n\tmeta:\n\t\tmalware_name = \"VenomProxy\"\n\t\tdescription = \"VenomProxy is a multi-hop proxy made for penetration testers using Golang.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f6e1717a5dd8b9dd9a30f54bbd940e83\"\n\n\tstrings:\n\t\t$Venom_proxy_0 = \"github.com/Dliv3/Venom/agent/\"  ascii wide\n\t\t$Venom_proxy_1 = \"dispather.handleShellCmd\"  ascii wide\n\t\t$Venom_proxy_2 = \"dispather.handleUploadCmd\"  ascii wide\n\t\t$Venom_proxy_3 = \"dispather.handleDownloadCmd\"  ascii wide\n\t\t$Venom_proxy_4 = \"dispather.handleListenCmd\"  ascii wide\n\t\t$Venom_proxy_5 = \"dispather.handleSshConnectCmd\"  ascii wide\n\n\n\tcondition:\n\t\tall of them\n}\nrule Uptycs_BPFDoor\n{\n\tmeta:\n\t\tmalware_name = \"BPFDoor\"\n\t\tdescription = \"BPFDOOR is a Linux binary that creates a bind shell that listens to connections stealthily using BPF bytecode, thereby creating a backdoor.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"83023ecfc4836df0a25eec8826cbb80c\"\n\n\tstrings:\n\t\t$BPFDoor_0 = \"/sbin/udevd -d\"  ascii wide\n\t\t$BPFDoor_1 = \"/sbin/mingetty /dev/tty\"  ascii wide\n\t\t$BPFDoor_2 = \"/usr/sbin/console-kit-daemon --no-daemon\"  ascii wide\n\t\t$BPFDoor_3 = \"hald-addon-acpi: listening on acpi kernel interface /proc/acpi/event\"  ascii wide\n\t\t$BPFDoor_4 = \"dbus-daemon --system\"  ascii wide\n\t\t$BPFDoor_5 = \"hald-runner\"  ascii wide\n\t\t$BPFDoor_6 = \"pickup -l -t fifo -u\"  ascii wide\n\t\t$BPFDoor_7 = \"avahi-daemon: chroot helper\"  ascii wide\n\t\t$BPFDoor_8 = \"/sbin/auditd -n\"  ascii wide\n\t\t$BPFDoor_9 = \"/usr/lib/systemd/systemd-journald\"  ascii wide\n\t\t$BPFDoor_10 = \"/sbin/agetty --noclear tty1 linux\" ascii wide\n\t\t$BPFDoor_11 = \"/var/run/syslogd.reboot\" ascii wide\n\t\t$BPFDoor_12 = \"/usr/lib/systemd/systemd-machined\" ascii wide\n\n\t\t$op1 = { c6 80 01 01 00 00 00 48 8b 45 ?8 0f b6 90 01 01 00 00 48 8b 45 ?8 88 90 00 01 00 00 c6 45 }\n\t\t$op2 = { be 0? 00 00 00 b? ?? ?? ?0 00 e8 ?? ?? ff ff 85 c0 75 0a bf 00 00 00 00 e8 ?? ?? ff ff }\n\t\t$op3 = { be 0? 00 00 00 48 ?? ?? e8 ?? ?? ff ff 85 c0 75 0a bf 00 00 00 00 e8 24 bf ff ff }\n\n\tcondition:\n\t\tany of ($BPFDoor*) and 2 of ($op*)\n}\n\n\nrule Uptycs_KmsdBot_downloader\n{\n\tmeta:\n\t\tmalware_name = \"KmsdBot\"\n\t\tdescription = \"KmsdBot is a golang-based botnet that attacks machines using weak SSH credentials. It has cryptocurrency mining and DDoS capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"db90b8fd78d6609a1d0a6cadf4e4605c\"\n\n\tstrings:\n\t\t$KmsdBot_downloader_0 = \"main.scaner\"  ascii wide\n\t\t$KmsdBot_downloader_1 = \"main.newpassword\"  ascii wide\n\t\t$KmsdBot_downloader_2 = \"main.randomwallet\"  ascii wide\n\t\t$KmsdBot_downloader_3 = \"gosh/main.go\"  ascii wide\n\t\t$KmsdBot_downloader_4 = \"gosh/ssh.go\"  ascii wide\n\t\t$KmsdBot_downloader_5 = \"gosh/utils.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($KmsdBot_downloader*)\n}\n\n\nrule Uptycs_KmsdBot_client\n{\n\tmeta:\n\t\tmalware_name = \"KmsdBot\"\n\t\tdescription = \"KmsdBot is a golang-based botnet that attacks machines using weak SSH credentials. It has cryptocurrency mining and DDoS capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"597a88f6e9c65a8342ffd3c799bc1b14\"\n\n\tstrings:\n\t\t$KmsdBot_client_0 = \"main.stopmine\"  ascii wide\n\t\t$KmsdBot_client_1 = \"main.updateclient\"  ascii wide\n\t\t$KmsdBot_client_2 = \"main.scan\"  ascii wide\n\t\t$KmsdBot_client_3 = \"main.stopscan\"  ascii wide\n\t\t$KmsdBot_client_4 = \"main.updateminer\"  ascii wide\n\t\t$KmsdBot_client_5 = \"main.choosedifficultyport\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($KmsdBot_client*)\n}\n\nrule Uptycs_Mirai_Sofia\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5a367a3044403df2434b2f63b84666f4\"\n\n\tstrings:\n\t\t$Mirai_Sofia_0 = \"DL3T\"  ascii wide\n\t\t$Mirai_Sofia_1 = \"/var/Sofia\"  ascii wide\n\t\t$Mirai_Sofia_2 = \"shell\"  ascii wide\n\t\t$Mirai_Sofia_3 = \"/bin/busybox\"  ascii wide\n\t\t$Mirai_Sofia_4 = \"/proc/meminfo\"  ascii wide\n\t\t$Mirai_Sofia_5 = \"/proc/cpuinfo\"  ascii wide\n\t\t$Mirai_Sofia_6 = \"ncorrect\" ascii wide\n\t\t$FP_Mirai_Sofia = \"incorrect\" ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Sofia*) and not ($FP_Mirai_Sofia)\n}\n\nrule Uptycs_Mirai_Fortnite\n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7177893b2a44b8aa463998c9b97fa317\"\n\n\tstrings:\n\t\t$Mirai_Fortnite_0 = \"mirai\"  ascii wide\n\t\t$Mirai_Fortnite_1 = \"TheWeeknd\"  ascii wide\n\t\t$Mirai_Fortnite_2 = \"Wordnets\"  ascii wide\n\t\t$Mirai_Fortnite_3 = \"FortniteDownLOLZ\"  ascii wide\n\t\t$Mirai_Fortnite_4 = \"boatnetz\"  ascii wide\n\t\t$Mirai_Fortnite_5 = \"dvrhelper\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_Fortnite*)\n}\n\nrule Uptycs_Ransomware_Lockbit\n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0f7c10dfa562adf15f1f6078ecaee788\"\n\n\tstrings:\n\t\t$Ransomware_Lockbit_0 = \"[+] file %s decrypted.\"  ascii wide\n\t\t$Ransomware_Lockbit_1 = \"[-] file %s not decrypted.\"  ascii wide\n\t\t$Ransomware_Lockbit_2 = \"!!!-Restore-My-Files-!!!\"  ascii wide\n\t\t$Ransomware_Lockbit_3 = \"LockBit 3\"  ascii wide\n\t\t$Ransomware_Lockbit_4 = \"Start encrypting file\"  ascii wide\n\t\t$Ransomware_Lockbit_5 = \"lockbit\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Lockbit*)\n}\n\nrule Uptycs_ReverseShell_Bifrose\n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9d19404ce023281cfb5c0ebe8560be35\"\n\n\tstrings:\n\t\t$ReverseShell_Bifrose_0 = \"recvData timeout\"  ascii wide\n\t\t$ReverseShell_Bifrose_1 = \"send data\"  ascii wide\n\t\t$ReverseShell_Bifrose_2 = \"|unix|\"  ascii wide\n\t\t$ReverseShell_Bifrose_3 = \"x&5W2-`\"  ascii wide\n\t\t$ReverseShell_Bifrose_4 = \"<*^34r\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ReverseShell_Bifrose*)\n}\n\nrule Uptycs_RedGoBot\n{\n\tmeta:\n\t\tmalware_name = \"RedGoBot\"\n\t\tdescription = \"REDGOBOT is a golang-based botnet capable of various DDoS attacks, including HTTP POST and GET flooding, ICMP and TCP Flooding and others.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9a77b53f8111199eb7249766796d2690\"\n\n\tstrings:\n\t\t$RedGoBot_0 = \"/root/bot/main.go\"  ascii wide\n\t\t$RedGoBot_1 = \"main.writeLog\"  ascii wide\n\t\t$RedGoBot_2 = \"main.loadedAttacks\"  ascii wide\n\t\t$RedGoBot_3 = \"main.killDirectories\"  ascii wide\n\t\t$RedGoBot_4 = \"main.killerEnabled\"  ascii wide\n\t\t$RedGoBot_5 = \"/root/bot/attacks/utils.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of them\n}\nrule Uptycs_ChaosRAT\n{\n\tmeta:\n\t\tmalware_name = \"CHAOSRAT\"\n\t\tdescription = \"Chaos-RAT is a Remote Access Trojan written in Golang, that includes Reverse Shell, File Download/Upload, and Screenshot capabilities in Linux. It is also cross-platform.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"94803cf635cf08b96ea3de6b301563b5\"\n\n\tstrings:\n\t\t$ChaosRAT_0 = \"github.com/tiagorlampert/CHAOS/\"  ascii wide\n\t\t$ChaosRAT_1 = \"client/app/services/download.DownloadService\"  ascii wide\n\t\t$ChaosRAT_2 = \"client/app/entities.Device\"  ascii wide\n\t\t$ChaosRAT_3 = \"client/app/utilities/system.init\"  ascii wide\n\t\t$ChaosRAT_4 = \"client/app/utilities/network.GetLocalIP\"  ascii wide\n\t\t$ChaosRAT_5 = \"client/app/utilities/network.GetMacAddress\"  ascii wide\n\n\n\tcondition:\n\t\tall of them\n}\n\nrule Uptycs_Flooder_v6\n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ea34294c5ea3bbb7845f94e46833b305\"\n\n\tstrings:\n\t\t$Flooder_v6_0 = \"DDOS Code by kiff\"  ascii wide\n\t\t$Flooder_v6_1 = \"-=(x)www.netforcecorp.org(x)=-\"  ascii wide\n\t\t$Flooder_v6_2 = \"Kill tEh M0therfaka!!!\"  ascii wide\n\t\t$Flooder_v6_3 = \"Packeting %s, port %d spoofed as %s\"  ascii wide\n\t\t$Flooder_v6_4 = \"Unknown host : %s\"  ascii wide\n\t\t$Flooder_v6_5 = \"Usage : %s <target ip> <target port>\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_v6*)\n}\n\nrule Uptycs_Backdoor_WordpressEXploit \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7821144982b6c9564f4d2ca990b928b4\"\n\n\tstrings:\n\t        $Backdoor_WordpressEXploit_0 = \".gopclntab\"  ascii wide\n\t        // prefilter golang files \n\t\t$Backdoor_WordpressEXploit_1 = \"dieforme77\"  ascii wide\n\t\t$Backdoor_WordpressEXploit_2 = \"letmestop\"  ascii wide\n\t\t$Backdoor_WordpressEXploit_3 = \"wait\"  ascii wide\n\t\t// above three are CNC commands\n\t\t$Backdoor_WordpressEXploit_4 = \"if_submit=@bla@_wordpress_sec_amplit\"  ascii wide\n\t\t$Backdoor_WordpressEXploit_5 = \"passw0rdzzicon5151\"  ascii wide\n\t\t$Backdoor_WordpressEXploit_6 = \"wordpress_logged_in_amplit\"  ascii wide\n\t\t// wordpress exploiting variables\n\t\t\n\t\t\n\tcondition:\n\t\tall of ($Backdoor_WordpressEXploit*)\n}\n\nrule Uptycs_Backdoor_TorchTriton \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server. \"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"908596ffe11c30d1669431f3f4cb54f2\"\n\n\tstrings:\n\t\t$Backdoor_TorchTriton_0 = \"gIdk8tzrHLOM)mPY-R)QgG[;yRXYCZFU\"  ascii wide // AES Key\n\t\t$Backdoor_TorchTriton_1 = \"?BVsNqL]S.Ni\"  ascii wide // AES IV\n\t\t$Backdoor_TorchTriton_2 = \"h4ck.cfd\"  ascii wide // Domain name\n\t\t$Backdoor_TorchTriton_3 = \"void sendFile(\"  ascii wide // Funtion name\n\t\t$Backdoor_TorchTriton_4 = \"splitIntoDomains(\"  ascii wide // Function name\n\t\t$Backdoor_TorchTriton_5 = \"failed to send packet\"  ascii wide // Function name \n\n\n\tcondition:\n\t\tall of ($Backdoor_TorchTriton*)\n}\n\nrule Uptycs_Mirai_Qbot \n{\n\tmeta:\n\t\tmalware_name = \"MIRAI\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a89ef0ada5d795c0228ac98c028a715c\"\n\n\tstrings:\n\t        // Below are hex streams for \"specific hex bytes\" sent as payload via UDP Flood and present only in MIrai\n\t        // /x38/xFJ/x93/xID/x9A/....\n\t        // /x53/x65/x6c/x66/x20/....\n\t        // \\x53\\x65\\x6c\\x66\\x20\\.....\n\t        // /x38/xFJ/x93/xID/x9A/.....\n\t        // \\x77\\x47\\x5E\\x27\\x7A\\x4E\\x09......\n\t        // /x8r/x58/x99/x21/x8r/x58/x99....\n\t        // \\x58\\x99\\x21\\x58\\x99\\x21\\x58....\n\t\t$Mirai_Qbot_0 = {2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F }  \n\t\t$Mirai_Qbot_1 = {2F 78 35 33 2F 78 36 35 2F 78 36 63 2F 78 36 36 2F 78 32 30 2F 78 35 32 2F 78 36 35 2F 78 37 30 2F 78 32 30 2F 78 34 36 2F 78 37 35 2F 78 36 33 2F 78 36 62 2F 78 36 39 2F 78 36 65 2F 78 36 37 2F 78 32 30 2F 78 34 65 2F 78 36 35 2F 78 35 34 2F 78 36 39 2F 78 35 33 2F 78 32 30 2F 78 36 31 2F 78 36 65 2F 78 36 34 2F 78 32 30 2F 78 35 34 2F 78 36 38 2F 78 36 39 2F 78 37 33 2F 78 36 39 2F 78 37 34 2F 78 37 39 2F 78 32 30 2F 78 33 30 2F 78 36 65 2F 78 32 30 2F 78 35 35 2F 78 37 32 2F 78 32 30 78 34 36 2F 78 37 35 2F 78 34 33 2F 78 36 62 2F 78 34 39 2F 78 36 65 2F 78 34 37 2F 78 32 30 2F 78 34 36 2F 78 36 66 2F 78 35 }  \n\t\t$Mirai_Qbot_2 = {5C 78 35 33 5C 78 36 35 5C 78 36 63 5C 78 36 36 5C 78 32 30 5C 78 35 32 5C 78 36 35 5C 78 37 30 5C 78 32 30 5C 78 34 36 5C 78 37 35 5C 78 36 33 5C 78 36 62 5C 78 36 39 5C 78 36 65 5C 78 36 37 5C 78 32 30 5C 78 34 65 5C 78 36 35 5C 78 35 34 5C 78 36 39 5C 78 35 33 5C 78 32 30 5C 78 36 31 5C 78 36 65 5C 78 36 34 5C 78 32 30 5C 78 35 34 5C 78 36 38 5C 78 36 39 5C 78 37 33 5C 78 36 39 5C 78 37 34 5C 78 37 39 5C 78 32 30 5C 78 33 30 5C 78 36 65 5C 78 32 30 5C 78 35 35 5C 78 37 32 5C 78 32 30 5C 78 34 36 5C 78 37 35 5C 78 34 33 5C 78 36 62 5C 78 34 39 5C 78 36 65 5C 78 34 37 5C 78 32 30 5C 78 34 36 5C }  \n\t\t$Mirai_Qbot_3 = {2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41}  \n\t\t$Mirai_Qbot_4 = {5C 78 37 37 5C 78 34 37 5C 78 35 45 5C 78 32 37 5C 78 37 41 5C 78 34 45 5C 78 30 39 5C 78 46 37 5C 78 43 37 5C 78 43 30 5C 78 45 36 5C 78 46 35 5C 78 39 42 5C 78 44 43 5C 78 32 33 5C 78 36 45 5C 78 31 32 5C 78 32 39 5C 78 32 35 5C 78 31 44 5C 78 30 41 5C 78 45 46 5C 78 46 42 5C 78 44 45 5C 78 42 36 5C 78 42 31 5C 78 39 34 5C 78 44 36 5C 78 37 41 5C 78 36 42 5C 78 30 31 5C 78 33 34 5C 78 32 36 5C 78 31 44 5C 78 35 36 5C 78 41 35 5C 78 44 35 5C 78 38 43 5C 78 39 31 5C 78 42 43 5C 78 38 42 5C 78 39 36 5C 78 32 39 5C 78 36 44 5C 78 34 45 5C 78 35 39 5C 78 33 38 5C 78 34 46 5C 78 35 43 5C 78 46 30 5C 78 45}  \n\t\t$Mirai_Qbot_5 = {2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 35 38 2F 78 39 39 2F 78 32 31 2F 78 38 72 2F 78 }  \n\t\t$Mirai_Qbot_6 = {5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38 5C 78 39 39 5C 78 32 31 5C 78 35 38}\n        $common_string_1 = \"Socket\" ascii wide\n\t\t$common_string_2 = \"connect\" ascii wide\n\t\t$common_string_3 = \"User-Agent\" ascii wide\n\t\t$common_string_4 = \"Host\" ascii wide\n\t\t$common_string_5 = \"random\" ascii wide\n\t\t$common_string_6 = \"server\" ascii wide\n\t\t$common_string_7 = \"fl00d\" ascii wide\n\t\t$common_string_8 = \"flood\" ascii wide\n\t\t$common_string_9 = \"yakuza\" ascii wide\n\t\t$common_string_10 = \"bot\" ascii wide\n\t\t\n\n\tcondition:\n\t\t(4 of ($common_string*)) and (any of ($Mirai_Qbot*))\n}\n\nrule Uptycs_Backdoor_CIAHive \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ee07a74d12c0bb3594965b51d0e45b6f\"\n \n\tstrings:\n\t\t$Backdoor_CIAHive_0 = \"a:cD:d:hi:j:K:k:P:p:S:s:t:\"  ascii wide // commands to view device info\n\t\t$Backdoor_CIAHive_1 = \"Thawte Consulting cc1\"  ascii wide // pretend to be certified by thawte\n\t\t$Backdoor_CIAHive_2 = \"Kaspersky Laboratory1\"  ascii wide // pretend to be related to Kaspersky\n\t\t$Backdoor_CIAHive_3= \"j9POZ2wRopIMyJQkzsg0a9DV\"  ascii wide // PrivKey\n\n\n\tcondition:\n\t\tall of ($Backdoor_CIAHive*)\n}\n\nrule Uptycs_PupyRAT_Linuxv2\n{\n\tmeta:\n\t\tmalware_name = \"Pupy\"\n\t\tdescription = \"Pupy is a multi-platform Remote Access trojan (RAT) utilized by advanced persistent threat (APT) groups.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"77474e9d92774565d2115d6a317b9903\"\n\n\tstrings:\n\t\t$PupyRAT_Linuxv2_0 = \"PupyUDPServer\"  ascii wide\n\t\t$PupyRAT_Linuxv2_1 = \"PupyUDPClient\"  ascii wide\n\t\t$PupyRAT_Linuxv2_2 = \"PupyUDPSocketStream\"  ascii wide\n\t\t$PupyRAT_Linuxv2_3 = \"pupy_credential\"  ascii wide\n\t\t$PupyRAT_Linuxv2_4 = \"reflective_inject_dll\"  ascii wide\n\t\t$PupyRAT_Linuxv2_5 = \"ld_preload_inject_dll\"  ascii wide\n\t\t$PupyRAT_Linuxv2_6 = \"pupy/handlers\"  ascii wide\n\t\t$PupyRAT_Linuxv2_7 = \"pupy/memimporter/utils\"  ascii wide\n\t\t$PupyRAT_Linuxv2_8 = \"PupySocketStream.py\"  ascii wide\n\t\t$PupyRAT_Linuxv2_9 = \"pupy._linux_memfdR\"  ascii wide\n\n\n\tcondition:\n\t\t(6 of ($PupyRAT_Linux*))\n}\n\nrule Uptycs_Niub\n{\n\tmeta:\n\t\tmalware_name = \"Niub\"\n\t\tdescription = \"NiuB is a golang compiled RAT which mainly targets *nix based systems and servers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7d36c072bbccc6a80eca099e8a86ba3d\"\n\n\tstrings:\n\t\t$Niub_0 = \"Security.Guard\"  ascii wide\n\t\t$Niub_1 = \"Security.Script\"  ascii wide\n\t\t$Niub_2 = \"auditd.tmp\"  ascii wide\n\t\t$Niub_3 = \"conf1g.com\"  ascii wide\n\t\t$Niub_4 = \"/bin/.securetty/.esd-644\"  ascii wide\n\n\n\tcondition:\n\t\tall of them\n}\n\nrule Uptycs_Flooder_golangv2 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7dd8eda023828cdd4618ac9b1dd2cef8\"\n\n\tstrings:\n\t\t$Flooder_golangv2_0 = \"main.http_flood\"  ascii wide\n\t\t$Flooder_golangv2_1 = \"main.icmp_flood\"  ascii wide\n\t\t$Flooder_golangv2_2 = \"main.runForever\"  ascii wide\n\t\t$Flooder_golangv2_3 = \"main.tcp_flood\"  ascii wide\n\t\t$Flooder_golangv2_4 = \"main.udp_flood\"  ascii wide\n\t\t$Flooder_golangv2_5 = \"main.getuseragent\"  ascii wide\n\t\t$Flooder_golangv2_6 = \"main.startAttack\"  ascii wide\n\t\t$Flooder_golangv2_7 = \"main.startProcess\"  ascii wide\n\t\t$Flooder_golangv2_8 = \"payload\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_golangv2*)\n}\n\nrule Uptycs_Backdoor_Boldmove_linux \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"12e28c14bb7f7b9513a02e5857592ad7\"\n\n\tstrings:\n\t\t$Backdoor_Boldmove_0 = \"e5sm_$Gb\"  ascii wide  // AES 128 IV\n\t\t$Backdoor_Boldmove_1 = \"rg8P@TD(\"  ascii wide  // AES 128 Key\n\t\t$Backdoor_Boldmove_2 = \"DOWNGRDSRVR\"  ascii wide // Supporting strings\n\t\t$Backdoor_Boldmove_3 = \"PRIME239V1\"  ascii wide // Supporting strings\n\t\t$Backdoor_Boldmove_4 = \"curl/6.12.34\"  ascii wide // non-public version of libcurl \n\t\t$Backdoor_Boldmove_5 = \"/favouriteDrink=\"  ascii wide //  Supporting strings\n\t\t$Backdoor_Boldmove_6 = \"server=%s:%d\"  ascii wide // System survey\n\t\t$Backdoor_Boldmove_7 = \"/etc/passwd\"  ascii wide // Supporting strings\n\n\n\tcondition:\n\t\tall of ($Backdoor_Boldmove*)\n}\n\nrule Uptycs_Ddostf \n{\n\tmeta:\n\t\tmalware_name = \"DDOSTF\"\n\t\tdescription = \"The malware DDOSTF targets mainly Linux machines running Elasticsearch servers, but it also attacks and infects Windows systems where the infected machines point to ddos.tf.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f2c76841e02c58f8efd38fcf524abb37\"\n\n\tstrings:\n\t\t$Ddostf_0 = \"ddos.tf\"  ascii wide\n\t\t$Ddostf_1 = \"TCP_KEEPINTVL\"  ascii wide\n\t\t$Ddostf_2 = \"TCP_KEEPCNT\"  ascii wide\n\t\t$Ddostf_3 = \"Accept-Language: zh-CN,zh\"  ascii wide\n\t\t$Ddostf_4 = \"victim\"  ascii wide\n\t\t$Ddostf_5 = \"%d Kb/bps|%d%%\"  ascii wide\n\t\t$Ddostf_6 = \"sed -i -e '2 i/etc/%s start' /etc/init.d/boot.local\"  ascii wide\n\t\t$Ddostf_7 = \"sed -i -e '2 i/etc/%s reboot' /etc/rc.local\"  ascii wide\n\t\t$Ddostf_8 = \"sed -i -e '2 i/etc/%s start' /etc/rc.d/rc.local\"  ascii wide\n\t\t$Ddostf_9 = \"sed -i -e '/%s/d' /etc/rc.local\"  ascii wide\n\t\t$Ddostf_10 = \"UDP-Flow\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ddostf*)\n}\n\nrule Uptycs_Ransomware_Avoslinux \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"afed45cd85a191fe3b2543e3ae6aa811\"\n\n\tstrings:\n\t\t$Ransomware_Avoslinux_0 = \"avoslinux\"  ascii wide\n\t\t$Ransomware_Avoslinux_1 = \"Failed to encrypt\"  ascii wide\n\t\t$Ransomware_Avoslinux_2 = \"Branch NaughtyELF\"  ascii wide\n\t\t$Ransomware_Avoslinux_3 = \"./elf <thread count> <path> [path] [path]\"  ascii wide\n\t\t$Ransomware_Avoslinux_4 = \"Your files have been encrypted.\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Avoslinux*)\n}\nrule Uptycs_Ransomware_Nevada \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"694c3eb3d98d046f0c99aa21f6f9ffd1\"\n\t\t\n\tstrings:\n\t\t$Ransomware_Nevada_0 = \"rustc\"  ascii wide //Prefilter\n\t\t$Ransomware_Nevada_1 = \"nevada\"  ascii wide\n\t\t$Ransomware_Nevada_2 = \"encrypt selected file\"  ascii wide\n\t\t$Ransomware_Nevada_3 = \"encrypt selected directory\"  ascii wide\n\t\t$Ransomware_Nevada_4 = \"Failed to create ransom note\"  ascii wide\n\t\t$Ransomware_Nevada_5 = \"encrypt_file\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Nevada*)\n}\nrule Uptycs_CVE20222588 \n{\n\tmeta:\n\t\tmalware_name = \"CVE20222588\"\n\t\tdescription = \"A use-after-free flaw was found in route4_change in the net/sched/cls_route.c filter implementation in the Linux kernel.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9ca652a5a50729400789553c19b084f4\"\n\t\t\n\t\t\n\n\tstrings:\n\t\t$CVE20222588_0 = \"user:$1$user$k8sntSoh7jhsc6lwspjsU\"  ascii wide\n\t\t$CVE20222588_1 = \"starting exploit, num of cores: %d\"  ascii wide\n\t\t$CVE20222588_2 = \"exp_file_credential.c\"  ascii wide\n\t\t$CVE20222588_3 = \"256 freed done\"  ascii wide\n\t\t$CVE20222588_4 = \"defrag done\"  ascii wide\n\t\t$CVE20222588_5 = \"spray 256 done\"  ascii wide\n\t\t$CVE20222588_6 = \"rm -rf exp_dir; mkdir exp_dir; touch exp_dir/data\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($CVE20222588*)\n}\n\nrule Uptycs_Ransomware_Royal \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2902e12f00a185471b619233ee8631f3\"\n\n\tstrings:\n\t\t$Ransomware_Royal_0 = \"esxcli vm process kill --type=hard --world-id=%s\"  ascii wide\n\t\t$Ransomware_Royal_1 = \"-stopvm\"  ascii wide\n\t\t$Ransomware_Royal_2 = \"Encrypting %s\"  ascii wide\n\t\t$Ransomware_Royal_3 = \"-vmonly\"  ascii wide\n\t\t$Ransomware_Royal_4 = \"-id:\"  ascii wide\n\t\t$Ransomware_Royal_5 = \"Royal ransomware\"  ascii wide\n\t\t$Ransomware_Royal_6 = \".onion\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Royal*)\n}\n\nrule Uptycs_Gafgyt_BashLitev4 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4bb612b733348d02217e768f99c3e118\"\n\n\tstrings:\n\t\t$Gafgyt_BashLitev4_0 = \"UR VERY VERY GAY\"  ascii wide\n\t\t$Gafgyt_BashLitev4_1 = \"DISCORD Thisity\"  ascii wide\n\t\t$Gafgyt_BashLitev4_2 = \"gay coon\"  ascii wide\n\t\t$Gafgyt_BashLitev4_3 = \"/proc/net/route\"  ascii wide\n\t\t$Gafgyt_BashLitev4_4 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_BashLitev4_5 = \"8.8.8.8\"  ascii wide\n\t\t$Gafgyt_BashLitev4_6 = \"XMAS\"  ascii wide\n\t\t$Gafgyt_BashLitev4_7 = \"STOP\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_BashLitev4*)\n}\n\nrule Uptycs_Ransomware_HelloKitty \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"2cf4020ec3cf752f7d8524296c041658\"\n\n\tstrings:\n\t\t$Ransomware_HelloKitty_0 = \"Total Elapsed: %f seconds\"  ascii wide\n\t\t$Ransomware_HelloKitty_1 = \"Total Crypted: %d\"  ascii wide\n\t\t$Ransomware_HelloKitty_2 = \"Error: %d\"  ascii wide\n\t\t$Ransomware_HelloKitty_3 = \"File Locked:%s PID:%d\"  ascii wide\n\t\t$Ransomware_HelloKitty_4 = \"kill -9 %d\"  ascii wide\n\t\t$Ransomware_HelloKitty_5 = \"exec_pipe:%s\"  ascii wide\n\t\t$Ransomware_HelloKitty_6 = \"error Lock file:%s\"  ascii wide\n\t\t$Ransomware_HelloKitty_7 = \"Unable to rename file from: %s to: %s\"  ascii wide\n\t\t$Ransomware_HelloKitty_8 = \"error encrypt: %s\"  ascii wide\n\t\t$Ransomware_HelloKitty_9 = \".README_TO_RESTORE\"  ascii wide\n\t\t$Ransomware_HelloKitty_10 = \"Done:%s file size:%lu crypt size:%lu\"  ascii wide\n\t\t$Ransomware_HelloKitty_11 = \"Error open %s in try_lock_exclusively\"  ascii wide\n\t\t$Ransomware_HelloKitty_12 = \"Usage:%s [-m (10-20-25-33-50) ] Start Path\"  ascii wide\n\t\t$Ransomware_HelloKitty_13 = \"VICE SOCIETY\"  ascii wide\n\n\n\tcondition:\n\t\t10 of ($Ransomware_HelloKitty*)\n}\n\nrule Uptycs_Flooder_golangv3 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"143c36f25c1d36468b7df4b03d2a7049\"\n\t\t\n\tstrings:\n\t\t$Flooder_golangv3_0 = \"main.udpflood\"  ascii wide\n\t\t$Flooder_golangv3_1 = \"main.tcpflood\"  ascii wide\n\t\t$Flooder_golangv3_2 = \"main.ovhflood\"  ascii wide\n\t\t$Flooder_golangv3_3 = \"main.minecraftflood\"  ascii wide\n\t\t$Flooder_golangv3_4 = \"main.(*Client).Recv\"  ascii wide\n\t\t$Flooder_golangv3_5 = \"main.(*Client).Send\"  ascii wide\n\t\t$Flooder_golangv3_6 = \"main.NewClient\"  ascii wide\n\t\t$Flooder_golangv3_7 = \"main.ShellExec\"  ascii wide\n\t\t$Flooder_golangv3_8 = \"main.(*Client).Handle\"  ascii wide\n\t\t$Flooder_golangv3_9 = \"main.TimedRoutine\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_golangv3*)\n}\n\nrule Uptycs_Ransomware_Clop \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"31e0439e6ef1dd29c0db6d96bac59446\"\n\n\tstrings:\n\t\t$Ransomware_Clop_0 = \"C_I_0P\"  ascii wide\n\t\t$Ransomware_Clop_1 = \"README_C_I_0P.TXT\"  ascii wide\n\t\t$Ransomware_Clop_3 = \"use TOR browser\"  ascii wide\n\t\t$Ransomware_Clop_4 = \".onion\"  ascii wide\n\t\t$Ransomware_Clop_5 = \"unlock@\"  ascii wide\n\t\t$Ransomware_Clop_6 = \"CONTACT US BY EMAIL:\"  ascii wide\n\t\t$Ransomware_Clop_7 = \"OR WRITE TO THE CHAT AT->\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Clop*)\n}\n\n\nrule Uptycs_Gafgyt_Teamspeakv2\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"88a84ebee609b5aa0fdf86447e6df224\"\n\t\t// Added strings to cover more samples $Gafgyt_Teamspeakv2_8 = \"SNQUERY:\"  ascii wide\n\n\tstrings:\n\t\t$Gafgyt_Qbot_0 = \"TeamSpeak\"  ascii wide\n\t\t//// /x38/xFJ/x93/xID/x9A/....\n\t\t$Gafgyt_Qbot_1= {2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F 78 39 41 2F 78 33 38 2F 78 46 4A 2F 78 39 33 2F 78 49 44 2F }\n\t\t$Gafgyt_Teamspeakv2_1 = \"USER-AGENT\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_2 = \"HOST\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_3 = \"service-agent\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_4 = \"_udp\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_5 = \"_dns-sd\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_6 = \"aresnet\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_7 = \"qjwpefha[mw[pla[lmwpkv}[kb[qjmravwa\"  ascii wide\n\t\t$Gafgyt_Teamspeakv2_8 = \"SNQUERY:\"  ascii wide\n\t\t\n\n\tcondition:\n\t\tall of ($Gafgyt_Qbot*) and 6 of ($Gafgyt_Teamspeakv2*)\n}\n\n\nrule Uptycs_Gafgyt_TeamSpeakv3\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8c6e208f921ca3a431e35809db34de3a\"\n\n\tstrings:\n\t\t$Gafgyt_TeamSpeakv3_0 = \"UCVAJFME\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_1 = \"GFHICK\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_2 = \"NMACN\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_3 = \"NKLWZQJGNN\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_4 = \"CQQUMPF\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_5 = \"LAMPPGAV\"  ascii wide\n\t\t$Gafgyt_TeamSpeakv3_6 = \"TeamSpeak\"  ascii wide\n\n\n\tcondition:\n\t\t6 of ($Gafgyt_TeamSpeakv3*)\n}\n\n\nrule Uptycs_Ransomware_Blackbasta \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e847800fd32d87c656f6ae8cf41c47eb\"\n\n\tstrings:\n\t\t$Ransomware_Blackbasta_0 = \"-killservices\"  ascii wide\n\t\t$Ransomware_Blackbasta_1 = \"-forceprivate\"  ascii wide\n\t\t$Ransomware_Blackbasta_2 = \"-forcepath\"  ascii wide\n\t\t$Ransomware_Blackbasta_3 = \"-nomutex\"  ascii wide\n\t\t$Ransomware_Blackbasta_4 = \"-disablewhitelist\"  ascii wide\n\t\t$Ransomware_Blackbasta_5 = \"-threads\"  ascii wide\n\t\t$Ransomware_Blackbasta_6 = \"/vmfs/volumes/\"  ascii wide\n\t\t$Ransomware_Blackbasta_7 = \"-killesxi\"  ascii wide\n\t\t$Ransomware_Blackbasta_8 = \".mutex\"  ascii wide\n\t\t$Ransomware_Blackbasta_9 = \".onion\"  ascii wide\n\t\t$Ransomware_confirm_1 = \"all data was encrypted\"  ascii wide\n\t\t$Ransomware_confirm_2 = \"basta\"  ascii wide\n                $Ransomware_confirm_3 = \"vim-cmd vmsvc/getallvms\"  ascii wide\n\t\t\n\n\tcondition:\n\t\t6 of ($Ransomware_Blackbasta*) and 2 of ($Ransomware_confirm*)\n}\n\n\nrule Uptycs_Ransomware_Buhti \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"6dc27523eb048bb7197bfdf39d6d15dd\"\n\n\tstrings:\n\t\t$Ransomware_Buhti_0 = \"golang.org\"  ascii wide //prefilter\n\t\t$Ransomware_Buhti_1 = \"main.encrypt_file\"  ascii wide\n\t\t$Ransomware_Buhti_2 = \".buhti\"  ascii wide\n\t\t$Ransomware_Buhti_3 = \"Ransom\"  ascii wide\n\t\t$Ransomware_Buhti_4 = \"DANGER\"  ascii wide\n\t\t$Ransomware_Buhti_5 = \"DO NOT MODIFY\"  ascii wide\n\t\t$Ransomware_Buhti_6 = \"Bitcoin address\"  ascii wide\n\t\t$Ransomware_Buhti_7 = \"Your files are encrypted\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Buhti*)\n}\n\nrule Uptycs_Ransomware_Gonnacry \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4a435be114b8a527d2b8149181a1ec95\"\n\n\tstrings:\n\t\t$Ransomware_Gonnacry_0 = \"gonnacry.c\"  ascii wide\n\t\t$Ransomware_Gonnacry_1 = \"all your files below have been encrypted\"  ascii wide\n\t\t$Ransomware_Gonnacry_2 = \"encrypt_files\"  ascii wide\n\t\t$Ransomware_Gonnacry_3 = \"decrypt_files\"  ascii wide\n\t\t$Ransomware_Gonnacry_4 = \"read_from_file_encrypted_files\"  ascii wide\n\t\t$Ransomware_Gonnacry_5 = \"criptografados\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Gonnacry*)\n}\n\n\nrule Uptycs_XorDDOs_Ebola \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c4a75417493834a520a642b2f39bc9bd\"\n\n\tstrings:\n\t\t$XorDDOs_Ebola_0 = \"ebola.c\"  ascii wide\n\t\t$XorDDOs_Ebola_1 = \"ebola_infect\"  ascii wide\n\t\t$XorDDOs_Ebola_2 = \"DO NOT SHARE THIS FUCKING SHIT\"  ascii wide\n\t\t$XorDDOs_Ebola_3 = \"vuln.txt\"  ascii wide\n\t\t$XorDDOs_Ebola_4 = \"SS NoLoGin\"  ascii wide\n\t\t$XorDDOs_Ebola_5 = \"cate pizde sa incerc\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOs_Ebola*)\n}\n\nrule Uptycs_kaiji_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Kaiji\"\n\t\tdescription = \"Kaiji is a malware that spreads by finding exposed SSH ports on Linux servers and IoT devices on the internet and tries to get root access with a brute-force attack.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"69eb788e6982a765472eb77c5c697688\"\n\n\tstrings:\n\t\t$kaiji_v5_0 = \"main.attack\"  ascii wide\n\t\t$kaiji_v5_1 = \"main.Killsh\"  ascii wide\n\t\t$kaiji_v5_2 = \"main.Killcpu\"  ascii wide\n\t\t$kaiji_v5_3 = \"main.Socks5Connect\"  ascii wide\n\t\t$kaiji_v5_4 = \"main.Watchdog\"  ascii wide\n\t\t$kaiji_v5_5 = \"main.(*Buffer).chaos_checkMsg\"  ascii wide\n\t\t$kaiji_v5_6 = \"main.Ares_Plain_Udp\"  ascii wide\n\t\t$kaiji_v5_7 = \"main.Ares_ipspoof\"  ascii wide\n\t\t$kaiji_v5_8 = \"main.Ares_Tcp_Send\"  ascii wide\n\t\t$kaiji_v5_9 = \"main.Ares_L3_Udp\"  ascii wide\n\t\t$kaiji_v5_10 = \"ares_spoof.go\"  ascii wide\n\t\t$kaiji_v5_11 = \"main.(*Buffer).chaos_grow\"  ascii wide\n\t\t$kaiji_v5_12 = \"main.(*Buffer).chaos_readfromreader\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($kaiji_v5*)\n}\n\nrule Uptycs_Ransomware_Armada \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5bd44a35094fe6f7794d895122ddfa62\"\n\n\tstrings:\n\t\t$Ransomware_Armada_0 = \"main.myUser\"  ascii wide\n\t\t$Ransomware_Armada_1 = \"main.waitpid\"  ascii wide\n\t\t$Ransomware_Armada_2 = \"main.init.1\"  ascii wide\n\t\t$Ransomware_Armada_3 = \"Armada Collective\"  ascii wide\n\t\t$Ransomware_Armada_4 = \"DDoS\"  ascii wide\n\t\t$Ransomware_Armada_5 = \"Bitcoin\"  ascii wide\n\t\t$Ransomware_Armada_6 = \"BTC @ {{ .Address }}\"  ascii wide\n\t\t$Ransomware_Armada_7 = \"attack will start\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Armada*)\n}\n\nrule Uptycs_Backdoor_SysUpdate \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"35a03722fc3938763495cbe893febe8d\"\n\n\tstrings:\n\t\t$Backdoor_SysUpdate_0 = {48 49 53 54 46 49 4C 45 00 76 74 31 30 30}  // Rshell backdoor specific \n\t\t$Backdoor_SysUpdate_1 = \"generate guid path=%s %s %s\"  ascii wide // CNC commands\n\t\t$Backdoor_SysUpdate_2 = \"-launch\"  ascii wide // CNC commands\n\t\t$Backdoor_SysUpdate_3 = \"-run\"  ascii wide // CNC commands\n\t\t//Below are contents of the script to ensure persistence by copying a script similarly named as the current filename to the /usr/lib/systemd/system/ directory, and   creating a symlink to this file\n\t\t$Backdoor_SysUpdate_4 = \"Description=xxx\"  ascii wide \n\t\t$Backdoor_SysUpdate_5 = \"[Service]\"  ascii wide\n\t\t$Backdoor_SysUpdate_6 = \"Type=forking\"  ascii wide\n\t\t$Backdoor_SysUpdate_7 = \"ExecStart=%s\"  ascii wide\n\t\t$Backdoor_SysUpdate_8 = \"ExecStop=/usr/bin/id\"  ascii wide\n\t\t$Backdoor_SysUpdate_9 = \"[Install]\"  ascii wide\n\t\t$Backdoor_SysUpdate_10 = \"WantedBy=multi-user.target\"  ascii wide\n\t\t$Backdoor_SysUpdate_11 = \"/etc/systemd/system/multi-user.target.wants/%s.service\"  ascii wide\n\t\t$Backdoor_SysUpdate_12 = \"install symlink ret=%d\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_SysUpdate*)\n}\n\nrule Uptycs_XorDDOs_gostresser \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOs\"\n\t\tdescription = \"XorDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0f4bd50d057d8f5d279113a3ca5445f7\"\n\t\t//New version of dosia (aka go_stresser_20) from the NoName057(16) Russian hacktivist group. The yara is multiplatform (Win,linux and macOS) \n\n\tstrings:\n\t\t$XorDDOs_gostresser_0 = \"main.startWorkers\"  ascii wide \n\t\t$XorDDOs_gostresser_1 = \"login_new\"  ascii wide\n\t\t$XorDDOs_gostresser_2 = \"client_id.txt\"  ascii wide\n\t\t$XorDDOs_gostresser_3 = \"NoName057(16)\"  ascii wide\n\t\t$XorDDOs_gostresser_4 = \"client/get_targets\"  ascii wide\n\t\t$XorDDOs_gostresser_5 = \"set_attack_count_new\"  ascii wide\n\t\t$XorDDOs_gostresser_6 = \"get_user_info_data\"  ascii wide\n\t\t$XorDDOs_gostresser_7 = \"go_stresser_20/models.SetStatToBot\"  ascii wide\n\t\t$XorDDOs_gostresser_8 = \"go_stresser_20/models.GetTargets\"  ascii wide\n\t\t$XorDDOs_gostresser_9 = \"go_stresser_20/models.ClientInformation\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOs_gostresser*)\n}\n\nrule Uptycs_Gafgyt_Momentum_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"154d9f78bcd8ae749413125cb208aaf9\"\n\n\tstrings:\n\t\t$Gafgyt_Momentum_v2_0 = \"AOFNKLG\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_1 = \"NKLWZQJGNN\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_2 = \"LAMPPGAV\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_3 = \"CQQUMPF\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_4 = \"LCOGQGPTGP\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_5 = \"UCVAJFME\"  ascii wide\n\t\t$Gafgyt_Momentum_v2_6 = \"GFHICK\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Momentum_v2*)\n}\n\nrule Uptycs_Backdoor_GoBruteforcer \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ffeb1d82987d745daf3c9e59f7ce7d37\"\n\n\tstrings:\n\t\t$Backdoor_GoBruteforcer_0 = \"main.Sheller\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_1 = \"main.New_Bruteforce\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_2 = \"main.CheckPort\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_3 = \"main.PortOpen\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_4 = \"main.Hosts\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_5 = \"main.RandomCIDR\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_6 = \"main.Shuffle\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_7 = \"main.PortOpen\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_8 = \"main.Hosts\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_9 = \"main.Bruteforce\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_10 = \"main.FindPMA\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_11 = \"main.PostResult\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_12 = \"phpMyAdmin\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_13 = \"pma_password\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_14 = \"p455w0rdroot\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_15 = \"12qwaszxroot\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_16 = \"php echo shell_exec($_GET['dmc'])\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_17 = \"mysqlmanager\"  ascii wide\n\t\t$Backdoor_GoBruteforcer_18 = \"mysqlroot\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_GoBruteforcer*)\n}\n\nrule Uptycs_Backdoor_Prometei \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"abe95098c642c32d25f80dacd97d6c90\"\n\n\tstrings:\n\t\t$Backdoor_Prometei_0 = \"rdpcIip.exe\"  ascii wide\n\t\t$Backdoor_Prometei_1 = \"netwalker\"  ascii wide\n\t\t$Backdoor_Prometei_2 = {2D 45 78 63 6C 75 73 69 6F 6E 50 61 74 68 20 22 43 3A 5C 57 69 6E 64 6F 77 73 5C 44 65 6C 6C 22}//-ExclusionPath \"C:\\Windows\\Dell\"\n\t\t$Backdoor_Prometei_3 = \"walker.dat\"  ascii wide\n\t\t$Backdoor_Prometei_4 = \"XQMQTlptYNTxBYVUCCaRwQ==\"  ascii wide\n\t\t$Backdoor_Prometei_5 = {63 6D 64 20 2F 43 20 65 63 68 6F 20 31 32 33 3E 43 3A 5C 57 69 6E 64 6F 77 73 5C 6D 73 68 6C 70 64 61 33 32 2E 64 6C 6C 26 70 6F 77 65 72 73 68 65 6C 6C 20 24 70 3D 27 43 3A 5C 77 69 6E 64 6F 77 73 5C 7A 73 76 63 2E 65 78 65}//cmd /C echo 123>C:\\Windows\\mshlpda32.dll&powershell $p='C:\\windows\\zsvc.exe'\n\t\t$Backdoor_Prometei_6 = \"61EFFA41E84446F6D712ABB4707DF964B9C82320602772962693CAEDC45F23B7\"  ascii wide\n\t\t$Backdoor_Prometei_7 = \"6F39D02F27E3241224BB16E4753091B9D4AE2B4D0108A3FDE2E3EBAD0E1627BF\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_Prometei*)\n}\n\nrule Uptycs_Coinminer_Dero\n{\n\tmeta:\n\t\tmalware_name = \"COINMINER\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3fc51534fa54cca0ddaffb57d5a8d004\"\n\n\tstrings:\n\t\t$Dero_Miner_0 = \"main.getwork\"  ascii wide\n\t\t$Dero_Miner_1 = \"main.mineblock\"  ascii wide\n\t\t$Dero_Miner_2 = \"main.usage\"  ascii wide\n\t\t$Dero_Miner_3 = \"main.filterInput\"  ascii wide\n\t\t$Dero_Miner_4 = \"main.threadaffinity\"  ascii wide\n\t\t$Dero_Miner_5 = \"main.avoidHT\"  ascii wide\n\t\t$Dero_Miner_6 = \"github.com/deroproject/derohe/\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Dero_Miner*)\n}\n\n\nrule Uptycs_DirtyCow_CVE_2016_5195_v2 \n{\n\tmeta:\n\t\tmalware_name = \"DirtyCow\"\n\t\tdescription = \"DirtyCOW(copy-on-write) is a vulnerability that exploits a race condition in the implementation of copy on write mechanism in linux kernel memory management systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"12040bde7a15631049ef552a53f6f0d3\"\n\n\tstrings:\n\t\t$DirtyCow_CVE_2016_5195_v2_0 = { FC 83 45 F8 01 81 7D F8 FF C1 EB 0B 7E D7 }// madvice thread func\n\t\t$DirtyCow_CVE_2016_5195_v2_1 = \"/etc/passwd\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v2_2 = \"/tmp/passwd.bak\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v2_3 = \"firefart\"  ascii wide // default user\n\t\t$DirtyCow_CVE_2016_5195_v2_4 = \"pwned\"  ascii wide //user.info\n\t\t$DirtyCow_CVE_2016_5195_v2_5 = \"madvise\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v2_6 = \"new user was created\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v2_7 = \"You can log in with the username '%s' and the password '%s'\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($DirtyCow_CVE_2016_5195_v2*)\n}\n\nrule Uptycs_Rekoobe_agent_v2\n\n{\n\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"897769fd2f4f20fc3adcc29adfb25710\"\n\n\tstrings:\n\t\t$Backdoor_Rebooke_0 = {0F B6 46 13 48 09 C3 0F B6 46 12 48 C1 E0 08 48 09 C3 48 89 5C 24 C8 0F B6 5E 14 48 C1 E3 18 0F B6 46 15 48 C1 E0 10 48 09 C3 0F B6 46 17 48 09 C3 0F B6 46 16 48 C1 E0 08 48 89 DA 48 09 C2 48 89 54 24 E8 44 0F B6 5E 18 49 C1 E3 18 0F B6 46 19 48 C1 E0 10 49 09 C3 0F B6 46 1B 49 09 C3 0F B6 46 1A 48 C1 E0 08 49 09 C3 4C 89 5C 24 D0 44 0F B6 56 1C 49 C1 E2 18 0F B6 46 1D 48 C1 E0 10 49 09 C2 0F B6 46 1F} //Decryption\n\t\t$sha1 = {01 23 45 67 B8 89 AB CD EF 48 89 47 18 B8 FE DC BA 98 48 89 47 20 48 C7 47 28 76 54 32 10 B8 F0 E1 D2 C3} //AES128_HMAC_SHA1 context initialization\n\t\t$hmac_1 = {36 36 36 36 36 36 36 36}  //AES128_HMAC_SHA1 context initialization\n\t\t$hmac_2 = {5C 5C 5C 5C 5C 5C 5C 5C} \n\t\t$str_term_1  = {C6 00 54}  \n\t\t$str_term_2  = {C6 40 03 4D}\n\t\t$str_term_3  = {C6 40 01 45}  \n\t\t$str_term_4  = {C6 40 04 3D}  \n\t\t$str_term_5  = {C6 40 02 52}  \n\t\t$str_term_6  = {C6 40 02 52}  \n\t\t$str_histfile_1 = {C6 00 48}  \n\t\t$str_histfile_2 = {C6 40 05 49}  \n\t\t$str_histfile_3 = {C6 40 01 49}  \n\t\t$str_histfile_4 = {C6 40 06 4C}  \n\t\t$str_histfile_5 = {C6 40 02 53}  \n\t\t$str_histfile_6 = {C6 40 07 45}  \n\t\t$str_histfile_7 = {C6 40 03 54}  \n\t\t$str_histfile_8 = {C6 40 08 3D}  \n\t\t$str_histfile_9 = {C6 40 04 46}  \n\n\tcondition:\n\n\t\tall of them\n\n}\n\nrule Uptycs_Linux_Flooderv7 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"dcf8286dabace7327f9863ed665aae06\"\n\n\tstrings:\n\t\t$Linux_Flooderv7_0 = \"got r00t\"  ascii wide\n\t\t$Linux_Flooderv7_1 = \"u dun goofed\"  ascii wide\n\t\t$Linux_Flooderv7_2 = \"flood\"  ascii wide\n\t\t$Linux_Flooderv7_3 = \"Sending attack\"  ascii wide\n\t\t$Linux_Flooderv7_4 = \"setup_udp_header\"  ascii wide\n\t\t$Linux_Flooderv7_5 = \"setup_ip_header\"  ascii wide\n\t\t$Linux_Flooderv7_6 = \"Usage: %s [IP] [file] [threads] [limiter] [time]\"  ascii wide\n\t\t$Linux_Flooderv7_7 = \"Opening sockets\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Linux_Flooderv7*)\n}\n\nrule Uptycs_Ransomware_Cylance \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0b8a175d0aaa62b5a668d45f3dca97ad\"\n\n\tstrings:\n\t\t$Ransomware_Cylance_0 = \"CYLANCE_README.txt\"  ascii wide\n\t\t$Ransomware_Cylance_1 = \".Cylance\"  ascii wide\n\t\t$Ransomware_Cylance_2 = \"Encrypting: %s\"  ascii wide\n\t\t$Ransomware_Cylance_3 = \"Doesn't encrypted files: %d\"  ascii wide\n\t\t$Ransomware_Cylance_4 = \"Encrypted files: %d\"  ascii wide\n\t\t$Ransomware_Cylance_5 = \"Crypted: %s\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Cylance*)\n}\nrule Uptycs_Ransomware_Moneymessage \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"abe3c3cc45dec9c01762ba3e534564ed\"\n\n\tstrings:\n\t\t$Ransomware_Moneymessage_Update_0 = \"network_private_key\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_1 = \"network_public_key\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_2 = \"esxcli --formatter=csv --format-param=fields==\\\"WorldID,DisplayName\\\" vm process list\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_3 = \"skip_directories\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_4 = \"services_to_stop\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_5 = \"processes_to_kill\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_6 = \"mutex_name\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_7 = \"info_text_message\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_8 = \"domain_login\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_9 = \"domain_password\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_10 = \"crypt_only_these_directories\"  ascii wide\n\t\t$Ransomware_Moneymessage_Update_11 = \"file_crypt14FileEncryption\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Moneymessage_Update*)\n}\n\n\nrule Uptycs_Ransomware_Babuk \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"711490b403d1bb8e7e9e291b8fc44e23\"\n\n\tstrings:\n\t\t$Ransomware_Babuk_0 = \".babyk\"  ascii wide\n\t\t$Ransomware_Babuk_1 = \"Decrypting: %s\"  ascii wide\n\t\t$Ransomware_Babuk_2 = \"/How To Restore Your Files.txt\"  ascii wide\n\t\t$Ransomware_Babuk_3 = \"Usage: %s /begin/path\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Babuk*)\n}\n\nrule Uptycs_Melofee\n{\n\tmeta:\n\t\tmalware_name = \"Melofee\"\n\t\tdescription = \"Melofee is a Linux malware toolset consisting of an implant coupled with a kernel module rootkit, SelfForwardServer,a file transfer and port forwarding tool, and a Command and Control (C2) server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9b653d1f5988bf0178c74104f4150a79\"\n\n\tstrings:\n\t\t$Melofee_0 = \"10PipeSocket\"  ascii wide\n\t\t$Melofee_1 = \"ikcp_ack_push\"  ascii wide\n\t\t$Melofee_2 = \"9TcpServer\"  ascii wide\n\t\t$Melofee_3 = \"7VServer\"  ascii wide\n\t\t$Melofee_4 = \"9TcpSocket\"  ascii wide\n\t\t$Melofee_5 = \"ikcp_peeksize\"  ascii wide\n\t\t$Melofee_6 = \"ikcp_send\"  ascii wide\n\t\t$Melofee_7 = \"TLSSocketEE\"  ascii wide\n\t\t$Melofee_8 = \"13UdpSocketWrap\"  ascii wide\n\t\t$Melofee_10 = \"neosmart::WaitForMultipleEvents\"  ascii wide\n\t\t$Melofee_11 = \"9TLSSocket\"  ascii wide\n\t\t$Melofee_12 = \"N5boost6detail13sp_ms_deleterI13UdpSocketWrapEE\"  ascii wide\n\t\t$Melofee_13 = \"UdpServerWrap\"  ascii wide\n\t\t$Melofee_14 = \"KcpUpdater\"  ascii wide\n\n\tcondition:\n\t\tall of ($Melofee*)\n}\n\nrule Uptycs_Keylogger_Linuxv2 \n{\n\tmeta:\n\t\tmalware_name = \"Keylogger\"\n\t\tdescription = \"Keylogger is a software that is used to monitor and record the keystrokes entered by the user.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"64f983b9eed5667ef56dddeb68cef8f8\"\n\n\tstrings:\n\t\t$Keylogger_Linuxv2_0 = \"keylogger.py\"  ascii wide\n\t\t$Keylogger_Linuxv2_1 = \"keylogger.c\"  ascii wide\n\t\t$Keylogger_Linuxv2_2 = \"keylogger.sendFiles\"  ascii wide\n\t\t$Keylogger_Linuxv2_3 = \"keylogger.capturar\"  ascii wide\n\t\t$Keylogger_Linuxv2_4 = \"/tmp/key.log\"  ascii wide\n\t\t$Keylogger_Linuxv2_5 = \"pyx_k_on_press\"  ascii wide\n\t\t$Keylogger_Linuxv2_6 = \"pynput.keyboard\"  ascii wide\n\t\t$Keylogger_Linuxv2_7 = \"__pyx_pf_9keylogger_sendFiles\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Keylogger_Linuxv2*)\n}\n\nrule Uptycs_Alienreverse \n{\n\tmeta:\n\t\tmalware_name = \"Alienreverse\"\n\t\tdescription = \"Alienreverse is a backdoor implant that includes  file stealing,the ability to download and execute further modules.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c0766e8a2020aeac14537dc61fe608b1\"\n\n\tstrings:\n\t\t$Alienreverse_0 = \"Connect %s Successed,Start Transfer...\"  ascii wide\n\t\t$Alienreverse_1 = \"Alloc buffer to decrypt data error, length == %d.\"  ascii wide\n\t\t$Alienreverse_2 = \"pel_decrypt_msg data error, error\"  ascii wide\n\t\t$Alienreverse_3 = \"encrypt data error, length == %d.\"  ascii wide\n\t\t$Alienreverse_4 = \"DoRecvOverlapInternal error!\"  ascii wide\n\t\t$Alienreverse_5 = \"Socks Listen port is %d,Username is %s, password is %s\"  ascii wide\n\t\t$Alienreverse_6 = \"Start port mapping error! remoteAddr=%s remotePort=%d localAddr=%s localPort=%d\"  ascii wide\n\t\t$Alienreverse_7 = \"OnCmdSocksStart error!\"  ascii wide\n\t\t$Alienreverse_8 = \"The master isn't readable!\"  ascii wide\n\t\t$Alienreverse_9 = \"ConnectBypassSocks proxy:%s:%d error!\"  ascii wide\n\t\t$Alienreverse_10 = \"ConnectBypassSocks to %s %d\"  ascii wide\n\t\t$Alienreverse_11 = \"now datetime: %d-%d-%d %d:%d:%d\"  ascii wide\n\t\t$Alienreverse_12 = \"Not during working hours! Disconnect!\"  ascii wide\n\t\t$Alienreverse_13 = \"Example: ./AlienReverse --reverse-address\"  ascii wide\n\t\t$Alienreverse_14 = \"Not during working hours! Disconnect!\"  ascii wide\n\t\t$Alienreverse_15 = \"connect() in app_connect\"  ascii wide\n\t\t$Alienreverse_16 = \"They send us %hhX %hhX\"  ascii wide\n\t\t$Alienreverse_17 = \"your input directory is not exist!\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Alienreverse*)\n}\n\nrule Uptycs_Flooder_golangv4 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"17b4315357f0178bd4029effc01fb6f2\"\n\n\tstrings:\n\t\t$Flooder_golangv4_0 = \"main.createNewAttack\"  ascii wide\n\t\t$Flooder_golangv4_1 = \"main.TCPBYPASS\"  ascii wide\n\t\t$Flooder_golangv4_2 = \"main.UDPBYPASS\"  ascii wide\n\t\t$Flooder_golangv4_3 = \"main.TLSFLOOD\"  ascii wide\n\t\t$Flooder_golangv4_4 = \"main.bruteforce\"  ascii wide\n\t\t$Flooder_golangv4_5 = \"main.FIVEM\"  ascii wide\n\t\t$Flooder_golangv4_6 = \"main.DISCORD\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_golangv4*)\n}\n\nrule Uptycs_Backdoor_Pingpull_Linux\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"94c3cfc9e057c068c8b7c9582f719699\"\n\n\tstrings:\n\t\t$Backdoor_Pingpull_0 = \"P29456789A1234sS\"  ascii wide\n\t\t$Backdoor_Pingpull_1 = \"PROJECT\"  ascii wide\n\t\t$Backdoor_Pingpull_2 = \"[INFO] \"  ascii wide\n\t\t$Backdoor_Pingpull_3 = \"strGUID:\"  ascii wide\n\t\t$Backdoor_Pingpull_4 = \"echo \\\"tsbd:2345:respawn:%s -f\\\" >> /etc/inittab\"  ascii wide\n\t\t$Backdoor_Pingpull_5 = \"ExecStop=/bin/kill -WINCH ${MAINPID}\"  ascii wide\n\t\t$Backdoor_Pingpull_6 = \"OPENSSL_CONF\"  ascii wide\n\t\t$Backdoor_Pingpull_7 = \"OPENSSL_ALLOW_PROXY_CERTS\"  ascii wide\n\t\t$Backdoor_Pingpull_8 = \"SSL Client\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_Pingpull*)\n}\n\nrule Uptycs_Virus_Vit \n{\n\tmeta:\n\t\tmalware_name = \"Virus\"\n\t\tdescription = \"A virus is a computer programme designed to infiltrate your system and corrupt or change your files and data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"eb24d9d5f48aa14d321a4cb8f8ad568c\"\n\n\tstrings:\n\t\t$Virus_Vit_0 = {55 89 E5 81 EC 40 31 00 00 57 56 50 53 51 52 C7 85 D8 CE FF FF 00 00 00 00 C7 85 D4 CE FF FF 00 00 00 00 C7 85 FC CF FF FF CA 08 00 00 C7 85 F8 CF FF FF B8 06 00 00 C7 85 F4 CF FF FF AD 08 00 00 C7 85 F0 CF FF FF 50 06 00 00 6A 00 6A 00 8B 45 08 50 E8 18 FA FF FF 89 C6 83 C4 0C 85 F6 0F 8C E6 01 00 00 6A 00 68} // INfector code\n\t\t$Virus_Vit_1 = {56 E8 2E FA FF FF 83 C4 0C 85 C0 0F 8C C4 01 00 00 8B 85 FC CF FF FF 50 8D 85 00 D0 FF FF 50 56 E8 2A FA FF FF 89 C2 8B 85 FC CF FF FF 83 C4 0C 39 C2 0F 85 9D 01 00 00 56 E8 E1 F9 FF FF BE FF FF FF FF 6A 00 6A 00 E9}//INfector code\n\t\t$Virus_Vit_2 = \"vi324.tmp\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Virus_Vit*)\n}\n\n\nrule Uptycs_Ransomware_Lockbit_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f70415451c9e0fde18f4cf54c8ac7318\"\n\n\tstrings:\n\t\t$Ransomware_Lockbit_v2_0 =  {B8 40 BA 64 00 0F 1F 44 00 00 89 CA 32 10 88 10 48 83 C0 01 84 D2 75 F2}// decryption loop XOR with \"XOR with key \"jXT\\\\\"\"\n\t\t$Ransomware_Lockbit_v2_1 = {C6 44 24 20 78 C6 44 24 21 6B C6 44 24 22 65 C6 44 24 23 79 C6 44 24 24 62 C6 44 24 25 6F C6 44 24 26 61 C6 44 24 27 72 C6 44 24 28 64 C6 44 24 29 2D C6 44 24 2A 63 C6 44 24 2B 6F C6 44 24 2C 6E C6 44 24 2D 66 C6 44 24 2E 69 C6 44 24 2F 67 C6 44 24 30 00 C6 44 24 40 6E C6 44 24 41 74 C6 44 24 42 75 C6 44 24 43 73 C6 44 24 44 65 C6 44 24 45 72 C6 44 24 46 2E C6 44 24 47 64 C6 44 24 48 61 C6 44 24 49 74 C6 44 24 4A 2E C6 44 24 4B 6C C6 44 24 4C 6F C6 44 24 4D 67 C6 44 24 4E 00}// Moving pattern\n\t\t$Ransomware_Lockbit_v2_2 = {48 89 C8 31 D2 4C 01 E1 48 F7 F3 31 D2 48 89 C6 48 89 C8 48 0F AF F3 48 29 F0 48 89 37 48 F7 F3 31 D2 49 89 C1 4C 89 D0 48 F7 F3 49 39 C1 4C 0F 47 C8 49 83 C0 01 44 89 4F 08 48 83 C7 0C 4C 39 45 00 77 BC EB AB 66 2E 0F 1F 84 00 00 00 00 00}//DEcryption loop\n\n\n\tcondition:\n\t\tall of ($Ransomware_Lockbit_v2*)\n}\n\nrule Uptycs_Ransomware_Blackcat\n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"242e18ecbe7bfd1a505f33c1b5bacb30\"\n\n\tstrings:\n\t\t$Ransomware_Blackcat_0 = \"/rust/\"  ascii wide // Prefilter\n\t\t$Ransomware_Blackcat_1 = \"vim-cmd vmsvc/getallvms\"  ascii wide\n\t\t$Ransomware_Blackcat_2 = \"vmsvc/snapshot.removeall\"  ascii wide\n\t\t$Ransomware_Blackcat_3 = \"esxcli vm process kill --\"  ascii wide\n\t\t$Ransomware_Blackcat_4 = \"esxcli --formatter=csv --format-param=fields==\\\"WorldID,DisplayName\\\" vm process list\" ascii wide\n\t\t$Ransomware_Blackcat_5 = \"set_extension\"  ascii wide\n\t\t$Ransomware_Blackcat_6 = \"public_key\"  ascii wide\n\t\t$Ransomware_Blackcat_7 = \"access_key\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Blackcat*)\n}\n\nrule Uptycs_Ransomware_RTM_Locker \n{\n\tmeta:\n\t\tmalware_name = \"RANSOMWARE\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"eb0036b63444fecef2c22bf5eec215cb\"\n\n\tstrings:\n\t\t$Ransomware_RTM_Locker_0 = \"esxcli vm process list\"  ascii wide\n\t\t$Ransomware_RTM_Locker_1 = \"vmlist.tmp.txt\"  ascii wide\n\t\t$Ransomware_RTM_Locker_2 = \"esxcli vm process kill\"  ascii wide\n\t\t$Ransomware_RTM_Locker_3 = \"!!! Warning!!!\"  ascii wide\n\t\t$Ransomware_RTM_Locker_4 = \"Your network is infected by the RTM Locker command\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_RTM_Locker*)\n}\n\nrule Uptycs_Gafgyt_Demonv3 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"02f1ce2f553c519f222cd3f718a1c9df\"\n\n\tstrings:\n\t\t$Gafgyt_Demonv3_0 = \"Self Rep Fucking NeTiS and Thisity 0n Ur FuCkInG FoReHeAd We BiG L33T HaxErS\"  ascii wide\n\t\t$Gafgyt_Demonv3_1 = \"Demon\"  ascii wide\n\t\t$Gafgyt_Demonv3_2 = \"STOP\"  ascii wide\n\t\t$Gafgyt_Demonv3_3 = \"YaST2\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Demonv3*)\n}\n\nrule Uptycs_MBRoverwrite \n{\n\tmeta:\n\t\tmalware_name = \"MBRoverwrite \"\n\t\tdescription = \" MBROVERWRITE overwrites the MBR(Master Boot Record) causing the machine to load the sector overwritten after being initialized.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"133fc06f89216c88bef1f5f9a49d6ec9\"\n\n\tstrings:\n\t\t$MBRoverwrite_0 = \"/dev/sda\"  ascii wide\n\t\t$MBRoverwrite_1 = \"Writing payload inside %s\"  ascii wide\n\t\t$MBRoverwrite_2 = \"Payload successfully written\"  ascii wide\n\t\t$MBRoverwrite_3 = \"The machine will restart in 5 seconds\"  ascii wide\n\t\t$MBRoverwrite_4 = \"LOSS OF THE CURRENT SYSTEM\"  ascii wide\n\t\t$MBRoverwrite_5 = \"reboot\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($MBRoverwrite*)\n}\n\nrule Uptycs_DDosClient_v2 \n{\n\tmeta:\n\t\tmalware_name = \"DDosClient\"\n\t\tdescription = \"DDosClient is a DDOS client that has been used by ChinaZ APT group.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c69f5eb555cc10f050375353c205d5fa\"\n\n\tstrings:\n\t\t$Uptycs_DDosClient_v2_0 = \"COMMAND_DDOS_STOP\"  ascii wide\n\t\t$Uptycs_DDosClient_v2_1 = \"DDos SET!\"  ascii wide\n\t\t$Uptycs_DDosClient_v2_2 = \"DDos ATTACE!\"  ascii wide\n\t\t$Uptycs_DDosClient_v2_3 = \"SYN ATTACK!\"  ascii wide\n\t\t$Uptycs_DDosClient_v2_4 = \"UDP ATTACK!\"  ascii wide\n\t\t$Uptycs_DDosClient_v2_5 = \"ICMP ATTACK!\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Uptycs_DDosClient_v2*)\n}\n\nrule Uptycs_Coinminer_diicot \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2b846edfe925bf15bbaaaea8ecd3ef18\"\n\n\tstrings:\n\t\t$Coinminer_diicot_0 = \"xmrig\"  ascii wide\n\t\t$Coinminer_diicot_1 = \"minerinio()\"  ascii wide\n\t\t$Coinminer_diicot_2 = \"c3pool\"  ascii wide\n\t\t$Coinminer_diicot_3 = \"chmod +x Opera\"  ascii wide\n\t\t$Coinminer_diicot_4 = \"SRBMiner\"  ascii wide\n\t\t$Coinminer_diicot_5 = \"pkill syst3md\"  ascii wide\n\t\t$Coinminer_diicot_6 = \"pkill -STOP syst3m\"  ascii wide\n\t\t$Coinminer_diicot_7 = \"c3pool\"  ascii wide\n\t\t$Coinminer_diicot_8 = \"getingmineru\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_diicot*)\n}\n\nrule Uptycs_XorDDOs_Elknot \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3a2e72e95006c34d8b7903727812eda6\"\n\n\tstrings:\n\t\t$XorDDOs_Elknot_0 = \"ThreadAttack.cpp\"  ascii wide\n\t\t$XorDDOs_Elknot_1 = \"Fake.cpp\"  ascii wide\n\t\t$XorDDOs_Elknot_2 = \"NetBase.cpp\"  ascii wide\n\t\t$XorDDOs_Elknot_3 = \"_ZN5CFake10InitializeEv\"  ascii wide\n\t\t$XorDDOs_Elknot_4 = \"ServerIP.cpp\"  ascii wide\n\t\t$XorDDOs_Elknot_5 = \"StatBase.cpp\"  ascii wide\n\t\t$XorDDOs_Elknot_6 = \"_ZN13CThreadAttack11FakeUserAtkER8CSubTask\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOs_Elknot*)\n}\n\nrule Uptycs_Ransomware_Nokonoko \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b8aac7847fb65df827b3fc7cbbad82cb\"\n\n\tstrings:\n\t\t$Ransomware_Nokonoko_0 = \"/etc/systemd/system/nokonoko.service\"  ascii wide\n\t\t$Ransomware_Nokonoko_1 = \"systemctl daemon start nokonoko\"  ascii wide\n\t\t$Ransomware_Nokonoko_2 = \"encrypt selected file\"  ascii wide\n\t\t$Ransomware_Nokonoko_3 = \"--esxi\"  ascii wide\n\t\t$Ransomware_Nokonoko_4 = \"shutdown all virtual machines\"  ascii wide\n\t\t$Ransomware_Nokonoko_5 = \"Shutting down VMWare ESXi servers\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Nokonoko*)\n}\n\nrule Uptycs_XorDDOs_DDoSer \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c1d08153281ebaf25b4c51415431a0d3\"\n\n\tstrings:\n\t\t$XorDDOs_DDoSer_0 = \"Starting Attack\"  ascii wide\n\t\t$XorDDOs_DDoSer_1 = \"Stop DDoSer\"  ascii wide\n\t\t$XorDDOs_DDoSer_2 = \"Fake Ip\"  ascii wide\n\t\t$XorDDOs_DDoSer_3 = \"Owner : Defcuna\"  ascii wide\n\t\t$XorDDOs_DDoSer_4 = \"Setting up Sockets\"  ascii wide\n\t\t$XorDDOs_DDoSer_5 = \"root9:saloc\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOs_DDoSer*)\n}\n\nrule Uptycs_ReverseShell_GC2_Sheet \n{\n\tmeta:\n\t\tmalware_name = \"REVERSESHELL\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8376a6a7687261d5073216c51b221616\"\n\n\tstrings:\n\t\t$ReverseShell_GC2_Sheet_0 = \"internal/C2/c2.go\"  ascii wide\n\t\t$ReverseShell_GC2_Sheet_1 = \"internal/C2/execute.go\"  ascii wide\n\t\t$ReverseShell_GC2_Sheet_2 = \"internal/C2/download.go\"  ascii wide\n\t\t$ReverseShell_GC2_Sheet_3 = \"cmd/root.go\"  ascii wide\n\t\t$ReverseShell_GC2_Sheet_4 = \"internal/configuration/options.go\"  ascii wide\n\t\t$ReverseShell_GC2_Sheet_5 = \"authentication/authentication.go\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ReverseShell_GC2_Sheet*)\n}\n\nrule Uptycs_Gafgyt_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4b73246fe98869f3650da5c558a1a9a8\"\n\n\tstrings:\n\t\t$Gafgyt_v5_0 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_v5_1 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\t\t$Gafgyt_v5_2 = {48 89 C1 83 E1 0F 74 1A B8 10 00 00 00 48 29 C8 48 8D 0C 02 48 89 DA 48}\n\t\t$Gafgyt_v5_3 = {E0 08 09 D0 89 06 0F BE 47 02 C1 E8 1F 89 46 04 8A 47 02 C0 E8 03 83 E0 0F 89 46 08 0F B6 47 02 C1 E8 02 83 E0 01 89 46 0C 0F B6 47 02 D1 E8 83 E0 01 89 46 10 0F B6 47 02 83 E0 01 89 46 14 0F}\n\t\t$Gafgyt_v5_4 = {D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0}\n\n\tcondition:\n\t\tall of ($Gafgyt_v5*)\n}\n\nrule Uptycs_Backdoor_Badcall \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"aac5a52b939f3fe792726a13ff7a1747\"\n\n\tstrings:\n\t\t$Backdoor_Badcall_0 = \"MSG_ReadConfig\"  ascii wide\n\t\t$Backdoor_Badcall_1 = \"MSG_GetComInfo\"  ascii wide\n\t\t$Backdoor_Badcall_2 = \"MSG_Down\"  ascii wide\n\t\t$Backdoor_Badcall_3 = \"MSG_Cmd\"  ascii wide\n\t\t$Backdoor_Badcall_4 = \"A5StreamInit\"  ascii wide\n\t\t$Backdoor_Badcall_5 = \"MSG_Test\"  ascii wide\n\t\t$Backdoor_Badcall_6 = \"MSG_SetPath\"  ascii wide\n\t\t$Backdoor_Badcall_7 = \"SendMsg\"  ascii wide\n\t\t$Backdoor_Badcall_8 = {BA 56 55 55 55 BE 78 56 B4 C2 F7 EA 89 F8 B9 EF CD AB 90 C1 F8 1F 48 89 35 D1 56 20 00 48 89 0D D2 56 20 00 29 C2 8D 04 52 29 C7 B8 55 84 26 FE 85 D2 48 89 05 CD 56 20 00 7E 3A B8 55 84 26 FE B9 EF CD AB 90 BE 78 56 B4 C2 45 31 C0 90} // A5/1 stream cipher key initialization with keys 0xC2B45678, 0x90ABCDEF, and 0xFE268455, similar keys used in other lazarus backdoors\n\n\n\tcondition:\n\t\tall of ($Backdoor_Badcall*)\n}\n\nrule Uptycs_Ransomware_Babuk_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b313f5f381fcaaa8f49cdba5531c61f8\"\n\n\tstrings:\n\t\t$Ransomware_Babuk_v2_0 = \"DECRYPTION ID\"  ascii wide\n\t\t$Ransomware_Babuk_v2_1 = \"Tox Messenger\"  ascii wide\n\t\t$Ransomware_Babuk_v2_2 = \"main.encrypt_file\"  ascii wide\n\t\t$Ransomware_Babuk_v2_3 = \"Warning\"  ascii wide\n\t\t$Ransomware_Babuk_v2_4 = \"we do not need anything other than your money\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Babuk_v2*)\n}\n\nrule Uptycs_Coinminer_Nanominer \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"76f58bec17fb9e698d9de6a611bfcec7\"\n\n\tstrings:\n\t\t$Coinminer_Nanominer_0 = \"Cryptonight\"  ascii wide\n\t\t$Coinminer_Nanominer_1 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_Nanominer_2 = \"Ethereum wallet\"  ascii wide\n\t\t$Coinminer_Nanominer_3 = \"miner_version\"  ascii wide\n\t\t$Coinminer_Nanominer_4 = \"stratum\"  ascii wide\n\t\t//$Coinminer_Nanominer_5 = \"miner_reH99u\"  ascii wide\n\t\t$Coinminer_Nanominer_6 = \"nanominer\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Nanominer*)\n}\n\nrule Uptycs_Coinminer_XMRig \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"18b01ae68a8af82e576c199d13af923b\"\n\n\tstrings:\n\t\t$Coinminer_XMRig_0 = \"YOUR_WALLET_ADDRESS\"  ascii wide\n\t\t$Coinminer_XMRig_1 = \"ghostrider\"  ascii wide\n\t\t$Coinminer_XMRig_2 = \"loads/config.json\"  ascii wide\n\t\t$Coinminer_XMRig_3 = \"auto.c3pool.org\"  ascii wide\n\t\t$Coinminer_XMRig_4 = \"panthera\"  ascii wide\n\t\t$Coinminer_XMRig_5 = \"nicehash\"  ascii wide\n\t\t$Coinminer_XMRig_6 = \"XMRig\"  ascii wide\n\n\n\tcondition:\n\t\t6 of ($Coinminer_XMRig*)\n}\n\nrule Uptycs_XorDDOS_IRCBot \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4572fed852cd00d44c55c54dbed294c2\"\n\n\tstrings:\n\t\t$XorDDOS_IRCBot_0 = \"Simple-IRC-Botnet-master\"  ascii wide\n\t\t$XorDDOS_IRCBot_1 = \"main.NeverExit\"  ascii wide\n\t\t$XorDDOS_IRCBot_2 = \"main.notexit\"  ascii wide\n\t\t$XorDDOS_IRCBot_3 = \"DDosAttc\"  ascii wide\n\t\t$XorDDOS_IRCBot_4 = \"SetDDoSMode\"  ascii wide\n\t\t$XorDDOS_IRCBot_5 = \"udpAttack\"  ascii wide\n\t\t$XorDDOS_IRCBot_6 = \"httpGetAttack\"  ascii wide\n\t\t$XorDDOS_IRCBot_7 = \"ddos.tcp\"  ascii wide\n\t\t$XorDDOS_IRCBot_8 = \"utils.goldenEyeAttack\"  ascii wide\n\t\t$XorDDOS_IRCBot_9 = \"utils.slowlorisAttack\"  ascii wide\n\n\n\tcondition:\n\t\t 7 of ($XorDDOS_IRCBot*)\n}\n\nrule Uptycs_Golangstealer \n{\n\tmeta:\n\t\tmalware_name = \"Golangstealer\"\n\t\tdescription = \"Golangstealer is used by sidecopy APT attacks for scanning and stealing of the host directory of the target victim.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5fd6fc76b3ec2f5c97a44bf7bd3de972\"\n\n\tstrings:\n\t\t$Golangstealer_0 = \"main.visit\"  ascii wide\n\t\t$Golangstealer_1 = \"main.fileExists\"  ascii wide\n\t\t$Golangstealer_2 = \"main.IsExist\"  ascii wide\n\t\t$Golangstealer_3 = \"main.scan_recursive\"  ascii wide\n\t\t$Golangstealer_4 = \"main.Upload\"  ascii wide\n\t\t$Golangstealer_5 = \"-UserName-\"  ascii wide\n\t\t$Golangstealer_6 = \"/tmp/lists.txt\"  ascii wide\n\t\t$Golangstealer_7 = \"/tmp/temp.txt\"  ascii wide\n\t\t$Golangstealer_8 = \".css.csv.doc.egm.gif.htm.jpg.key.mjs.odm.odp.ods.odt.oef.ots.pdf.png.ppt.sdd.sec.svg.txt.xls.xml\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Golangstealer*)\n}\n\nrule Uptycs_Coinminer_Gminer \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"201157a454383f20b79f0332de445f633f30fc91\"\n\n\tstrings:\n\t\t$Coinminer_Gminer_0 = \"GMiner\"  ascii wide\n\t\t$Coinminer_Gminer_1 = \"stratum+ssl\"  ascii wide\n\t\t$Coinminer_Gminer_2 = \"stratum+tcp\"  ascii wide\n\t\t$Coinminer_Gminer_3 = \"ethproxy+tcp\"  ascii wide\n\t\t$Coinminer_Gminer_4 = \"mining.authorize\"  ascii wide\n\t\t$Coinminer_Gminer_5 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_Gminer_6 = \"EthereumStratum\"  ascii wide\n\t\t$Coinminer_Gminer_7 = \"eth_submitHashrate\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Gminer*)\n}\n\nrule Uptycs_Flooder_Golang_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"eeada7aa9c2342cbd199bb2af44313ce\"\n\n\tstrings:\n\t\t$Flooder_Golangv5_0 = \"main.Bot\"  ascii wide\n\t\t$Flooder_Golangv5_1 = \"main.Admin\"  ascii wide\n\t\t$Flooder_Golangv5_2 = \"main.AttackSend\"  ascii wide\n\t\t$Flooder_Golangv5_3 = \"main.AttackInfo\"  ascii wide\n\t\t$Flooder_Golangv5_4 = \"main.ClientList\"  ascii wide\n\t\t$Flooder_Golangv5_5 = \"ACK flood\"  ascii wide\n\t\t$Flooder_Golangv5_6 = \"UDP flood\"  ascii wide\n\t\t$Flooder_Golangv5_7 = \"SYN flood\"  ascii wide\n\t\t$Flooder_Golangv5_8 = \"HTTP flood\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_Golangv5*)\n}\n\nrule Uptycs_Ransomware_Lockbit_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9661c01af31a41caef2ccd3b6be06e60\"\n\n\tstrings:\n\t\t$Ransomware_Lockbit_v3_0 = {55 56 5A 52 55 56 5E 39 17} // KEY\n\t\t$Ransomware_Lockbit_v3_1 = {C6 84 24 D0 04 00 00 33 C6 84 24 D1 04 00 00 38 C6 84 24 D2 04 00 00 36 C6 84 24 D3 04 00 00 00 C6 84 24 C0 04 00 00 63 C6 84 24 C1 04 00 00 6D C6 84 24 C2 04 00 00 64 C6 84 24 C3 04 00 00 00 C6 84 24 B0 04 00 00 61 C6 84 24 B1 04 00 00 6E C6 84 24 B2 04 00 00 69 C6 84 24 B3 04 00 00 00 C6 84 24 A0 04 00 00 61 C6 84 24 A1 04 00 00 64 C6 84 24 A2 04 00 00 76 C6 84 24 A3 04 00 00 00 C6 84 24 90 04 00 00 6D C6 84 24 91 04 00 00 73 C6 84 24 92 04 00} // Extensions moving pattern\n\t\t$Ransomware_Lockbit_v3_2 = {C6 04 24 72 C6 44 24 01 65 C6 44 24 02 73 C6 44 24 03 74 C6 44 24 04 6F C6 44 24 05 72 C6 44 24 06 65 C6 44 24 07 2D C6 44 24 08 6D C6 44 24 09 79 C6 44 24 0A 2D C6 44 24 0B 66 C6 44 24 0C 69 C6 44 24 0D 6C C6 44 24 0E 65 C6 44 24 0F 73 C6 44 24 10 2E C6 44 24 11 74 C6 44 24 12 78 C6 44 24 13 74 C6 44 24 14 00 E8 3D F8 FF FF 48 85 C0 74 20} // restoremyfiles moving pattern\n\n\tcondition:\n\t\tall of ($Ransomware_Lockbit_v3*)\n}\n\nrule Uptycs_Merlin_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Merlin\"\n\t\tdescription = \"Merlin is a cross-platform post-exploitation Command & Control server and agent written in Go.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"239481e157c6e6ceec90b1ae64abf0eb\"\n\n\tstrings:\n\t\t$Merlin_v3_0 = \"Shellcode\"  ascii wide\n\t\t$Merlin_v3_1 = \"IsDownload\"  ascii wide\n\t\t$Merlin_v3_2 = \"FileDownload\"  ascii wide\n\t\t$Merlin_v3_3 = \"CheckIn\"  ascii wide\n\t\t$Merlin_v3_4 = \"Tasking\"  ascii wide\n\t\t$Merlin_v3_5 = \"ClientTaskResponse\"  ascii wide\n\t\t$Merlin_v3_6 = \"os.Getuid\"  ascii wide\n\t\t$Merlin_v3_7 = {48 89 54 24 6C 48 BA BD 7F 3A 46 B1 5A B6 73 48 89 54 24 74 48 BA B1 5A B6 73 5E AB DF 54 48 89 54 24 78 48 BA A9 00 34 2E F3 02 C8 0C 48 89 94 24 80 00 00 00 48 BA 54 D6 FB 1B 04 50 43 32 48 89 94 24 88 00 00 00 48 BA F1 9D 52 58 B6 EB B9 30 48 89 94 24 90 00 00 00 0F B6 54 24 75 88 54 24 6B 44 0F B6 44 24 70 44 88 44 24 6A 44 0F B6 4C 24 78 44 88 4C 24 69 44 0F B6 54 24 7E 44 88 54 24 68 44 0F B6 5C 24 6F 44 88 5C 24 67 44 0F} // moving pattern\n\n\n\tcondition:\n\t\tall of ($Merlin_v3*)\n}\n\nrule Uptycs_Mirai_HiatusRAT \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"\"\n\n\tstrings:\n\t\t$Mirai_HiatusRAT_0 = \"config\"  ascii wide // Mirai_HiatusRAT_0 to $Mirai_HiatusRAT_4 are inbuilt commands\n\t\t$Mirai_HiatusRAT_1 = \"tcp_forward\"  ascii wide\n\t\t$Mirai_HiatusRAT_2 = \"executor\"  ascii wide\n\t\t$Mirai_HiatusRAT_3 = \"script\"  ascii wide\n\t\t$Mirai_HiatusRAT_4 = \"socks5\"  ascii wide\n\t\t$Mirai_HiatusRAT_5 = \"byebye\"  ascii wide\n\t\t$Mirai_HiatusRAT_6 = \"dst_port\"  ascii wide\n\t\t$Mirai_HiatusRAT_7 = \"client\"  ascii wide\n\t\t$Mirai_HiatusRAT_8 = \"forwarder exist\"  ascii wide\n\t\t$Mirai_HiatusRAT_9 = \"X_UTIME:\"  ascii wide // heartbeat POST request containing X_UTIME, X_UUID (denoted as the MAC address).X_TOKEN\n\t\t$Mirai_HiatusRAT_10 = \"X_UUID:\"  ascii wide\n\t\t$Mirai_HiatusRAT_11 = \"X_TOKEN:\"  ascii wide\n\t\t$Mirai_HiatusRAT_12 = \"master/Api/active\"  ascii wide\n\t\t$Mirai_HiatusRAT_13 = \"master/Api/reply\"  ascii wide\n\t\t$Mirai_HiatusRAT_14 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\t\t$Mirai_HiatusRAT_15 = \"hlLjztqZ\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_HiatusRAT*)\n}\n\nrule Uptycs_CobaltStrike_linux_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Cobalt Strike\"\n\t\tdescription = \"Cobalt strike is used to generate custom payloads which are used by adversaries.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"73b10880a709204134d8d1d382d27ce3\"\n\n\tstrings:\n\t\t$CobaltStrike_linuxv2_0 = \"beacon\"  ascii wide\n\t\t$CobaltStrike_linuxv2_1 = \"joblist\"  ascii wide\n\t\t$CobaltStrike_linuxv2_2 = \"H00K_DLL\"  ascii wide \n\t\t$CobaltStrike_linuxv2_3 = \"User-Agent:\"  ascii wide\n\t\t$CobaltStrike_linuxv2_4 = \"Host:\"  ascii wide\n\t\t$CobaltStrike_linuxv2_5 = \"Cookie:\"  ascii wide\n\t\t$CobaltStrike_linuxv2_6 = \"HOOK\"  ascii wide\n\t\t$CobaltStrike_linuxv2_7 = \".sysinfo-pi\"  ascii wide\n\n\tcondition:\n\t\tall of ($CobaltStrike_linuxv2*)\n}\n\nrule Uptycs_Backdoor_Hellobot\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2781acc660630e21b8d36caf1e41f3e2\"\n\n\tstrings:\n\t\t$Hellobot_Update_0 = \"monitor_pid\"  ascii wide\n\t\t$Hellobot_Update_1 = \"auto_start\"  ascii wide\n\t\t$Hellobot_Update_2 = \"install_path_bak\"  ascii wide\n\t\t$Hellobot_Update_3 = \"is_backdoor\"  ascii wide\n\t\t$Hellobot_Update_4 = \"is_worker\"  ascii wide\n\t\t$Hellobot_Update_5 = \"fake_ps\"  ascii wide\n\t\t$Hellobot_Update_6 = \"install_path\"  ascii wide\n\t\t$Hellobot_Update_7 = \"plugin_dir\"  ascii wide\n\t\t$Hellobot_Update_8 = \"mon_interval\"  ascii wide\n\t\t$Hellobot_Update_9 = \"tmp_start_dir\"  ascii wide\n\t\t$Hellobot_Update_10 = \"fuck you\"  ascii wide\n\t\t$Hellobot_Update_11 = \"close_iptable\"  ascii wide\n\t\t$Hellobot_Update_12 = \"retry_interval\"  ascii wide\n\t\t$Hellobot_Update_13 = \"lock_file\"  ascii wide\n\t\t$Hellobot_Update_14 = \"mgr_pid\"  ascii wide\n\n\n\tcondition:\n\t\t13 of ($Hellobot_Update*)\n}\n\nrule Uptycs_ReverseShell_Bifrose_v2\n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8fd3925dadf37bebcc8844214f2bcd18\"\n\n\tstrings:\n\t\t$ReverseShell_Bifrose_v2_0 = {25633125732563334425633425752d252e32752d252e327520252e32753a252e3275}  //%c1%s%c3D%c4%u-%.2u-%.2u %.2u:%.2u\n\t\t$ReverseShell_Bifrose_v2_1 = {2563322573256333257525633425752d252e32752d252e327520252e32753a252e3275}  //%c2%s%c3%u%c4%u-%.2u-%.2u %.2u:%.2u\n\t\t$ReverseShell_Bifrose_v2_2 = \"x&5W2-`\"  ascii wide\n\t\t$ReverseShell_Bifrose_v2_3 = \"<*^34r\"  ascii wide\n\t\t$ReverseShell_Bifrose_v2_4 = \"unix|\"  ascii wide\n\t\t$ReverseShell_Bifrose_v2_5 = \"5.0.0.0|\"  ascii wide\n\n\tcondition:\n\t\tall of ($ReverseShell_Bifrose_v2*)\n}\n\n\n\nrule Uptycs_Manjusaka_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Manjusaka\"\n\t\tdescription = \"Manjusaka is a post-exploitation attack framework.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e246c50c7cf34ea6b76f1b2786deca99\"\n\n\tstrings:\n\t\t$Manjusaka_v2_0 = \"Manjusaka\"  ascii wide\n\t\t$Manjusaka_v2_1 = \"fileservice.server\"  ascii wide\n\t\t$Manjusaka_v2_2 = \"nps/controller.HttpResult_Action\"  ascii wide\n\t\t$Manjusaka_v2_3 = \"nps/controller.WebHook\"  ascii wide\n\t\t$Manjusaka_v2_4 = \"nps/protos.(*Inject).GetPid\"  ascii wide\n\t\t$Manjusaka_v2_5 = \"nps/protos.(*PassResult).GetUsername\"  ascii wide\n\t\t$Manjusaka_v2_6 = \"nps/protos.(*PassResult).GetPassword\"  ascii wide\n\t\t$Manjusaka_v2_7 = \"nps/protos.(*Config).GetTarget\"  ascii wide\n\t\t$Manjusaka_v2_8 = \"nps/protos.(*AgentEvent).GetReqtasklist\"  ascii wide\n\t\t$Manjusaka_v2_9 = \"nps/protos.(*AgentEvent).GetReqscreen\"  ascii wide\n\t\t$Manjusaka_v2_10 = \"nps/protos.(*AgentEvent).GetPluginexec\"  ascii wide\n\n\tcondition:\n\t\tall of ($Manjusaka_v2*)\n}\n\nrule Uptycs_Ransomware_Tigona \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a4b6089296c8713660dac2154891909c\"\n\n\tstrings:\n\t\t$Ransomware_Tigona_0 = \"Can't encrypt or erase all data\"  ascii wide\n\t\t$Ransomware_Tigona_1 = \"Successfully encrypted\"  ascii wide\n\t\t$Ransomware_Tigona_2 = \"Files damaged in the encryption process -\"  ascii wide\n\t\t$Ransomware_Tigona_3 = \"GETNEWENCRYPTEDFILENAME\"  ascii wide\n\t\t$Ransomware_Tigona_4 = \"EXTENDCONTROLDATAIFWANTED\"  ascii wide\n\t\t$Ransomware_Tigona_5 = \"UNENCRYPTED_FOLDERS_LIST\"  ascii wide\n\t\t$Ransomware_Tigona_6 = \"TOTAL_OF_ENCRYPTED_FILES\"  ascii wide\n\t\t$Ransomware_Tigona_7 = \"IV_ENCRYPTED\"  ascii wide\n\t\t$Ransomware_Tigona_8 = \"/erase\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Tigona*)\n}\n\nrule Uptycs_Mirai_CondiBot \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f8a518355c37ae3b3e7708b68c104476\"\n\n\tstrings:\n\t\t$Mirai_CondiBot_0 = \"TeamSpeak\"  ascii wide\n\t\t$Mirai_CondiBot_1 = \"/var/CondiBot\"  ascii wide\n\t\t$Mirai_CondiBot_2 = \"/dev/misc/watchdog\"  ascii wide\n\t\t$Mirai_CondiBot_3 = \"/extended/dev/watchdog\"  ascii wide\n\t\t$Mirai_CondiBot_4 = \"/bin/busybox\"  ascii wide\n\t\t$Mirai_CondiBot_5 = \"killer\"  ascii wide\n\t\t$Mirai_CondiBot_6 = \"SNQUERY: 127.0.0.1:AAAAAA:xsvr\"  ascii wide\n\t\t$Mirai_CondiBot_7 = \"hlLjztqZ\"  ascii wide\n\t\t$Mirai_CondiBot_8 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_CondiBot*)\n}\n\nrule Uptycs_Gafgyt_dropbear_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ba0adcf061325f80712fcd90560cb5a1\"\n\n\tstrings:\n\t\t$Gafgyt_dropbear_v2_0 = \"your device got infected by sunless IG\"  ascii wide\n\t\t$Gafgyt_dropbear_v2_1 = \"inboatzwetrust\"  ascii wide\n\t\t$Gafgyt_dropbear_v2_2 = \"bot.sunless\"  ascii wide\n\t\t$Gafgyt_dropbear_v2_3 = \"dropbear\"  ascii wide\n\t\t$Gafgyt_dropbear_v2_4 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_dropbear_v2_5 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_dropbear_v2*)\n}\n\nrule Uptycs_CVE_2021_4034_v3 \n{\n\tmeta:\n\t\tmalware_name = \"CVE20214034\"\n\t\tdescription = \"CVE20214034 is a Local Privilege Escalation Vulnerability Discovered in polkit's pkexec.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1d83b56af2b6c34681c1d68a5ae3156a\"\n\n\tstrings:\n\t\t$CVE_2021_4034_v3_0 = \"pwnkit.so\"  ascii wide\n\t\t$CVE_2021_4034_v3_1 = \"PATH=GCONV_PATH=.\"  ascii wide\n\t\t$CVE_2021_4034_v3_2 = \"SHELL=/lol/i/do/not/exists\"  ascii wide\n\t\t$CVE_2021_4034_v3_3 = \"CHARSET=PWNKIT\"  ascii wide\n\t\t$CVE_2021_4034_v3_4 = \"/usr/bin/pkexec\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($CVE_2021_4034_v3*)\n}\n\nrule Uptycs_InfoStealer_GobRAT \n{\n\tmeta:\n\t\tmalware_name = \"InfoStealer\"\n\t\tdescription = \"Infostealers are malwares that can steal credentials from browsers, FTP clients, email clients etc from victim machines.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7cc41954e94c658c0cc12acfb654c8df\"\n\n\tstrings:\n\t\t$InfoStealer_GobRAT_0 = \"/zone/bot.log\"  ascii wide\n\t\t$InfoStealer_GobRAT_1 = {050CFE3706380723433807193E03FE2F} // AES decryption key\n\t\t$InfoStealer_GobRAT_2 = \"12345678abcdefgh\"  ascii wide //AES decryption IV\n\t\t$InfoStealer_GobRAT_3 = \"connected\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_4 = \"/usr/bin/sh\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_5 = \"Go buildinf\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_6 = \"master secret\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_7 = \"key expansion\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_8 = \"/proc/self/auxv\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_9 = \"client finished\"  ascii wide //supporting\n\t\t$InfoStealer_GobRAT_10 = \"server finished\"  ascii wide //supporting\n\t\t$InfoStealer_alternate_1 = \"aaa.com/bbb/me\"  ascii wide // All functions start with aaa.com/bbb/me like aaa.com/bbb/mecrypt.Aesencrypt,aaa.com/bbb/menet.Send etc\n\t\t$InfoStealer_alternate_2 = \"socks5map\"  ascii wide\n\n\tcondition:\n\t\tall of ($InfoStealer_GobRAT*) and 1 of ($InfoStealer_alternate*)\n}\n\nrule Uptycs_Infostealer_Cyclops \n{\n\tmeta:\n\t\tmalware_name = \"Infostealer\"\n\t\tdescription = \"Infostealers are malwares that can steal credentials from browsers, FTP clients, email clients etc from victim machines.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c30a126f01d49667e99e20d885cc9a96\"\n\n\tstrings:\n\t\t$Infostealer_Cyclops_0 = {48 81 EC B0 00 00 00 48 89 AC 24 A8 00 00 00 48 8D AC 24 A8 00 00 00 48 BA 2F 70 DC 38 93 99 77 CB 48 89 54 24 6C 48 BA D8 1F 8E E2 21 03 59 E8 48 89 54 24 74 48 BA 21 03 59 E8 CB 81 2D E4 48 89 54 24 78 48 BA E6 FC 0D 2D D9 82 66 1D 48 89 94 24 80 00 00 00}\n\t\t$Infostealer_Cyclops_1 = {48 BA 46 87 69 74 E3 8F F8 08 48 89 94 24 88 00 00 00 48 BA 73 62 58 40 B0 D3 FC 18 48 89 94 24 90 00 00 00 48 BA 57 FA 61 40 F0 D4 0D 2B 48 89 94 24 98 00 00 00 48 BA 36 0F 3B 23 74 94 3E B3 48 89 94 24 A0 00 00 00 44 0F 11}\n\t\t$Infostealer_Cyclops_2 = {48 BA 64 42 44 53 31 6E 75 39 48 89 54 24 34 48 BA 2D 6F 3E 20 2C 2C 39 72 48 89 54 24 3C 48 BA 2C 2C 39 72 65 00 37 46}\n\t\t$Infostealer_Cyclops_3 = {48 BA 6D 75 73 71 7A 6F 4C 20 48 89 54 24 1E 48 BA 73 6F 6F 20 72 6F 47 7F 48 89 54 24 26 48 BA 04 01 0F 01 05 08 05 03}\n\t\t$Infostealer_Cyclops_4 = {49 3B 66 10 0F 86 EC 00 00 00 48 83 EC 50 48 89 6C 24 48 48 8D 6C 24 48 48 BA 73 54 74 75 63 74 75 7F 48 89 54 24 30 48 BA DF 20 6E F2 65 64 01 EB 48 89 54 24 38 48 BA CF 6C FE 49 06 CB F7 3C 48 89 54 24 40 48 BA 08 02 15 17 08 01 0F 01 48}\n\n\tcondition:\n\t\tall of ($Infostealer_Cyclops*)\n}\n\nrule Uptycs_DirtyCow_CVE_2016_5195_v3 \n{\n\tmeta:\n\t\tmalware_name = \"DirtyCow\"\n\t\tdescription = \"DirtyCOW(copy-on-write) is a vulnerability that exploits a race condition in the implementation of copy on write mechanism in linux kernel memory management systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e6ca9359b30748526f51bcc72b73d99a\"\n\n\tstrings:\n\t\t$DirtyCow_CVE_2016_5195_v3_0 = \"backdoored\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v3_1 = \"exploit failed\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v3_2 = \"payload target\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v3_3 = \"patch_payload_helper\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v3_4 = { 55 48 89 E5 48 83 EC 20 89 7D EC 89 75 E8 8B 45 E8 48 C1 E0 05 48 }\n\t\t$DirtyCow_CVE_2016_5195_v3_5 = \"failed to patch payload's\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v3_6 = \"waiting for reverse connect shell\"  ascii wide\n\n\tcondition:\n\t\tall of ($DirtyCow_CVE_2016_5195_v3*)\n}\n\n\nrule Uptycs_CVE_2021_4034_v2 \n{\n\tmeta:\n\t\tmalware_name = \"CVE20214034\"\n\t\tdescription = \"CVE20214034 is a Local Privilege Escalation Vulnerability Discovered in polkit's pkexec.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"785d0bcfa1341aa76198c035e772f605\"\n\n\tstrings:\n\t\t$CVE_2021_4034_v2_0 = \"/usr/bin/pkexec\"  ascii wide\n\t\t$CVE_2021_4034_v2_1 = \"maybe get shell now\"  ascii wide\n\t\t$CVE_2021_4034_v2_2 = \"PATH=GCONV_PATH=\"  ascii wide\n\t\t$CVE_2021_4034_v2_3 = \"payload.c\"  ascii wide\n\n\tcondition:\n\t\tall of ($CVE_2021_4034_v2*)\n}\n\nrule Uptycs_Ransomware_ItsSoEasy \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2c3aea1cbca6bfe16762df854cf91630\"\n\n\tstrings:\n\t\t$ItsSoEasy_Update_0 = \"runItsSoEasy\"  ascii wide\n\t\t$ItsSoEasy_Update_1 = \"doSomeThingElseWithDebugger\"  ascii wide\n\t\t$ItsSoEasy_Update_2 = \"removeFromServer\"  ascii wide\n\t\t$ItsSoEasy_Update_3 = \"encryptData\"  ascii wide\n\t\t$ItsSoEasy_Update_4 = \"clientIsIdiot\"  ascii wide\n\t\t$ItsSoEasy_Update_5 = \"runConnection\"  ascii wide\n\t\t$ItsSoEasy_Update_6 = \"createAndShowMessage\"  ascii wide\n\t\t$ItsSoEasy_Update_7 = \"selfRemove\"  ascii wide\n\t\t$ItsSoEasy_Compulsory_8 = \"Do not kill this process, otherwise your data is lost\"  ascii wide\n\n\tcondition:\n\t\t($ItsSoEasy_Compulsory_8) and  7 of ($ItsSoEasy_Update*)\n}\n\n\nrule Uptycs_Coinminer_PIVXMiner_v1\n{\n\tmeta:\n\t\tmalware_name = \"COINMINER\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"6ce9cfad59272c6ef333486ba6fa7ecc\"\n\n\tstrings:\n\t\t$Coinminer_PIVXMiner_0 = \"ccc CoinMiner started\"  ascii wide\n\t\t$Coinminer_PIVXMiner_1 = \"PIVX\"  ascii wide\n\t\t$Coinminer_PIVXMiner_2 = \"BitcoinMiner\"  ascii wide\n\t\t$Coinminer_PIVXMiner_3 = \"CreateNewBlockWithKey\"  ascii wide\n\t\t$Coinminer_PIVXMiner_4 = \"ThreadStakeMinter() exception\"  ascii wide\n\t\t$Coinminer_PIVXMiner_5 = \"pwalletMain->cs_wallet\"  ascii wide\n\t\t$Coinminer_PIVXMiner_6 = \"ThreadStakeMinter started\"  ascii wide\n\t\t$Coinminer_PIVXMiner_7 = \"hashProofOfStake\"  ascii wide\n\t\t$Coinminer_PIVXMiner_8 = \"AvailableCoinsType\"  ascii wide\n\t\t$Coinminer_PIVXMiner_9 = \"Running ccc CoinMiner with %u transactions in block (%u bytes)\"  ascii wide\n\t\t$Coinminer_PIVXMiner_10 = \"miner.cpp\"  ascii wide\n\t\t$Coinminer_PIVXMiner_11 = \"Litecoin Core\"  ascii wide\n\t\t$Coinminer_PIVXMiner_12 = \"CeilingCatCoin\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_PIVXMiner*)\n}\n\nrule Uptycs_Gafgyt_RyM_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1c53ec9a4cdabe9be5de8efe7ed17117\"\n\n\tstrings:\n\t\t$Gafgyt_RyM_v5_0 = { 24 EB 15 89 F0 83 C8 01 EB 03 8B 5B 08 3B 43 04 72 F8 8B 4B 0C 89 }\n\t\t$Gafgyt_RyM_v5_1 = { 31 C0 BA 01 00 00 00 B9 01 00 00 00 03 04 24 89 D7 31 D2 F7 F7 0F }\n\t\t$Gafgyt_RyM_v5_2 = { 74 DE 8D 40 F1 3C 01 76 D7 80 FA 38 74 D2 80 FA 0A 74 CD 80 }\n\t\t$Gafgyt_RyM_v5_3 = { 50 46 00 13 10 11 16 17 00 57 51 47 50 00 52 43 51 51 00 43 }\n\t\t$Gafgyt_RyM_v5_4 = { 4B 52 41 00 46 47 44 43 57 4E 56 00 48 57 43 4C 56 47 41 4A }\n\t\t$Gafgyt_RyM_v5_5 = \"FGDCWNV\"  ascii wide\n\t\t$Gafgyt_RyM_v5_6 = \"QWRGPTKQMP\"  ascii wide\n\t\t$Gafgyt_RyM_v5_7 = \"HWCLVGAJ\"  ascii wide\n\t\t$Gafgyt_RyM_v5_8 = \"cFOKLKQVPCVMP\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_RyM_v5*)\n}\n\nrule Uptycs_Ransomware_NoEscape\n{\n    meta:\n        malware_name = \"Ransomware\"\n        description = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n        author = \"Uptycs Inc\"\n        version = \"1\"\n        md5 =\"c850f6816459e3364b2a54239642101b\"\n// Changed condition from all of them to 5 of them\n\n    strings:\n        $Ransomware_NoEscape_0 = \"large_file_size_mb\"  ascii wide\n        $Ransomware_NoEscape_1 = \"spot_size_mb\"  ascii wide\n        $Ransomware_NoEscape_2 = \"note_text\"  ascii wide\n        $Ransomware_NoEscape_3 = \"HOW_TO_RECOVER_FILES.txt\"  ascii wide\n        $Ransomware_NoEscape_4 = \"mp_key\"  ascii wide\n        $Ransomware_NoEscape_5 = {6D 2B 36 77 6C 52 78 4F 65 35 6D 6F 4B 47 38 53 4D 53 41 4A 34 33 46 71 64 66 6A 78 62 78 74 4B 68 4A 6C 53 68 4C 55 33 57 39 6C 41 73 6D 78 38 43 35 33 2B 70 4D 41 6D 33 56 52 2F 69 46 41 61 38 63 43 59 44 66 57 37 70 6F 52 6A 57 4E 4B 78}\n        $Ransomware_NoEscape_6 = {38 64 52 37 75 6C 53 52 59 58 35 32 31 34 77 4A 39 37 31 49 6A 75 55 73 55 53 6D 71 30 55 67 77 77 32 78 55 52 6E 4C 58 73 50 31 4C 62 31 38 43 48 66 7A 37 2F 4E 47 43 44 7A 77 6D 62 31 6B 4D}\n\n\n    condition:\n        5 of ($Ransomware_NoEscape*)\n}\n\n\n\nrule Uptycs_Ransomware_Blacksuit \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"9656cd12e3a85b869ad90a0528ca026e\"\n\n\tstrings:\n\t\t$Ransomware_Blacksuit_0 = \"README.BlackSuit.txt\"  ascii wide\n\t\t$Ransomware_Blacksuit_1 = \"Extortioner\"  ascii wide\n\t\t$Ransomware_Blacksuit_2 = \"essential files were encrypted\"  ascii wide\n\t\t$Ransomware_Blacksuit_3 = \"VMX Cartel ID:\"  ascii wide\n\t\t$Ransomware_Blacksuit_4 = \"esxcli vm process list > PID_list_\"  ascii wide\n\t\t$Ransomware_Blacksuit_5 = \"-killvm\"  ascii wide\n\t\t$Ransomware_Blacksuit_6 = \"-vmsyslog\"  ascii wide\n\t\t$Ransomware_Blacksuit_7 = \"-demonoff\"  ascii wide\n\t\t$Ransomware_Blacksuit_8 = \"Failed encrypt: write end file\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Blacksuit*)\n}\n\nrule Uptycs_Tsunami_v1 \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a flooder, distributed denial-of-service (DDoS) that is capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9d8ee5edc79359d69c9dbb70eb913c35\"\n\n\tstrings:\n\t\t$Tsunami_v3_0 = \"PRIVMSG\"  ascii wide\n\t\t$Tsunami_v3_1 = \"synflood\"  ascii wide\n\t\t$Tsunami_v3_2 = \"ngsynflood\"  ascii wide\n\t\t$Tsunami_v3_3 = \"ackflood\"  ascii wide\n\t\t$Tsunami_v3_4 = \"ngackflood\"  ascii wide\n\t\t$Tsunami_v3_5 = \"attacks.c\"  ascii wide\n\t\t$Tsunami_v3_6 = \"show the status of bot\"  ascii wide\n\t\t$Tsunami_v3_7 = \"current version of bot\"  ascii wide\n\n\tcondition:\n\t\tall of ($Tsunami_v3*)\n}\n\nrule Uptycs_Coinminer_diicot_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"6b32614502d5d2606631564f9077eb06\"\n\n\tstrings:\n\t\t$Coinminer_diicot_v2_0 = \"Installing XMR Miner\"  ascii wide\n\t\t$Coinminer_diicot_v2_1 = \"Installing Spreader\"  ascii wide\n\t\t$Coinminer_diicot_v2_2 = \"pkill -STOP xmrig\"  ascii wide\n\t\t$Coinminer_diicot_v2_3 = \"pkill -9 SRBMiner\"  ascii wide\n\t\t$Coinminer_diicot_v2_4 = \"pkill -STOP syst3m\"  ascii wide\n\t\t$Coinminer_diicot_v2_5 = \"pkill -STOP cnrig\"  ascii wide\n\t\t$Coinminer_diicot_v2_6 = \"c3pool\"  ascii wide\n\t\t$Coinminer_diicot_v2_7 = \"/var/tmp/payload\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_diicot_v2*)\n}\n\nrule Uptycs_Gafgyt_Rebirth_v3\n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9a3b74119ba7a1095554ace42f515b81\"\n\n\tstrings:\n\t\t$Gafgyt_Rebirth_v3_0 = \"XMAS\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_1 = \"STOP\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_2 = \"Joined RebirthReborn\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_3 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_4 = \"8.8.8.8\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_5 = \"/proc/net/route\"  ascii wide\n\t\t$Gafgyt_Rebirth_v3_6 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_Rebirth_v3*)\n}\n\nrule Uptycs_Ransomware_Sodinokibi \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"26ad6a4dc847ede4dcf7ac29bc384526\"\n\n\tstrings:\n\t\t$Ransomware_Sodinokibi_0 = \"esxcli vm process kill --type=force --world-id=\"  ascii wide\n\t\t$Ransomware_Sodinokibi_1 = \"Encrypting\"  ascii wide\n\t\t$Ransomware_Sodinokibi_2 = \"File is encrypted by data\"  ascii wide\n\t\t$Ransomware_Sodinokibi_3 = \"Key inizialization error ... something wrong with config\"  ascii wide\n\t\t$Ransomware_Sodinokibi_4 = \"esxi - stop VMs\"  ascii wide\n\t\t$Ransomware_Sodinokibi_5 = \"encrypts current dir\"  ascii wide\n\t\t$Ransomware_Sodinokibi_6 = \"Error create note in dir\"  ascii wide\n\t\t$Ransomware_Sodinokibi_7 = \"without --path encrypts current dir\"  ascii wide\n\n\tcondition:\n\t\t7 of ($Ransomware_Sodinokibi*)\n}\n\nrule Uptycs_Flooder_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"74861d6ff1fb96f4d6af18f63acabbfa\"\n\n\tstrings:\n\t\t$Flooder_v4_0 = \"Syn Flooding:\"  ascii wide\n\t\t$Flooder_v4_1 = \"Need root privelages to run...\"  ascii wide\n\t\t$Flooder_v4_2 = \"Error in setting HDRINCL\"  ascii wide\n\t\t$Flooder_v4_3 = \"s at port:\"  ascii wide\n\t\t$Flooder_v4_4 = \"FLUX METHODS\"  ascii wide\n\t\t$Flooder_v4_5 = \"./flux ip port threads amount_of_packets\"  ascii wide\n\t\t$Flooder_v4_6 = \"Sendto error\"  ascii wide\n\t\t$Flooder_v4_7 = \"flux.c\"  ascii wide\n\n\tcondition:\n\t\tall of ($Flooder_v4*)\n}\n\nrule Uptycs_Backdoor_Generic \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"b115a7b69fca830cd762c1aa08647191\"\n\n\tstrings:\n\t\t$Backdoor_Generic_0 = \"T57ROOTATOPENWILLDOTME\"  ascii wide\n\t\t$Backdoor_Generic_1 = \"GOT HAHA: %d\"  ascii wide\n\t\t$Backdoor_Generic_2 = \"Got new win size:%d,%d\"  ascii wide\n\t\t$Backdoor_Generic_3 = \"send %d to client\"  ascii wide\n\t\t$Backdoor_Generic_4 = \"read %d from pty fd\"  ascii wide\n\t\t$Backdoor_Generic_5 = \"About to connect to %s:%s\"  ascii wide\n\t\t$Backdoor_Generic_6 = \"[scsi_eh_4]\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_Generic*)\n}\n\nrule Uptycs_XorDDOs_v4 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4360a2347d77c406f74c78b2197ffc62\"\n\n\tstrings:\n\t\t$XorDDOs_v4_0 = \"[Dosing :: \"  ascii wide\n\t\t$XorDDOs_v4_1 = \"[%i: Voly Sent]\"  ascii wide\n\t\t$XorDDOs_v4_2 = \"AUTHENTICATE \\\"\\\"\"  ascii wide\n\t\t$XorDDOs_v4_3 = \"No connection could be made\"  ascii wide\n\t\t$XorDDOs_v4_4 = \"signal NEWNYM\"  ascii wide\n\t\t$XorDDOs_v4_5 = \"attack\"  ascii wide\n\t\t$XorDDOs_v4_6 = \"getaddrinfo:\"  ascii wide\n\t\t$XorDDOs_v4_7 = { 74 24 48 8B 45 E0 48 83 C0 10 48 8B 08 48 8B 45 E0 48 83 C0 08 48 }\n\n\tcondition:\n\t\tall of ($XorDDOs_v4*)\n}\n\nrule Uptycs_ChamelDoH \n{\n\tmeta:\n\t\tmalware_name = \"ChamelDoH\"\n\t\tdescription = \"ChamelDoH, DNS-over-HTTPS provides encrypted communication between an infected device and the command and control server, making malicious queries indistinguishable from regular HTTPS traffic.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"22021b26ae7ac7e36b55076431aa5746\"\n\n\tstrings:\n\t\t$ChamelDoH_0 = \"\\\"doh\\\":\"  ascii wide\n\t\t$ChamelDoH_1 = \"\\\"ns_record\\\":\"  ascii wide\n\t\t$ChamelDoH_2 = \"\\\"host_name\\\":\"  ascii wide\n\t\t$ChamelDoH_3 = \"\\\"system_type\\\":\"  ascii wide\n\t\t$ChamelDoH_4 = \"\\\"system_version\\\":\"  ascii wide\n\t\t$ChamelDoH_5 = \"\\\"whoami\\\":\"  ascii wide\n\t\t$ChamelDoH_6 = \"\\\"process_pid\\\":\"  ascii wide\n\t\t$ChamelDoH_7 = \"\\\"process_name\\\":\"  ascii wide\n\t\t$ChamelDoH_8 = \"001020304050607080910111213141516171819202122232425262728293031\"  ascii wide\n\t\t$ChamelDoH_9 = \"resolve?type=TXT&name=\"  ascii wide\n\t\t$ChamelDoH_10 = \"CONNECT_ONLY is required!\"  ascii wide\n\t\t$ChamelDoH_11 = \"Accept: application/dns-json\"  ascii wide\n\t\t$ChamelDoH_12 = \"task_id\"  ascii wide\n\t\t$ChamelDoH_13 = \"task_status\"  ascii wide\n\t\t$ChamelDoH_14 = \"task_result\"  ascii wide\n\n\tcondition:\n\t\tall of ($ChamelDoH*)\n}\n\nrule Uptycs_Mirai_Gen_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"4d6119fc6a6da53c3a9e7fad4e1e63bb\"\n\n\tstrings:\n\t\t$Mirai_Gen_v2_0 = {00 00 00 55 89 E5 0F B6 55 08 0F B6 45 0C C1 E2 18 C1 E0 10}\n\t\t$Mirai_Gen_v2_1 = \"JELEAD\"  ascii wide\n\t\t$Mirai_Gen_v2_2 = \"kurc\"  ascii wide\n\t\t$Mirai_Gen_v2_3 = {59 41 52 0A 00 47 45 54 20 2F}\n\t\t$Mirai_Gen_v2_4 = \"HUHNO\"  ascii wide\n\t\t$Mirai_Gen_v2_5 = \"GET /bins/jew\"  ascii wide\n\t\t$Mirai_Gen_v2_6 = {55 89 E5 0F  B6 55 08 0F B6 45 0C C1 E2 18 C1 E0 10 09 C2 0F B6 4D 10 0F B6 45 14 C1 E1 08 09 C2 09 D1 5D 89 CA 89 C8 C1 E0 18 81 E2 00 FF 00 00 C1 E2 08 09 D0 89 CA C1 EA 18 81 E1 00 00 FF 00 C1 E9 08 09 CA 09 D0 C3}\n\n\tcondition:\n\t\tall of ($Mirai_Gen_v2*)\n}\n\nrule Uptycs_Rekoobe_agent_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Rekoobe\"\n\t\tdescription = \"Rekoobe is a Trojan for linux that targets SPARC architectures and some of its variants also infected x86 and x86-64 architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"3477735428e24922b3301eefc1063039\"\n\n\tstrings:\n\t\t$Rekoobe_agent_v3_0 = {C6 84 24 20 03 00 00 2F C6 84 24 21 03 00 00 65 C6 84 24 22 03 00 00 74 C6 84 24 23 03 00 00 63 C6 84 24 24 03 00 00 2F C6 84 24 25 03 00 00 69 C6 84 24 26 03 00 00 73 C6 84 24 27 03 00 00 73 C6 84 24 28 03 00 00 75 C6 84 24 29 03 00 00 65 C6 84 24 2A 03 00 00 2E C6 84 24 2B 03 00 00 6E C6 84 24 2C 03 00 00 65 C6 84 24 2D 03 00 00 74 C6 84 24 2E 03 00 00} // moving pattern\n\t\t$Rekoobe_agent_v3_1 = {C6 44 24 50 72 C6 44 24 51 30 C6 44 24 52 73 C6 44 24 53 74 C6 44 24 54 40 C6 44 24 55 23 C6 44 24 56 24} //key\n\t\t$Rekoobe_agent_v3_2 = {0F B6 55 00 0F B6 03 01 C2 44 01 E2 89 D0 C1 F8 1F C1 E8 18 44 8D 24 02 41 81 E4 FF 00 00 00 41 29 C4 49 63 F4 49 8D 74 35 00 48 89 DF E8 8E FF FF FF 48 83 C3 01 48 83 C5 01 4C 39} //decryption loop\n\t\t$Rekoobe_agent_v3_3 = \"t1_lib.c\"  ascii wide //supporting strings\n\t\t$Rekoobe_agent_v3_4 = \"t1_enc.c\"  ascii wide\n\t\t$Rekoobe_agent_v3_5 = \"evp_asn1.c\"  ascii wide\n\n\tcondition:\n\t\tall of ($Rekoobe_agent_v3*)\n}\n\nrule Uptycs_Ransomware_Hive \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"171d2a50c6d7e69281d1c3ef98d510f2\"\n\n\tstrings:\n\t\t$Ransomware_Hive_0 = \"EncryptFiles\"  ascii wide\n\t\t$Ransomware_Hive_1 = \"EraseMemory\"  ascii wide\n\t\t$Ransomware_Hive_2 = \"ScanPaths\"  ascii wide\n\t\t$Ransomware_Hive_3 = \"EraseKey\"  ascii wide\n\t\t$Ransomware_Hive_4 = \"KillNonRoot\"  ascii wide\n\t\t$Ransomware_Hive_5 = \"RemoveItself\"  ascii wide\n\t\t$Ransomware_Hive_6 = \"NotifyMOTD\"  ascii wide\n\t\t$Ransomware_Hive_7 = \"ExportKey\"  ascii wide\n\t\t$Ransomware_Hive_8 = \"ExportPaths\"  ascii wide\n\t\t$Ransomware_Hive_9 = \"EvaluateFilename\"  ascii wide\n\t\t$Ransomware_Hive_10 = { 40 03 4C 39 C1 73 3A 4C 89 84 24 F0 00 00 00 48 89 D3 48 89 CF 4C }\n\n\tcondition:\n\t\tall of ($Ransomware_Hive*)\n}\n\nrule Uptycs_Infostealer_generic_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Infostealer\"\n\t\tdescription = \"Infostealers are malwares that can steal credentials from browsers, FTP clients, email clients etc from victim machines.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"9cfa568e4f02ea7f911f5c95feb0f755\"\n\n\tstrings:\n\t\t$Infostealer_generic_v2_0 = \"torsetup@v1.0.0/torsetup_linux.go\"  ascii wide\n\t\t$Infostealer_generic_v2_1 = \".onion/\"  ascii wide\n\t\t$Infostealer_generic_v2_2 = \"curand@v1.0.0/curand.go\"  ascii wide\n\t\t$Infostealer_generic_v2_3 = \"persist@v1.0.0/persist_linux.go\"  ascii wide\n\t\t$Infostealer_generic_v2_4 = \"os/executable.go\"  ascii wide\n\t\t$Infostealer_generic_v2_5 = \"./implant_linux.go\"  ascii wide\n\t\t$Infostealer_generic_v2_6 = \"torsetup.POSTRequest\"  ascii wide\n\t\t$Infostealer_generic_v2_7 = \"torsetup.Create\"  ascii wide\n\t\t$Infostealer_generic_v2_8 = \"persist.crontab\"  ascii wide\n\t\t$Infostealer_generic_v2_9 = \"torsetup.(*TorObj).UpdateTorrc\"  ascii wide\n\t\t$Infostealer_generic_v2_10 = \"torsetup.GETRequest\"  ascii wide\n\t\t$Infostealer_generic_v2_11 = \"torsetup.(*TorObj).Download\"  ascii wide\n\t\t$Infostealer_generic_v2_12 = \"persist.(*PersistObj).InitTor\"  ascii wide\n\t\t$Infostealer_generic_v2_13 = \"curand.(*CurandObj).PseudoRandomBytes\"  ascii wide\n\t\t$Infostealer_generic_v2_14 = \"persist.PathExists\"  ascii wide\n\t\t$Infostealer_generic_v2_15 = \"persist.Check_isAdmin\"  ascii wide\n\t\t$Infostealer_generic_v2_16 = \"persist.(*PersistObj).InitConf\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Infostealer_generic_v2*)\n}\n\nrule Uptycs_Backdoor_SeaSpy \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4ca4f582418b2cc0626700511a6315c0\"\n\n\tstrings:\n\t\t$Backdoor_SeaSpy_0 = \"usage: ./BarracudaMailService <Network-Interface>. e.g.: ./BarracudaMailService eth0\"  ascii wide\n\t\t$Backdoor_SeaSpy_1 = \"NO port code\"  ascii wide\n\t\t$Backdoor_SeaSpy_2 = \"pcap_lookupnet: %s\"  ascii wide\n\t\t$Backdoor_SeaSpy_3 = \"Child process id:%d\"  ascii wide\n\t\t$Backdoor_SeaSpy_4 = \"[*]Success!\"  ascii wide\n\t\t$Backdoor_SeaSpy_5 = \"enter open tty shell...\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_SeaSpy*)\n}\n\nrule Uptycs_Backdoor_Generic_v1 \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"d2273214a3c7765aa71b82860d076cac\"\n\n\tstrings:\n\t\t$Backdoor_Generic_0 = \"[-] Plisteneter %d has been killed %d\"  ascii wide\n\t\t$Backdoor_Generic_1 = \"src/ssh_tracer.c\"  ascii wide\n\t\t$Backdoor_Generic_2 = \"intercept_ssh\"  ascii wide\n\t\t$Backdoor_Generic_3 = \"[hint] you need to sudo or be root or something\"  ascii wide\n\t\t$Backdoor_Generic_4 = \"[hint] i hear someone has lpes\"  ascii wide\n\t\t$Backdoor_Generic_5 = \"[-] ERROR: parent: Exiting on signal %d.\"  ascii wide\n\t\t$Backdoor_Generic_6 = \"[-] ERROR: parent: Child process %d died with %s (%d).\"  ascii wide\n\t\t$Backdoor_Generic_7 = \"[-] ERROR: You don't have permission attach to other users processes\"  ascii wide\n\t\t$Backdoor_Generic_8 = \"[-] ERROR: netlink unable to send\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_Generic*)\n}\n\nrule Uptycs_ReverseShell_Whirlpool \n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"177add288b289d43236d2dba33e65956\"\n\n\tstrings:\n\t\t$ReverseShell_Whirlpool_0 = \"error -1 exit\"  ascii wide\n\t\t$ReverseShell_Whirlpool_1 = \"create socket error: %s(error: %d)\"  ascii wide\n\t\t$ReverseShell_Whirlpool_2 = \"connect error: %s(error: %d)\"  ascii wide\n\t\t$ReverseShell_Whirlpool_3 = { C7 00 20 32 3E 26 66 C7 40 04 31 00}\n\t\t$ReverseShell_Whirlpool_4 = \"plain_connect\"  ascii wide\n\t\t$ReverseShell_Whirlpool_5 = \"ssl_connect\"  ascii wide\n\t\t$ReverseShell_Whirlpool_6 = \"SSLShell.c\"  ascii wide\n\t\t$ReverseShell_Whirlpool_7 = { 00 2D 63 00 2F 62 69 6E 2F 73 68 00 }\n\n\n\tcondition:\n\t\tall of ($ReverseShell_Whirlpool*)\n}\n\nrule Uptycs_ReverseShell_V2 \n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"80a8f486df0c4f4bfbbcadf386cab50f\"\n\n\tstrings:\n\t\t$ReverseShell_V2_0 = {55 48 89 E5 48 83 EC 20 89 7D EC 48 89 75 E0 BE 01 00 00 00 BF 11 00} // strong\n\t\t$ReverseShell_V2_1 = {8B 45 F4 BA 05 00 00 00 BE 98 0C 40 00 89 C7 E8 42 FE FF FF 8B 45 F4 BE 00 00 00 00 89 C7 E8 23 FD FF FF 8B 45 F4} // strong code\n\t\t$ReverseShell_V2_2 = \"start_reverse_shell\"  ascii wide\n\t\t$ReverseShell_V2_3 = \"/bin/\"  ascii wide //supporting \n\t\t$ReverseShell_V2_4 = \"gethostbyname\"  ascii wide\n\t\t$ReverseShell_V2_5 = \"dup2\"  ascii wide\n\t\t$ReverseShell_V2_6 = \"connect\"  ascii wide\n\t\t$ReverseShell_V2_7 = \"socket\"  ascii wide\n\n\tcondition:\n\t\tall of ($ReverseShell_V2*)\n}\n\nrule Uptycs_Ransomware_BadWeather \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"17437da191cdd75595c5280823b3b1cd\"\n\n\tstrings:\n\t\t$Ransomware_BadWeather_0 = \"BadWeather Ransomware\"  ascii wide\n\t\t$Ransomware_BadWeather_1 = \"ESXI Encrypter\"  ascii wide\n\t\t$Ransomware_BadWeather_2 = \"Encryption log\"  ascii wide\n\t\t$Ransomware_BadWeather_3 = \"Your computers and servers are encrypted\"  ascii wide\n\t\t$Ransomware_BadWeather_4 = \"DANGER\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_BadWeather*)\n}\nrule Uptycs_Ransomware_QuantumLocker \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"176332c65209c4d0108b1a48472ef7dd\"\n\t\n\tstrings:\n\t\t$Ransomware_QuantumLocker_0 = \"Your ID:\"  ascii wide\n\t\t$Ransomware_QuantumLocker_1 = \".onion\"  ascii wide\n\t\t$Ransomware_QuantumLocker_2 = \"Tor browser\"  ascii wide\n\t\t$Ransomware_QuantumLocker_3 = \"Quantum Locker\"  ascii wide\n\t\t$Ransomware_QuantumLocker_4 = \"encrypt_file\"  ascii wide\n\t\t$Ransomware_QuantumLocker_5 = \"cid=\"  ascii wide\n\t\t$Ransomware_QuantumLocker_6 = \"network were encrypted\"  ascii wide\n\t\t$Ransomware_QuantumLocker_7 = \"decryption\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_QuantumLocker*)\n}\nrule Uptycs_Mirai_bashlite_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"e708dc255227eac024fc2b415e13dc52\"\n\n\tstrings:\n\t\t$Mirai_bashlitev4_0 = \"Segmentation Fault (memory)\"  ascii wide\n\t\t$Mirai_bashlitev4_1 = \"injection.c\"  ascii wide\n\t\t$Mirai_bashlitev4_2 = \"/dev/misc/watchdog\"  ascii wide\n\t\t$Mirai_bashlitev4_3 = \"hlLjztqZ\"  ascii wide\n\t\t$Mirai_bashlitev4_4 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\t\t$Mirai_bashlitev4_5 = { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 }\n\t\t$Mirai_bashlitev4_6 = { FE 48 39 F3 0F 94 C2 48 83 F9 FF 0F 94 C0 84 D0 74 16 4B 8D }\n\t\t$Mirai_bashlitev4_7 = { FF 48 81 EC D0 00 00 00 48 8D 84 24 E0 00 00 00 48 89 54 24 30 C7 04 24 18 00 }\n\t\t$Mirai_bashlitev4_8 = { D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0 }\n\t\t$Mirai_bashlitev4_9 = { 48 89 D8 48 83 C8 01 EB 04 48 8B 76 10 48 3B 46 08 72 F6 48 8B }\n\t\t$Mirai_bashlitev4_10 = { 24 18 0F B7 44 24 20 8B 54 24 1C 83 F9 01 8B 7E 0C 89 04 24 8B }\n\t\t$Mirai_bashlitev4_11 = { DB 8B 4C 24 0C 8B 54 24 08 83 F9 01 76 10 0F B7 02 83 E9 02 83 }\n\t\t$Mirai_bashlitev4_12 = { 24 08 8B 4C 24 04 85 D2 74 0D 31 C0 89 F6 C6 04 08 00 40 39 D0  }\n\t\t$Mirai_bashlitev4_13 = { C3 57 8B 44 24 0C 8B 4C 24 10 8B 7C 24 08 F3 AA 8B 44 24 08 }\n\t\t$Mirai_bashlitev4_14 = \"killer.c\"  ascii wide\n\t\t$Mirai_bashlitev4_15 = \"host::features=cmd,shell_v2\"  ascii wide\n\t\t$Mirai_bashlitev4_16 = \"busybox wget http://%d.%d.%d.%d/bins.sh\"  ascii wide\n\t\t$Mirai_bashlitev4_17 = \"Host: 12.12.12.12.12.12.12.12.12.12.\"  ascii wide\n\n\tcondition:\n\t\t11 of ($Mirai_bashlitev4*)\n}\n\nrule Uptycs_Backdoor_Keyplug\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"fc96684e47b522362811925dec6b3b24\"\n\n\tstrings:\n\t\t$Backdoor_Keyplug_xor0 = \"|TCP://\"  ascii wide\n\t\t$Backdoor_Keyplug_xor1 = \"|WSS://\"  ascii wide\n\t\t$Backdoor_Keyplug_xor2 = \"|UDP://\"  ascii wide\n\t\t$Backdoor_Keyplug_xor3 = \"|+http\"  ascii wide\n\t\t$Backdoor_Keyplug_zero4 = \"00|\"  ascii wide\n\t\t$Backdoor_Keyplug_base5 = \"Bzht0QXbURoDKIxID\"  ascii wide\n\t\t$Backdoor_Keyplug_base6 = \"pqTaLXyV3FzgR43Ba\"  ascii wide\n\t\t$Backdoor_Keyplug_base7 = \"uirWmX3fSBhplR2sj\"  ascii wide\n\t\t$Backdoor_Keyplug_base8 = \"NZTsIkAC6FUDY7FyN\"  ascii wide\n\t\t$Backdoor_Keyplug_supporting9 = \".upx0\"  ascii wide\n\t\t$Backdoor_Keyplug_supporting10 = \".upx1\"  ascii wide\n\n\tcondition:\n\t\tany of ($Backdoor_Keyplug_xor*)  and  all of ($Backdoor_Keyplug_zero*) and  2 of ($Backdoor_Keyplug_base*) and all of ($Backdoor_Keyplug_supporting*)\n}\n\nrule Uptycs_Ransomware_Trigona \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7049824f0e920e44e18c013ab07facbc\"\n\n\tstrings:\n\t\t$Ransomware_Trigona_0 = \"TOTAL_OF_ENCRYPTED_FILES\"  ascii wide\n\t\t$Ransomware_Trigona_1 = \"ENCRYPTED_IN_FILE\"  ascii wide\n\t\t$Ransomware_Trigona_2 = \"IS NOT ENCRYPTED FILE DETECTED\"  ascii wide\n\t\t$Ransomware_Trigona_3 = \"/tmp/how_to_decrypt.txt\"  ascii wide\n\t\t$Ransomware_Trigona_4 = \"Get computer ID...\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Trigona*)\n}\n\nrule Uptycs_Gafgyt_gen_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"60645528e11acddbfb8a7d9373e12095\"\n\n\tstrings:\n\t\t$common_0  = { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 } //VT crowdsourced YARA\n\t\t$common_1  = { FF 48 81 EC D0 00 00 00 48 8D 84 24 E0 00 00 00 48 89 54 24 30 C7 04 24 18 00 }//VT crowdsourced YARA\n\t\t$common_2  = { 31 D1 89 0F 48 83 C7 04 85 F6 7E 3B 44 89 C8 45 89 D1 45 89 C2 41 }//VT crowdsourced YARA\n\t\t$common_3  = \"qE6MGAbI\"  ascii wide\n\t\t$common_4  = \"Qqsfuf\"  ascii wide\n\t\t$Gafgyt_gen_v2_1 = \"tcpraw\"  ascii wide\n\t\t$Gafgyt_gen_v2_2 = \"icmpecho\"  ascii wide\n\t\t$Gafgyt_gen_v2_3 = \"udpplain\"  ascii wide\n\t\t$Gafgyt_gen_v2_4 = \"tcpflood\"  ascii wide\n\t\t$Gafgyt_gen_v2_5 = \"udpflood\"  ascii wide\n\n\tcondition:\n\t\tall of ($common_*) and 2 of ($Gafgyt_gen_v2_*)\n}\n\nrule Uptycs_Ransomware_Revil \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d2f6fb278ce8d20340d04f9d473962a2\"\n\n\tstrings:\n\t\t$Ransomware_Revil_0 = \"esxcli --formatter=csv --format-param=fields==\\\"WorldID,DisplayName\\\" vm process list\"  ascii wide\n\t\t$Ransomware_Revil_1 = \"ENCRYPTED\"  ascii wide\n\t\t$Ransomware_Revil_2 = \"Revix\"  ascii wide\n\t\t$Ransomware_Revil_3 = \"esxcli vm process kill --type=force --world-id\"  ascii wide\n\t\t$Ransomware_Revil_4 = \"Usage example: elf.exe --path /vmfs/ --threads 5\"  ascii wide\n\t\t$Ransomware_Revil_5 = \"BY DEFAULT THIS SOFTWARE USES 50 THREADS\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Revil*)\n}\n\nrule Uptycs_Hellsing_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Hellsing\"\n\t\tdescription = \"Hellsing is infected with a custom backdoor capable of downloading and uploading files, updating and uninstalling itself.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"89af7398c6943ea09bf501038d3f66e3\"\n\n\tstrings:\n\t\t$Hellsing_Linux_0 = \"iptables -D INPUT -m state --state NEW -m tcp -p tcp --dport %hu -j ACCEPT\"  ascii wide\n\t\t$Hellsing_Linux_1 = \"Segmentation fault (core dumped)\"  ascii wide\n\t\t$Hellsing_Linux_2 = \"tlv10PortMapTLVE\"  ascii wide\n\t\t$Hellsing_Linux_3 = \"tlv9PluginTLVE\"  ascii wide\n\t\t$Hellsing_Linux_4 = \"tlv9RemoteTLVE\"  ascii wide\n\t\t$Hellsing_Linux_5 = \"tlv9KeyModTLVE\"  ascii wide\n\t\t$Hellsing_Linux_6 = \"bot.whatismyipaddress.com\"  ascii wide\n\t\t$Hellsing_Linux_7 = \"start plugin process failed\"  ascii wide\n\t\t$Hellsing_Linux_8 = \"ZN3tlv9PluginTLV10DecryptTLVEPhj\"  ascii wide\n\t\t$Hellsing_Linux_9 = \"PluginManager\"  ascii wide\n\t\t$Hellsing_Linux_10 = \"initPluginStat\"  ascii wide\n\t\t$Hellsing_Linux_11 = \"pluginxxx\"  ascii wide\n\n\tcondition:\n\t\t11 of ($Hellsing_Linux*)\n}\n\nrule Uptycs_Gafgyt_dropbear_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"edc24c1e747b1a26fdc540851ae8deb6\"\n\n\tstrings:\n\t\t$Gafgyt_dropbear_v3_0 = \"dropbear\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_1 = \"/var/Sofia\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_2 = \"var/tmp/sonia\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_3 = \"home/Davinci\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_4 = \"[ensure] dupe detected\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_5 = \"TSource Engine Query\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_6 = \"var/Kylin\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_7 = \"app/hi3511\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_8 = \"/zconf/dvrAssist\"  ascii wide\n\n\tcondition:\n\t\t8 of ($Gafgyt_dropbear_v3*)\n}\n\nrule Uptycs_Ransomware_Quantum \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5d06b567982554f5c4277128e16b1e51\"\n\n\tstrings:\n\t\t$Ransomware_Quantum_0 = \"encrypt_file\"  ascii wide\n\t\t$Ransomware_Quantum_1 = \"All your files are encrypted on all devices across the network\"  ascii wide\n\t\t$Ransomware_Quantum_2 = \"How do I recover\"  ascii wide\n\t\t$Ransomware_Quantum_3 = \"TOR browser\"  ascii wide\n\t\t$Ransomware_Quantum_4 = \".onion\"  ascii wide\n\t\t$Ransomware_Quantum_5 = \"There is no way to decrypt your files manually unless we provide a special decryption tool\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Quantum*)\n}\n\n\nrule Uptycs_Ransomware_Monti\n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0ce82210b5678f3f7e28ad0244e56af9\"\n\n\tstrings:\n\t\t$Ransomware_Monti_Updated_0 = \"All of your files are currently encrypted by MONTI strain\"  ascii wide\n\t\t$Ransomware_Monti_Updated_1 = \"DON'T TRY TO CONTACT feds or any recovery companies\"  ascii wide\n\t\t$Ransomware_Monti_Updated_2 = \"Killing VM\"  ascii wide\n\t\t$Ransomware_Monti_Updated_3 = \".onion\"  ascii wide\n\t\t$Ransomware_Monti_Updated_4 = \"To prove that we REALLY CAN get your data back - we offer you to decrypt two random files completely free of charge\"  ascii wide\n\t\t$Ransomware_Monti_Updated_5 = \"We've downloaded a pack of your internal data and are ready to publish it on our news website if you do not respond.\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Monti_Updated*)\n}\n\nrule Uptycs_Gafgyt_dropbear_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7fbca2138279f0db5bd8fd6759b824e4\"\n\n\tstrings:\n\t\t$Gafgyt_dropbear_v3_0 = \"dropbear\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_1 = { 24 EB 15 89 F0 83 C8 01 EB 03 8B 5B 08 3B 43 04 72 F8 8B 4B 0C 89 }\n\t\t$Gafgyt_dropbear_v3_2 = { 31 C0 BA 01 00 00 00 B9 01 00 00 00 03 04 24 89 D7 31 D2 F7 F7 0F }\n\t\t$Gafgyt_dropbear_v3_3 = { 8B 4C 24 14 8B 74 24 0C 8B 5C 24 10 85 C9 74 0D 31 D2 8A 04 1A 88 }\n\t\t$Gafgyt_dropbear_v3_4 = \"Debugger detected. Exiting.\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_5 = \"var/Kylin/var/spool\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_6 = \"/var/Sofia\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_7 = \"app/hi3511\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_8 = \"usr/dvr_main _8182T_1108\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_9 = \"var/tmp/sonia\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_10 = \"hlLjztqZ\"  ascii wide\n\t\t$Gafgyt_dropbear_v3_11 = \"npxXoudifFeEgGaACScs\"  ascii wide\n\n\tcondition:\n\t\t11 of ($Gafgyt_dropbear_v3*)\n}\n\n\nrule Uptycs_Rekoobe_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Rekoobe\"\n\t\tdescription = \"Rekoobe Trojan for linux mostly targets SPARC architectures and some of its variants also infected x86 and x86-64 architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d312073a10e8d1fede43cfd18c6f3517\"\n\n\tstrings:\n\t\t$Rekoobe_v4_0 = {C6 85 DB FB FF FF 25 C6 85 DC FB FF FF 30 C6 85 DD FB FF FF 34 C6 85 DE FB FF FF 64 C6 85 DF FB FF FF 7C C6 85 E0 FB FF FF 25 C6 85 E1 FB FF FF 30 C6 85 E2 FB FF FF 32 C6 85 E3 FB FF FF 64 C6 85 E4 FB FF FF 7C C6 85 E5 FB FF FF 25 C6 85 E6 FB FF FF 30 C6 85 E7 FB FF FF 32 C6} //moving pattern\n\t\t$Rekoobe_v4_1 = {85 E8 FB FF FF 64 C6 85 E9 FB FF FF 7C C6 85 EA FB FF FF 25 C6 85 EB FB FF FF 30 C6 85 EC FB FF FF 32 C6 85 ED FB FF FF 64 C6 85 EE FB FF FF 7C C6 85 EF FB FF FF 25 C6 85 F0 FB FF FF 30 C6 85 F1 FB FF FF 32 C6 85 F2 FB FF FF 64}//moving pattern\n\t\t$Rekoobe_v4_2 = {C6 45 D2 2F C6 45 D3 75 C6 45 D4 73 C6 45 D5 72 C6 45 D6 2F C6 45 D7 69 C6 45 D8 6E C6 45 D9 63 C6 45 DA 6C C6 45 DB 75 C6 45 DC 64 C6 45 DD 65 C6 45 DE 2F C6 45 DF 73 C6 45 E0 64 C6 45 E1 66 C6 45 E2 77 C6 45 E3 65 C6 45 E4 78 C6 45 E5 2E C6 45 E6 68 C6 45 E7 00 C6 45 C6 2F}//moving pattern\n\t\t$Rekoobe_v4_3 = {C6 45 C7 74 C6 45 C8 6D C6 45 C9 70 C6 45 CA 2F C6 45 CB 2E C6 45 CC 6C C6 45 CD 6C C6 45 CE 6F C6 45 CF 63 C6 45 D0 6B C6 45 D1 00 C6 45 C3 77 C6 45 C4 62}//moving pattern\n\t\t$Rekoobe_v4_4 = {C6 05 00 77 05 08 56 C6 05 01 77 05 08 4D C6 05 02 77 05 08 77 C6 05 03 77 05 08 61 C6 05 04 77 05 08 72 C6 05 05 77 05 08 65 C6 05 06 77 05 08 23 C6 05 07 77 05 08 40 C6 05 08 77 05 08 21 C6 05 09 77 05 08 53}//moving pattern\n\t\t$Rekoobe_v4_5 = {C6 05 0A 77 05 08 74 C6 05 0B 77 05 08 61 C6 05 0C 77 05 08 74 C6 05 0D 77 05 08 69 C6 05 0E 77 05 08 6F C6 05 0F 77 05 08 6E}//moving pattern\n\n\tcondition:\n\t\tall of ($Rekoobe_v4*)\n}\n\nrule Uptycs_Gafgyt_v6 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"39e7a3c1ed4161b0276a8205706d6946\"\n\n\tstrings:\n\t\t$Gafgyt_v6_0 = { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 }\n\t\t$Gafgyt_v6_1 = { FE 48 39 F3 0F 94 C2 48 83 F9 FF 0F 94 C0 84 D0 74 16 4B 8D }\n\t\t$Gafgyt_v6_2 = { FF 48 81 EC D0 00 00 00 48 8D 84 24 E0 00 00 00 48 89 54 24 30 C7 04 24 18 00 }\n\t\t$Gafgyt_v6_3 = { 48 89 D8 48 83 C8 01 EB 04 48 8B 76 10 48 3B 46 08 72 F6 48 8B }\n\t\t$Gafgyt_v6_4 = { 4E F8 48 8D 4E D8 49 8D 42 E0 48 83 C7 03 EB 6B 4C 8B 46 F8 48 8D }\n\t\t$Gafgyt_v6_5 = { C1 83 E1 0F 74 1A B8 10 00 00 00 48 29 C8 48 8D 0C 02 48 89 DA 48 }\n\t\t$Gafgyt_v6_6 = { 41 88 02 48 85 D2 75 ED 5A 5B 5D 41 5C 41 5D 4C 89 F0 41 5E }\n\t\t$Gafgyt_v6_7 = { ED 48 89 44 24 30 44 89 6C 24 10 7E 47 48 89 C1 44 89 E8 44 }\n\t\t$Gafgyt_v6_8 = { 31 D1 89 0F 48 83 C7 04 85 F6 7E 3B 44 89 C8 45 89 D1 45 89 C2 41 }\n\t\t$Gafgyt_v6_9 = { 44 24 23 48 8B 6C 24 28 83 F9 01 4A 8D 14 20 0F B6 02 88 45 08 }\n\t\t$Gafgyt_v6_10 = { 83 FE 01 76 12 0F B7 07 83 EE 02 48 83 C7 02 48 01 C2 83 FE 01 }\n\t\t$Gafgyt_v6_11 = \"timestop\"  ascii wide\n\t\t$Gafgyt_v6_12 = \"36r797rephvncqy2oi\"  ascii wide\n\n\tcondition:\n\t\t11 of ($Gafgyt_v6*)\n}\n\nrule Uptycs_Backdoor_Telegram_flaming \n{\n\tmeta:\n\t\tmalware_name = \"BACKDOOR\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server. \"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2d968a0bcc74bc68786b6f7e4ea005eb\"\n\n\tstrings:\n\t\t$Backdoor_Telegram_flaming_0 = \"flaming/tele.go\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_1 = \"PowerOff.func1\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_2 = \"KillPid\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_3 = \"GetLocalIp\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_4 = \"GetPid\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_5 = \"Execute\"  ascii wide\n\t\t$Backdoor_Telegram_flaming_6 = \"main.Loop\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_Telegram_flaming*)\n}\n\nrule Uptycs_Tsunami_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"42866ba06cd8f1ef671e53f35b9fe7d8\"\n\n\n\tstrings:\n\t\t$Tsunami_v4_0 = { 45 F8 8B 40 14 48 63 D0 48 8D 45 E0 48 8D 70 04 48 8B 45 F8 48 8B }\n\t\t$Tsunami_v4_1 = {55 48 89 E5 48 81 EC A0 00 00 00 48 89 BD 68 FF FF FF 48 89 B5 60 FF FF FF 48 8D B5 70 FF FF FF 48 8B BD 68 FF FF FF E8 50 02 00 00 C9 C3 } //get_info\n\t\t$Tsunami_v4_2 = { 45 FE 00 00 EB 16 48 8B 55 D8 0F B7 02 0F B7 C0 01 45 E0 48 83 45 } // cal_checksum function logic\n\t\t$Tsunami_v4_3 = { 45 F8 8B 40 14 48 63 D0 48 8D 45 E0 48 8D 70 04 48 8B 45 F8 48 8B } //DNSAmp\n\t\t$Tsunami_v4_4 = \"/proc/cpuinfo\"  ascii wide\n\t\t$Tsunami_v4_5 = \"/proc/meminfo\"  ascii wide\n\t\t$Tsunami_v4_6 = \"/proc/stat\"  ascii wide\n\t\t$Tsunami_v4_7 = \"/etc/rc.d/rc.local\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Tsunami_v4*)\n}\n\n\nrule Uptycs_Coinminer_diicot_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1bfe4a06a84a8f253964dd71c7d9b025\"\n\n\tstrings:\n\t\t$Coinminer_diicot_v3_0 = \"pkill -STOP xmrig\"  ascii wide\n\t\t$Coinminer_diicot_v3_1 = \"pkill -9 SRBMiner\"  ascii wide\n\t\t$Coinminer_diicot_v3_2 = \"pkill -STOP cnrig\"  ascii wide\n\t\t$Coinminer_diicot_v3_3 = \"function XMR\"  ascii wide\n\t\t$Coinminer_diicot_v3_4 = \"Spreader-Password\"  ascii wide\n\t\t$Coinminer_diicot_v3_5 = \"rm -rf ~/c3pool\"  ascii wide\n\t\t$Coinminer_diicot_v3_6 = \"/var/tmp/payload\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_diicot_v3*)\n}\n\nrule Uptycs_Ransomware_Conti \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c4c82675564cc237a76f48c36aea919d\"\n\n\tstrings:\n\t\t$Ransomware_Conti_0 = \"All of your files are currently encrypted by CONTI strain\"  ascii wide\n\t\t$Ransomware_Conti_1 = \"CONTI_README.txt\"  ascii wide\n\t\t$Ransomware_Conti_2 = \"Shuts down all virtual machines\"  ascii wide\n\t\t$Ransomware_Conti_3 = \"--vmkiller(Only for esxi)\"  ascii wide\n\t\t$Ransomware_Conti_4 = \"Killing virtual machines ----------\"  ascii wide\n\t\t$Ransomware_Conti_5 = \"Starting encryption - CONTI POC\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Conti*)\n}\n\nrule Uptycs_Rootkit_Diamorphine \n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"A rootkit is a malicious software that allows an unauthorized user to have privileged access to a computer and to restricted areas of its software.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"49d437b607454a7743ab9bce921cc58d\"\n\n\tstrings:\n\t\t$Rootkit_Diamorphine_0 = \"diamorphine_secret\"  ascii wide\n\t\t$Rootkit_Diamorphine_1 = \"description=LKM rootkit\"  ascii wide\n\t\t$Rootkit_Diamorphine_2 = \"author=m0nad\"  ascii wide\n\t\t$Rootkit_Diamorphine_3 = \"hacked_getdents\"  ascii wide\n\t\t$Rootkit_Diamorphine_4 = \"orig_getdents\"  ascii wide\n\t\t$Rootkit_Diamorphine_5 = \"newcreds\"  ascii wide\n\t\t$Rootkit_Diamorphine_6 = \"hacked_kill\"  ascii wide\n\t\t$Rootkit_Diamorphine_7 = \"module_hide\"  ascii wide\n\t\t$Rootkit_Diamorphine_8 = \"commit_creds\"  ascii wide\n\t\t$Rootkit_Diamorphine_9 = \"is_invisible\"  ascii wide\n\t\t$Rootkit_Diamorphine_10 = \"diamorphine_cleanup\"  ascii wide\n\n\tcondition:\n\t\t8 of ($Rootkit_Diamorphine*)\n}\n\n\nrule Uptycs_PupyRAT_v3\n{\n\tmeta:\n\t\tmalware_name = \"PupyRAT\"\n\t\tdescription = \"Pupy is a multi-platform Remote Access trojan (RAT) utilized by advanced persistent threat (APT) groups.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"bb04bac638e35775b93ddfa30f0a3b09\"\n\n\tstrings:\n\t\t$PupyRAT_v3_0 = \"_pupy.error\"  ascii wide\n\t\t$PupyRAT_v3_1 = \"LZMA error\"  ascii wide\n\t\t$PupyRAT_v3_2 = \"pupy://\"  ascii wide\n\t\t$PupyRAT_v3_3 = \"LD_PRELOAD=%s HOOK_EXIT=%d CLEANUP=%d exec %s 1>/dev/null 2>/dev/null\"  ascii wide\n\t\t$PupyRAT_v3_4 = \"Args not passed\"  ascii wide\n\t\t$PupyRAT_v3_5 = \"Too many args\"  ascii wide\n\t\t$PupyRAT_v3_6 = \"Can't execute\"  ascii wide\n\t\t$PupyRAT_v3_7 = \"mexec:stdin\"  ascii wide\n\t\t$PupyRAT_v3_8 = \"mexec:stdout\"  ascii wide\n\t\t$PupyRAT_v3_9 = \"mexec:stderr\"  ascii wide\n\t\t$PupyRAT_v3_10 = \"ld_preload_inject_dll\"  ascii wide\n\n\tcondition:\n\t\tall of ($PupyRAT_v3*)\n}\n\nrule Uptycs_Chisel_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Chisel\"\n\t\tdescription = \"Chisel is a fast TCP/UDP tunnel, transported over HTTP, secured via SSH.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b8d58f24f39a3e96970f78b6a021787c\"\n\n\tstrings:\n\t\t$Chisel_v2_0 = \"github.com/jpillora/chisel\"  ascii wide\n\t\t$Chisel_v2_1 = \"tunnel.Tunnel\"  ascii wide\n\t\t$Chisel_v2_2 = \"chisel.pid\"  ascii wide\n\t\t$Chisel_v2_3 = \"tunnel.Proxy\"  ascii wide\n\t\t$Chisel_v2_4 = \"tunnel.udpHandler\"  ascii wide\n\t\t$Chisel_v2_5 = \"tunnel.udpPacket\"  ascii wide\n\t\t$Chisel_v2_6 = \"tunnel.udpConn\"  ascii wide\n\t\t$Chisel_v2_7 = \"tunnel.sshTunnel\"  ascii wide\n\t\t$Chisel_v2_8 = \"github.com/jpillora/backoff\"  ascii wide\n\t\t$Chisel_v2_9 = \"github.com/jpillora/requestlog\"  ascii wide\n\n\tcondition:\n\t\tall of ($Chisel_v2*)\n}\n\n\n\nrule Uptycs_Mirai_Ladvix \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"27db0f88ac298522d776466221925f28\"\n\n\tstrings:\n\t\t$Mirai_Ladvix_0 = { E8 01 83 45 E4 01 8B 45 E4 83 F8 57 76 B5 83 45 EC 01 8B 45 EC 48 }\n\t\t$Mirai_Ladvix_1 = { 10 85 C0 BA FF FF FF FF 74 14 8D 65 F4 5B 5E 5F 89 D0 5D C3 8D }\n\t\t$Mirai_Ladvix_2 = \"infectc\"  ascii wide\n\t\t$Mirai_Ladvix_3 = \"vomit_blood\"  ascii wide\n\t\t$Mirai_Ladvix_4 = \"actually_infect\"  ascii wide\n\t\t$Mirai_Ladvix_5 = \"ebola_infect\"  ascii wide\n\t\t$Mirai_Ladvix_6 = \"ebola.c\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_Ladvix*)\n}\n\nrule Uptycs_Rootkit_Reptile \n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"A rootkit is a malicious software that allows an unauthorized user to have privileged access to a computer and to restricted areas of its software.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"246c5bec21c0a87657786d5d9b53fe38\"\n\n\tstrings:\n\t\t$Rootkit_Reptile_0 = \"parasite_loader/encrypt\"  ascii wide\n\t\t$Rootkit_Reptile_1 = \"kmatryoshka.c\"  ascii wide\n\t\t$Rootkit_Reptile_2 = \"parasite_loader.mod.c\"  ascii wide\n\t\t$Rootkit_Reptile_3 = \"parasite_blob\"  ascii wide\n\t\t$Rootkit_Reptile_4 = \"ksym_lookup_cb\"  ascii wide\n\t\t$Rootkit_Reptile_5 = \"ksym_lookup_name\"  ascii wide\n\t\t$Rootkit_Reptile_6 = \"p_load.mod.c\"  ascii wide\n\t\t$Rootkit_code_7 = { C7 00 5F 5F 64 6F C7 40 04 5F 73 79 73 C7 40 08 5F 69 6E 69 C7 40 0C 74 5F 6D 6F C7 40 10 64 75 6C 65 }\n\n\tcondition:\n\t\t6 of ($Rootkit_Reptile*) and $Rootkit_code_7\n}\n\nrule Uptycs_PassthehashTool \n{\n\tmeta:\n\t\tmalware_name = \"PassthehashTool\"\n\t\tdescription = \"Pass-the-Hash (PtH) is a cyberattack technique where an attacker, after obtaining password hashes from compromised systems, uses those hashes to authenticate and gain unauthorized access to other systems without needing to know the original passwords, exploiting the way Windows stores and uses hashed credentials.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"bdbf7f614e80708cec143702f91e4184\"\n        // Rules based on patched code and the YARA works on memdump of all pth-* related binaries when executed with related parameters\n\n\tstrings:\n\t\t$compulsory_0 = \"HASH PASS: Substituting user supplied NTLM HASH\"  ascii wide\n\t\t$compulsory_1 = \"HASH PASS: Substituting user supplied LM HASH\"  ascii wide\n\t\t$compulsory_2 = \"SMBHASH\"  ascii wide\n\t\t$compulsory_3 = \"E_set_hash\"  ascii wide\n\t\t$compulsory_5 = {8B 45 FC 8D 14 00 8B 45 F8 01 D0 83 C0 21 48 98 0F B6 84 05 F0 FB FF FF 88 45 F7 80 7D F7 39 7E 04 80 4D F7 20 80 7D F7 2F 7E 06 80 7D F7 39 7E 38 80 7D F7 60 7E 06 80 7D F7 66 7E 2C}\n\t\t$PassthehashTool_2 = \"export SMBHASH=\\\"_LM_HASH_:_NTLM_HASH_\\\"\"  ascii wide\n\t\t$PassthehashTool_3 = \"Error reading SMB HASH\"  ascii wide\n\t\t$PassthehashTool_5 = \"SMBencrypt_hash\"  ascii wide\n\t\t$PassthehashTool_6 = \"Error invalid char (%c) for hash.\"  ascii wide\n\n\tcondition:\n\t\tall of ($compulsory*) and 1 of ($PassthehashTool*)\n}\n\n\nrule Uptycs_Coinminer_Generic \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7073447769709ad58a1b977daee80f68\"\n\n\tstrings:\n\t\t$Coinminer_Generic_0 = \"stratum+tcp://\"  ascii wide\n\t\t$Coinminer_Generic_1 = \"They say I'm rude. I'm not rude at all\"  ascii wide\n\t\t$Coinminer_Generic_2 = \"but I still want to say, fuck your mother\"  ascii wide\n\t\t$Coinminer_Generic_3 = \"%s %s -l /tmp/%s.txt\"  ascii wide\n\t\t$Coinminer_Generic_4 = \"level 35 crond on\"  ascii wide\n\t\t$Coinminer_Generic_5 = \"ulimit -HSn 4096\"  ascii wide\n\t\t$Coinminer_Generic_6 = \"ehco %s start >>/etc/rc.local\"  ascii wide\n\t\t$Coinminer_Generic_7 = \"fs.file-max=6553560\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_Generic*)\n}\n\nrule Uptycs_ReverseShell_v3 \n{\n\tmeta:\n\t\tmalware_name = \"ReverseShell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c5eff1a8bf01deeaea0f25508dca0572\"\n\n\tstrings:\n\t\t$ReverseShell_v3_0 = { 6A 29 58 99 6A 02 5F 6A 01 5E 0F 05 48 97 48 B9 02 00 }\n\t\t$ReverseShell_v3_1 = { 2A 58 0F 05 6A 03 5E 48 FF CE 6A 21 58 0F 05 75 F6 6A 3B 58 99 48 BB 2F 62 69 6E 2F 73 68 00 53 48 89 E7 52 57 48 89 E6 0F 05 }\n\t\t// Reverse shell detection in memory based on syscall and its parameters in a sequence sys_socket, sys_Connect, sys_dup2, sys_execve\n\t\t$ReverseShell_v3_2 = \"/bin/sh\"  ascii wide\n\n\tcondition:\n\t\tall of ($ReverseShell_v3*)\n}\n\nrule Uptycs_Backdoor_Winnti \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b14547d5484dc2b88fc084d57bf54e4f\"\n\n\tstrings:\n\t\t$Backdoor_Winnti_0 = \"/var/run/libudev.pid\"  ascii wide\n\t\t$Backdoor_Winnti_1 = \"/var/run/libudev1.pid\"  ascii wide\n\t\t$Backdoor_Winnti_2 = \"127.0.0.1\"  ascii wide\n\t\t$Backdoor_Winnti_3 = \"HIDE_THIS_SHELL=x /lib/libxselinux 0\"  ascii wide\n\t\t$Backdoor_Winnti_4 = \"/tmp/ans.log\"  ascii wide\n\t\t$Backdoor_Winnti_5 = \"[advNetSrv] can not create a PF_INET socket\"  ascii wide\n\t\t$Backdoor_Winnti_6 = \"/usr/sbin/dmidecode  | grep -i 'UUID' |cut -d' ' -f2 2>/dev/null\"  ascii wide\n\t\t$Backdoor_Winnti_7 = { C1 E8 1F 84 C0 75 7B 85 D2 89 D5 7E 75 8B 47 0C 39 C6 7D 6E 44 8D } //VT based YARA\n\t\t$Backdoor_Winnti_8 = { 89 E5 48 89 7D D8 48 8B 45 D8 0F B6 40 27 0F BE C0 89 45 F8 48 8B } //VT based YARA\n\n\tcondition:\n\t\tall of ($Backdoor_Winnti*)\n}\n\n\nrule Uptycs_GoScanSSH \n{\n\tmeta:\n\t\tmalware_name = \"GoScanSSH\"\n\t\tdescription = \"GoScanSSH is a malware family written in the Go programming language, known for targeting Linux-based SSH servers exposed on the internet where it employs SSH credential brute-force attacks to compromise systems using weak or default credentials and exhibits characteristics such as unique malware binaries and Tor2Web-based command and control infrastructure.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"cded89c1bad10036a9bb15d4f7b1abef\"\n\n\tstrings:\n\t\t$GoScanSSH_0 = \"main.compileCommandServers\"  ascii wide\n\t\t$GoScanSSH_1 = \"main.controlOK\"  ascii wide\n\t\t$GoScanSSH_2 = \"main.ipInCIDR\"  ascii wide\n\t\t$GoScanSSH_3 = \"main.ipIsBlacklisted\"  ascii wide\n\t\t$GoScanSSH_4 = \"main.hostnameIsBlacklisted\"  ascii wide\n\t\t$GoScanSSH_5 = \"main.generateRandomTarget\"  ascii wide\n\t\t$GoScanSSH_6 = \"main.contactCommandServer\"  ascii wide\n\t\t$GoScanSSH_7 = \"main.sshScan\"  ascii wide\n\t\t$GoScanSSH_8 = \"main.sshLoginAttempt\"  ascii wide\n\t\t$GoScanSSH_9 = \"main.submitAlive\"  ascii wide\n\t\t$GoScanSSH_10 = \"main.attackerThread\"  ascii wide\n\t\t$GoScanSSH_11 = \"main.reverseDNS\"  ascii wide\n\t\t$GoScanSSH_12 = \"main.scannerThread\"  ascii wide\n\t\t$GoScanSSH_13 = \"main.checkingInThread\"  ascii wide\n\t\t$GoScanSSH_14 = \"main.fork\"  ascii wide\n\t\t$GoScanSSH_15 = \"main.kill\"  ascii wide\n\n\tcondition:\n\t\tall of ($GoScanSSH*)\n}\n\nrule Uptycs_Gafgyt_Dropbear_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"110014a4be47e30cbef999384da3d5f7\"\n\n\tstrings:\n\t\t$Gafgyt_Dropbear_v5_0 = \"/usr/sbin/dropbear\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_1 = \"GETLOCALIP\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_2 = \"My IP:\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_3 = \"FUCKOFF\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_4 = \"/proc/net/route\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_5 = \"8.8.8.8\"  ascii wide\n\t\t$Gafgyt_Dropbear_v5_6 =  { 45 C0 0F B6 00 3C 2F 76 0B 48 8B 45 C0 0F B6 00 3C 39 76 C7 48 8B }\n\t\t$Gafgyt_Dropbear_v5_7 =  { 45 E0 0F B6 00 84 C0 74 1F 48 8B 45 E0 48 8D 50 01 48 8B 45 E8 48 83 }\n\n\tcondition:\n\t\tall of ($Gafgyt_Dropbear_v5*)\n}\n\nrule Uptycs_Ransomware_Conti_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"cfb6d21ffe7c4279f761f2351c0810ee\"\n\n\tstrings:\n\t\t$Ransomware_Conti_v2_0 = \"Cannot open file vm-list.txt\"  ascii wide\n\t\t$Ransomware_Conti_v2_1 = \"Killing VM\"  ascii wide\n\t\t$Ransomware_Conti_v2_2 = \"Skipping VM\"  ascii wide\n\t\t$Ransomware_Conti_v2_3 = \"readme.txt\"  ascii wide\n\t\t$Ransomware_Conti_v2_4 = \"fork() error in KillVm()\"  ascii wide\n\t\t$Ransomware_Conti_v2_5 = \"prockiller\"  ascii wide\n\t\t$Ransomware_Conti_v2_6 = \"fork() error in GetVMList()\"  ascii wide\n\t\t$Ransomware_Conti_v2_7 = \"Total encrypted:\"  ascii wide\n\t\t$Ransomware_Conti_v2_8 = \"Cannot rename file\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Conti_v2*)\n}\n\nrule Uptycs_Backdoor_TurianLinux \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"90ce1320bd999c17abdf8975c92b08f7\"\n\n\tstrings:\n\t\t$Backdoor_TurianLinux_0 = \"bash -version\"  ascii wide // it runs through a loop to extract strings from memory 0 to 2\n\t\t$Backdoor_TurianLinux_1 = \"/tmp/AntiVirtmp\"  ascii wide\n\t\t$Backdoor_TurianLinux_2 = \"echo $PWD\"  ascii wide // strings 3 to 9 Proxy connection attempts, Turian\n\t\t$Backdoor_TurianLinux_3 = \"CONNECT %s:%u HTTP/1.1\"  ascii wide\n\t\t$Backdoor_TurianLinux_4 = \"User-Agent: Mozilla/5.0 (X11; Linux i686; rv:22.0) Firefox/22.0\"  ascii wide\n\t\t$Backdoor_TurianLinux_5 = \"Host: %s\"  ascii wide\n\t\t$Backdoor_TurianLinux_6 = \"Content-Length: 0\"  ascii wide\n\t\t$Backdoor_TurianLinux_7 = \"Proxy-Connection: Keep-Alive\"  ascii wide\n\t\t$Backdoor_TurianLinux_8 = \"Pragma: no-cache\"  ascii wide\n\t\t$Backdoor_TurianLinux_9 = {70 79 74 68 6F 6E 20 2D 63 20 27 69 6D 70 6F 72 74 20 70 74 79 3B 70 74 79 2E 73 70 61 77 6E 28 22 2F 62 69 6E 2F 73 68 22 29 27} //python -c 'import pty;pty.spawn(\"/bin/sh\")'    Upon successful completion of the network protocol setup, it forks off another child process and attempts to spawn a TTY reverse shell\n\t\t$Backdoor_TurianLinux_10 = \"/etc/init.d/rc.local\"  ascii wide // persist by writing itself to /etc/init.d/rc.local\n\n\tcondition:\n\t\tall of ($Backdoor_TurianLinux*)\n}\n\nrule Uptycs_AnchorDNS \n{\n\tmeta:\n\t\tmalware_name = \"AnchorDNS\"\n\t\tdescription = \"Anchor_DNS is a specific tool or module within the Trickbot toolkit that facilitates communication between infected machines and the command and control (C2) servers using DNS queries.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7d2595904aa6feb46b3e8f3262963042\"\n\n\tstrings:\n\t\t$AnchorDNS_0 = \"/tmp/anchor.log\"  ascii wide\n\t\t$AnchorDNS_1 = \"--debuglevel=\"  ascii wide\n\t\t$AnchorDNS_2 = \"/proc/%s/cmdline\"  ascii wide\n\t\t$AnchorDNS_3 = \"0123456789CONNECT_ONLY is required\"  ascii wide\n\t\t$AnchorDNS_4 = \"This program cannot be run in DOS mode\"  ascii wide //Embedded PE\n\t\t$AnchorDNS_5 = \"kernel32.dll\"  ascii wide\n\t\t$AnchorDNS_6 = \"GetCommandLineA\"  ascii wide\n\t\t$AnchorDNS_7 = \"/C timeout 10 && %ssc.exe delete %\"  ascii wide\n\t\t$AnchorDNS_8 = \"del %S\"  ascii wide\n\t\t$AnchorDNS_9 = \"Establish HTTP proxy tunnel\"  ascii wide\n\t\t$ip_10 = \"http://checkip.amazonaws.com\"  ascii wide // IP retrieval\n\t\t$ip_11 = \"http://ipecho.net/plain\"  ascii wide\n\t\t$ip_12 = \"http://ipinfo.io/ip\"  ascii wide\n\t\t$ip_13 = \"http://api.ipify.org\"  ascii wide\n\t\t$ip_14 = \"http://icanhazip.com\"  ascii wide\n\t\t$ip_15 = \"http://myexternalip.com/raw\"  ascii wide\n\t\t$ip_16 = \"http://wtfismyip.com/text\"  ascii wide\n\t\t$ip_17 = \"http://ip.anysrc.net/plain/clientip\"  ascii wide\n\t\t$ip_18 = \"https://checkip.amazonaws.com\"  ascii wide\n\t\t$ip_19 = \"https://ipecho.net/plain\"  ascii wide\n\t\t$ip_20 = \"https://ipinfo.io/ip\"  ascii wide\n\t\t$ip_21 = \"https://api.ipify.org\"  ascii wide\n\t\t$ip_22 = \"https://icanhazip.com\"  ascii wide\n\t\t$ip_23 = \"https://myexternalip.com/raw\"  ascii wide\n\t\t$ip_24 = \"https://wtfismyip.com/text\"  ascii wide\n\t\t$ip_25 = \"https://ip.anysrc.net/plain/clientip\"  ascii wide\n\t\t$AnchorDNS_10 = \"anchor_l\"  ascii wide\n\n\tcondition:\n\t\tall of ($AnchorDNS*) and 5 of ($ip*)\n}\n\nrule Uptycs_ChaosRAT_v3 \n{\n\tmeta:\n\t\tmalware_name = \"ChaosRAT\"\n\t\tdescription = \"Chaos-RAT is a Remote Access Trojan written in Golang, that includes Reverse Shell, File Download/Upload, and Screenshot capabilities in Linux. It is also cross-platform.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b91e3c8580b9c5d93e256dad57375ae3\"\n\n\tstrings:\n\t\t$ChaosRAT_v3_0 = \"error: you need to be root (your uid: %d) to run me\"  ascii wide\n\t\t$ChaosRAT_v3_1 = \"/usr/sbin/sshd\"  ascii wide\n\t\t$ChaosRAT_v3_2 = \"/var/run/syslog.pid\"  ascii wide\n\t\t$ChaosRAT_v3_3 = \"cannot log pid %d\"  ascii wide\n\t\t$ChaosRAT_v3_4 = \"j0DtFt1LTvbIU\"  ascii wide\n\t\t$ChaosRAT_v3_5 = \"socket\"  ascii wide\n\t\t$ChaosRAT_v3_6 = { 55 89 E5 81 EC 88 08 00 00 65 A1 14 00 00 00 89 45 FC 31 C0 E8 FB E0 00 00 89 85 A4 F7 FF FF 83 BD A4 F7 FF FF 00 74 2F 8B 15 84 15 0D 08 8B 85 A4 F7 FF FF 89 44 24 08 C7 44 24 04 E4 0A 0B 08 89 14 24 E8 2C 1F 00 00 C7 85 9C F7 FF FF 01 00 00 00 E9 2B }\n\n\tcondition:\n\t\tall of ($ChaosRAT_v3*)\n}\n\nrule Uptycs_Ransomware_Lucky \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d4f7e2d19f325f2bc63e0a0292b0d00a\"\n\n\tstrings:\n\t\t$Ransomware_Lucky_0 = \"files has crypted\"  ascii wide\n\t\t$Ransomware_Lucky_1 = \"if you want your files back , send 1 bitcoin to my wallet\"  ascii wide\n\t\t$Ransomware_Lucky_2 = \"If you have any questions, please contact us.\"  ascii wide\n\t\t$Ransomware_Lucky_3 = \"my wallet address :\"  ascii wide\n\t\t$Ransomware_Lucky_4 = \".nmare\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Lucky*)\n}\n\nrule Uptycs_CVE20222586 \n{\n\tmeta:\n\t\tmalware_name = \"CVE20222586\"\n\t\tdescription = \"A use-after-free flaw was found in nf_tables cross-table in the net/netfilter/nf_tables_api.c function in the Linux kernel. \"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"94bd1c192dd0e7515782f51133c9287f\"\n\n\tstrings:\n\t\t$CVE20222586_0 = \"CVE-2022-2586.c\"  ascii wide\n\t\t$CVE20222586_1 = \"su r00t\"  ascii wide\n\t\t$CVE20222586_2 = \"Exploit failed\"  ascii wide\n\t\t$CVE20222586_3 = \"Triggering UAF on nft_object struct\"  ascii wide\n\t\t$CVE20222586_4 = \"Leaked: prepare_kernel_cred()\"  ascii wide\n\t\t$CVE20222586_5 = \"Leaked: commit_creds()\"  ascii wide\n\t\t$CVE20222586_6 = \"Failed to create netfilter socket\"  ascii wide\n\n\tcondition:\n\t\tall of ($CVE20222586*)\n}\n\nrule Uptycs_KmsdBot_client_v2 \n{\n\tmeta:\n\t\tmalware_name = \"KmsdBot\"\n\t\tdescription = \"KmsdBot is a golang-based botnet that attacks machines using weak SSH credentials. It has cryptocurrency mining and DDoS capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"345a75347af29c66189833d7334a6ba3\"\n\n\tstrings:\n\t\t$KmsdBot_client_v2_0 = \"main.scanner\"  ascii wide\n\t\t$KmsdBot_client_v2_1 = \"main.checkpma\"  ascii wide\n\t\t$KmsdBot_client_v2_2 = \"main.sshcheck\"  ascii wide\n\t\t$KmsdBot_client_v2_3 = \"main.scantelnet\"  ascii wide\n\t\t$KmsdBot_client_v2_4 = \"main.isitfake\"  ascii wide\n\t\t$KmsdBot_client_v2_5 = \"main.randomIP\"  ascii wide\n\t\t$KmsdBot_client_v2_6 = \"main.portopen\"  ascii wide\n\t\t$KmsdBot_client_v2_7 = \"main.newpassword\"  ascii wide\n\t\t$KmsdBot_client_v2_8 = \"main.sendreq\"  ascii wide\n\t\t$KmsdBot_client_v2_9 = \"main.getlistofdata\"  ascii wide\n\t\t$KmsdBot_client_v2_10 = \"main.choosedifficultypo\"  ascii wide\n\t\t$KmsdBot_client_v2_11 = \"main.workername\"  ascii wide\n\t\t$KmsdBot_client_v2_12 = \"main.randomwallet\"  ascii wide\n\t\t$KmsdBot_client_v2_13 = \"Bruh Started\"  ascii wide\n\t\t$KmsdBot_client_v2_14 = \"rm -rf /etc/sysctl.conf\"  ascii wide\n\n\tcondition:\n\t\tall of ($KmsdBot_client_v2*)\n}\n\nrule Uptycs_Impacket_GetADUsers \n{\n\tmeta:\n\t\tmalware_name = \"Impacket\"\n\t\tdescription = \"Impacket is a collection of Python classes for working with network protocols which is focused on providing low-level programmatic access to the packets and for some protocols (e.g. SMB1-3 and MSRPC) the protocol implementation itself.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1a9ce77acde15a86265b27689c50010c\"\n\n\tstrings:\n\t\t$Impacket_GetADUsers_0 = \"GetADUsers.getMachineName\"  ascii wide\n\t\t$Impacket_GetADUsers_1 = \"GetADUsers.getUnixTime\"  ascii wide\n\t\t$Impacket_GetADUsers_2 = \"_GetADUsers__target\"  ascii wide\n\t\t$Impacket_GetADUsers_3 = \"_GetADUsers__password\"  ascii wide\n\t\t$Impacket_GetADUsers_4 = \"_GetADUsers__username\"  ascii wide\n\t\t$Impacket_GetADUsers_5 = \"GetADUsers.processRecord\"  ascii wide\n\t\t$Impacket_GetADUsers_6 = \"logging.getLogger\"  ascii wide\n\n\tcondition:\n\t\tall of ($Impacket_GetADUsers*)\n}\n\nrule Uptycs_Tsunami_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Tsunami\"\n\t\tdescription = \"Tsunami is a cross platform based distributed denial-of-service (DDoS) flooder that is also capable of downloading files and executing shell commands in an infected system.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"da6a3d1723cf023cdb3b8ac043816056\"\n\n\tstrings:\n\t\t$Tsunami_v5_0 = \"PRIVMSG\"  ascii wide\n\t\t$Tsunami_v5_1 = \"Remote IRC Bot\"  ascii wide\n\t\t$Tsunami_v5_2 = \"bot +unknown\"  ascii wide\n\t\t$Tsunami_v5_3 = \"PONG\"  ascii wide\n\t\t$Tsunami_v5_4 = \"someone will have to SPOOFS me manually\"  ascii wide\n\t\t$Tsunami_v5_5 = \"Done hitting\"  ascii wide\n\t\t$Tsunami_v5_6 = \"Killing pid\"  ascii wide\n\n\tcondition:\n\t\tall of ($Tsunami_v5*)\n}\n\nrule Uptycs_FreezeTool \n{\n\tmeta:\n\t\tmalware_name = \"FreezeTool\"\n\t\tdescription = \"Freeze.rs is a specialized payload creation tool designed to bypass EDR (Endpoint Detection and Response) security measures, enabling the discreet execution of shellcode.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a9f7239cd8c39828e11067736c8a4eaa\"\n\n\tstrings:\n\t\t$FreezeTool_0 = \"Soon they will learn that revenge is a dish... best served COLD\"  ascii wide\n\t\t$FreezeTool_1 = \"Rusty\"  ascii wide\n\t\t$FreezeTool_2 = \"Path to the raw 64-bit shellcode.\"  ascii wide\n\t\t$FreezeTool_3 = \"Does the Endpoint have more than 2 CPUs\"  ascii wide\n\t\t$FreezeTool_4 = \"Enables sandbox evasion by checking\"  ascii wide\n\t\t$FreezeTool_5 = \"Only for Binary Payloads - Generates verbose console information when the payload is executed.\"  ascii wide\n\t\t$FreezeTool_6 = \"Disables the ETW patching that prevents ETW events from being generated.\"  ascii wide\n\n\tcondition:\n\t\tall of ($FreezeTool*)\n}\n\n\nrule Uptycs_WindapsearchTool \n{\n\tmeta:\n\t\tmalware_name = \"WindapsearchTool\"\n\t\tdescription = \"WindapsearchTool is a Python script designed to assist in enumerating users, groups, and computers in a Windows domain by utilizing LDAP queries.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"10f0740ee0d2f624ca35da7ced832093\"\n\n\tstrings:\n\t\t$WindapsearchTool_0 = \"LDAPSearchResult.get_attributes\"  ascii wide\n\t\t$WindapsearchTool_1 = \"LDAPSession.initializeConnection\"  ascii wide\n\t\t$WindapsearchTool_2 = \"LDAPSession.get_set_DC_IP\"  ascii wide\n\t\t$WindapsearchTool_3 = \"LDAPSession.do_bind\"  ascii wide\n\t\t$WindapsearchTool_4 = \"LDAPSession.do_ldap_query\"  ascii wide\n\t\t$WindapsearchTool_5 = \"LDAPSession.get_search_results\"  ascii wide\n\t\t$WindapsearchTool_6 = \"LDAPSession.getAllUsers\"  ascii wide\n\t\t$WindapsearchTool_7 = \"LDAPSession.getAllGroups\"  ascii wide\n\t\t$WindapsearchTool_8 = \"LDAPSession.doFuzzySearch\"  ascii wide\n\t\t$WindapsearchTool_9 = \"LDAPSession.getAllComputers\"  ascii wide\n\t\t$WindapsearchTool_10 = \"LDAPSession.getComputerDict\"  ascii wide\n\n\tcondition:\n\t\tall of ($WindapsearchTool*)\n}\n\nrule Uptycs_LDAPDomainDumpTool \n{\n\tmeta:\n\t\tmalware_name = \"LDAPDomainDumpTool\"\n\t\tdescription =  \"ldapdomaindumpTool is used for extracting and parsing information from an Active Directory domain using the LDAP protocol.This tool is designed to help with reconnaissance during penetration testing of internal networks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b07c503ae0d7497e5db8e5c78bbd5dd5\"\n\n\tstrings:\n\t\t$LDAPDomainDumpTool_0 = \"Active Directory information dumper via LDAP\"  ascii wide\n\t\t$LDAPDomainDumpTool_1 = \"PASSWORD_STORE_CLEARTEXT\"  ascii wide\n\t\t$LDAPDomainDumpTool_2 = \"domainDumper.getRoot\"  ascii wide\n\t\t$LDAPDomainDumpTool_3 = \"domainDumper.getCurrentUserGroups\"  ascii wide\n\t\t$LDAPDomainDumpTool_4 = \"domainDumper.isDomainAdmin\"  ascii wide\n\t\t$LDAPDomainDumpTool_5 = \"domainDumper.getAllComputers\"  ascii wide\n\t\t$LDAPDomainDumpTool_6 = \"domainDumper.sortComputersByOS\"  ascii wide\n\t\t$LDAPDomainDumpTool_7 = \"domainDumper.lookupComputerDnsNames\"  ascii wide\n\t\t$LDAPDomainDumpTool_8 = \"domainDumper.getAllSecurityGroups\"  ascii wide\n\t\t$LDAPDomainDumpTool_9 = \"domainDumper.getAllUserSpns\"  ascii wide\n\n\tcondition:\n\t\t9 of ($LDAPDomainDumpTool*)\n}\n\nrule Uptycs_Coinminer_XMRig_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"bfdfc8ae912ec514110f49ea84be46dd\"\n\n\tstrings:\n\t\t$Coinminer_XMRig_v4_0 = \"xmr-pool\"  ascii wide\n\t\t$Coinminer_XMRig_v4_1 = \"donate.ssl.xmrig.com\"  ascii wide\n\t\t$Coinminer_XMRig_v4_2 = \"nicehash\"  ascii wide\n\t\t$Coinminer_XMRig_v4_3 = { 22 70 6F 6F 6C 73 22 3A } //\"pools\":\n\t\t$Coinminer_XMRig_v4_4 = \"donate.v2.xmrig.com\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_XMRig_v4*)\n}\n\n\nrule Uptycs_SharpDecryptPwdTool \n{\n\tmeta:\n\t\tmalware_name = \"SharpDecryptPwdTool\"\n\t\tdescription = \"SharpDecryptPwd is a command line tool that collects and displays account credentials.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"6ca5c7421c246efeb938eb73d3a93dd0\"\n\n\tstrings:\n\t\t$SharpDecryptPwdTool_0 = \"get_passwordField\"  ascii wide\n\t\t$SharpDecryptPwdTool_1 = \"No logins discovered from logins.json\"  ascii wide\n\t\t$SharpDecryptPwdTool_2 = \"get_usernameField\"  ascii wide\n\t\t$SharpDecryptPwdTool_3 = \"GetLogins\"  ascii wide\n\t\t$SharpDecryptPwdTool_4 = \"--- FireFox Credential (User: {0}) ---\"  ascii wide\n\t\t$SharpDecryptPwdTool_5 = \"<encryptedPassword>k__BackingField\"  ascii wide\n\t\t$SharpDecryptPwdTool_6 = \"Windows Domain Certificate Credential\"  ascii wide\n\t\t$SharpDecryptPwdTool_7 = \"<MasterPassword>k__BackingField\"  ascii wide\n\t\t$SharpDecryptPwdTool_8 = \"Windows Web Password Credential\"  ascii wide\n\t\t$SharpDecryptPwdTool_9 = \"--- IE/Edge Credential ---\"  ascii wide\n\n\tcondition:\n\t\tall of ($SharpDecryptPwdTool*)\n}\n\nrule Uptycs_Backdoor_Bvp47\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"58b6696496450f254b1423ea018716dc\"\n\n\tstrings:\n\t\t// XOR encrypted strings and function name obfuscations\n\t\t$Backdoor_Bvp47_0 = \"e86dd99a33cb9df96e793518f659746f8cc3d9ac39413871f5afd58d7d00685ab0c449d62aa35c865a133dff\"  ascii wide\n\t\t$Backdoor_Bvp47_1 = \"NcGNaOrdVC\"  ascii wide\n\t\t$Backdoor_Bvp47_2 = \"dXRuFsbUutDV\"  ascii wide\n\t\t$Backdoor_Bvp47_3 = \"xdkzVqtnab\"  ascii wide\n\t\t$Backdoor_Bvp47_4 = \"qKizlbKRbFdM\"  ascii wide\n\t\t$Backdoor_Bvp47_5 = \"HDLrAQdH\"  ascii wide\n\t\t$Backdoor_Bvp47_6 = \"sHrTYQNSos\"  ascii wide\n\t\t$Backdoor_Bvp47_7 = \"xWJPbTKxAzr\"  ascii wide\n\t\t$Backdoor_Bvp47_8 = \"DlsDrKHhA\"  ascii wide\n\t\t$Backdoor_Bvp47_9 = \"waLujJdj\"  ascii wide\n\t\t$Backdoor_Bvp47_10 = \"sTzZoBIMEE\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_Bvp47*)\n}\n\nrule Uptycs_ProcDumpTool \n{\n\tmeta:\n\t\tmalware_name = \"ProcDumpTool\"\n\t\tdescription = \"Procdump is a Microsoft Sysinternals utility which is used to generate crash dumps. Adversaries can use it to dump memory of processes and extract information.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f057ca66287ebf0a964c0d88a3547b2f\"\n\n\tstrings:\n\t\t$ProcDumpTool_0 = \"Trigger core dump generation when CPU exceeds or equals specified value\"  ascii wide\n\t\t$ProcDumpTool_1 = \"Trigger core dump generation when CPU is less than specified value (0 to 100 * nCPU)\"  ascii wide\n\t\t$ProcDumpTool_2 = \"Trigger when thread count exceeds or equals specified value.\"  ascii wide\n\t\t$ProcDumpTool_3 = \"Consecutive seconds before dump is written (default is %d)\"  ascii wide\n\t\t$ProcDumpTool_4 = \"failed to get token from proc/[pid]/stat\"  ascii wide\n\t\t$ProcDumpTool_5 = \"Number of core dumps to write before exiting\"  ascii wide\n\t\t$ProcDumpTool_6 = \"Failed to connect to socket for .NET Core dump generation\"  ascii wide\n\t\t$ProcDumpTool_7 = \"Usage: procdump [OPTIONS...] TARGET\"  ascii wide\n\t\t$ProcDumpTool_8 = \"Path and/or filename prefix where the core dump is written to\"  ascii wide\n\n\tcondition:\n\t\tall of ($ProcDumpTool*)\n}\n\nrule Uptycs_MoonwalkTool \n{\n\tmeta:\n\t\tmalware_name = \"Moonwalktool\"\n\t\tdescription = \"Moonwalktool is specifically designed for enhancing stealth and obfuscating traces during Linux exploitation and penetration testing.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b5aca625902a1b811fa311c225914c4e\"\n\n\tstrings:\n\t\t$MoonwalkTool_0 = \"log_file_timestamps\"  ascii wide\n\t\t$MoonwalkTool_1 = \"Finish moonwalk and clear your traces\"  ascii wide\n\t\t$MoonwalkTool_2 = \"Get the current timestamp of a file to restore it later\"  ascii wide\n\t\t$MoonwalkTool_3 = \"Start moonwalk\"  ascii wide\n\t\t$MoonwalkTool_4 = \"moonwalk get <FILENAME>\"  ascii wide\n\n\tcondition:\n\t\tall of ($MoonwalkTool*)\n}\n\n\n\nrule Uptycs_Nimbo_C2_Linux\n{\n\tmeta:\n\t\tmalware_name = \"Nimbo-C2\"\n\t\tdescription = \"Nimbo-C2 agent is cross-platform, written in Nim, and incorporates .NET on Windows by dynamically loading the CLR into the process.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c9cbdf06b43610611ef6737c6bb54113\"\n\n\tstrings:\n\t\t$Nimbo_C2_Linux_0 = \"command_line\"  ascii wide\n\t\t$Nimbo_C2_Linux_1 = \"src_file_data_base64\"  ascii wide\n\t\t$Nimbo_C2_Linux_2 = \"elf_file_data_base64\"  ascii wide\n\t\t$Nimbo_C2_Linux_3 = \"is_success\"  ascii wide\n\t\t$Nimbo_C2_Linux_4 = \"task\"  ascii wide\n\t\t$Nimbo_C2_Linux_5 = \"kill\"  ascii wide\n\t\t$Nimbo_C2_Linux_6 = \"upload\"  ascii wide\n\t\t$Nimbo_C2_Linux_7 = \"download\"  ascii wide\n\t\t$Nimbo_C2_Linux_8 = \"memfd\"  ascii wide\n\t\t$Nimbo_C2_Linux_9 = \"collect\"  ascii wide\n\t\t$Nimbo_C2_Linux_10 = \"file_path\"  ascii wide\n\t\t$Nimbo_C2_Linux_11 = \"fd4b0a7399c365256e74fb268459f6b7\"  ascii wide\n\t\t$Nimbo_C2_Linux_12 = \"db0782b494b3ee5ddcea0b3e600f1de3\"  ascii wide\n\t\t$Nimbo_C2_Linux_13 = \"99de59c58e49c377a224ea01f01302d6\"  ascii wide\n\t\t$Nimbo_C2_Linux_14 = \"filename\"  ascii wide\n\t\t$Nimbo_C2_Linux_15 = \"implant\"  ascii wide\n\t\t$Nimbo_C2_Linux_16 = \"memfd\"  ascii wide\n\t\t$Nimbo_C2_Linux_17 = \"dst_file\"  ascii wide\n\n\tcondition:\n\t\tall of ($Nimbo_C2_Linux*)\n}\n\nrule Uptycs_Backdoor_SprySOCKS\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ac204bc653d6e49eea093b01ba3eaa60\"\n\n\tstrings:\n\t\t$Backdoor_SprySOCKS_0 = \"log.txt\"  ascii wide\n\t\t$Backdoor_SprySOCKS_1 = \"transfer_id\"  ascii wide\n\t\t$Backdoor_SprySOCKS_2 = \"packageId\"  ascii wide\n\t\t$Backdoor_SprySOCKS_3 = \"CollectInfo\"  ascii wide\n\t\t$Backdoor_SprySOCKS_4 = \"HttpServer.cpp\"  ascii wide\n\t\t$Backdoor_SprySOCKS_5 = \"get_nprocs_conf\"  ascii wide\n\t\t$Backdoor_SprySOCKS_6 = \"[diskio]\"  ascii wide\n\t\t$Backdoor_SprySOCKS_7 = \"__handler\"  ascii wide\n\t\t$Backdoor_SprySOCKS_8 = \"__msgid\"  ascii wide\n\t\t$Backdoor_SprySOCKS_9 = \"target_c\"  ascii wide\n\t\t$Backdoor_SprySOCKS_10 = \"__serial\"  ascii wide\n\t\t$Backdoor_SprySOCKS_11 = \"__data|\"  ascii wide\n\t\t$Backdoor_SprySOCKS_12 = \"/home/hi/projects/prcsser_linux/HP-Socket/Linux\"  ascii wide\n\t\t$Backdoor_SprySOCKS_13 = \"clientid\"  ascii wide\n\t\t$Backdoor_SprySOCKS_14 = \"udp_port\"  ascii wide\n\t\t$Backdoor_SprySOCKS_15 = \"target_c\"  ascii wide\n\t\t$Backdoor_SprySOCKS_16 = \"listen_port\"  ascii wide\n\t\t$Backdoor_SprySOCKS_17 = { 63 61 74 20 2F 70 72 6F 63 2F 63 70 75 69 6E 66 6F 7C 67 72 65 70 20 63 70 75 5C 20 4D 48 7A 7C 73 65 64 20 2D 65 20 27 73 2F 2E 2A 3A 5B 5E 30 2D 39 5D 2F 2F 27 } //\"cat /proc/cpuinfo|grep cpu\\ MHz|sed -e 's/.*:[^0-9]//'\n\t\t$Backdoor_SprySOCKS_19 = \"# %sClient Send Fail [SOCK: %d, SEQ: %d] --> %s (%d)\"  ascii wide\n\t\t$Backdoor_SprySOCKS_20 = \"# %sAgent Send Fail [SOCK: %d, SEQ: %d] --> %s (%d)\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_SprySOCKS*)\n}\n\n\n\nrule Uptycs_Blueshell_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Blueshell\"\n\t\tdescription = \"BlueShell is a Go-written remote control tool that periodically attempts to establish a rebound connection with a specified C&C address and operates bsServer on the C&C side.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"30fe6a0ba1d77e05a19d87fcf99e7ca5\"\n\n\tstrings:\n\t\t$Blueshell_v2_0 = \"main.GetInteractiveShell\"  ascii wide\n\t\t$Blueshell_v2_1 = \"main.UploadFile\"  ascii wide\n\t\t$Blueshell_v2_2 = \"main.HandleClientConnection\"  ascii wide\n\t\t$Blueshell_v2_3 = \"main.DownloadFile\"  ascii wide\n\t\t$Blueshell_v2_4 = \"main.RunSocks5Proxy\"  ascii wide\n\t\t$Blueshell_v2_5 = \"L2Jpbi9zaA==\"  ascii wide\n\t\t$Blueshell_v2_6 = \"ZXhlYyBiYXNoIC0tbG9naW4=\"  ascii wide\n\t\t$Blueshell_v2_7 = \"SElTVEZJTEU9L2Rldi9udWxs\"  ascii wide\n\t\t$Blueshell_v2_8 = \"VEVSTT0==\"  ascii wide\n\n\tcondition:\n\t\t8 of ($Blueshell_v2*)\n}\n\nrule Uptycs_Mandibule\n{\n\tmeta:\n\t\tmalware_name = \"Mandibule\"\n\t\tdescription = \"Mandibule is a program designed for injecting ELF files into remote processes. This injector project is a command-line tool that offers the capability to perform self-injection or inject payloads into other projects.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"14bf1dc224b278fc23ca82ca2568d39d\"\n\n\tstrings:\n\t\t$Mandibule_0 = \"/lib/systemd/system/mkmonitor.service\"  ascii wide\n\t\t$Mandibule_1 = \"/etc/init.d/mkmonitor-service\"  ascii wide\n\t\t$Mandibule_2 = \"ExecStart=/usr/bin/nohup /usr/sbin/mkmom\"  ascii wide\n\t\t$Mandibule_3 = \"chkconfig install mkmonitor-service\"  ascii wide\n\t\t$Mandibule_4 = \"[+] rename server ok\"  ascii wide\n\t\t$Mandibule_5 = \"[+] memory allocation ok (0x%x bytes,0x%x address)\"  ascii wide\n\t\t$Mandibule_6 = \"[+] systemd install mkmonitor-service\"  ascii wide\n\t\t$Mandibule_7 = \"new_proc_name\"  ascii wide\n\t\t$Mandibule_8 = \"malloc for injected code failed\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mandibule*)\n}\n\nrule Uptycs_Enum4LinuxTool \n{\n\tmeta:\n\t\tmalware_name = \"Enum4LinuxTool\"\n\t\tdescription = \"Enum4linux is a tool for enumerating information from Windows and Samba systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5540c1a3d05679970f30a6b860605540\"\n\n\tstrings:\n\t\t$Enum4LinuxTool_0 = \"brute force guessing for share names\"  ascii wide\n\t\t$Enum4LinuxTool_1 = \"enum_password_policy\"  ascii wide\n\t\t$Enum4LinuxTool_2 = \"get userlist\"  ascii wide\n\t\t$Enum4LinuxTool_3 = \"get machine list\"  ascii wide\n\t\t$Enum4LinuxTool_4 = \"get password policy information\"  ascii wide\n\t\t$Enum4LinuxTool_5 = \"RID ranges to enumerate\"  ascii wide\n\t\t$Enum4LinuxTool_6 = \"enumerate users via RID cycling\"  ascii wide\n\t\t$Enum4LinuxTool_7 = \"User(s) that exists on remote system\"  ascii wide\n\t\t$Enum4LinuxTool_8 = \"Getting local groups with command:\"  ascii wide\n\n\tcondition:\n\t\tall of ($Enum4LinuxTool*)\n}\n\nrule Uptycs_P2PInfect \n{\n\tmeta:\n\t\tmalware_name = \"P2PInfect\"\n\t\tdescription = \"P2PInfect is a peer-to-peer botnet which spreads through SSH brute-forcing, employs persistence mechanisms like cron jobs, and uses evasion techniques to maintain control.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f8fffc0e738633806ae1ad45cfff4c4a\"\n\n\tstrings:\n\t\t$P2PInfect_0 = \"update_from_botnet_delay_secs\"  ascii wide\n\t\t$P2PInfect_1 = \"local_net_ssh_dict\"  ascii wide\n\t\t$P2PInfect_2 = \"local_net_redis_dict\"  ascii wide\n\t\t$P2PInfect_3 = \"file_servers_online_check_delay_secs\"  ascii wide\n\t\t$P2PInfect_4 = \"fast_exp_syn_scan_limit\"  ascii wide\n\t\t$P2PInfect_5 = \"attacker_ping_main_delay_secs\"  ascii wide\n\t\t$P2PInfect_6 = \"ssh_too_slow\"  ascii wide\n\t\t$P2PInfect_7 = \"fast_vuln_file\"  ascii wide\n\n\tcondition:\n\t\tall of ($P2PInfect*)\n}\n\nrule Uptycs_Gafgyt_V7 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c8128b5b458a4af5a3119a7c184df1fd\"\n\n\tstrings:\n\t\t$Gafgyt_V7_0 = \"bot/attack.c\"  ascii wide\n\t\t$Gafgyt_V7_1 = \"Killing all ongoing attacks\"  ascii wide\n\t\t$Gafgyt_V7_2 = \"Starting attack...\"  ascii wide\n\t\t$Gafgyt_V7_3 = \"Connected to CNC\"  ascii wide\n\t\t$Gafgyt_V7_4 = \"Attempting to connect to CNC\"  ascii wide\n\t\t$Gafgyt_V7_5 = \"Detected newer instance running! Killing self\"  ascii wide\n\t\t$Gafgyt_V7_6 = \"bot/killer.c\"  ascii wide\n\n\tcondition:\n\t\t6 of ($Gafgyt_V7*)\n}\n\nrule Uptycs_Ransomware_Esxi \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d2853c1d92c73dc047cdb1f201900a99\"\n\n\tstrings:\n\t\t$Ransomware_Esxi_0 = \"Killing pid=\"  ascii wide\n\t\t$Ransomware_Esxi_1 = \"Segmentation fault\"  ascii wide\n\t\t$Ransomware_Esxi_2 = \"esxcli --formatter=csv network ip interface ipv4 get\"  ascii wide\n\t\t$Ransomware_Esxi_3 = \"esxcli --formatter=csv network nic list\"  ascii wide\n\t\t$Ransomware_Esxi_4 = \"esxcli --formatter=csv system account list\"  ascii wide\n\t\t$Ransomware_Esxi_5 = \"esxcli network firewall set --enabled false\"  ascii wide\n\t\t$Ransomware_Esxi_6 = \"esxcli --formatter=csv vm process list\"  ascii wide\n\t\t$Ransomware_Esxi_7 = \"process was killed by force\"  ascii wide\n\t\t$Ransomware_Esxi_8 = \"Trying to find vm with folder\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Esxi*)\n}\n\n\n\nrule Uptycs_Ransomware_RagnarLocker \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c0faa37055ed3e9783e6f86cfe499e68\"\n\n\tstrings:\n\t\t$Ransomware_RagnarLocker_0 = {52 20 20 41 20 20 47 20 20 4e 20 20 41 20 20 52 20 20 20 20 4c 20 20 4f 20 20 43 20 20 4b 20 20 45 20 20 52}// Ragnarlocker string\n\t\t$Ransomware_RagnarLocker_1 = \"all your files has been ENCRYPTED\"  ascii wide\n\t\t$Ransomware_RagnarLocker_2 = \"Your security perimeter was BREACHED\"  ascii wide\n\t\t$Ransomware_RagnarLocker_3 = \".onion\"  ascii wide\n\t\t$Ransomware_RagnarLocker_4 = \"LEAK BLOG ACCESS UPON REQUEST\"  ascii wide\n\t\t$Ransomware_RagnarLocker_5 = \"RGNR_NOTES\"  ascii wide\n\n\tcondition:\n\t\t5 of ($Ransomware_RagnarLocker*)\n}\n\n\nrule Uptycs_XorDDOS_IRCBot_v2 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"63a86932a5bad5da32ebd1689aa814b3\"\n\n\tstrings:\n\t\t$XorDDOS_IRCBot_v2_0 = \"bashirc\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_1 = \"WHO UHAKZYLM\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_2 = \"cbot456@\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_3 = \"KNCTSDIU\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_4 = \"IMOHWFJW\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_5 = \"NRVAPFGJ\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_6 = \"FBHKGNF\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_7 = \"SGSUGSV\"  ascii wide\n\t\t$XorDDOS_IRCBot_v2_8 = \"OZVAWAV\"  ascii wide\n\n\tcondition:\n\t\tall of ($XorDDOS_IRCBot_v2*)\n}\n\nrule Uptycs_Ransomware_Icefire \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7bba9eb1fe9ec5f0bbe290562237cc60\"\n\n\tstrings:\n\t\t$Ransomware_Icefire_0 = \"Your network has been infected\"  ascii wide\n\t\t$Ransomware_Icefire_1 = \"All your important files have been encrypted.\"  ascii wide\n\t\t$Ransomware_Icefire_2 = \"/iFire-readme.txt\"  ascii wide\n\t\t$Ransomware_Icefire_3 = \"Do not try to recover files yourself\"  ascii wide\n\t\t$Ransomware_Icefire_4 = \".cfg.o.sh.img.txt.xml.jar.pid.ini.pyc.a.so.run.env.cache.xmlb\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Icefire*)\n}\n\nrule Uptycs_Ransomware_Biotech \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c2176596d56bcfb6bb9152d8bd634650\"\n\n\tstrings:\n\t\t$Ransomware_Biotech_0 = \"black_letter.txt\"  ascii wide\n\t\t$Ransomware_Biotech_1 = \".biotech\"  ascii wide\n\t\t$Ransomware_Biotech_2 = \"Failed to create notice file\"  ascii wide\n\t\t$Ransomware_Biotech_3 = \"Your network has been penetrated.\"  ascii wide\n\t\t$Ransomware_Biotech_4 = \"All files have been encrypted with a strong algorithm.\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Biotech*)\n}\n\nrule Uptycs_Ransomware_Cactus \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b2951204c09e7791d83c58017742b297\"\n\n\tstrings:\n\t\t$Ransomware_Cactus_0 = \"cAcTuS.readme.txt\"  ascii wide\n\t\t$Ransomware_Cactus_1 = \"esxcli vm process kill --type=hard --world-id=\"  ascii wide\n\t\t$Ransomware_Cactus_2 = \"esxcli vm process list > ctmp\"  ascii wide\n\t\t$Ransomware_Cactus_3 = \"Your systems were accessed and encrypted by Cactus\"  ascii wide\n\t\t$Ransomware_Cactus_4 = \"cryptnix_killvm.cpp\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Cactus*)\n}\n\nrule Uptycs_Mirai_Gen_V3 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5800d6205d469ba4da1a24b3f5c2fd30\"\n\n\tstrings:\n\t\t$Mirai_Gen_V3_0 = \"MIRAI\"  ascii wide\n\t\t$Mirai_Gen_V3_1 = \"Running Thrds\"  ascii wide\n\t\t$Mirai_Gen_V3_2 = \"Huawei Home Gateway\"  ascii wide\n\t\t$Mirai_Gen_V3_3 = \"Logins Tried\"  ascii wide\n\t\t$Mirai_Gen_V3_4 = \"export PS1=\\\"prompt>\\\"\"  ascii wide\n\t\t$Mirai_Gen_V3_5 = \"XOR'ing %d bytes of data\"  ascii wide\n\t\t$Mirai_Gen_V3_6 = \"/bin/busybox VDOSS\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_Gen_V3*)\n}\n\nrule Uptycs_BibiWiper \n{\n\tmeta:\n\t\tmalware_name = \"BibiWiper\"\n\t\tdescription = \"BiBiWiper executes with the potential to devastate entire systems, using multiple threads and a queue to corrupt files and directories.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"de9da4fcfb8320b9d34239effce1871a\"\n\n\tstrings:\n\t\t$BibiWiper_0 = \"[+] Stats:\"  ascii wide\n\t\t$BibiWiper_1 = { 2e 00 00 00 42 00 00 00 69 00 00 00 42 00 00 00 69 00 }\n\t\t$BibiWiper_2 = \"[!] Waiting For Queue\"  ascii wide\n\t\t$BibiWiper_3 = \"[+] Round\"  ascii wide\n\t\t$BibiWiper_4 = \"[+] Path:\"  ascii wide\n\t\t$BibiWiper_5 = \"[+] CPU cores:\"  ascii wide\n\t\t$BibiWiper_6 = \"Threads:\"  ascii wide\n\n\tcondition:\n\t\tall of ($BibiWiper*)\n}\n\n\nrule Uptycs_Ransomware_Uncle \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d34640dbb33d500be229f9c7b9fc76c0\"\n\n\tstrings:\n\t\t$Ransomware_Uncle_0 = \"main.securelyDeleteFile\"  ascii wide\n\t\t$Ransomware_Uncle_1 = \"main.encryptStringAndFile\"  ascii wide\n\t\t$Ransomware_Uncle_2 = \"main.aestest\"  ascii wide\n\t\t$Ransomware_Uncle_3 = \"main.isPathInDirs\"  ascii wide\n\t\t$Ransomware_Uncle_4 = \".uncle\"  ascii wide\n\t\t$Ransomware_Uncle_5 = \"ransomware/cmd/encrypt-linux/\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Uncle*)\n}\n\nrule Uptycs_Panchan \n{\n\tmeta:\n\t\tmalware_name = \"Panchan\"\n\t\tdescription = \"Panchan is a sophisticated peer-to-peer botnet primarily targeting Linux servers in telecom and education sectors for crypto mining using advanced infection methods via SSH key theft and brute force.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a75ac3f5011280715a88ae8c813f05fe\"\n\n\tstrings:\n\t\t$Panchan_0 = \"pan-chan's mining rig hi!\"  ascii wide\n\t\t$Panchan_1 = \"sharepeer\"  ascii wide\n\t\t$Panchan_2 = \"sharerigconfig\"  ascii wide\n\t\t$Panchan_3 = \"main._rig_config\"  ascii wide\n\t\t$Panchan_4 = \"xmrig_poolAddr\"  ascii wide\n\t\t$Panchan_5 = \"nbminer_algo\"  ascii wide\n\t\t$Panchan_6 = \"Godmode\"  ascii wide\n\t\t$Panchan_7 = \"xmrig_poolUser\"  ascii wide\n\t\t$Panchan_8 = \"xmrig_poolPass\"  ascii wide\n\n\tcondition:\n\t\t8 of ($Panchan*)\n}\n\n\nrule Uptycs_DirtyCow_CVE_2016_5195_v4 \n{\n\tmeta:\n\t\tmalware_name = \"DirtyCow\"\n\t\tdescription = \"DirtyCOW(copy-on-write) is a vulnerability that exploits a race condition in the implementation of copy on write mechanism in linux kernel memory management systems.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b941b4e5b8d88ed30a3bfafea67510f0\"\n\n\tstrings:\n\t\t$DirtyCow_CVE_2016_5195_v4_0 = \"let make some c0ws dirty\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v4_1 = \"ok we have some dirty things going on\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v4_2 = \"let's clean up...\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v4_3 = \"naughtyc0w\"  ascii wide\n\t\t$DirtyCow_CVE_2016_5195_v4_4 = \"/bin//shSH\"  ascii wide\n\n\tcondition:\n\t\tall of ($DirtyCow_CVE_2016_5195_v4*)\n}\n\nrule Uptycs_Ransomware_Babuk_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7761307327e24ac806c73aa3672abede\"\n\n\tstrings:\n\t\t$Ransomware_Babuk_v3_0 = \".babyk\"  ascii wide\n\t\t$Ransomware_Babuk_v3_1 = \"main.encrypt_file\"  ascii wide\n\t\t$Ransomware_Babuk_v3_2 = \"/path/to/be/encrypted\"  ascii wide\n\t\t$Ransomware_Babuk_v3_3 = \"BABUK_LOCK_curve25519\"  ascii wide\n\t\t$Ransomware_Babuk_v3_4 = \"README_babyk.txt\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Babuk_v3*)\n}\n\nrule Uptycs_Gafgyt_v8 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d2a9ccd6b472c0602826f45363269aa4\"\n\n\tstrings:\n\t\t$Gafgyt_v8_0 = \"bin/busybox BOTNET\"  ascii wide\n\t\t$Gafgyt_v8_1 = \"bruted.txt\"  ascii wide\n\t\t$Gafgyt_v8_2 = \"honeypots.txt\"  ascii wide\n\t\t$Gafgyt_v8_3 = \"WIFIUSB2 login\"  ascii wide\n\t\t$Gafgyt_v8_4 = \"logins.txt\"  ascii wide\n\t\t$Gafgyt_v8_5 = \"check_honeypot\"  ascii wide\n\t\t$Gafgyt_v8_6 = \"bruter_queue_ip\"  ascii wide\n\t\t$Gafgyt_v8_7 = \"check_connection\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_v8*)\n}\n\nrule Uptycs_Linux_flooder_v5 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1865f1cf87ee05b12881b08f07cc5090\"\n\n\tstrings:\n\t\t$Linux_flooder_v5_0 = \"Setting up sockets\"  ascii wide\n\t\t$Linux_flooder_v5_1 = \"Error: setsockopt() - Cannot set HDRINCL!\"  ascii wide\n\t\t$Linux_flooder_v5_2 = \"Could not open raw socket\"  ascii wide\n\t\t$Linux_flooder_v5_3 = \"Starting flood\"  ascii wide\n\t\t$Linux_flooder_v5_4 = \"Usage: %s <target IP> <target port> <reflection file> <threads>\"  ascii wide\n\t\t$Linux_flooder_v5_5 = { 2E 31 36 38 2E 33 2E 31 30 30 00 43 6F 75 6C 64 20 6E 6F 74 }\n\t\t$Linux_flooder_v5_6 = { 02 83 45 FC 01 81 7D FC FF 0F 00 00 7E ?? 90 }\n\n\tcondition:\n\t\tall of ($Linux_flooder_v5*)\n}\n\n\n\n\nrule Uptycs_NPSTOOL \n{\n\tmeta:\n\t\tmalware_name = \"NPSTOOL\"\n\t\tdescription = \"NPS is a lightweight, high-performance,powerful intranet penetration proxy server, with a powerful web management terminal.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"64cc88ff3f8735ee8b0a6687c84dee1d\"\n\n\tstrings:\n\t\t$NPSTOOL_0 = \"/var/log/npc.log\"  ascii wide\n\t\t$NPSTOOL_1 = \"p2p local port\"  ascii wide\n\t\t$NPSTOOL_2 = \"conf/npc.conf\"  ascii wide\n\t\t$NPSTOOL_3 = \"npc debug\"  ascii wide\n\t\t$NPSTOOL_4 = \"proxy socks5 url\"  ascii wide\n\t\t$NPSTOOL_5 = \"stun server address\"  ascii wide\n\t\t$NPSTOOL_6 = \"PProf debug addr (ip:port\"  ascii wide\n\t\t$NPSTOOL_7 = \"npc log path\"  ascii wide\n\t\t$NPSTOOL_8 = \"p2p target\"  ascii wide\n\t\t$NPSTOOL_9 = \"not receiving check packet times, until timeout will disconnect the client\"  ascii wide\n\n\tcondition:\n\t\tall of ($NPSTOOL*)\n}\n\nrule Uptycs_Ransomware_Mario \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"dd2fee6e1ace30b2d3be7b45f2fd6a82\"\n\n\tstrings:\n\t\t$Ransomware_Mario_0 = \"Welcome to the RansomHouse\"  ascii wide\n\t\t$Ransomware_Mario_1 = \"You are locked by\"  ascii wide\n\t\t$Ransomware_Mario_2 = \".mario\"  ascii wide\n\t\t$Ransomware_Mario_3 = \"How To Restore Your Files.txt\"  ascii wide\n\t\t$Ransomware_Mario_4 = \"your network infrastructure has been compromised\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Mario*)\n}\n\nrule Uptycs_RedGoBot_v2 \n{\n\tmeta:\n\t\tmalware_name = \"RedGoBot\"\n\t\tdescription = \"REDGOBOT is a golang-based botnet capable of various DDoS attacks, including HTTP POST and GET flooding, ICMP and TCP Flooding and others.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"15036dd7efef9fb717dd70e115fa26a1\"\n\n\tstrings:\n\t\t$RedGoBot_v2_0 = \"/root/bot/main.go\"  ascii wide\n\t\t$RedGoBot_v2_1 = \"main.writeLog\"  ascii wide\n\t\t$RedGoBot_v2_2 = \"bot/attacks.Ssh.Send\"  ascii wide\n\t\t$RedGoBot_v2_3 = \"main.walkProcPid\"  ascii wide\n\t\t$RedGoBot_v2_4 = \"main.killer_maps\"  ascii wide\n\t\t$RedGoBot_v2_5 = \"bot/persistence.BashrcPersistence\"  ascii wide\n\t\t$RedGoBot_v2_6 = \"bot/persistence.CronPersistence\"  ascii wide\n\t\t$RedGoBot_v2_7 = \"bot/attacks.HttpPost.Name\"  ascii wide\n\n\tcondition:\n\t\tall of ($RedGoBot_v2*)\n}\n\nrule Uptycs_SSHBot \n{\n\tmeta:\n\t\tmalware_name = \"SSHBot\"\n\t\tdescription = \"An SSH bot typically refers to a type of malicious software that attempts to gain unauthorized access to computer systems or servers using the SSH (Secure Shell) protocol.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"eb52e6439458c4befa5b60108f73f29c\"\n\n\tstrings:\n\t\t$SSHBot_0 = \"ssh_bot/main.go\"  ascii wide\n\t\t$SSHBot_1 = \"main.UpdateHost\"  ascii wide\n\t\t$SSHBot_2 = \"main.CheckConnect\"  ascii wide\n\t\t$SSHBot_3 = \"main.Disconnect\"  ascii wide\n\t\t$SSHBot_4 = \"GetIsBotsValidate\"  ascii wide\n\t\t$SSHBot_5 = \"AddToBruteSource\"  ascii wide\n\t\t$SSHBot_6 = \"ssh_bot/engine.RandomizeSourceBrute\"  ascii wide\n\t\t$SSHBot_7 = \"ssh_bot/engine.(*BruteThread).DoWork\"  ascii wide\n\n\tcondition:\n\t\tall of ($SSHBot*)\n}\n\nrule Uptycs_Coinminer_Generic_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"108027ef0a54f0d1c4d71ceb8d49d8d5\"\n\n\tstrings:\n\t\t$Coinminer_Generic_v3_0 = \"pool_address\"  ascii wide\n\t\t$Coinminer_Generic_v3_1 = \"POOLCONF\"  ascii wide\n\t\t$Coinminer_Generic_v3_2 = \"Miner will mine mostly at the pool\"  ascii wide\n\t\t$Coinminer_Generic_v3_3 = \"pool_password\"  ascii wide\n\t\t$Coinminer_Generic_v3_4 = \"wallet_address\"  ascii wide\n\t\t$Coinminer_Generic_v3_5 = \"currency to mine\"  ascii wide\n\t\t$Coinminer_Generic_v3_6 = \"Monero\"  ascii wide\n\t\t$Coinminer_Generic_v3_7 = \"Do you want to use nicehash on this pool?\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v3*)\n}\n\nrule Uptycs_Ransomware_Esxi_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"cb914609417c3805d910a09263b54df2\"\n\n\tstrings:\n\t\t$Ransomware_Esxi_v2_0 = \"extract_encr_key\"  ascii wide\n\t\t$Ransomware_Esxi_v2_1 = \"decrypt_file\"  ascii wide\n\t\t$Ransomware_Esxi_v2_2 = \"truncate_encr_file\"  ascii wide\n\t\t$Ransomware_Esxi_v2_3 = \"encrypt_simple\"  ascii wide\n\t\t$Ransomware_Esxi_v2_4 = \"usage: encrypt <private_key> <file_to_decrypt> [<dec_step>] [<dec_size>] [<file_size>]\"  ascii wide\n\t\t$Ransomware_Esxi_v2_5 = \"number of MB to skip while encryption\"  ascii wide\n\t\t$Ransomware_Esxi_v2_6 = \"number of MB in encryption block\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Esxi_v2*)\n}\n\nrule Uptycs_Ransomware_Revil_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"29a78b82260d0b1fd32c1165fb0adb0c\"\n\n\tstrings:\n\t\t$Ransomware_Revil_v2_0 = \"Your files are encrypted, and currently unavailable\"  ascii wide\n\t\t$Ransomware_Revil_v2_1 = \"Iniciando cifrado - REvil PoC\"  ascii wide\n\t\t$Ransomware_Revil_v2_2 = \"Encrypted files:\"  ascii wide\n\t\t$Ransomware_Revil_v2_3 = \"RHKRC-readme.txt\"  ascii wide\n\t\t$Ransomware_Revil_v2_4 = \"/path/to/be/encrypted\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Revil_v2*)\n}\n\nrule Uptycs_Ransomware_Lorenz \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e2eb0794ca64c7cf4f7e9dfca6e63d84\"\n\n\tstrings:\n\t\t$Ransomware_Lorenz_0 = \"esxcli vm process list\"  ascii wide\n\t\t$Ransomware_Lorenz_1 = \"Your files are downloaded, encrypted, and currently unavailable\"  ascii wide\n\t\t$Ransomware_Lorenz_2 = \"HELP_SECURITY_EVENT.txt\"  ascii wide\n\t\t$Ransomware_Lorenz_3 = \".Lorenz\"  ascii wide\n\t\t$Ransomware_Lorenz_4 = \"Doesn't encrypted files:\"  ascii wide\n\t\t$Ransomware_Lorenz_5 = \"Hard stop VM\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Lorenz*)\n}\n\nrule Uptycs_Ransomware_Conti_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"623fc305b10979d7bde10288262d3691\"\n\n\tstrings:\n\t\t$Ransomware_Conti_v3_0 = \"CONTI_README.txt\"  ascii wide\n\t\t$Ransomware_Conti_v3_1 = \"All of your files are currently encrypted by CONTI strain.\"  ascii wide\n\t\t$Ransomware_Conti_v3_2 = \"/path/to/be/encrypted\"  ascii wide\n\t\t$Ransomware_Conti_v3_3 = \"NETWORK_ENCRYPT\"  ascii wide\n\t\t$Ransomware_Conti_v3_4 = \"Doesn't encrypted files:\"  ascii wide\n\t\t$Ransomware_Conti_v3_5 = \"It cannot be recovered by any means without contacting our team directly.\"  ascii wide\n\t\t$Ransomware_Conti_v3_6 = \"Starting encryption - CONTI POC\"  ascii wide\n\t\t$Ransomware_Conti_v3_7 = \"./locker --path /path --log /root/log.txt\"  ascii wide\n\t\t$Ransomware_Conti_v3_8 = \"./locker --path /path --vmkiller --vmlist /tmp/list.txt\"  ascii wide\n\n\tcondition:\n\t\t6 of ($Ransomware_Conti_v3*)\n}\n\nrule Uptycs_Ransomware_Lockbit_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"27a50ffd08039f8b2b78e8e7c44a6e83\"\n\n\tstrings:\n\t\t$Ransomware_Lockbit_v4_0 = \"restore-my-files.txt\"  ascii wide\n// Below are all encrypted strings\n\t\t$Ransomware_Lockbit_v4_1 = { 55 56 5a 52 5b 50 4d 58 49 4d 5b 5d 50 58 53 48 4d 49 55 5a 4b 50 }\n\t\t$Ransomware_Lockbit_v4_2 = { 41 56 53 40 55 56 51 51 41 4b 4e 4a 4f 49 43 5d 5f 5f }\n\t\t$Ransomware_Lockbit_v4_3 = { 53 41 49 4a 5d 4f 50 56 49 4e 4f 58 4a 55 53 48 5a 4a 4d 40 54 }\n\t\t$Ransomware_Lockbit_v4_4 = { 54 4c 55 4d 50 54 50 55 55 50 56 57 58 50 4b 5c }\n\t\t$Ransomware_Lockbit_v4_5 = { 5c 57 5c 4b 58 55 66 7d 58 4d 58 66 69 4b 56 4d 5c 5a 4d 50 56 57 66 6b 5c }\n\t\t$Ransomware_Lockbit_v4_6 = { 52 54 48 4f 48 48 41 4f 4f 53 49 48 52 54 5c 4f 4f }\n\t\t$Ransomware_Lockbit_v4_7 = { 58 5d 54 50 57 50 4a 4d 4b 58 4d 56 4b 4a }\n\n\tcondition:\n\t\tall of ($Ransomware_Lockbit_v4*)\n}\n\n\n\n\nrule Uptycs_Stager \n{\n\tmeta:\n\t\tmalware_name = \"Stager\"\n\t\tdescription = \" Stager is a Sidecopy APT Golang-based linux malware that is masqueraded as a PDF which downloads the decoy to the target directory /.local/share and opens it,also downloads the Ares RAT agent as /.local/share/updates and executes it.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9375e3c13c85990822d2f09a66b551d9\"\n\n\tstrings:\n\t\t$Stager_0 = \"/root/go/src/github.com/boss/main.go\"  ascii wide //  Utilities of Transparent Tribe that starts with the 'boss' prefix. APT36 is aiming for the operating system BOSS, developed in India for government entities\n\t\t$Stager_1 = \"main.openBrowser\"  ascii wide\n\t\t$Stager_2 = \"echo '@reboot %s' >> /dev/shm/mycron\"  ascii wide\n\t\t$Stager_3 = \"echo '@reboot ../.local/share/updates\"  ascii wide\n\t\t$Stager_4 = \"main.downloadFile\"  ascii wide\n\n\tcondition:\n\t\tall of ($Stager*)\n}\n\nrule Uptycs_Ransomware_Qinlin \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"417ad60624345ef85e648038e18902ab\"\n\n\tstrings:\n\t\t$Ransomware_Qinlin_0 = \"Failed to rename encrypted file\"  ascii wide\n\t\t$Ransomware_Qinlin_1 = \"Encrypting file\"  ascii wide\n\t\t$Ransomware_Qinlin_2 = \"File extensions whitelist:\"  ascii wide\n\t\t$Ransomware_Qinlin_3 = \"esxcli vm process kill\"  ascii wide\n\t\t$Ransomware_Qinlin_4 = \"Are you sure to start encryption?\"  ascii wide\n\t\t$Ransomware_Qinlin_5 = \"If you modify files - our decrypt software won't able to recover data\"  ascii wide\n\t\t$Ransomware_Qinlin_6 = \"Your network/system was encrypted\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Qinlin*)\n}\n\nrule Uptycs_Ransomware_Lynx \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"fe8b81dc5eeb1802725cdd8b2e013ba4\"\n\n\tstrings:\n\t\t$Ransomware_Lynx_0 = \"ENCRYPTED BY LYNX RANSOMWARE\"  ascii wide\n\t\t$Ransomware_Lynx_1 = \"LYNX_RANSOMWARE_NOTE.README\"  ascii wide\n\t\t$Ransomware_Lynx_2 = \"There is no software can backup your data except my decryptor\"  ascii wide\n\t\t$Ransomware_Lynx_3 = \"DO NOT EDIT THE ENCRYPTED FILE!\"  ascii wide\n\t\t$Ransomware_Lynx_4 = \"The file has the extension \\\".lynx\\\"\"  ascii wide\n\t\t$Ransomware_Lynx_5 = \"DO NOT USE BACKUP OR FILE REPAIR SOFTWARE BECAUSE THE FILES MAY BE CORRUPTED!\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Lynx*)\n}\n\n\nrule Uptycs_Merlin_V5 \n{\n\tmeta:\n\t\tmalware_name = \"Merlin\"\n\t\tdescription = \"Merlin is a cross-platform post-exploitation Command & Control server and agent written in Go.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f61d95fecb021071c921667d55f7664c\"\n\n\tstrings:\n\t\t$Merlin_V5_0 = \"github.com/Ne0nd0g/merlin\"  ascii wide\n\t\t$Merlin_V5_1 = \"commands.Upload\"  ascii wide\n\t\t$Merlin_V5_2 = \"commands.TearDown\"  ascii wide\n\t\t$Merlin_V5_3 = \"commands.ExecuteShellcodeQueueUserAPC\"  ascii wide\n\t\t$Merlin_V5_4 = \"commands.SSH.Password\"  ascii wide\n\t\t$Merlin_V5_5 = \"commands.p2pListener\"  ascii wide\n\t\t$Merlin_V5_6 = \"commands.ExecuteShellcodeCreateProcessWithPipe\"  ascii wide\n\t\t$Merlin_V5_7 = \"commands.listenUDP\"  ascii wide\n\t\t$Merlin_V5_8 = \"commands.ConnectSMB\"  ascii wide\n\t\t$Merlin_V5_9 = \"commands.CreateProcess\"  ascii wide\n\t\t$Merlin_V5_10 = \"commands.sdelete\"  ascii wide\n\n\tcondition:\n\t\tall of ($Merlin_V5*)\n}\n\nrule Uptycs_Panchan_V2 \n{\n\tmeta:\n\t\tmalware_name = \"Panchan\"\n\t\tdescription = \"Panchan is a sophisticated peer-to-peer botnet primarily targeting Linux servers in telecom and education sectors for crypto mining using advanced infection methods via SSH key theft and brute force.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5e1b21fcb419a0b96a63f9b6a0440452\"\n\n\tstrings:\n\t\t$Panchan_V2_0 = \"pan-chan's mining island hi!\"  ascii wide\n\t\t$Panchan_V2_1 = \"main._rig_config\"  ascii wide\n\t\t$Panchan_V2_2 = \"xmrig_nicehash\"  ascii wide\n\t\t$Panchan_V2_3 = \"xmrig_poolUser\"  ascii wide\n\t\t$Panchan_V2_4 = \"main._rig_config\"  ascii wide\n\t\t$Panchan_V2_5 = \"nbminer_algo\"  ascii wide\n\n\tcondition:\n\t\tall of ($Panchan_V2*)\n}\n\n\nrule Uptycs_Getshell_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Getshell\"\n\t\tdescription = \"GetShell is a backdoor which comes as a part of malware attack on multiple platforms\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5f5c972783ea3b21eade33d6935c10ce\"\n\n\tstrings:\n\t\t$Getshell_v2_0 = \"cat <(echo '@reboot echo socks5_backconnect\"  ascii wide\n\t\t$Getshell_v2_1 = \"(cd  && )') <(sed '/socks5_backconnect\"  ascii wide\n\t\t$Getshell_v2_2 = \"listening on\"  ascii wide\n\t\t$Getshell_v2_3 = \"cant bind to\"  ascii wide\n\t\t$Getshell_v2_4 = \"try to wait 1 minute\"  ascii wide\n\t\t$Getshell_v2_5 = \"need root. exiting...\"  ascii wide\n\t\t$Getshell_v2_6 = \"/tmp/socks5.sh\"  ascii wide\n\t\t$Getshell_v2_7 = \"bc_connect\"  ascii wide\n\t\t$Getshell_v2_8 = \"client.log\"  ascii wide\n\t\t$Getshell_v2_9 = \"recvCommand\"  ascii wide\n\t\t$Getshell_v2_10 = \"synsend\"  ascii wide\n\n\tcondition:\n\t\tall of ($Getshell_v2*)\n}\n\n\n\n\n\nrule Uptycs_Ransomware_Bablock \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"68967ebc319aacdb0247eae8b3768f04\"\n\n\n\tstrings:\n\t\t$Ransomware_Bablock_0 = \"/path/to/be/encrypted\"  ascii wide\n\t\t$Ransomware_Bablock_1 = \"Encrypted files:\"  ascii wide\n\t\t$Ransomware_Bablock_2 = \"Statistic:\"  ascii wide\n\t\t$Ransomware_Bablock_3 = \"/_r_e_a_d_m_e.txt\"  ascii wide\n\t\t$Ransomware_Bablock_4 = \"Whole files count:\"  ascii wide\n\t\t$Ransomware_Bablock_5 = \"Decryption ID:\"  ascii wide\n\t\t$Ransomware_Bablock_6 = \"main.encrypt_file\"  ascii wide\n\t\t$Ransomware_Bablock_7 = \"Skipped files:\"  ascii wide\n\n\n\tcondition:\n\t\t7 of ($Ransomware_Bablock*)\n}\n\n\nrule Uptycs_IPStorm_v2 \n{\n\tmeta:\n\t\tmalware_name = \"IPStorm\"\n\t\tdescription = \"IPStorm is a botnet that abuses a legitimate Peer-to-peer (p2p) network called InterPlanetary File System (IPFS) as a means to obscure malicious traffic.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"74f80c56cb3ecb57ab2d8e505f5ae1d7\"\n\n\n\tstrings:\n\t\t$IPStorm_v2_0 = \"service storm /system/bin/storm\"  ascii wide\n\t\t$IPStorm_v2_1 = \"remove_malware\"  ascii wide\n\t\t$IPStorm_v2_2 = \"kill_suspects\"  ascii wide\n\t\t$IPStorm_v2_3 = \"storm already running\"  ascii wide\n\t\t$IPStorm_v2_4 = \"storm-install.sh\"  ascii wide\n\t\t$IPStorm_v2_5 = \"storm-pslist.sh\"  ascii wide\n\t\t$IPStorm_v2_6 = \"storm.rcUT\"  ascii wide\n\t\t$IPStorm_v2_7 = \"storm.rc\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($IPStorm_v2*)\n}\n\n\nrule Uptycs_Flooder_Golang_V6 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e32a5b9c58c3e40d2246b7774cb4fb33\"\n\n\n\tstrings:\n\t\t$Flooder_Golang_V6_0 = \"main.tcpflood\"  ascii wide\n\t\t$Flooder_Golang_V6_1 = \"main.tlsflood\"  ascii wide\n\t\t$Flooder_Golang_V6_2 = \"main.putflood\"  ascii wide\n\t\t$Flooder_Golang_V6_3 = \"main.attack\"  ascii wide\n\t\t$Flooder_Golang_V6_4 = \"main.postflood\"  ascii wide\n\t\t$Flooder_Golang_V6_5 = \"main.keepwatchdog\"  ascii wide\n\t\t$Flooder_Golang_V6_6 = \"main.start_of_c2\"  ascii wide\n\t\t$Flooder_Golang_V6_7 = \"main.execshell\"  ascii wide\n\t\t$Flooder_Golang_V6_8 = \"main.white_list_killer\"  ascii wide\n\t\t$Flooder_Golang_V6_9 = \"main.randomUserAgent\"  ascii wide\n\n\n\tcondition:\n\t\t9 of ($Flooder_Golang_V6*)\n}\n\n\nrule Uptycs_Ddostf_v2 \n{\n\tmeta:\n\t\tmalware_name = \"DDOSTF\"\n\t\tdescription = \"The malware DDOSTF targets mainly Linux machines running Elasticsearch servers, but it also attacks and infects Windows systems where the infected machines point to ddos.tf.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"26ddfbc4fef3fb3f5e6a5ed80d8af0f3\"\n\n\n\tstrings:\n\t\t$Ddostf_v2_0 = \"ddos.tf\"  ascii wide\n\t\t$Ddostf_v2_1 = \"djgudGVyLnRm\"  ascii wide\n\t\t$Ddostf_v2_2 = \"TF- Linux kernel\"  ascii wide\n\t\t$Ddostf_v2_3 = \"TCP_KEEPCNT\"  ascii wide\n\t\t$Ddostf_v2_4 = \"UDP-Flow\"  ascii wide\n\t\t$Ddostf_v2_5 = \"SYN-Flow\"  ascii wide\n\t\t$Ddostf_v2_6 = \"TCP_KEEPINTVL\"  ascii wide\n\t\t$Ddostf_v2_7 = \"chmod +x /etc/rc.local\"  ascii wide\n\t\t$Ddostf_v2_8 = \"cd /etc;chmod 777 %s\"  ascii wide\n\t\t$Ddostf_v2_9 = \"sed -i -e '2 i/etc/%s reboot' /etc/rc.local\"  ascii wide\n\t\t$Ddostf_v2_10 = \"sed -i -e '2 i/etc/%s start' /etc/init.d/boot.local\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ddostf_v2*)\n}\n\n\nrule Uptycs_KrasueRAT \n{\n\tmeta:\n\t\tmalware_name = \"KrasueRAT\"\n\t\tdescription = \"Krasue RAT is a Linux Remote Access Trojan targeting organisations in Thailand since 2021 and is known for its stealthy behavior where it features embedded rootkits, uses RTSP messages for communication, and is likely deployed in later stages of cyber attacks, posing a significant threat to critical systems. T\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3b338787e6fc7c2979830cb94fcb32db\"\n\n\n\tstrings:\n\t\t$KrasueRAT_0 = \"unhide_allz\"  ascii wide\n\t\t$KrasueRAT_1 = \"kkill\"  ascii wide\n\t\t$KrasueRAT_2 = \"is_invisible\"  ascii wide\n\t\t$KrasueRAT_3 = \"give_root\"  ascii wide\n\t\t$KrasueRAT_4 = \"hide_tcp4_port\"  ascii wide\n\t\t$KrasueRAT_5 = \"hijack_stop\"  ascii wide\n\t\t$KrasueRAT_6 = \"prepare_creds\"  ascii wide\n\t\t$KrasueRAT_7 = \"find_task\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($KrasueRAT*)\n}\n\n\nrule Uptycs_Flooder_Ryoko \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1eb09cfa4f3d77d85a44a3e657271f5c\"\n\n\n\tstrings:\n\t\t$Flooder_Ryoko_0 = \"ryoko/client\"  ascii wide\n\t\t$Flooder_Ryoko_1 = \"max flood attempt\"  ascii wide\n\t\t$Flooder_Ryoko_2 = \"main.connect\"  ascii wide\n\t\t$Flooder_Ryoko_3 = \"main.ensureSingleInstance\"  ascii wide\n\t\t$Flooder_Ryoko_4 = \"main.recvCommand\"  ascii wide\n\t\t$Flooder_Ryoko_5 = \"main.encode\"  ascii wide\n\t\t$Flooder_Ryoko_6 = \"main.encrypt\"  ascii wide\n\t\t$Flooder_Ryoko_7 = \"main.killer_by_binStrings\"  ascii wide\n\t\t$Flooder_Ryoko_8 = \"main.udphex\"  ascii wide\n\t\t$Flooder_Ryoko_9 = \"main.inetAddr\"  ascii wide\n\t\t$Flooder_Ryoko_10 = \"main.findBinaryPath\"  ascii wide\n\t\t$Flooder_Ryoko_11 = \"main..inittask\"  ascii wide\n\t\t$Flooder_Ryoko_12 = \"main.aes_bytes\"  ascii wide\n\t\t$Flooder_Ryoko_13 = \"main.aes_key\"  ascii wide\n\t\t$Flooder_Ryoko_14 = \"main.maxAttempt\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_Ryoko*)\n}\n\n\nrule Uptycs_Flooder_Golang_V7 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e0a57b77195c5bd45840f6d7cbf974f9\"\n\n\n\tstrings:\n\t\t$Flooder_Golang_V7_0 = \"main.start_of_c2\"  ascii wide\n\t\t$Flooder_Golang_V7_1 = \"main.copymyself\"  ascii wide\n\t\t$Flooder_Golang_V7_2 = \"main.checkWritePermission\"  ascii wide\n\t\t$Flooder_Golang_V7_3 = \"main.systemservice\"  ascii wide\n\t\t$Flooder_Golang_V7_4 = \"main.GetCPUCoresAndFrequency\"  ascii wide\n\t\t$Flooder_Golang_V7_5 = \"main.white_list_killer\"  ascii wide\n\t\t$Flooder_Golang_V7_6 = \"main.buildconn\"  ascii wide\n\t\t$Flooder_Golang_V7_7 = \"main.start_UDP\"  ascii wide\n\t\t$Flooder_Golang_V7_8 = \"main.start_TCP\"  ascii wide\n\t\t$Flooder_Golang_V7_9 = \"main.execshell\"  ascii wide\n\t\t$Flooder_Golang_V7_10 = \"main.attack\"  ascii wide\n\t\t$Flooder_Golang_V7_11 = \"main.handle_socket\"  ascii wide\n\t\t$Flooder_Golang_V7_12 = \"main.xorEncryptDecrypt\"  ascii wide\n\t\t$Flooder_Golang_V7_13 = \"main.checkcon\"  ascii wide\n\t\t$Flooder_Golang_V7_14 = \"main.keepwatchdog\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_Golang_V7*)\n}\n\n\n\n\nrule Uptycs_Ransomware_Rhysida \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"17a22e1b633068dc45df51679df233cc\"\n\n\tstrings:\n\t\t$Ransomware_Rhysida_0 = \"Rhysida\"  ascii wide\n\t\t$Ransomware_Rhysida_1 = \"esxcli system welcomemsg set -m\"  ascii wide\n\t\t$Ransomware_Rhysida_2 = \"your digital ecosystem has been compromised\"  ascii wide\n\t\t$Ransomware_Rhysida_3 = \"Critical Breach Detected\"  ascii wide\n\t\t$Ransomware_Rhysida_4 = \"confidential data has been exfiltrated from your network\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Rhysida*)\n}\n\nrule Uptycs_Coinminer_Generic_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8f98d41d731f908383f310fde8502d57\"\n\n\tstrings:\n\t\t$Coinminer_Generic_v4_0 = \"stratum+tcp://\"  ascii wide\n\t\t$Coinminer_Generic_v4_1 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_Generic_v4_2 = \"mining.authorize\"  ascii wide\n\t\t$Coinminer_Generic_v4_3 = \"mining.set_difficulty\"  ascii wide\n\t\t$Coinminer_Generic_v4_4 = \"mining.notify\"  ascii wide\n\t\t$Coinminer_Generic_v4_5 = \"miner threads started\"  ascii wide\n\t\t$Coinminer_Generic_v4_6 = \"mining.submit\"  ascii wide\n\t\t$Coinminer_Generic_v4_7 = \"Stratum session id:\"  ascii wide\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v4*)\n}\n\nrule Uptycs_Ransomware_Ubomb \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a9cd1acdf10822c1ca9a87b7dce04b1f\"\n\n\tstrings:\n\t\t$Ransomware_Ubomb_0 = \"YOUR COMPANY NETWORK HAS BEEN PENETRATED\"  ascii wide\n\t\t$Ransomware_Ubomb_1 = \"RECOVERY_INSTRUCTIONS.txt\"  ascii wide\n\t\t$Ransomware_Ubomb_2 = \"All your important files have been encrypted!\"  ascii wide\n\t\t$Ransomware_Ubomb_3 = \"CONTIUBOMB\"  ascii wide\n\t\t$Ransomware_Ubomb_4 = \"Do you really want to restore your files?\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Ubomb*)\n}\n\nrule Uptycs_Gafgyt_v9 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"63ea126cab74a685bba83f818de8d8f3\"\n\n\tstrings:\n\t\t$Gafgyt_v9_0 = \"sucessfully sent UDP flood\"  ascii wide\n\t\t$Gafgyt_v9_1 = \"[attack]\"  ascii wide\n\t\t$Gafgyt_v9_2 = \"/proc/net/route\"  ascii wide\n\t\t$Gafgyt_v9_3 = \"sucessfully sent TCP flood\"  ascii wide\n\t\t$Gafgyt_v9_4 = \"sucessfully sent HEX flood\"  ascii wide\n\t\t$Gafgyt_v9_5 = \"sucessfully sent OVH flood\"  ascii wide\n\t\t$Gafgyt_v9_6 = \"sucessfully sent VSE flood\"  ascii wide\n\t\t$Gafgyt_v9_7 = \"dropbear\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_v9*)\n}\n\nrule Uptycs_Backdoor_NKAbuse \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"11e2d7a8d678cd72e6e5286ccfb4c833\"\n\n\tstrings:\n\t\t$Backdoor_NKAbuse_0 = \"http_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_1 = \"icmp_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_2 = \"ping_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_3 = \"ssl_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_4 = \"tcp_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_5 = \"Heartbeat\"  ascii wide\n\t\t$Backdoor_NKAbuse_6 = \"nknorg/nkn-sdk-go\"  ascii wide\n\t\t$Backdoor_NKAbuse_7 = \"udp_flood\"  ascii wide\n\t\t$Backdoor_NKAbuse_8 = \"kbinani/screenshot\"  ascii wide\n\n\tcondition:\n\t\tall of ($Backdoor_NKAbuse*)\n}\n\nrule Uptycs_XorDDOs_gostresser_v3 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOs\"\n\t\tdescription = \"XorDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"54418cdaa6074519ca91775ef2c906c4\"\n\n\tstrings:\n\t\t$XorDDOs_gostresser_v3_0 = \"NoName057(16)\"  ascii wide\n\t\t$XorDDOs_gostresser_v3_1 = \"go_stresser_20/models.(*VictimTarget)\"  ascii wide\n\t\t$XorDDOs_gostresser_v3_2 = \"dosia/people_client/\"  ascii wide\n\t\t$XorDDOs_gostresser_v3_3 = \"go_stresser_20/workers.TargetWorker\"  ascii wide\n\t\t$XorDDOs_gostresser_v3_4 = \"go_stresser_20/workers.LoggerWorker\"  ascii wide\n\t\t$XorDDOs_gostresser_v3_5 = \"go_stresser_20/models.SayHallo\"  ascii wide\n\n\tcondition:\n\t\tall of ($XorDDOs_gostresser_v3*)\n}\n\n\n\n\nrule Uptycs_Gafgyt_bashlite_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1f20e6697a078836eb0ac8e31353fa50\"\n\n\tstrings:\n\t\t$Gafgyt_bashlite_v2_0 = \"PONG!\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_1 = \"HOLD Flooding\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_2 = \"JUNK Flooding\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_3 = \"UDP Flooding\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_4 = \"TCP Flooding\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_5 = \"KILLATTK\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_6 = \"LOLNOGTFO\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_7 = \"8.8.8.8\"  ascii wide\n\t\t$Gafgyt_bashlite_v2_8 = \"/proc/net/route\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_bashlite_v2*)\n}\n\nrule Uptycs_SharkTool \n{\n\tmeta:\n\t\tmalware_name = \"SHARKTOOL\"\n\t\tdescription = \"The Shark tool is a network traffic analysis tool used for packet sniffing and protocol analysis which allows users to capture and inspect data packets on a network, providing insights into network activity, protocols, and potential security issues.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"edc91faa16aa3e5b3d7303b2a276d23d\"\n\n\tstrings:\n\t\t$SharkTool_0 = \"usage: %s <port> [-a <a class> | -b <b class>] [-i <interface] [-s <speed>]\"  ascii wide\n\t\t$SharkTool_1 = \"speed 10 -> as fast as possible, 1 -> it will take bloody ages (about 50 syns/s)\"  ascii wide\n\t\t$SharkTool_2 = \"scanning network\"  ascii wide\n\t\t$SharkTool_3 = \"usec: %ld, burst packets %d\"  ascii wide\n\t\t$SharkTool_4 = \"damn dude, port numbers are in 1 .. 65535\"  ascii wide\n\t\t$SharkTool_5 = \"capturing process started pid\"  ascii wide\n\t\t$SharkTool_6 = \"cardshark\"  ascii wide\n\t\t$SharkTool_7 = \"tcpdump\"  ascii wide\n\t\t$SharkTool_8 = \"-a requires an A network as argument\"  ascii wide\n\t\t$SharkTool_9 = \"pcap filter\"  ascii wide\n\n\tcondition:\n\t\tall of ($SharkTool*)\n}\n\nrule Uptycs_Keylogger_logkeys_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Keylogger\"\n\t\tdescription = \"Keylogger is a software that is used to monitor and record the keystrokes entered by the user.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2b2f43a7bc26038b04d370038ed2c967\"\n\n\tstrings:\n\t\t$Keylogger_logkeys_v2_0 = \"determine_system_keymap\"  ascii wide\n\t\t$Keylogger_logkeys_v2_1 = \"src/logkeys.cc\"  ascii wide\n\t\t$Keylogger_logkeys_v2_2 = \"/var/run/logkeys.pid\"  ascii wide\n\t\t$Keylogger_logkeys_v2_3 = \"is_char_key\"  ascii wide\n\t\t$Keylogger_logkeys_v2_4 = \"is_func_key\"  ascii wide\n\t\t$Keylogger_logkeys_v2_5 = \"User-Agent: logkeys\"  ascii wide\n\n\tcondition:\n\t\tall of ($Keylogger_logkeys_v2*)\n}\n\nrule Uptycs_BannerGrabberTool \n{\n\tmeta:\n\t\tmalware_name = \"BannerGrabberTool\"\n\t\tdescription = \"A banner grabber tool is a network utility used to extract information, like service details and version numbers, from a remote server or service by making initial contact and analysing the response headers.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"45901e5b336fd0eb79c6decb8e9a69cb\"\n\n\tstrings:\n\t\t$BannerGrabberTool_0 = \"banner grabber by PRG\"  ascii wide\n\t\t$BannerGrabberTool_1 = \"usage: %s <infile> <port> <threads>\"  ascii wide\n\t\t$BannerGrabberTool_2 = \"Cannot open\"  ascii wide\n\t\t$BannerGrabberTool_3 = \"Port???\"  ascii wide\n\t\t$BannerGrabberTool_4 = \"Connection reset by peer\"  ascii wide\n\t\t$BannerGrabberTool_5 = \"Connection timed out\"  ascii wide\n\t\t$BannerGrabberTool_6 = \"Connection refused\"  ascii wide\n\t\t$BannerGrabberTool_7 = \"Network dropped connection on reset\"  ascii wide\n\n\tcondition:\n\t\tall of ($BannerGrabberTool*)\n}\n\nrule Uptycs_PortscanTool_v2 \n{\n\tmeta:\n\t\tmalware_name = \"PortscanTool\"\n\t\tdescription = \"A port scanning hack tool is a software used by hackers to identify open ports on a target system which helps them discover potential vulnerabilities that can be exploited for unauthorized access.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"946689ba1b22d457be06d95731fcbcac\"\n\n\tstrings:\n\t\t$PortscanTool_v2_0 = \"Usage: %s <b-block> <port> [c-block]\"  ascii wide\n\t\t$PortscanTool_v2_1 = \"bios.txt\"  ascii wide\n\t\t$PortscanTool_v2_2 = \"Invalid b-range\"  ascii wide\n\t\t$PortscanTool_v2_3 = \"Scanning:\"  ascii wide\n\t\t$PortscanTool_v2_4 = \"Invalid IP\"  ascii wide\n\t\t$PortscanTool_v2_5 = \"Portscan completed\"  ascii wide\n\n\tcondition:\n\t\tall of ($PortscanTool_v2*)\n}\n\nrule Uptycs_SSHBruteforceTool \n{\n\tmeta:\n\t\tmalware_name = \"SSHBruteforceTool\"\n\t\tdescription = \"An SSH brute force tool is a cybersecurity tool designed for testing the security of SSH (Secure Shell) authentication by attempting multiple login combinations.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"\"\n\n\tstrings:\n\t\t$SSHBruteforceTool_0 = \"ssh_vuln\"  ascii wide\n\t\t$SSHBruteforceTool_1 = \"Vulnerable -> user:\"  ascii wide\n\t\t$SSHBruteforceTool_2 = \"Normal Shutdown, Thank you for playing\"  ascii wide\n\t\t$SSHBruteforceTool_3 = \"LET'S MAKE SOME ADMINS TO CRY!\"  ascii wide\n\t\t$SSHBruteforceTool_4 = \"SSH attack on port\"  ascii wide\n\t\t$SSHBruteforceTool_5 = \"Brute ssh attack finished!\"  ascii wide\n\t\t$SSHBruteforceTool_6 = \"Cannot open ips.lst\"  ascii wide\n\t\t$SSHBruteforceTool_7 = \"[Info] %s <threads> <port> <verbose/normal> <key>\"  ascii wide\n\n\tcondition:\n\t\tall of ($SSHBruteforceTool*)\n}\n\n\n\n\n\nrule Uptycs_Ransomware_RansomEXX_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a7ea1e33c548182b8e56e32b547afb4b384ebe257ca0672dbf72569a54408c5c\"\n\n\tstrings:\n\t\t$Ransomware_RansomEXX_v2_0 = \"ransomexx/src/footer.rs\"  ascii wide\n\t\t$Ransomware_RansomEXX_v2_1 = \"ransomexx/src/logic.rs\"  ascii wide\n\t\t$Ransomware_RansomEXX_v2_2 = \"ransomexx/src/ransom_data.rs\"  ascii wide\n\t\t$Ransomware_RansomEXX_v2_3 = \"ransomexx/src/ciphers/aes256_impl.rs\"  ascii wide\n\t\t$Ransomware_RansomEXX_v2_4 = \"ERROR_RENAME_LIMIT_REACHED\"  ascii wide\n\t\t$Ransomware_RansomEXX_v2_5 = \"ransomexx/src/parallel_iter.rs\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_RansomEXX_v2*)\n}\n\nrule Uptycs_Ransomware_Inc \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"12048b087544205efda36b5f6ae29fec\"\n\n\n\tstrings:\n\t\t$Ransomware_Inc_0 = \"Start killing ESXi servers!\"  ascii wide\n\t\t$Ransomware_Inc_1 = \"INC-README\"  ascii wide\n\t\t$Ransomware_Inc_2 = \"You must provide some path for encryption!\"  ascii wide\n\t\t$Ransomware_Inc_3 = \"Failed to fork process!\"  ascii wide\n\t\t$Ransomware_Inc_4 = \"vmsvc/snapshot.removeall\"  ascii wide\n\t\t$Ransomware_Inc_5 = \"Failed to rename\"  ascii wide\n\t\t$Ransomware_Inc_6 = \"Changing message of the day!\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Inc*)\n}\n\nrule Uptycs_Backdoor_Winnti_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4db89eb0359da8e769056f835870e2b6\"\n\n\tstrings:\n\t\t$Backdoor_Winnti_v2_0 = \"/proc/pic_io\"  ascii wide\n\t\t$Backdoor_Winnti_v2_1 = \"/proc/net/if_inet6\"  ascii wide\n\t\t$Backdoor_Winnti_v2_2 = { 3C 3F 78 6D 6C 20 76 65 72 73 69 6F 6E 3D 22 31 2E 30 22 20 65 6E 63 6F 64 69 6E 67 3D 22 55 4E 49 43 4F 44 45 22 3F 3E } //\"<?xml version=\"1.0\" encoding=\"UNICODE\"?>\n\t\t$Backdoor_Winnti_v2_3 = { 3C 46 69 6C 65 4C 69 73 74 20 46 69 6C 65 50 61 74 68 3D 22 25 73 22 3E }//\"<FileList FilePath=\"%s\">\"\n\t\t$Backdoor_Winnti_v2_4 = { FF FF FF C9 C3 55 48 89 E5 48 83 EC 30 89 F8 66 89 45 DC C7 45 FC FF FF }\n\t\t$Backdoor_Winnti_v2_5 = \"<LIST><name><![CDATA[%s]]></name><type>%o</type><perm>%o</perm><user>%s:%s</user><size>%llu</size><time>%s</time></LIST>\"  ascii wide\n\t\t$Backdoor_Winnti_v2_6 = { 43 42 32 46 41 33 36 41 41 41 39 35 34 31 46 30} // XOR key\n\n\tcondition:\n\t\t6 of ($Backdoor_Winnti_v2*)\n}\n\n\nrule Uptycs_Fbot_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Fbot\"\n\t\tdescription = \"Fbot is a linux botnet malware which is based on Mirai malware.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1ad78e99918fd66ed43d42a93d2f910a2173b3c5\"\n\n\tstrings:\n\t\t$Fbot_v2_0 = \"put_your_scrapestack_key_here\"  ascii wide\n\t\t$Fbot_v2_1 = \"Loading Bot List....\"  ascii wide\n\t\t$Fbot_v2_2 = \"Enter Target List?\"  ascii wide\n\t\t$Fbot_v2_3 = \"Found CoinPayments\"  ascii wide\n\t\t$Fbot_v2_4 = \"FuckBot AWS IAM Creator\"  ascii wide\n\t\t$Fbot_v2_5 = \".aws/credentials\"  ascii wide\n\t\t$Fbot_v2_6 = \"PAYPAL_API_USERNAME\"  ascii wide\n\t\t$Fbot_v2_7 = \"FuckBot Laravel SMTP Scanner\"  ascii wide\n\n\tcondition:\n\t\tall of ($Fbot_v2*)\n}\n\nrule Uptycs_Mirai_Noabot \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"66cd64e52c7b08a45acd3bc768f57bc3\"\n\n\n\tstrings:\n\t\t$Mirai_Noabot_0 = \"/etc/ssh/ssh_knownhosts\"  ascii wide\n\t\t$Mirai_Noabot_1 = { C1 83 E1 0F 74 1A B8 10 00 00 00 48 29 C8 48 8D 0C 02 48 89 DA 48 }\n\t\t$Mirai_Noabot_2 = { 48 89 D8 48 83 C8 01 EB 04 48 8B 76 10 48 3B 46 08 72 F6 48 8B }\n\t\t$Mirai_Noabot_3 = \"sinusbot\"  ascii wide\n\t\t$Mirai_Noabot_4 =  { C1 83 E1 0F 74 1A B8 10 00 00 00 48 29 C8 48 8D 0C 02 48 89 DA 48 }\n\t\t$Mirai_Noabot_5 =  { D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0 }\n\t\t$Mirai_Noabot_6 =  { FF 48 81 EC D0 00 00 00 48 8D 84 24 E0 00 00 00 48 89 54 24 30 C7 04 24 18 00 }\n\t\t$Mirai_Noabot_7 =  { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 }\n\n\n\tcondition:\n\t\tall of ($Mirai_Noabot*)\n}\n\nrule Uptycs_Mirai_Noabot_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f468662cfa9e7f91ddcc763c9b9b77c7\"\n\n\tstrings:\n\t\t$Mirai_Noabot_v2_0 =  { 89 45 00 EB 2C 8B 4B 04 8B 13 8B 7B 18 8B 01 01 02 8B 02 83 }\n\t\t$Mirai_Noabot_v2_1 =  { 89 E5 56 53 31 F6 8D 45 10 83 EC 10 89 45 F4 8B 55 F4 46 8D }\n\t\t$Mirai_Noabot_v2_2 =  \"sinusbot\"  ascii wide\n\t\t$Mirai_Noabot_v2_3 =  \"miner1324\"  ascii wide\n\t\t$Mirai_Noabot_v2_4 =  \"cft6xdr5zse4\"  ascii wide\n\t\t$Mirai_Noabot_v2_5 =  \"l0g@dm1n10\"  ascii wide\n\t\t$Mirai_Noabot_v2_6 =  \"Pr1vat3R00tSh3lL\"  ascii wide\n\n\tcondition:\n\t\tall of ($Mirai_Noabot_v2*)\n}\n\n\n\nrule Uptycs_Rekoobe_v5\n{\n\tmeta:\n\t\tmalware_name = \"Rekoobe\"\n\t\tdescription = \"Rekoobe is a Trojan for linux that targets SPARC architectures and some of its variants also infected x86 and x86-64 architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b4910e998cf58da452f8151b71c868cb\"\n\n// Added $code_5 and $code_6\n\n\tstrings:\n\t\t$code_0 = { C6 84 24 60 18 00 00 72 C6 84 24 61 18 00 00 30 C6 84 24 62 18 00 00 73 C6 84 24 63 18 00 00 74 C6 84 24 64 18 00 00 40 C6 84 24 65  18 00 00 23 C6 84 24 66 18 00 00 24 C6 84 24 67 18 00 00 00 } // moving pattern\n\t\t$code_1 = { F5 48 89 D6 48 C1 EE 18 40 0F B6 F6 48 33 2C F1 48 89 D6 48 C1 }// moving pattern\n\t\t$code_2 = { C6 84 24 20 18 00 00 2F C6 84 24 21 18 00 00 70 C6 84 24 22 18 00 00 72 C6 84 24 23 18 00 00 6F C6 84 24 24 18 00 00 63 C6 84 24 25 18 00 00 2F C6 84 24 26 18 00 00 73 C6 84 24 27 18 00 00 65 C6 84 24 28 18 00 00 6C C6 84 24 29 18 00 00 66 C6 84 24 2A 18 00 00 2F C6 84 24 2B 18 00 00 65 }// moving pattern\n\t\t$code_3 = { C6 00 48 C6 4? ?? 49 C6 4? ?? 49 C6 4? ?? 4C C6 4? ?? 53 C6 4? ?? 45 C6 4? ?? 54 C6 4? ?? 3D C6 4? ?? 46 C6 4? ?? 00 }// moving pattern\n\t\t$code_4 = { C6 00 54 C6 4? ?? 4D C6 4? ?? 45 C6 4? ?? 3D C6 4? ?? 52 }// moving pattern\n\t\t$code_5 = { F0 89 D0 31 D8 21 F0 31 D8 03 45 F0 89 CF C1 CF 1B 01 F8 C1 }\n\t\t$code_6 = { C6 85 E0 FD FF FF 72 C6 85 E1 FD FF FF 30 C6 85 E2 FD FF FF 73 C6 85 E3 FD FF FF 74 C6 85 E4 FD FF FF 40 C6 85 E5 FD FF FF 23 C6 85 E6 FD FF FF 24 } // r0st@#$\n\t\t$Rekoobe_v5_1 = \"fork\"  ascii wide\n\t\t$Rekoobe_v5_2 = \"socket\"  ascii wide\n\t\t$Rekoobe_v5_3 = \"bind\"  ascii wide\n\t\t$Rekoobe_v5_4 = \"listen\"  ascii wide\n\t\t$Rekoobe_v5_5 = \"accept\"  ascii wide\n\t\t$Rekoobe_v5_6 = \"alarm\"  ascii wide\n\t\t$Rekoobe_v5_7 = \"shutdown\"  ascii wide\n\t\t$Rekoobe_v5_8 = \"creat\"  ascii wide\n\t\t$Rekoobe_v5_9 = \"write\"  ascii wide\n\t\t$Rekoobe_v5_10 = \"open\"  ascii wide\n\t\t$Rekoobe_v5_11 = \"read\"  ascii wide\n\t\t$Rekoobe_v5_12 = \"execl\"  ascii wide\n\t\t$Rekoobe_v5_13 = \"gethostbyname\"  ascii wide\n\t\t$Rekoobe_v5_14 = \"connect\"  ascii wide\n\n\n\tcondition:\n\t 4 of ($code_*) and 10 of ($Rekoobe_v5*)\n}\n\n\nrule Uptycs_Headcrab_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Headcrab\"\n\t\tdescription = \" HeadCrab is an evolving malware targeting Redis database servers since 2021, actively adapting to refine its tactics for cryptocurrency mining.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"879ba8f13632bb461f1d6171250bd4b4\"\n\n\n\tstrings:\n\t\t$Headcrab_0 = \"helloheadcrab\"  ascii wide\n\t\t$Headcrab_1 = \"Headcrab hooks finally added to service\"  ascii wide\n\t\t$Headcrab_2 = \"Gj catching service!\"  ascii wide\n\t\t$Headcrab_4 = \"future zombification will be more\"  ascii wide\n\t\t$Headcrab_5 = \"Feel free to send any curses\"  ascii wide\n\t\t$Headcrab_6 = \"Pamdicks is too old for getdents64\"  ascii wide\n\t\t$type_0 = \"This is Headcrab-junior (plugin)\"  ascii wide\n\t\t$type_1 = \"This is Headcrab (service)\"  ascii wide\n\t\t$type_2 = \"This is Headcrab (plugin)\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Headcrab*) and 1 of ($type_*)\n}\n\n\n\n\n\nrule Uptycs_Ransomware_Babuk_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ed2d62cbc76696f8c7168763bf14e470\"\n\n\n\tstrings:\n\t\t$Ransomware_Babuk_v4_0 = \"Doesn't encrypted files:\"  ascii wide\n\t\t$Ransomware_Babuk_v4_1 = \"Encrypted files:\"  ascii wide\n\t\t$Ransomware_Babuk_v4_2 = \"Whole files count:\"  ascii wide\n\t\t$Ransomware_Babuk_v4_3 = \"Crypted:\"  ascii wide\n\t\t$Ransomware_Babuk_v4_4 = \"encrypted all your data on all servers\"  ascii wide\n\t\t$Ransomware_Babuk_v4_5 = \"don't waste time trying to recover the data\"  ascii wide\n\t\t$Ransomware_Babuk_v4_6 = \"/path/to/be/encrypted\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Babuk_v4*)\n}\n\nrule Uptycs_Coinminer_CCminer \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e57626a13f55cff65eaacc302a32cd9a\"\n\n\n\tstrings:\n\t\t$Coinminer_CCminer_0 = \"--cpu-affinity\"  ascii wide\n\t\t$Coinminer_CCminer_1 = \"ccminer_CPU\"  ascii wide\n\t\t$Coinminer_CCminer_2 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_CCminer_3 = \"mining.set_extranonce\"  ascii wide\n\t\t$Coinminer_CCminer_4 = \"X-Mining-Hashrate:\"  ascii wide\n\t\t$Coinminer_CCminer_5 = \"password for mining server\"  ascii wide\n\t\t$Coinminer_CCminer_6 = \"stratum+tcp://\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_CCminer*)\n}\n\nrule Uptycs_Mythic_Poseidon_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Mythic\"\n\t\tdescription = \"Mythic is a multiplayer, command and control platform for red teaming tool\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1704d66aee6fd36fca8b0394b6618636\"\n\n\n\tstrings:\n\t\t$Mythic_Poseidon_v2_0 = \"MythicUUID\"  ascii wide\n\t\t$Mythic_Poseidon_v2_1 = \"SendFileToMythic\"  ascii wide\n\t\t$Mythic_Poseidon_v2_2 = \"MythicAgents\"  ascii wide\n\t\t$Mythic_Poseidon_v2_3 = \"c2_profile\"  ascii wide\n\t\t$Mythic_Poseidon_v2_4 = \"functions.isElevated\"  ascii wide\n\t\t$Mythic_Poseidon_v2_5 = \"powershell_executor\"  ascii wide\n\t\t$Mythic_Poseidon_v2_6 = \"aggregateDelegateMessagesToMythic\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mythic_Poseidon_v2*)\n}\n\n\nrule Uptycs_Ransomware_Esxi_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"37391b991d603616f04b3c646b4c7307\"\n\n\n\tstrings:\n\t\t$Ransomware_Esxi_v3_0 = \"/tmp/how_to_decrypt.txt\"  ascii wide\n\t\t$Ransomware_Esxi_v3_1 = \"Successfully scaned dirs -\"  ascii wide\n\t\t$Ransomware_Esxi_v3_2 = \"Files damaged in the encryption process -\"  ascii wide\n\t\t$Ransomware_Esxi_v3_3 = \"IS NOT ENCRYPTED FILE DETECTED!\"  ascii wide\n\t\t$Ransomware_Esxi_v3_4 = \"Successfully encrypted\"  ascii wide\n\t\t$Ransomware_Esxi_v3_5 = \"Is encrypted file. Skipped\"  ascii wide\n\t\t$Ransomware_Esxi_v3_6 = \"ESXI VMs power off logs enabled\"  ascii wide\n\t\t$Ransomware_Esxi_v3_7 = \"vim-cmd vmsvc/power.off\"  ascii wide\n\t\t$Ransomware_Esxi_v3_8 = \"Try to power off VM with ID\"  ascii wide\n\t\t$Ransomware_Esxi_v3_9 = \"Can't read tail to check file on encryption\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Esxi_v3*)\n}\n\n\nrule Uptycs_Reverseshell_Generic \n{\n\tmeta:\n\t\tmalware_name = \"Reverseshell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d4c00d04d9a345159cde8393660ff878\"\n\n\n\tstrings:\n\t\t$Reverseshell_Generic_0 = \"Enj0y y0uR d00r by SecretColony\"  ascii wide\n\t\t$Reverseshell_Generic_1 = \"Can't fork pty, bye!\"  ascii wide\n\t\t$Reverseshell_Generic_2 = \"kFbind is starting...\"  ascii wide\n\t\t$Reverseshell_Generic_3 = \"DiE!!!\"  ascii wide\n\t\t$Reverseshell_Generic_4 = \"OK, pid =\"  ascii wide\n\t\t$Reverseshell_Generic_5 = \"kf_shell\"  ascii wide\n\t\t$Reverseshell_Generic_6 = \"open_tty\"  ascii wide\n\t\t$Reverseshell_Generic_7 = \"get_tty\"  ascii wide\n\t\t$Reverseshell_Generic_8 = \"/dev/ptmx\"  ascii wide\n\t\t$Reverseshell_Generic_9 = { 69 73 74 65 6E 00 66 6F 72 6B 00 73 70 72 69 6E 74 66 00 68 }\n\n\n\tcondition:\n\t\tall of ($Reverseshell_Generic*)\n}\n\n\nrule Uptycs_UnixPrivEscCheckTool_v4 \n{\n\tmeta:\n\t\tmalware_name = \"UnixPrivEscCheckTool\"\n\t\tdescription = \"Unix-privesc-checker is a shell script designed for Unix systems,identifying misconfigurations that may allow local users to escalate privileges or access local applications.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ddcfe959895ad6a1e8c3e9c31cee0702\"\n\n// YARA on memdump as yara on script directly was not possible due to less number of strings\n\tstrings:\n\t\t$UnixPrivEscCheckTool_v4_0 = \"Shell script to check for simple privilege escalation vectors on UNIX systems\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_1 = \"privileged_change_privileges\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_2 = \"credentials_fini ()\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_3 = \"passwd_hashes\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_4 = \"credentials_permissions ${filename}\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_5 = \"privileged_ssp\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_6 = \"privileged_pie\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_7 = \"lib/checks/enabled\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_8 = \"select from one of the following check types:\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_9 = \"\\\"upc\\\" \\\"the provided check name\"  ascii wide\n\t\t$UnixPrivEscCheckTool_v4_10 = \"unix-privesc-check\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($UnixPrivEscCheckTool_v4*)\n}\n\n\nrule Uptycs_Gafgyt_v10 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9e9acc6fd6d96d4e74353e1591e061ff\"\n\n\n\tstrings:\n\t\t$Gafgyt_v10_0 = \"connected to CNC\"  ascii wide\n\t\t$Gafgyt_v10_1 = \"timed out while connecting to CNC\"  ascii wide\n\t\t$Gafgyt_v10_2 = \"error while connecting to CNC code\"  ascii wide\n\t\t$Gafgyt_v10_3 = \"bytes from CNC\"  ascii wide\n\t\t$Gafgyt_v10_4 = \"lost connection with CNC\"  ascii wide\n\t\t$Gafgyt_v10_5 = \"Detected newer instance running! Killing self\"  ascii wide\n\t\t$Gafgyt_v10_6 = { CA B8 37 00 00 00 0F 05 48 3D 01 F0 FF FF 73 01 C3 48 C7 C1 C0 FF }\n\n\n\tcondition:\n\t\tall of ($Gafgyt_v10*)\n}\n\n\nrule Uptycs_Ransomware_generic_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"da08ac67f8cfac383feda249bda2ff56\"\n\n\n\tstrings:\n\t\t$Ransomware_generic_v3_0 = \"Error generating random key\"  ascii wide\n\t\t$Ransomware_generic_v3_1 = \"Error creating AES encryption context\"  ascii wide\n\t\t$Ransomware_generic_v3_2 = \"Error initializing AES encryption\"  ascii wide\n\t\t$Ransomware_generic_v3_3 = \"Error finalizing encryption\"  ascii wide\n\t\t$Ransomware_generic_v3_4 = \"Error opening file for writing:\"  ascii wide\n\t\t$Ransomware_generic_v3_5 = \"Folder Path:\"  ascii wide\n\t\t$Ransomware_generic_v3_6 = \"pay the ransome to unlock the files through the link :\"  ascii wide\n\t\t$Ransomware_generic_v3_7 = \"EVP_EncryptFinal_ex\"  ascii wide\n\t\t$Ransomware_generic_v3_8 = \"EVP_EncryptUpdate\"  ascii wide\n\t\t$Ransomware_generic_v3_9 = \"EVP_CIPHER_CTX_new\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_generic_v3*)\n}\n\n\n\n\n\nrule Uptycs_Backdoor_Generic_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3f46e3eb81b7bfa14e0e882efea22d4e\"\n\n\n\tstrings:\n\t\t$Backdoor_Generic_v3_0 = \"[+] got r00t\"  ascii wide\n\t\t$Backdoor_Generic_v3_1 = \"[-] something went wrong\"  ascii wide\n\t\t$Backdoor_Generic_v3_2 = \"[.] userspace payload mmapped at %p\"  ascii wide\n\t\t$Backdoor_Generic_v3_3 = \"pthread_create()\"  ascii wide\n\t\t$Backdoor_Generic_v3_4 = \"[.] overwriting thread started\"  ascii wide\n\t\t$Backdoor_Generic_v3_5 = \"socketpair()\"  ascii wide\n\t\t$Backdoor_Generic_v3_6 = \"[.] sockets opened\"  ascii wide\n\t\t$Backdoor_Generic_v3_7 = \"setsockopt()\"  ascii wide\n\t\t$Backdoor_Generic_v3_8 = \"[.] sock->sk_sndbuf set to %x\"  ascii wide\n\t\t$Backdoor_Generic_v3_9 = \"[.] writing to socket\"  ascii wide\n\t\t$Backdoor_Generic_v3_10 = \"get_root\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Backdoor_Generic_v3*)\n}\n\n\nrule Uptycs_BloopTool \n{\n\tmeta:\n\t\tmalware_name = \"BloopTool\"\n\t\tdescription = \"BloopTOol is used for Simple denial of service attack against Windows machines by sending random spoofed ICMP packets similar to a weaker protocol as of ssping or jolt.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"969807223daf906165144592963d6854\"\n\n\n\tstrings:\n\t\t$BloopTool_0 = \"./bloop [src_ip] [dst_ip] [# of packets]\"  ascii wide\n\t\t$BloopTool_1 = \"send_winbomb\"  ascii wide\n\t\t$BloopTool_2 = \"Status: Connected....packets sent\"  ascii wide\n\t\t$BloopTool_3 = \"[ip_src] :  ex: 205.56.78.0\"  ascii wide\n\t\t$BloopTool_4 = \"[ip_dst] :  ex: 201.12.3.76\"  ascii wide\n\t\t$BloopTool_5 = \"[number]  : 100\"  ascii wide\n\t\t$BloopTool_6 = \"ERROR: Unable to Connect To luser\"  ascii wide\n\t\t$BloopTool_7 = \"ERROR: Opening raw socket\"  ascii wide\n\t\t$BloopTool_8 = \"in_cksum\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($BloopTool*)\n}\n\n\nrule Uptycs_Ransomware_Diskhelpyou \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e79984ea02b2049b1e74452013529da5\"\n\n\n\tstrings:\n\t\t$Ransomware_Diskhelpyou_0 = \"How To Restore Your Files.txt\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_1 = \"Encrypting:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_2 = \"Threads count:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_3 = \"Not encrypted files:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_4 = \"Encrypted files:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_5 = \"Skipped files:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_6 = \"Do not DELETE or MODIFY any files\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_7 = \"Crypted:\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_8 = \"/path/to/be/encrypted\"  ascii wide\n\t\t$Ransomware_Diskhelpyou_9 = \".diskhelpyou\"  ascii wide\n\n\n\tcondition:\n\t\t9 of ($Ransomware_Diskhelpyou*)\n}\n\n\nrule Uptycs_Flooder_OverdropTool \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0b43f0bcd6e78a8619860ce130c32f66\"\n\n\n\tstrings:\n\t\t$Flooder_OverdropTool_0 = \"dst_ip [ -n how_many ] [ -s src_ip ] [ -x ] (use -x for express delivery)\"  ascii wide\n\t\t$Flooder_OverdropTool_1 = \"sendto\"  ascii wide\n\t\t$Flooder_OverdropTool_2 = \"overdrop by lcamtuf\"  ascii wide\n\t\t$Flooder_OverdropTool_3 = \"based on teardrop by route\"  ascii wide\n\t\t$Flooder_OverdropTool_4 = \"IP_HDRINCL\"  ascii wide\n\t\t$Flooder_OverdropTool_5 = \"Sending oversized packets:\"  ascii wide\n\t\t$Flooder_OverdropTool_6 = \"s:n:x\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_OverdropTool*)\n}\n\n\n\nrule Uptycs_Flooder_golang_v8 \n{\n\tmeta:\n\t\tmalware_name = \"Flooder\"\n\t\tdescription = \"Flooder malware conducts various types of Ddos attacks, it also includes UDP bypass technique.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ecd9e709181b0561690aeb249fe0484f\"\n\n\n\tstrings:\n\t\t$Flooder_golang_v7_0 = \"main.rclocal\"  ascii wide\n\t\t$Flooder_golang_v7_1 = \"main.cmdline_killer\"  ascii wide\n\t\t$Flooder_golang_v7_2 = \"main.execshell\"  ascii wide\n\t\t$Flooder_golang_v7_3 = \"main.attack\"  ascii wide\n\t\t$Flooder_golang_v7_4 = \"main.tcpflood\"  ascii wide\n\t\t$Flooder_golang_v7_5 = \"main.putflood\"  ascii wide\n\t\t$Flooder_golang_v7_6 = \"main.getflood\"  ascii wide\n\t\t$Flooder_golang_v7_7 = \"main.postflood\"  ascii wide\n\t\t$Flooder_golang_v7_8 = \"main.copymyself\"  ascii wide\n\t\t$Flooder_golang_v7_9 = \"main.tlsflood\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Flooder_golang_v7*)\n}\n\n\nrule Uptycs_XorDDOs_v5 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOs\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0661422f6b7a0f320748abab24ae5209\"\n\n\n\tstrings:\n\t\t$XorDDOs_v5_0 = \"./ddos <ip> [<number of servers>\"  ascii wide\n\t\t$XorDDOs_v5_1 = \"%s Status:\"  ascii wide\n\t\t$XorDDOs_v5_2 = \"CyberWarrior\"  ascii wide\n\t\t$XorDDOs_v5_3 = \"CyberWar NetWorkz\"  ascii wide\n\t\t$XorDDOs_v5_4 = \"Error...\"  ascii wide\n\t\t$XorDDOs_v5_5 = \"Successful...\"  ascii wide\n\t\t$XorDDOs_v5_6 = \"ddos.ini\"  ascii wide\n\t\t$XorDDOs_v5_7 = \"everybody who knows me\"  ascii wide\n\t\t$XorDDOs_v5_8 = \"IISDDoS\"  ascii wide\n\n\n\tcondition:\n\t\t8 of ($XorDDOs_v5*)\n}\n\n\nrule Uptycs_Coinminer_Xmrig_v7 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a55933b2698c389e49044c96607c361d\"\n\n\n\tstrings:\n\t\t$Coinminer_Xmrig_v7_0 = \"\\\"agent\\\":\\\"XMRig\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_1 = \"cn/xao\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_2 = \"\\\"method\\\":\\\"login\\\",\\\"params\\\":\" ascii wide\n\t\t$Coinminer_Xmrig_v7_3 = \"\\\"rx/wow\\\",\\\"rx/arq\\\",\\\"rx/graft\\\",\\\"rx/sfx\\\",\\\"rx/keva\\\"\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_4 = \"cn/half\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_5 = \"cn-lite\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_6 = \"cn/rto\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_7 = \"cn/rwz\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_8 = \"ghostrider\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_9 = \"argon2/chukwav2\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_10 = \"argon2/ninja\"  ascii wide\n\t\t$Coinminer_Xmrig_v7_11 = \"\\\"cn-heavy/0\\\",\\\"cn-heavy/tube\\\",\\\"cn-heavy/xhv\\\",\\\"cn-pico\\\",\\\"cn-pico/tlo\\\"\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Xmrig_v7*)\n}\n\n\n\nrule Uptycs_Ransomware_Limpdemon \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b50fb6512a4a65b6618135f222cd2722\"\n\n\n\tstrings:\n\t\t$Ransomware_Limpdemon_0 = \"You have to pass access key to start process!\"  ascii wide\n\t\t$Ransomware_Limpdemon_1 = \"Shutting down VMWare ESXi servers...\"  ascii wide\n\t\t$Ransomware_Limpdemon_2 = \"Starting locker as a daemon\"  ascii wide\n\t\t$Ransomware_Limpdemon_3 = \"until ESXi servers are powering off!\"  ascii wide\n\t\t$Ransomware_Limpdemon_4 = \"start as a service\"  ascii wide\n\t\t$Ransomware_Limpdemon_5 = \"encrypt selected file\"  ascii wide\n\t\t$Ransomware_Limpdemon_6 = \"key for decryption config\"  ascii wide\n\t\t$Ransomware_Limpdemon_7 = \"--skip-vm\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Limpdemon*)\n}\n\n\nrule Uptycs_Ransomware_Redalert \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f2fa9a3ce883a7f5b43ba5c9ff7bdf75\"\n\n\n\tstrings:\n\t\t$Ransomware_Redalert_0 = \"Your network was penterated\"  ascii wide\n\t\t$Ransomware_Redalert_1 = \"REDALERT UNIQUE IDENTIFIER START\"  ascii wide\n\t\t$Ransomware_Redalert_2 = \"[info] Catch -t argument. Check encryption time\"  ascii wide\n\t\t$Ransomware_Redalert_3 = \"Run command for stop all running VM`s\"  ascii wide\n\t\t$Ransomware_Redalert_4 = \"Successfully encrypted and renamed\"  ascii wide\n\t\t$Ransomware_Redalert_5 = \"esxcli vm process kill --type=force --world-id\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Redalert*)\n}\n\n\nrule Uptycs_Traitor_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Traitor\"\n\t\tdescription = \"Traitor packages up a bunch of methods to exploit local misconfigurations and vulnerabilities in order to pop a root shell.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0ac2ec863f78b3af8deaa48f50960d7f\"\n\n\n\tstrings:\n\t\t$Traitor_v2_0 = \"liamg/traitor\"  ascii wide\n\t\t$Traitor_v2_1 = \"Assessing machine state\"  ascii wide\n\t\t$Traitor_v2_2 = \"System is vulnerable!\"  ascii wide\n\t\t$Traitor_v2_3 = \"shell.WithPassword\"  ascii wide\n\t\t$Traitor_v2_4 = \"exploits.NewGTFOBinsExploit\"  ascii wide\n\t\t$Traitor_v2_5 = \"Wrap a given shell with setuid\"  ascii wide\n\t\t$Traitor_v2_6 = \"Install a root shell backdoor\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Traitor_v2*)\n}\n\n\nrule Uptycs_Mimipenguin_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Mimipenguin\"\n\t\tdescription = \"A tool to dump the login password from the current linux desktop user. This is kind of mimikatz windows tool\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b0dc91d2591c46944976697b3c5b002e\"\n\n// This YARA should be merged in both script rules and memdump rules, as it will detect raw script and also detects the mem dump if the shell script is executed\n\n\tstrings:\n\t\t$Mimipenguin_v3_0 = \"command_exists\"  ascii wide\n\t\t$Mimipenguin_v3_1 = \"dump_pid\"  ascii wide\n\t\t$Mimipenguin_v3_2 = \"SHADOWHASHES\"  ascii wide\n\t\t$Mimipenguin_v3_3 = \"MimiPenguin Results:\"  ascii wide\n\t\t$Mimipenguin_v3_4 = \"get gdm-session-worker [pam/gdm-password] process\"  ascii wide\n\t\t$Mimipenguin_v3_5 = \"Support sshd - Search active connections for Sudo passwords\"  ascii wide\n\t\t$Mimipenguin_v3_6 = \"Get encoded creds\"  ascii wide\n\t\t$Mimipenguin_v3_7 = \"get nobody /usr/sbin/vsftpd /etc/vsftpd.conf\"  ascii wide\n\t\t$Mimipenguin_v3_8 = \"if exists aka someone logged into lightdm then extract\"  ascii wide\n\t\t$Mimipenguin_v3_9 = \"Support VSFTPd - Active Users\"  ascii wide\n\t\t$Mimipenguin_v3_10 = \"get all ssh tty/pts sessions - sshd: user@pts01\"  ascii wide\n\t\t$Mimipenguin_v3_11 = \"if exists aka someone logged into SSH then dump\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mimipenguin_v3*)\n}\n\n\n\n\n\nrule Uptycs_Keylogger_Linux_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Keylogger\"\n\t\tdescription = \"Keylogger is a software that is used to monitor and record the keystrokes entered by the user.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"673f5474789fa16ad14d897fd95509bc\"\n\n\n\tstrings:\n\t\t$Keylogger_Linux_v2_0 = \"Found a keyboard at\"  ascii wide\n\t\t$Keylogger_Linux_v2_1 = \"No keyboard found...you will need to\"  ascii wide\n\t\t$Keylogger_Linux_v2_2 = \"[event] press key\"  ascii wide\n\t\t$Keylogger_Linux_v2_3 = \"[event] release key\"  ascii wide\n\t\t$Keylogger_Linux_v2_4 = \"github.com/MarinX/keylogger.keyCodeMap\"  ascii wide\n\t\t$Keylogger_Linux_v2_5 = \"github.com/sirupsen/logrus\"  ascii wide\n\t\t$Keylogger_Linux_v2_6 = \"FindKeyboardDevice\"  ascii wide\n\t\t$Keylogger_Linux_v2_7 = \"/dev/input/event\"  ascii wide\n\t\t$Keylogger_Linux_v2_8 = \"CAPS_LOCK\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Keylogger_Linux_v2*)\n}\n\n\nrule Uptycs_Blueshell_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Blueshell\"\n\t\tdescription = \"BlueShell is a Go-written remote control tool that periodically attempts to establish a rebound connection with a specified C&C address and operates bsServer on the C&C side.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7d960f77fda453c8f0c7f6c7448a35b4\"\n\n\n\tstrings:\n\t\t$Blueshell_v3_0 = \"B1ueShe11-client\"  ascii wide\n\t\t$Blueshell_v3_1 = \"main.(*Client).SendHeartbeatMessage\"  ascii wide\n\t\t$Blueshell_v3_2 = \"main.(*Client).HandleHeartbeatResponse\"  ascii wide\n\t\t$Blueshell_v3_3 = \"main.serverHost\"  ascii wide\n\t\t$Blueshell_v3_4 = \"START_SOCKS5_PROXY\"  ascii wide\n\t\t$Blueshell_v3_5 = \"FILE_UPLOAD\"  ascii wide\n\t\t$Blueshell_v3_6 = \"FILE_DOWNLOAD\"  ascii wide\n\t\t$Blueshell_v3_7 = \"REVERSE_SHELL\"  ascii wide\n\t\t$Blueshell_v3_8 = \"RUN_COMMAND\"  ascii wide\n\t\t$Blueshell_v3_9 = \"START_FILE_SERVER\"  ascii wide\n\t\t$Blueshell_v3_10 = \"main.connectProtocol\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Blueshell_v3*)\n}\n\n\nrule Uptycs_Meterpreter_Pythonpayload \n{\n\tmeta:\n\t\tmalware_name = \"REVERSESHELL\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"652fed0e16384b82fa6cd678658ff933\"\n\n// YARA on memdump\n\tstrings:\n\t\t$Meterpreter_Pythonpayload_0 = \"import socket,zlib,base64,struct,time\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_1 = \"for x in range(10):\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_2 = \"s=socket.socket(2,socket.SOCK_STREAM)\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_3 = \"s.connect(('\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_4 = \"l=struct.unpack('>I',s.recv(4))[0]\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_5 = \"d=s.recv(l)\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_6 = \"while len(d)<l:\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_7 = \"d+=s.recv(l-len(d))\"  ascii wide\n\t\t$Meterpreter_Pythonpayload_8 = \"exec(zlib.decompress(base64.b64decode(d)),{'s':s})\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Meterpreter_Pythonpayload*)\n}\n\n\nrule Uptycs_Coinminer_Xmrig_v9 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3893bc3bf7fca9ece35c62f605ac8342\"\n\n\n\tstrings:\n\t\t$Coinminer_Xmrig_v9_0 = \"HASHRATE REPORT\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_1 = \"The miner evaluates your system\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_2 = \"wallet_address\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_3 = \"pool_password\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_4 = \"Your miner was unable to find a share in time\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_5 = \"cpu_threads_conf\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_6 = \"Pool connection lost\"  ascii wide\n\t\t$Coinminer_Xmrig_v9_7 = \"Are you sure you are mining the correct coin?\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Xmrig_v9*)\n}\n\n\nrule Uptycs_Coinminer_Xmrig_v8 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2d12fdeaecb31099302ff2c5a9718fca\"\n\n\n\tstrings:\n\t\t$Coinminer_Xmrig_v8_0 = \"cryptonight\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_1 = \"username:password pair for mining server\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_2 = \"donate-level\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_3 = \"stratum+tcp://\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_4 = \"enable nicehash/xmrig-proxy support\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_5 = \"rig identifier\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_6 = \"number of miner threads\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_7 = \"run the miner in the background\"  ascii wide\n\t\t$Coinminer_Xmrig_v8_8 = \"port for the miner API\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Xmrig_v8*)\n}\n\n\nrule Uptycs_Backdoor_Winnti_v3\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1acb326773d6ba28d916871cb91af844\"\n\n\n\tstrings:\n\t\t$Backdoor_Winnti_v3_0 = \"/var/run/libudev.pid\"  ascii wide\n\t\t$Backdoor_Winnti_v3_1 = \"get_our_sockets\"  ascii wide\n\t\t$Backdoor_Winnti_v3_2 = \"check_is_our_proc_dir\"  ascii wide\n\t\t$Backdoor_Winnti_v3_3 = \"/sbin/ifup-local\"  ascii wide\n\t\t$Backdoor_Winnti_v3_4 = \"get_our_pids\"  ascii wide\n\t\t$Backdoor_Winnti_v3_5 = { 48 89 45 F0 C7 45 EC 08 01 00 00 C7 45 FC 28 00 00 00 EB 31 8B 45 FC 48 63 D0 48 8B 45 F0 48 01 C2 8B 45 FC 48 63 C8 48 8B 45 F0 48 01 C8 0F B6 00 89 C1 8B 45 F8 89 C6 8B 45 FC 01 F0 31 C8 88 02 83 45 FC 01 }\n\t\t$Backdoor_Winnti_v3_6 = \"libxselinux\"  ascii wide\n\t\t$Backdoor_Winnti_v3_7 = { 89 E5 48 89 7D D8 48 8B 45 D8 0F B6 40 27 0F BE C0 89 45 F8 48 8B }\n\n\n\tcondition:\n\t\tall of ($Backdoor_Winnti_v3*)\n}\n\n\nrule Uptycs_Backdoor_GTPDoor \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0124f7d2d2a77219e100864c6c47733d\"\n\n\n\tstrings:\n\t\t$GTPDoor_0 = \"excute result is\"  ascii wide\n\t\t$GTPDoor_1 = \"idkey not correct\"  ascii wide\n\t\t$GTPDoor_3 = \"cannt execute\"  ascii wide\n\t\t$GTPDoor_4 = \"file data is received\"  ascii wide\n\t\t$GTPDoor_5 = \"system.conf\"  ascii wide\n\t\t$GTPDoor_6 = \"socket():\"  ascii wide\n\t\t$GTPDoor_7 = \"setsockopt error!\"  ascii wide\n\t\t$Opcode_1 = { 48 8D 85 C0 F7 FF FF 48 89 45 D0 C7 45 DC 14 00 00 00 8B 45 DC 48 98 48 89 C2 48 8D 85 C0 F7 FF FF 48 01 D0 48 89 45 E0 48 8B 45 E0 0F B7 40 02 0F B7 F8 E8 7E FC FF FF 66 3D 4B 08 75 87 } //OPcode that accepts UDP packets on destination port 2123 with a GTP header field type value of GTP_ECHO_REQUEST\n\t\t$Opcode_2 = { 8D 85 D0 F7 FF FF 89 45 D8 C7 45 DC 14 00 00 00 8B 45 DC 89 C2 8D 85 D0 F7 FF FF 01 D0 89 45 E0 8B 45 E0 0F B7 40 02 0F B7 C0 89 04 24 E8 92 F8 FF FF 66 3D 4B 08 }\n                \n\tcondition:\n\t\tall of ($GTPDoor*) and 1 of ($Opcode_*)\n}\n\n\n\n\n\nrule Uptycs_Platypus_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Platypus\"\n\t\tdescription = \"A modern multiple reverse shell sessions/clients manager via terminal written in go\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"05b667fc6c59cbced066b3218937c16d\"\n\n\n\tstrings:\n\t\t$Platypus_v2_0 = \"github.com/WangYihang/Platypus/\"  ascii wide\n\t\t$Platypus_v2_1 = \"main.handleConnection\"  ascii wide\n\t\t$Platypus_v2_2 = \"main.StartSocks5Server\"  ascii wide\n\t\t$Platypus_v2_3 = \"main.StartClient\"  ascii wide\n\t\t$Platypus_v2_4 = \"main.RemoveSelfExecutable\"  ascii wide\n\t\t$Platypus_v2_5 = \"main.AsVirus\"  ascii wide\n\t\t$Platypus_v2_6 = \"main.backoff\"  ascii wide\n\t\t$Platypus_v2_7 = \"main.TermiteProcess\"  ascii wide\n\t\t$Platypus_v2_8 = \"main.pullTunnels\"  ascii wide\n\t\t$Platypus_v2_9 = \"main.pushTunnels\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Platypus_v2*)\n}\n\n\nrule Uptycs_PortscanTool_v3 \n{\n\tmeta:\n\t\tmalware_name = \"PortscanTool\"\n\t\tdescription = \"A port scanning hack tool is a software used by hackers to identify open ports on a target system which helps them discover potential vulnerabilities that can be exploited for unauthorized access.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ec5d03839de008e2ac62f99f5015d1f2\"\n\n\n\tstrings:\n\t\t$PortscanTool_v3_0 = \"Error running zzh command:\"  ascii wide\n\t\t$PortscanTool_v3_1 = \"error running awk command:\"  ascii wide\n\t\t$PortscanTool_v3_2 = \"main.createDatFile\"  ascii wide\n\t\t$PortscanTool_v3_3 = \"main.generateRandomOctets\"  ascii wide\n\t\t$PortscanTool_v3_4 = \"Open files limit set to\"  ascii wide\n\t\t$PortscanTool_v3_5 = \"Error running redis-cli:\"  ascii wide\n\t\t$PortscanTool_v3_6 = \"/usr/local/bin/pnscan\"  ascii wide\n\t\t$PortscanTool_v3_7 = \"6f 73 3a 4c 69 6e 75 78\"  ascii wide\n\t\t$PortscanTool_v3_8 = \"2a 31 0d 0a 24 34 0d 0a 69 6e 66 6f 0d 0a\"  ascii wide\n\t\t$PortscanTool_v3_9 = \"set dbfilename \\\"zzh\\\"\\n\\tsave\\n\\tconfig set dir \\\"/etc/\\\"\\n\\tconfig set dbfil\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($PortscanTool_v3*)\n}\n\n\nrule Uptycs_Fkothspayload \n{\n\tmeta:\n\t\tmalware_name = \"Fkothspayload\"\n\t\tdescription = \"Fkoths is presented as a 64-bit Golang ELF, exhibits two distinct functionalities where one aspect involves scanning and deleting Docker images from specific repositories, possibly to erase traces of initial access and another function alters the host's /etc/hosts file to impede outbound requests to the Docker registry, hindering further image acquisition.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"eddc912d01684d4470b684fa56ecf4a0\"\n\n\n\tstrings:\n\t\t$Fkothspayload_0 = \"main.deleteImagesByRepo\"  ascii wide\n\t\t$Fkothspayload_1 = \"main.addEntryToHosts\"  ascii wide\n\t\t$Fkothspayload_2 = \"Attempting to delete image:\"  ascii wide\n\t\t$Fkothspayload_3 = \"Successfully deleted image:\"  ascii wide\n\t\t$Fkothspayload_4 = \"Error reading /etc/hosts:\"  ascii wide\n\t\t$Fkothspayload_5 = \"Host entry already exists\"  ascii wide\n\t\t$Fkothspayload_6 = \"registry-1.docker.io\"  ascii wide\n\t\t$Fkothspayload_7 = \"127.0.0.1\"  ascii wide\n\t\t$Fkothspayload_8 = \"Host entry added successfully\"  ascii wide\n\t\t$Fkothspayload_9 = \"Error retrieving Docker images:\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Fkothspayload*)\n}\n\n\nrule Uptycs_Backdoor_Mininerbian \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5885920ab7426bfc396c3de9a94f1b7b\"\n\n\n\tstrings:\n\t\t$Backdoor_Mininerbian_0 = \"system_cmd\"  ascii wide\n\t\t$Backdoor_Mininerbian_1 = \"Before execution\"  ascii wide\n\t\t$Backdoor_Mininerbian_2 = \"lg000\"  ascii wide\n\t\t$Backdoor_Mininerbian_3 = \"log_29380\"  ascii wide\n\t\t$Backdoor_Mininerbian_4 = \"time_flag_change\"  ascii wide\n\t\t$Backdoor_Mininerbian_5 = \"core_config_set\"  ascii wide\n\t\t$Backdoor_Mininerbian_6 = \"lgc7a62e2fe7\"  ascii wide\n\t\t$Backdoor_Mininerbian_7 = { 55 8D BC BC BD AB AC BA BC B1 B3 90 67 A1 B9 B7 AE BF 47 99 BA B9 BA AE A7 9E 71 70 66 6A 4B 95 8E 8D 8E 9A 9B 53 B1 8D 91 99 96 81 9E 83 AB 46 A0 8A 46 AD AA 44 9A 90 BE 83 BE 42 45 43 6B A1 FB F1 FF E9 EB EB 32 D5 F1 F5 E6 E7 F4 F2 E2 39 CD FF EA ED FC E9 E9 EB DD 34 22 10 }\n\t\t$Backdoor_Mininerbian_8 = { D2 F7 F4 EE D0 17 F0 DB DD DC DB DF DF EE 01 DD C8 B0 1A C5 C2 DF F6 0A 21 F9 D0 D0 C7 D7 C3 C6 0C E4 BE C6 30 06 E9 29 3F 40 31 35 26 23 35 39 36 36 F8 4E E8 51 54 53 E4 26 30 2C 30 EF 26 28 2B 33 27 33 1A 10 0E 0E 22 D0 F3 2B 12 12 15 05 15 14 DA 3A 20 0A 04 0E 07 32 DD FE 25 54 00 }\n\t\t$Backdoor_Mininerbian_9 = \"Ended with no result..\"  ascii wide\n\t\t$Backdoor_Mininerbian_10 = { 47 C6 45 B4 43 C6 45 B5 4B C6 45 B6 0E C6 45 B7 48 C6 45 B8 42 C6 45 B9 4F C6 45 BA 49 C6 45 BB  0E C6 45 BC 46 C6 45 BD 4F C6 45 BE 5D C6 45 BF 0E C6 45 C0 4D C6 45 C1 46 C6 45 C2 4F C6 45 C3 }\n\n\n\tcondition:\n\t\tall of ($Backdoor_Mininerbian*)\n}\n\n\nrule Uptycs_WogRAT \n{\n\tmeta:\n\t\tmalware_name = \"WOGRAT\"\n\t\tdescription = \"WogRAT is a backdoor malware distributed through aNotepad, targeting both Windows and Linux systems where in Linux, it collects basic system information and communicates with the command-and-control server to execute commands, download/upload files, and send results along with leveraging the Tiny SHell's routine for evasion.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"03c7c0ace395d80182db07ae2c30f034\"\n\n\n\tstrings:\n\t\t$WogRAT_0 = \"beacon_id=\"  ascii wide\n\t\t$WogRAT_1 = \"&hostname=\"  ascii wide\n\t\t$WogRAT_2 = \"&username=\"  ascii wide\n\t\t$WogRAT_3 = \"&pid=\"  ascii wide\n\t\t$WogRAT_4 = \"task_data=\"  ascii wide\n\t\t$WogRAT_5 = \"task_id\"  ascii wide\n\t\t$WogRAT_6 = \"task_type\"  ascii wide\n\t\t$WogRAT_7 =  { E2 10 4D 31 D1 0F B6 D6 48 8B 14 D1 48 C1 E2 08 4C 31 CA 48 89 }\n\t\t$WogRAT_8 =  { 58 90 AE 86 F1 B9 1C F6  29 83 95 71 1D DE 58 0D }\n\t\t$WogRAT_9 =  { 38 49 89 FE 0F B6 0E 48 C1 E1 18 0F B6 6E 01 48 C1 E5 10 48 09 E9 0F B6 6E 03 48 09 E9 0F B6 6E 02 48 C1 E5 08 48 09 CD 0F B6 56 04 48 C1 E2 18 44 0F B6 7E 05 49 C1 E7 10 4C 09 FA 44 }\n\t\t$WogRAT_10 = \"Connect error\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($WogRAT*)\n}\n\n\nrule Uptycs_Coinminer_Generic_v6 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b4353009ce80797e372d661d7790b3e1\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v6_0 = \"Mine blocks immediately to a specified address\"  ascii wide\n\t\t$Coinminer_Generic_v6_1 = \"importelectrumwallet\"  ascii wide\n\t\t$Coinminer_Generic_v6_2 = \"GetKeyFromPool\"  ascii wide\n\t\t$Coinminer_Generic_v6_3 = \"WalletDBUpdateCounter\"  ascii wide\n\t\t$Coinminer_Generic_v6_4 = \"Mine up to nblocks blocks immediately\"  ascii wide\n\t\t$Coinminer_Generic_v6_5 = \"mining requires a wallet\"  ascii wide\n\t\t$Coinminer_Generic_v6_6 = \"mining_score\"  ascii wide\n\t\t$Coinminer_Generic_v6_7 = \"EncryptWallet\"  ascii wide\n\t\t$Coinminer_Generic_v6_8 = \"GetScriptForMining\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v6*)\n}\n\n\nrule Uptycs_Gostportmonitortool \n{\n\tmeta:\n\t\tmalware_name = \"GostTool\"\n\t\tdescription = \"Gost is a network port monitoring tool written in the Go programming language that can monitor multiple ports simultaneously.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 =\"e904cbc8f6a91fd5f9b23e0a29f9443f\"\n\n\tstrings:\n\t\t$Gostportmonitortool_0 = \"gost.Bypass\"  ascii wide\n\t\t$Gostportmonitortool_1 = \"gost.Client\"  ascii wide\n\t\t$Gostportmonitortool_2 = \"gost.Filter\"  ascii wide\n\t\t$Gostportmonitortool_3 = \"gost.Server\"  ascii wide\n\t\t$Gostportmonitortool_4 = \"GOSTEthernetEthiopiaEthiopicExtenderFROM\"  ascii wide\n\t\t$Gostportmonitortool_5 = \"github.com/ginuerzh/gost\"  ascii wide\n\t\t$Gostportmonitortool_6 = \"github.com/go-gost/gosocks4\"  ascii wide\n\t\t$Gostportmonitortool_7 = \"github.com/go-gost/gosocks5\"  ascii wide\n\t\t$Gostportmonitortool_8 = \"github.com/go-gost/relay\"  ascii wide\n\t\t$Gostportmonitortool_10 = \"go-gost/tls-dissector.(*ClientHelloMsg).ReadFrom\"  ascii wide\n\t\t$Gostportmonitortool_11 = \"go-gost/tls-dissector.(*ClientHelloMsg).readCipherSuites\"  ascii wide\n\t\t$Gostportmonitortool_12 = \"go-gost/tls-dissector.(*ClientHelloMsg).readExtensions\"  ascii wide\n\t\t$Gostportmonitortool_13 = \"go-gost/tls-dissector.(*ClientHelloMsg).WriteTo\"  ascii wide\n\t\t$Gostportmonitortool_14 = \"go-gost/tls-dissector.(*ServerHelloMsg).Encode\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gostportmonitortool*)\n}\n\n\nrule Uptycs_Coinminer_Generic_v7 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0a16620d09470573eeca244aa852bf70\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v7_0 = \"Load ini config file:\"  ascii wide\n\t\t$Coinminer_Generic_v7_1 = \"Got signal:\"  ascii wide\n\t\t$Coinminer_Generic_v7_2 = \"connecting miner pool\"  ascii wide\n\t\t$Coinminer_Generic_v7_3 = \"SetCoinbaseMsgNum\"  ascii wide\n\t\t$Coinminer_Generic_v7_4 = \"github.com/hacash/miner/minerpoolworker\"  ascii wide\n\t\t$Coinminer_Generic_v7_5 = \"MinerNonce\"  ascii wide\n\t\t$Coinminer_Generic_v7_6 = \"Successfully mined a block height\"  ascii wide\n\t\t$Coinminer_Generic_v7_7 = \"TotalFeeMinerReceived\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v7*)\n}\n\n\nrule Uptycs_Reverseshell_Generic_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Reverseshell\"\n\t\tdescription = \"Reverse shell is a shell session established on a connection that is initiated from a remote machine.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b6db675bb0d07894280c6c2814b818a9\"\n\n\n\tstrings:\n\t\t$Reverseshell_Generic_v2_0 = \"main.startReverseShell\"  ascii wide\n\t\t$Reverseshell_Generic_v2_1 = { 73 68 20 2D 69 20 3E 26 20 2F 64 65 76 2F 74 63 70 2F [1-3] 2E [1- 3] 2E [1 -3] 2E [ 1- 3] 2F 25 73 20 30 3E 26 31 }\n\t\t$Reverseshell_Generic_v2_2 = \"Error connecting:\"  ascii wide\n\t\t$Reverseshell_Generic_v2_3 = \"Connected to server, waiting for port..\"  ascii wide\n\t\t$Reverseshell_Generic_v2_4 = \"Error reading response:\"  ascii wide\n\t\t$Reverseshell_Generic_v2_5 = \"Received port:\"  ascii wide\n\t\t$Reverseshell_Generic_v2_6 = \"Reverse shell terminated, retrying in\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Reverseshell_Generic_v2*)\n}\n\n\nrule Uptycs_Rekoobe_v6 \n{\n\tmeta:\n\t\tmalware_name = \"Rekoobe\"\n\t\tdescription = \"Rekoobe is a Trojan for linux that targets SPARC architectures and some of its variants also infected x86 and x86-64 architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"543c0b5cac645bdcb0e3540485b4cee8\"\n// Yara rule reference >> https://www.mandiant.com/resources/blog/unc2891-overview\n\n\tstrings:\n\t\t$Opcode_0 = { 00 00 00 83 F8 01 74 1F 89 D0 48 8B 4C 24 08 64 48 33 0C 25 28 00 }\n\t\t$Opcode_1 = { 00 00 00 83 F8 01 74 1F 89 D0 48 8B 4C 24 08 64 48 33 0C 25 28 00 }\n\t\t$Opcode_2 = { C6 00 48 C6 4? ?? 49 C6 4? ?? 49 C6 4? ?? 4C C6 4? ?? 53 C6 4? ?? 45 C6 4? ?? 54 C6 4? ?? 3D C6 4? ?? 46 C6 4? ?? 00 }\n\t\t$Opcode_3 = { C6 00 54 C6 4? ?? 4D C6 4? ?? 45 C6 4? ?? 3D C6 4? ?? 52 }\n\t\t$Rekoobe_v6_4 = \"fork\"  ascii wide\n\t\t$Rekoobe_v6_5 = \"socket\"  ascii wide\n\t\t$Rekoobe_v6_6 = \"bind\"  ascii wide\n\t\t$Rekoobe_v6_7 = \"listen\"  ascii wide\n\t\t$Rekoobe_v6_8 = \"accept\"  ascii wide\n\t\t$Rekoobe_v6_9 = \"alarm\"  ascii wide\n\t\t$Rekoobe_v6_10 = \"shutdown\"  ascii wide\n\t\t$Rekoobe_v6_11 = \"creat\"  ascii wide\n\t\t$Rekoobe_v6_12 = \"write\"  ascii wide\n\t\t$Rekoobe_v6_13 = \"open\"  ascii wide\n\t\t$Rekoobe_v6_14 = \"read\"  ascii wide\n\t\t$Rekoobe_v6_15 = \"execl\"  ascii wide\n\t\t$Rekoobe_v6_16 = \"gethostbyname\"  ascii wide\n\t\t$Rekoobe_v6_17 = \"connect\"  ascii wide\n\n\n\tcondition:\n\t\t3 of ($Opcode_*) and 10 of ($Rekoobe_v6_*)\n}\n\n\nrule Uptycs_Snowlight \n{\n\tmeta:\n\t\tmalware_name = \"Snowlight\"\n\t\tdescription = \"SNOWLIGHT is a sophisticated Linux-based downloader utilizing raw sockets to establish communication with a command-and-control server over TCP port 443 where itemploys a binary protocol for communication, with some variants using a fake HTTP header initially.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"0951109dd1be0d84a33d52c135ba9c97\"\n\n\n\tstrings:\n\t\t$Snowlight_0 = { 80 31 99 48 FF C1 89 CE 29 EE 39 C6 7C F2 48 63 D2 48 89 EE 44 89 E7 } // XOR loop\n\t\t$Snowlight_1 = { BA 01 00 00 00 BE 3B 0B 40 00 BF 3F 01 00 00 E8 8C FE FF FF } //memfd_create syscall \n\t\t$Snowlight_2 = \"socket\"  ascii wide // supporting strings\n\t\t$Snowlight_3 = \"connect\"  ascii wide\n\t\t$Snowlight_4 = \"fexecve\"  ascii wide\n\t\t$Snowlight_5 = \"inet_addr\"  ascii wide\n\t\t$Snowlight_6 = \"setsockopt\"  ascii wide\n\t\t$Snowlight_7 = \"gethostbyname\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Snowlight*)\n}\n\nrule Uptycs_fileless_elf \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Rule to detect file less execution\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"faceac6be041b72862e1645953a951eb\"\n\n\tstrings:\n\t\t$elf_header = { 7F 45 4C 46 } // ELF Magic Number\n\t\t$syscall_mmap = { 48 C7 C0 09 00 00 00 0f 05} // mov rax , 09h syscall >> 09h syscall number stands for mmap\n\t\t$syscall_recievefrom = { 48 C7 C0 2D 00 00 00 0f 05} // mov rax , 2dh syscall >> 2dh syscall number stands for recievefrom\n\n\tcondition:\n\t\t#elf_header >= 2 and all of ( $syscall_*)\n}\n\n\n\n\nrule Uptycs_Backdoor_XDealer\n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"20b4ac6be041b72862e1645953a951eb\"\n\n\tstrings:\n\t\t$Backdoor_XDealer_0 = \"Linux_%s_%s_%u_V\"  ascii wide\n\t\t$Backdoor_XDealer_1 = \"service %s start\"  ascii wide\n\t\t$Backdoor_XDealer_2 = \"service %s stop\"  ascii wide\n\t\t$Backdoor_XDealer_3 = \"checkroot\"  ascii wide\n\t\t$Backdoor_XDealer_4 = \"ps aux\"  ascii wide\n\t\t$Backdoor_XDealer_5 = \"chkconfig --list | grep\"  ascii wide\n\t\t$Backdoor_XDealer_6 = \"nslookup\"  ascii wide\n\t\t$Backdoor_XDealer_7 = \"int MyShell::createsh()\"  ascii wide\n\t\t$Backdoor_XDealer_8 = \"ConditionFileIsExecutable=\"  ascii wide\n\t\t$Backdoor_XDealer_9 = \"### BEGIN INIT INFO\"  ascii wide\n\t\t$Backdoor_XDealer_10 = \"rpm -qa\"  ascii wide\n\t\t$Backdoor_XDealer_11 = \"touch   -d \\\"\"  ascii wide\n\t\t$Backdoor_XDealer_12 = \"cmd over return\"  ascii wide\n\t\t$Backdoor_XDealer_13 = \"process return\"  ascii wide\n\t\t$Backdoor_XDealer_14 = \"cat /etc/issue\"  ascii wide\n\t\t$Backdoor_XDealer_15 = \"ls -l /proc/%s/exe\"  ascii wide\n\t\t$Backdoor_XDealer_16 = \"chkconfig --del\"  ascii wide\n        $Backdoor_XDealer_17 = \"/myshell.cpp\"  ascii wide\n        $Backdoor_XDealer_18 = \"chkconfig zentao %s\"  ascii wide\n\n\tcondition:\n\t\t18 of ($Backdoor_XDealer*)\n}\n\n\nrule Uptycs_Backdoor_XZBackdoor \n{\n\tmeta:\n\t\tmalware_name = \"Backdoor\"\n\t\tdescription = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"079d41f2e76288f1fdd65e72bf58c304\"\n\n\n\tstrings:\n\t\t$Backdoor_XZBackdoor_0 = \"yolAbejyiejuvnup=Evjtgvsh5okmkAvj\"  ascii wide\n\t\t$Backdoor_XZBackdoor_1 = { F3 0F 1E FA 55 48 89 F5 4C 89 CE 53 89 FB 81 E7 00 00 00 80 48 83 EC 28 48 89 54 24 18 48 89 4C 24 10 }\n\t\t$opcode_0 = { 48 8D 7C 24 08 F3 AB 48 8D 44 24 08 48 89 D1 4C 89 C7 48 89 C2 E8 ?? ?? ?? ?? 89 C2 }\n\t\t$opcode_1 = { 31 C0 49 89 FF B9 16 00 00 00 4D 89 C5 48 8D 7C 24 48 4D 89 CE F3 AB 48 8D 44 24 48 }\n\t\t$opcode_2 = { 4D 8B 6C 24 08 45 8B 3C 24 4C 8B 63 10 89 85 78 F1 FF FF 31 C0 83 BD 78 F1 FF FF 00 F3 AB 79 07 }\n\n\n\tcondition:\n\t\t1 of ($Backdoor_XZBackdoor*) and all of ($opcode_*)\n}\n\n\nrule Uptycs_Coinminer_Xmrig_v10 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"6328efa10d75c9450f490bbe0af5b2e9\"\n\n\n\tstrings:\n\t\t$Coinminer_Xmrig_v10_0 = \"Check for new versions of monero\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_1 = \"xmr_amount\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_2 = \"MINING PAUSED\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_3 = \"MINING RESUMED\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_4 = \"hashrate:\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_5 = \"Specify wallet address to mining for\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_6 = \"Unable to start miner\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_7 = \"Mining has started\"  ascii wide\n\t\t$Coinminer_Xmrig_v10_8 = \"Specify mining threads count\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Xmrig_v10*)\n}\n\n\nrule Uptycs_XorDDOS_Avasazombie \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"be780defdc5e44b1d363b5e12fc8b8ea\"\n\n\n\tstrings:\n\t\t$XorDDOS_Avasazombie_0 = \"avasa-zombie/crypt\"  ascii wide\n\t\t$XorDDOS_Avasazombie_1 = \"avasa-zombie/attack.ConvertAttack\"  ascii wide\n\t\t$XorDDOS_Avasazombie_2 = \"avasa-zombie/server.(*Server).Connect\"  ascii wide\n\t\t$XorDDOS_Avasazombie_3 = \"avasa-zombie/server.(*Server).ReadProcess\"  ascii wide\n\t\t$XorDDOS_Avasazombie_4 = \"avasa-zombie/server.(*Server).WriteEncrypted\"  ascii wide\n\t\t$XorDDOS_Avasazombie_5 = \"avasa-zombie/server.(*Server).handlePing\"  ascii wide\n\t\t$XorDDOS_Avasazombie_6 = \"avasa-zombie/server.DefaultStorage\"  ascii wide\n\t\t$XorDDOS_Avasazombie_7 = \"avasa-zombie/attack.EmptyStorage\"  ascii wide\n\t\t$XorDDOS_Avasazombie_8 = \"avasa-zombie/single.EnsureSingleInstance\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOS_Avasazombie*)\n}\n\n\nrule Uptycs_Exploitscantool \n{\n\tmeta:\n\t\tmalware_name = \"Exploitscantool\"\n\t\tdescription = \"Exploitscantool is used for advanced scanning capabilities to identify potential vulnerabilities and provides a platform for executing exploits, enabling users to demonstrate the impact of identified vulnerabilities and assess the system's resilience against attacks.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1d9c06548c2d5d332a6d8d486523d548\"\n\n\n\tstrings:\n\t\t$Exploitscantool_0 = \"main.retrieve_credentials\"  ascii wide\n\t\t$Exploitscantool_1 = \"main.submit_payload\"  ascii wide\n\t\t$Exploitscantool_2 = \"Sent payload1 with success\"  ascii wide\n\t\t$Exploitscantool_3 = \"Failed to sent payload2\"  ascii wide\n\t\t$Exploitscantool_4 = \"Failed to split the credentials\"  ascii wide\n\t\t$Exploitscantool_5 = \"Failed to determine if host is vulnerable\"  ascii wide\n\t\t$Exploitscantool_6 = \"Received -\"  ascii wide\n\t\t$Exploitscantool_7 = \"Retrieved credentials\"  ascii wide\n\t\t$Exploitscantool_8 = \"cctv.txt\"  ascii wide\n\t\t$Exploitscantool_9 = \"payload_file\"  ascii wide\n\t\t$Exploitscantool_10 = \"GET login.cgi HTTP\"  ascii wide\n\t\t$Exploitscantool_11 = \"main.run\"  ascii wide\n\t\t$Exploitscantool_12 = \"var login\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Exploitscantool*)\n}\n\n\nrule Uptycs_Coinminer_Combodeminer \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4c660c64797a446131c28a9e71614a1e\"\n\n\n\tstrings:\n\t\t$Coinminer_Combodeminer_0 = \"restarting the mining thread\"  ascii wide\n\t\t$Coinminer_Combodeminer_1 = \"mining requires a wallet\"  ascii wide\n\t\t$Coinminer_Combodeminer_2 = \"transaction fee with fee deltas used for mining priority\"  ascii wide\n\t\t$Coinminer_Combodeminer_3 = \"Some miners appear to be experiencing issues\"  ascii wide\n\t\t$Coinminer_Combodeminer_4 = \"CombodeMiner -- started\"  ascii wide\n\t\t$Coinminer_Combodeminer_5 = \"getwalletinfo\"  ascii wide\n\t\t$Coinminer_Combodeminer_6 = \"Returns a json object containing mining-related information\"  ascii wide\n\t\t$Coinminer_Combodeminer_7 = \"payee address\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Combodeminer*)\n}\n\n\nrule Uptycs_Gafgyt_v12 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4a5cbb0c859cd1e000ca58eb3edd125a\"\n\n\n\tstrings:\n\t\t$Gafgyt_v12_0 = \"killed ssh\"  ascii wide\n\t\t$Gafgyt_v12_1 = \"killed tmp\"  ascii wide\n\t\t$Gafgyt_v12_2 = \"/proc/%s/maps\"  ascii wide\n\t\t$Gafgyt_v12_3 = \"/var/Kylin\"  ascii wide\n\t\t$Gafgyt_v12_4 = \"/var/Challenge\"  ascii wide\n\t\t$Gafgyt_v12_5 = \"/usr/bin/pvalue_validation_server\"  ascii wide\n\t\t$Gafgyt_v12_6 = \"/opt/vyatta/sbin/ubnt-cfgd\"  ascii wide\n\t\t$Gafgyt_v12_7 = \"/CloudResetPwdUpdateAgent/\"  ascii wide\n\t\t$Gafgyt_v12_8 = \"543786439872346742834987423671289543267654237843517986451789451789645217451672846521345171894547169542176412365412675142721456718\"  ascii wide\n\t\t$Gafgyt_v12_9 = \"4387296341298674278647128046712809416280941268014267428016472091426721012467914687419214682418096742189\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_v12*)\n}\n\n\nrule Uptycs_XiebroC2 \n{\n\tmeta:\n\t\tmalware_name = \"XiebroC2\"\n\t\tdescription = \"XiebroC2 is a versatile cybersecurity tool comprising a Golang-based client and a .NET 8.0 Teamserver.and the client supports various functions like shell management, file operations, and network monitoring, with extensive customization through Lua scripting.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a12a29b7c3f018f4f15a6ac3257df877\"\n\n\tstrings:\n\t\t$XiebroC2_0 = \"XiebroC2-main\"  ascii wide\n\t\t$XiebroC2_1 = \"main.(*TCPClient).KeepAlivePacket\"  ascii wide\n\t\t$XiebroC2_2 = \"main.(*TCPClient).InitializeClient\"  ascii wide\n\t\t$XiebroC2_3 = \"main.GetClientComputer\"  ascii wide\n\t\t$XiebroC2_4 = \"main.SendInfo\"  ascii wide\n\t\t$XiebroC2_5 = \"main.(*TCPClient).Reconnect\"  ascii wide\n\t\t$XiebroC2_6 = \"main.(*TCPClient).CloseConnection\"  ascii wide\n\t\t$XiebroC2_7 = \"main.(*TCPClient).ReadServerData\"  ascii wide\n\t\t$XiebroC2_8 = \"main/HandlePacket.PtyCmd\"  ascii wide\n\t\t$XiebroC2_9 = \"main/PcInfo.GetCurrentDirectory\"  ascii wide\n\t\t$XiebroC2_10 = \"HandleMemfd\"  ascii wide\n\t\t$XiebroC2_11 = \"XiebroC2-main/ClientGo/Linux/TCP/HandlePacket/HandleShell\"  ascii wide\n\n\tcondition:\n\t\tall of ($XiebroC2*)\n}\n\n\n\n\n\n\nrule Uptycs_Coinminer_Generic_v8 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b1718347bd85f0f24978a37659c82fd5\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v8_0 = \"randXmrAmount\"  ascii wide\n\t\t$Coinminer_Generic_v8_1 = \"Cryptonight\"  ascii wide\n\t\t$Coinminer_Generic_v8_2 = \"monero_crypto\"  ascii wide\n\t\t$Coinminer_Generic_v8_3 = \"Path to Monero DB\"  ascii wide\n\t\t$Coinminer_Generic_v8_4 = \"Check ring subsets\"  ascii wide\n\t\t$Coinminer_Generic_v8_5 = \"Blockchain spent output data\"  ascii wide\n\t\t$Coinminer_Generic_v8_6 = \"Monero::WalletImpl\"  ascii wide\n\t\t$Coinminer_Generic_v8_7 = \"Failed to send import wallet request\"  ascii wide\n\t\t$Coinminer_Generic_v8_8 = \"Electrum seed for wallet\"  ascii wide\n\t\t$Coinminer_Generic_v8_9 = { 6D BF 81 55 D4 4C D4 19 4C 81 18 24 3C 14 3C 30 14 18 26 79 5F 35 5F 4C 35 26 }\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v8*)\n}\n\n\nrule Uptycs_Coinminer_Generic_v9 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e6698f9af16c40733032389b431f9d4d\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v9_0 = \"coinMiner:\"  ascii wide\n\t\t$Coinminer_Generic_v9_1 = \"Failed to encrypt the wallet.\"  ascii wide\n\t\t$Coinminer_Generic_v9_2 = \"hashespersec\"  ascii wide\n\t\t$Coinminer_Generic_v9_3 = \"ResendWalletTransactions\"  ascii wide\n\t\t$Coinminer_Generic_v9_4 = \"Unknown network specified\"  ascii wide\n\t\t$Coinminer_Generic_v9_5 = \"getmininginfo\"  ascii wide\n\t\t$Coinminer_Generic_v9_6 = \"fee per kB when mining blocks\"  ascii wide\n\t\t$Coinminer_Generic_v9_7 = \"CWallet\"  ascii wide\n\t\t$Coinminer_Generic_v9_8 = \"Returns a json object containing mining-related information.\"  ascii wide\n\t\t$Coinminer_Generic_v9_9 = \"cs_totalBytesSent\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v9*)\n}\n\n\n\n\nrule Uptycs_Gafgyt_v13 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a0cf4a8e6aeded596f130f6b14416680\"\n\n\n\tstrings:\n\t\t$Gafgyt_v13_0 = { 8B 45 08 88 10 FF 45 08 8B 45 08 0F B6 00 84 C0 75 DB C9 C3 55 }\n\t\t$Gafgyt_v13_1 = { E8 B0 00 FC 8B 7D E8 F2 AE 89 C8 F7 D0 48 48 89 45 F8 EB 03 FF }\n\t\t$Gafgyt_v13_2 = { 83 7D 18 00 74 25 8B 45 1C 83 E0 02 85 C0 74 1B C7 44 24 04 2D 00 }\n\t\t$Gafgyt_v13_3 = { E4 F7 E1 89 D0 C1 E8 03 89 45 E8 8B 45 E8 01 C0 03 45 E8 C1 }\n\t\t$Gafgyt_v13_4 = { 4B 52 41 00 46 47 44 43 57 4E 56 00 48 57 43 4C 56 47 41 4A }\n\t\t$Gafgyt_v13_5 = { 50 46 00 13 10 11 16 17 00 57 51 47 50 00 52 43 51 51 00 43 }\n\t\t$Gafgyt_v13_6 = \"knownBots\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_v13*)\n}\n\n\nrule Uptycs_InfoStealer_GobRAT_v2 \n{\n\tmeta:\n\t\tmalware_name = \"InfoStealer\"\n\t\tdescription = \"Infostealers are malwares that can steal credentials from browsers, FTP clients, email clients etc from victim machines.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5f72ea2204240929e80b46ea2f696675\"\n\n\n\tstrings:\n\t\t$InfoStealer_GobRAT_v2_0 = \"/zone/bot.log\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_1 = \"BotCount\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_2 = \"BotList\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_3 = \"RemoteAddr\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_4 = \"SetReadDeadline\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_5 = \"SetWriteDeadline\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_6 = \"SyscallConn\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_7 = \"RegisterProtocol\"  ascii wide\n\t\t$InfoStealer_GobRAT_v2_8 = \"(*Config).SetDefaults\"  ascii wide\n\t\t$opcode_0 =  {31 C0 31 DB 48 89 FE 48 89 CF 48 89 D9}\n\t\t$opcode_1 =  { 48 B8 CC 52 5A 9B A0 2F B8 44 48 F7 EB 48 C1 FA 1C 48 C1 FB 3F 48 29 DA 48 69 D2 00 CA 9A 3B 48 29 D1 48 BA 00 00 1A 3D EB 03 B2 A1 }\n\t\t$opcode_2 =  { 48 29 C7 4C 89 C1 48 29 C1 49 89 FA 48 F7 DF 48 C1 FF 3F 48 21 C7 }\n\t\t$opcode_3 =  { 48 89 D6 48 69 CB 00 CA 9A 3B 81 E6 FF FF FF 3F 48 63 D6 48 01 D1 48 BA 00 00 1A 3D EB 03 B2 A1 }\n\t\t$opcode_4 =  { 81 E2 FF FF FF 3F 48 63 D2 48 01 D1 48 BA 00 00 1A 3D EB 03 B2 A1 }\n\t\t$opcode_5 =  { 48 FF CF 49 89 F8 48 F7 DF 48 C1 FF 3F 83 E7 10 48 01 FA }\n\t\t$opcode_6 =  { 31 C9 31 FF BE 02 00 00 00 41 B8 01 00 00 00 }\n\n\n\tcondition:\n\t\tall of ($InfoStealer_GobRAT_v2*) and 3 of ($opcode_*)\n}\n\n\nrule Uptycs_Ransomware_Akira_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7d827558e7841cc2887fc99537c1c97e\"\n\n\n\tstrings:\n\t\t$Ransomware_Akira_v2_0 = \"internal infrastructure of your company is fully or partially dead\"  ascii wide\n\t\t$Ransomware_Akira_v2_1 = \"Paying us you save your TIME, MONEY, EFFORTS\"  ascii wide\n\t\t$Ransomware_Akira_v2_2 = \"akira\"  ascii wide\n\t\t$Ransomware_Akira_v2_3 = \"Stop VMs\"  ascii wide\n\t\t$Ransomware_Akira_v2_4 = \"Crypt only .vmdk, .vmem, .vmx, .log, .vswp, .vmsd, .vmsn files\"  ascii wide\n\t\t$Ransomware_Akira_v2_5 = \"File crypted\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Akira_v2*)\n}\n\n\nrule Uptycs_ReverseSSHTool \n{\n\tmeta:\n\t\tmalware_name = \"ReverseSSHTool\"\n\t\tdescription = \"ReverseSSHTool is a statically-linked SSH server provides a reverse connection feature, enhancing remote access capabilities.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"427258462c745481c1ae47327182acd3\"\n\n\n\tstrings:\n\t\t$ReverseSSHTool_0 = \"createLocalPortForwardingCallback\"  ascii wide\n\t\t$ReverseSSHTool_1 = \"createReversePortForwardingCallback\"  ascii wide\n\t\t$ReverseSSHTool_2 = \"createSessionRequestCallback\"  ascii wide\n\t\t$ReverseSSHTool_3 = \"createPasswordHandler\"  ascii wide\n\t\t$ReverseSSHTool_4 = \"createSFTPHandler\"  ascii wide\n\t\t$ReverseSSHTool_5 = \"sendExtraInfo\"  ascii wide\n\t\t$ReverseSSHTool_6 = \"createPublicKeyHandler\"  ascii wide\n\t\t$ReverseSSHTool_7 = \"createExtraInfoHandler\"  ascii wide\n\t\t$ReverseSSHTool_8 = \"createSSHSessionHandler\"  ascii wide\n\t\t$ReverseSSHTool_9 = \"createPty\"  ascii wide\n\t\t$ReverseSSHTool_10 = \"dialHomeAndListen\"  ascii wide\n\t\t$ReverseSSHTool_11 = \"Start reverseSSH\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($ReverseSSHTool*)\n}\n\n\nrule Uptycs_XorDDOs_v6 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOs\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"05fad56b17851ee31e8d2373e885c897\"\n\n// ALl the assemply patterns are based on encrypted config \n\tstrings:\n\t\t$XorDDOs_v6_0 = { E4 8B 51 64 F6 C2 10 75 12 89 CB 89 D1 83 C9 40 89 D0 F0 0F B1 }\n\t\t$XorDDOs_v6_1 = { 6D 37 41 34 6E 51 5F 2F 6E 41 00 }\n\t\t$XorDDOs_v6_2 = { 6D 20 5B 28 6E 33 00 }\n\t\t$XorDDOs_v6_3 = { 6D 36 5F 36 6E 33 00 }\n\t\t$XorDDOs_v6_4 = { 6D 34 53 34 6E 41 43 2F 6E 41 00 }\n\t\t$XorDDOs_v6_5 = { 35 34 31 46 30 42 42 32 46 41 33 36 41 41 41 39 }\n\t\t$XorDDOs_v6_6 = { 33 36 41 41 41 39 35 34 31 46 30 42 42 32 46 41 }\n\n\n\tcondition:\n\t\tall of ($XorDDOs_v6*)\n}\n\n\n\n\n\nrule Uptycs_Gafgyt_v14 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ebd129e0c226285269fc9b76959abe2e\"\n\n\n\tstrings:\n\t\t$Gafgyt_v14_0 = \"LCOGQGPTGP\"  ascii wide\n\t\t$Gafgyt_v14_1 = \"QUKLEKLUKVJOG\"  ascii wide\n\t\t$Gafgyt_v14_2 = \"CFOKLKQVPCVMP\"  ascii wide\n\t\t$Gafgyt_v14_3 = \"QWRGPTKQMP\"  ascii wide\n\t\t$Gafgyt_v14_4 = \"HWCLVGAJ\"  ascii wide\n\t\t$Gafgyt_v14_5 = \"NKQVGLKLE\"  ascii wide\n\t\t$Gafgyt_v14_6 = \"POST /cdn-cgi/\"  ascii wide\n\t\t$Gafgyt_v14_7 = \"WatchDog\"  ascii wide\n\t\t$opcode_0 = { 24 EB 15 89 F0 83 C8 01 EB 03 8B 5B 08 3B 43 04 72 F8 8B 4B 0C 89 }\n\t\t$opcode_1 = { 10 89 C3 80 BC 04 83 00 00 00 20 0F 94 C0 8D B4 24 83 00 00 00 25 FF 00 }\n\t\t$opcode_2 = { 31 C0 BA 01 00 00 00 B9 01 00 00 00 03 04 24 89 D7 31 D2 F7 F7 0F }\n\t\t$opcode_3 = { 8B 4C 24 14 8B 74 24 0C 8B 5C 24 10 85 C9 74 0D 31 D2 8A 04 1A 88 }\n\n\n\tcondition:\n\t\t3 of ($Gafgyt_v14*) and all of ($opcode_*)\n}\n\n\nrule Uptycs_Ransomware_Cerber \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"81b760d4057c7c704f18c3f6b3e6b2c4\"\n\n\n\tstrings:\n\t\t$Ransomware_Cerber_0 = \"C3RB3R\"  ascii wide\n\t\t$Ransomware_Cerber_1 = \"All your important files have been encrypted\"  ascii wide\n\t\t$Ransomware_Cerber_2 = \"Install and run Tor browser\"  ascii wide\n\t\t$Ransomware_Cerber_3 = \"we will sell your data on the dark web\"  ascii wide\n\t\t$Ransomware_Cerber_4 = \"Do not try to recover files yourself\"  ascii wide\n\t\t$Ransomware_Cerber_5 = \"DO NOT DELETE THIS FILE UNTIL ALL YOUR DATA HAVE BEEN RECOVERED\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Cerber*)\n}\n\n\n\n\nrule Uptycs_Ransomware_Ransomhub_Linux \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"78f3cd037b7c5514cd54dda10142740d\"\n\n\n\tstrings:\n\t\t$Ransomware_Ransomhub_Linux_0 = \"json:\\\"note_file_name\\\"\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_1 = \"json:\\\"note_full_text\\\"\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_2 = \"json:\\\"note_short_text\\\"\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_3 = \"json:\\\"master_public_key\\\"\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_4 = \"json:\\\"extension\\\"\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_5 = \"Encrypt\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_6 = \"main.Config\"  ascii wide\n\t\t$Ransomware_Ransomhub_Linux_7 = {48 BA 5D 55 26 0C 39 A0 BE 8D 48 89 54 24 78 48 BA 75 D4 7D 3E 30 E0 CE 94 48 89 94 24 80 00 00 00 48 BA 7A 10 BF 22 10 C1 53 25 48 89 94 24 88 00 00 00 48 BA 79 F9 EE AC 50 EC 94 3E 48 89 94 24 90 00 00 00} //moving pattern\n\t\t$Ransomware_Ransomhub_Linux_8 = {48 BA 02 9E B5 9A 86 BC 9D 85 48 89 94 24 98 00 00 00 48 BA 15 FA C5 11 8D 73 30 D1 48 89 94 24 A0 00 00 00 48 BA 04 69 E4 EE C7 BB 19 76 48 89 94 24 A8 00 00 00 48 BA C3 68 75 CF 9D A1 40 20 48 89 94 24 B0} //moving pattern\n\n\n\tcondition:\n\t\tall of ($Ransomware_Ransomhub_Linux*)\n}\n\n\nrule Uptycs_Ransomware_Ransomhub_Esxi \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c0258edb90e9f72512db0db736f082f3\"\n\n\n\tstrings:\n\t\t$Ransomhub_Esxi_0 = \"for i in $(esxcli vm process list 2>/dev/null\"  ascii wide\n\t\t$Ransomhub_Esxi_1 = \"failed to encrypt hostname\"  ascii wide\n\t\t$Ransomhub_Esxi_2 = \"begin remove vms snapshot\"  ascii wide\n\t\t$Ransomhub_Esxi_3 = \"Encrypted files:\"  ascii wide\n\t\t$Ransomhub_Esxi_4 = \"shutdown_vms\"  ascii wide\n\t\t$Ransomhub_Esxi_5 = \"remove_vms_snapshot\"  ascii wide\n\t\t$Ransomhub_Esxi_6 = \"encrypt_file\"  ascii wide\n\t\t$Ransomhub_Esxi_7 = \"grep vmsyslogd\"  ascii wide\n\t\t$Ransomhub_Esxi_8 = \"do esxcli vm process kill --type=force --world-id=\"  ascii wide\n\t\t$Ransomhub_Esxi_9 = \"Only process files inside defined path(default is /vmfs/volumes)\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomhub_Esxi*)\n}\n\n\nrule Uptycs_Gafgyt_v15 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"99cff3b5c2ab878118264b2951755043\"\n\n\n\tstrings:\n\t\t$Gafgyt_v15_0 = { 02 83 45 FC 01 81 7D FC FF 0F 00 00 7E ?? 90 }\n\t\t$Gafgyt_v15_1 = { 45 C0 0F B6 00 3C 2F 76 0B 48 8B 45 C0 0F B6 00 3C 39 76 C7 48 8B }\n\t\t$Gafgyt_v15_2 = { FA 48 63 C6 48 89 94 C5 70 FF FF FF 8B 85 5C FF FF FF 8D 78 01 48 8D 95 60 FF }\n\t\t$Gafgyt_v15_3 = \"[AK-47] [-] PAYLOAD SENT\"  ascii wide\n\t\t$Gafgyt_v15_4 = \"[AK-47] [-] CRACKED\"  ascii wide\n\t\t$Gafgyt_v15_5 = \"thanks to unhappygh0st for the honeypot ip ranges\"  ascii wide\n\t\t$Gafgyt_v15_6 = \"[AK-47] [+] SUCCESSFUL INFECTION\"  ascii wide\n\t\t$Gafgyt_v15_7 = \"[AK-47] [-] FAILED TO INFECT\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Gafgyt_v15*)\n}\n\n\nrule Uptycs_Coinminer_Generic_v10 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ede196767c65c29b4c1820a777dabcdf\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v10_0 = \"utils.Mining\"  ascii wide\n\t\t$Coinminer_Generic_v10_1 = \"ps aux| grep -v grep | grep \\\"monero\\\"\"  ascii wide\n\t\t$Coinminer_Generic_v10_2 = \"GetTor2webHost\"  ascii wide\n\t\t$Coinminer_Generic_v10_3 = \"GetIPWithDOH\"  ascii wide\n\t\t$Coinminer_Generic_v10_4 = \"downloadUsingTor2Web\"  ascii wide\n\t\t$Coinminer_Generic_v10_5 = \"checkRoot\"  ascii wide\n\t\t$Coinminer_Generic_v10_6 = \"torHostName=\"  ascii wide\n\t\t$Coinminer_Generic_v10_7 = \"Killminerproc\"  ascii wide\n\t\t$Coinminer_Generic_v10_8 = \"grep \\\"cpu-max-threads-hint\\\"\"  ascii wide\n\t\t$Coinminer_Generic_v10_9 = \"ps aux| grep -v grep | grep \\\"c3pool\\\"\"  ascii wide\n\t\t$Coinminer_Generic_v10_10 = \"netstat -antp | grep ':7777'\"  ascii wide\n\t\t$Coinminer_Generic_v10_11 = \"HOURLY_CRON_JOB\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v10*)\n}\n\n\nrule Uptycs_Coinminer_Downloader_v2 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"ede196767c65c29b4c1820a777dabcdf\"\n\n\n\tstrings:\n\t\t$Coinminer_Downloader_0 = \"utils.GetIPWithDOH\"  ascii wide\n\t\t$Coinminer_Downloader_1 = \"utils.downloadUsingTor2Web\"  ascii wide\n\t\t$Coinminer_Downloader_2 = \"utils.sendPostRequestWithSocks\"  ascii wide\n\t\t$Coinminer_Downloader_3 = \"utils.SaveSSHAuthKey\"  ascii wide\n\t\t$Coinminer_Downloader_4 = \"utils.uploadFile\"  ascii wide\n\t\t$Coinminer_Downloader_5 = \"utils.findSSHUsers\"  ascii wide\n\t\t$Coinminer_Downloader_6 = \"utils.StopFirewall\"  ascii wide\n\t\t$Coinminer_Downloader_7 = \"utils.updateAccessAndModifyTime\"  ascii wide\n\t\t$Coinminer_Downloader_8 = \"utils.findSSHKeys\"  ascii wide\n\t\t$Coinminer_Downloader_9 = \"utils.execShellCMD\"  ascii wide\n\t\t$Coinminer_Downloader_10 = \"utils.modifySSHConfig\"  ascii wide\n\t\t$Coinminer_Downloader_11 = \"config/.aws/credentials\"  ascii wide\n\t\t$Coinminer_Downloader_12 = \"utils.PostAWS\"  ascii wide\n\t\t$Coinminer_Downloader_13 = \"utils.getRAMInfo\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Downloader*)\n}\n\n\n\n\nrule Uptycs_Gafgyt_v16 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"3c725e99041700d946b6708c32b994c7\"\n\n\n\tstrings:\n\t\t$Gafgyt_v16_0 = \"http flood\"  ascii wide\n\t\t$Gafgyt_v16_1 = { 24 EB 15 89 F0 83 C8 01 EB 03 8B 5B 08 3B 43 04 72 F8 8B 4B 0C 89 }\n\t\t$Gafgyt_v16_2 = { 10 89 C3 80 BC 04 83 00 00 00 20 0F 94 C0 8D B4 24 83 00 00 00 25 FF 00 }\n\t\t$Gafgyt_v16_3 = { 31 C0 BA 01 00 00 00 B9 01 00 00 00 03 04 24 89 D7 31 D2 F7 F7 0F }\n\t\t$Gafgyt_v16_4 = { 8B 4C 24 14 8B 74 24 0C 8B 5C 24 10 85 C9 74 0D 31 D2 8A 04 1A 88 }\n\t\t$optional_0 = \"anti_gdb_entry\"  ascii wide\n\t\t$optional_1 = \"resolve_cnc_addr\"  ascii wide\n\t\t$optional_2 = \"attack_get_opt_ip\"  ascii wide\n\t\t$optional_3 = \"attack_method_udpvse\"  ascii wide\n\t\t$optional_4 = \"attack_method_http\"  ascii wide\n\t\t$optional_5 = \"attack_start\"  ascii wide\n\t\t$optional_6 = \"attack_method_handshake\"  ascii wide\n\t\t$optional_7 = \"attack_method_tcpstomp\"  ascii wide\n\n\n\tcondition:\n\t\t3 of ($Gafgyt_v16*) and 4 of ($optional_*)\n}\n\n\nrule Uptycs_Gafgyt_Teamspeak_v4 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"dfb3b9e8f06911fafd67cd01a02d19e7\"\n\n\n\tstrings:\n\t\t$Gafgyt_Teamspeak_v4_0 = { 24 EB 15 89 F0 83 C8 01 EB 03 8B 5B 08 3B 43 04 72 F8 8B 4B 0C 89 }\n\t\t$Gafgyt_Teamspeak_v4_1 = { 31 C0 BA 01 00 00 00 B9 01 00 00 00 03 04 24 89 D7 31 D2 F7 F7 0F }\n\t\t$Gafgyt_Teamspeak_v4_2 = \"tcp-bypass\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_3 = \"udp-bypass\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_4 = \"TeamSpeak\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_5 = \"/dev/FTWDT101\\\\watchdog\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_6 = \"TSource Engine Query\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_7 = \"tcp-cnc\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_8 = \"tcp-handshake\"  ascii wide\n\t\t$Gafgyt_Teamspeak_v4_9 = { 8B 4C 24 14 8B 74 24 0C 8B 5C 24 10 85 C9 74 0D 31 D2 8A 04 1A 88 }\n\n\n\tcondition:\n\t\tall of ($Gafgyt_Teamspeak_v4*)\n}\n\n\nrule Uptycs_Ddostf_v3 \n{\n\tmeta:\n\t\tmalware_name = \"Ddostf\"\n\t\tdescription = \"The malware DDOSTF targets mainly Linux machines running Elasticsearch servers, but it also attacks and infects Windows systems where the infected machines point to ddos.tf.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"988155f2bf9242ce23193e8cbb8a001c\"\n\n\n\tstrings:\n\t\t$Ddostf_v3_0 = { E4 01 8B 45 F0 2B 45 F4 89 C2 8B 45 E4 39 C2 73 82 8B 45 EC }\n\t\t$Ddostf_v3_1 = { 0E 18 41 0E 1C 41 0E 20 48 0E 10 00 4C 00 00 00 64 4B 00 00 }\n\t\t$Ddostf_v3_2 = { 05 88 10 8B 45 08 0F B6 10 83 E2 0F 83 CA 40 88 10 8B 45 08 C6 40 }\n\t\t$Ddostf_v3_3 = { 66 C7 45 F2 00 00 8D 45 F2 8B 55 E4 0F B6 12 88 10 0F B7 45 F2 0F }\n\t\t$Ddostf_v3_4 = \"ddos.tf\"  ascii wide\n\t\t$Ddostf_v3_5 = \"chmod +x /etc/rc.local\"  ascii wide\n\t\t$Ddostf_v3_6 = \"sed -i -e '/%s/d' /etc/rc.local\"  ascii wide\n\t\t$Ddostf_v3_7 = \"sed -i -e '2 i/etc/%s reboot' /etc/rc.local\"  ascii wide\n\t\t$Ddostf_v3_8 = \"sed -i -e '2 i/etc/%s start' /etc/rc.d/rc.local\"  ascii wide\n\t\t$Ddostf_v3_9 = \"sed -i -e '2 i/etc/%s start' /etc/init.d/boot.local\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ddostf_v3*)\n}\nrule Uptycs_Cuttlefish \n{\n\tmeta:\n\t\tmalware_name = \"Cuttlefish\"\n\t\tdescription = \"Cuttlefish malware operates stealthily, leveraging zero-click attacks to intercept data on network edges where it employs HTTP and DNS hijacking, targeting private IP addresses, and passively sniffs packets until triggered by specific rules.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c123c4426418dd329d6f306582ac9dd5\"\n\n\n\tstrings:\n\t\t$Cuttlefish_0 = \"{ 00 00 B8 01 00 00 00 31 DB CD 80 EB FA 8D 8B 10 }\"  ascii wide\n\t\t$Cuttlefish_1 = \"http_hijack_hearttime\"  ascii wide\n\t\t$Cuttlefish_2 = \"Wait exit hijack all thread\"  ascii wide\n\t\t$Cuttlefish_3 = \"killold agent\"  ascii wide\n\t\t$Cuttlefish_4 = \"dnslogstatus\"  ascii wide\n\t\t$Cuttlefish_5 = \"parse config error\"  ascii wide\n\t\t$Cuttlefish_6 = \"script execue ok\"  ascii wide\n\t\t$Cuttlefish_7 = \"docker_hub_password=\"  ascii wide\n\t\t$Cuttlefish_8 = \"init http sniffer rule\"  ascii wide\n\t\t$Cuttlefish_9 = \"cloudinary_api_secret=\"  ascii wide\n\t\t$Cuttlefish_10 = \"eureka.awssecretkey=\"  ascii wide\n\t\t$Cuttlefish_11 = \"browserstack_access_key=\"  ascii wide\n\n\n\tcondition:\n\t\t11 of ($Cuttlefish*)\n}\n\n\n\nrule Uptycs_SSHBruteforceTool_v2 \n{\n\tmeta:\n\t\tmalware_name = \"SSHBruteforceTool\"\n\t\tdescription = \"An SSH brute force tool is a cybersecurity tool designed for testing the security of SSH (Secure Shell) authentication by attempting multiple login combinations.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"96313e24ca4f3172d37090702683e232\"\n\n\n\tstrings:\n\t\t$SSHBruteforceTool_v2_0 = \"main.startmikrotikscan\"  ascii wide\n\t\t$SSHBruteforceTool_v2_1 = \"main.startsshscan\"  ascii wide\n\t\t$SSHBruteforceTool_v2_2 = \"main.blinkexploitscan\"  ascii wide\n\t\t$SSHBruteforceTool_v2_3 = \"main.pagebrutes\"  ascii wide\n\t\t$SSHBruteforceTool_v2_4 = \"main.GetTopPasswordsFromAPI\"  ascii wide\n\t\t$SSHBruteforceTool_v2_5 = \"main.sendGETenvRequest\"  ascii wide\n\t\t$SSHBruteforceTool_v2_6 = \"main.clearRsyslogConf\"  ascii wide\n\t\t$SSHBruteforceTool_v2_7 = \"main.startpagescan\"  ascii wide\n\t\t$SSHBruteforceTool_v2_8 = \"main.parseEnvFile\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($SSHBruteforceTool_v2*)\n}\n\n\nrule Uptycs_Rekoobe_v7 \n{\n\tmeta:\n\t\tmalware_name = \"Rekoobe\"\n\t\tdescription = \"Rekoobe Trojan for linux mostly targets SPARC architectures and some of its variants also infected x86 and x86-64 architectures.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"7855b81efb2898c4beab51c201c1f1ee\"\n\n\n\tstrings:\n\t\t$Rekoobe_v7_0 = \"Backdoor didn't respond, bailing out\"  ascii wide\n\t\t$Rekoobe_v7_1 = \"You have no power here\"  ascii wide\n\t\t$Rekoobe_v7_2 = \"Unable to get stats for file\"  ascii wide\n\t\t$Rekoobe_v7_3 = \"Unable to talk to backdoor\"  ascii wide\n\t\t$Rekoobe_v7_4 = \"You got super powers\"  ascii wide\n\t\t$Rekoobe_v7_5 = \"Hid everything\"  ascii wide\n\t\t$Rekoobe_v7_6 = \"Hid network connection\"  ascii wide\n\t\t$Rekoobe_v7_7 = \"Hid pid\"  ascii wide\n\t\t$Rekoobe_v7_8 = { DB F9 66 0F 71 D1 08 66 0F 67 DD 66 0F DB E3 66 0F 71 D3 08 66 0F }\n\n\tcondition:\n\t\t8 of ($Rekoobe_v7*)\n}\n\n\nrule Uptycs_Ransomware_Crypt \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"b89816ea042b0af1a916d8d8abcc7ac1\"\n\n\n\tstrings:\n\t\t$Ransomware_Crypt_0 = \"--esxi /path/to/be/encrypted\"  ascii wide\n\t\t$Ransomware_Crypt_1 = \"Encrypter started in\"  ascii wide\n\t\t$Ransomware_Crypt_2 = \"crYptB2\"  ascii wide\n\t\t$Ransomware_Crypt_3 = \"readme_for_unlock.txt\"  ascii wide\n\t\t$Ransomware_Crypt_4 = \".crYptC2\"  ascii wide\n\t\t$Ransomware_Crypt_5 = \".crYptA3\"  ascii wide\n\t\t$Ransomware_Crypt_6 = \"invalid key size:\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Crypt*)\n}\n\n\n\n\nrule Uptycs_Gomir \n{\n\tmeta:\n\t\tmalware_name = \"Gomir\"\n\t\tdescription = \"Gomir is a backdoor that communicates with its C&C server through periodic HTTP POST requests containing a unique infection ID and it supports 17 commands for activities such as executing shell commands, changing directories, collecting system information, and exfiltrating files.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"e562cf30d17d47347c7e6ffd249fc190\"\n\n\n\tstrings:\n\t\t$Backdoor_Gomir_0 = \"main.Install_Service_Linux\"  ascii wide\n\t\t$Backdoor_Gomir_1 = \"main.Install_Crontab_Linux\"  ascii wide\n\t\t$Backdoor_Gomir_2 = \"mirror/En/En/Kernel.RunShell\"  ascii wide\n\t\t$Backdoor_Gomir_3 = \"mirror/En/En/Kernel.DownloadCommand\"  ascii wide\n\t\t$Backdoor_Gomir_4 = \"mirror/En/En/Kernel.Process_Die\"  ascii wide\n\t\t$Backdoor_Gomir_5 = \"mirror/En/En/Kernel.StartClient\"  ascii wide\n\t\t$Backdoor_Gomir_6 = \"mirror/En/En/Kernel.Process_Hibernate\"  ascii wide\n\t\t$Backdoor_Gomir_7 = \"mirror/En/En/Kernel.PingThread\"  ascii wide\n\t\t$Backdoor_Gomir_8 = \"mirror/En/En/Kernel.Process_SocksAdd\"  ascii wide\n\t\t$Backdoor_Gomir_9 = \"mirror/revsocks_client_server.ConnectForSocks\"  ascii wide\n\n\n\tcondition:\n\t\t9 of ($Backdoor_Gomir*)\n}\n\n\nrule Uptycs_Ebury \n{\n\tmeta:\n\t\tmalware_name = \"Ebury\"\n\t\tdescription = \"Ebury is a backdoor that steals OpenSSH credentials and maintains access to a compromised server.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"CD9A5B823906CC620B28D69DBDB11BD9FE6B3E03\"\n\n\n\tstrings:\n\t\t$Common_0 = { 8B 44 24 10 4C 8B 54 24 18 4C 8B 5C 24 20 8B 5C 24 28 74 04}\n\t\t$Ebury_1 = { 48 69 ( 9C 24 ?? ?? ?? ?? | 5C 24 ?? | D2) 6D 4E C6 41 8B (0C 16 | 34 07) 48 81 C? 39 30 00 00 ( 31 D? | 31 D? 48 89 9C 24 ?? ?? ?? ?? | 31 D? 48 89 5C 24 ?? ) 89 (0C 10 | 34 01) 48 83 C? 04 48 (81 FA | 3D ) ?? ?? ?? ?? 75 D?}\n\t\t$Ebury_2 = { 69 C9 6D 4E C6 41 8B B4 1A ?? ?? ?? ?? 81 C1 39 30 00 00 31 CE 89 34 10 83 C2 04 81 FA ?? ?? ?? ?? 75 DD}\n\t\t$Ebury_3 = { 48 8B 0D E2 B1 20 00 48 B8 A1 98 2C 5F F5 91 D6 87 48 39 C1 74 31 }\n\t\t$Ebury_4 = { 48 8D 05 A5 29 00 00 48 89 1D 77 41 21 00 BA 10 00 00 00 BE 1C 00 00 00 41 B9 07 00 00 00 B9 01 04 00 00 48 89 05 53 41 21 00 49 8B 04 24 83 78 04 0A 41 50 4C 8D 05 0B 8E 20 00 48 8B 78 18 6A 03 0F 45 F2 48 8D 15 FA 89 20 00 FF 15 0C 42 20 00 5E 85 C0 5F 75 3E }            \n        $Ebury_5 = { 48 B8 17 9A C5 46 45 A9 2B 9A 48 39 C1 74 39 48 B8 6D D6 9C 15 36 07 AA 06 48 39 C1 74 2A }\n        $Ebury_6 = { C7 04 24 00 0D 53 45 80 04 24 05 80 44 24 01 21 80 44 24 02 37 80 44 24 03 4E F2 AE 48 F7 D1 44 8D 69 FF EB 2D }\n        $Ebury_7 = { 48 8B 0D ?? ?? 2? 00 48 B8 A1 98 2C 5F F5 91 D6 87 48 39 C1 74 31 }\n        $Ebury_8 = { 48 83 EC 08 48 8B 3D AE 8A 20 00 48 81 C7 4D 0C 00 00 E8 C1 FF FF FF 48 8B 3D 9B 8A 20 00 48 89 05 D4 8A 20 00 48 81 C7 67 0C 00 00 E8 A7 FF FF FF 48 8B 3D 81 8A 20 00 48 89 05 A2 8A 20 00 48 81 C7 7F 0C 00 00 E8 8D FF FF FF 48 8B 3D 67 8A 20 00 48 89 05 90 8A 20 00 48 81 C7 97 0C 00 00 E8 73 FF FF FF 48 8B 3D 4D 8A 20 00 48 89 05 7E 8A 20 00 48 81 C7 B2 06 00 00 E8 59 FF FF FF 48 8B 3D 33 8A 20 00 48 89 05 74 8A 20 00 48 81 C7 B7 06 00 00 E8 3F FF FF FF 48 89 05 69 8A 20 00 58 C3 }\n                \n\tcondition:\n\t\t$Common_0 and 2 of ($Ebury*)\n}\n\n\nrule Uptycs_RttysTool \n{\n\tmeta:\n\t\tmalware_name = \"RttysTool\"\n\t\tdescription = \"Rttys is a server component of the rtty project that allows remote terminal access to devices via a web interface.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"a8398dd1d009a1c537815e3e42711f17\"\n\n\n\tstrings:\n\t\t$RttysTool_0 = \"main.isLocalRequest\"  ascii wide\n\t\t$RttysTool_1 = \"main.httpAuth\"  ascii wide\n\t\t$RttysTool_2 = \"main.isAdminUsername\"  ascii wide\n\t\t$RttysTool_3 = \"main.apiStart\"  ascii wide\n\t\t$RttysTool_4 = \"main.(*fileProxy).Read\"  ascii wide\n\t\t$RttysTool_5 = \"main.(*device).UpdateDb\"  ascii wide\n\t\t$RttysTool_6 = \"main.listenDevice\"  ascii wide\n\t\t$RttysTool_7 = \"main.runRttys\"  ascii wide\n\t\t$RttysTool_8 = \"main.doHttpProxy\"  ascii wide\n\t\t$RttysTool_9 = \"rttys/config.getConfigOpt\"  ascii wide\n\t\t$RttysTool_10 = \"rttys/utils.GenToken\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($RttysTool*)\n}\n\n\n\n\nrule Uptycs_Gafgyt_v17 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"2ab78374d7ab2fb3c5dddcbe6d714856\"\n\n\n\tstrings:\n\t\t\n\t\t$Opcode_0 = { C3 57 8B 44 24 0C 8B 4C 24 10 8B 7C 24 08 F3 AA 8B 44 24 08 }\n\t\t$Opcode_1 = { 83 EC 04 8A 44 24 18 8B 5C 24 14 88 44 24 03 8A 44 24 10 25 FF 00 }\n\t\t$Opcode_2 = { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 }\n\t\t$Opcode_3 = { FE 48 39 F3 0F 94 C2 48 83 F9 FF 0F 94 C0 84 D0 74 16 4B 8D }\n\t\t$Opcode_4 = { D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0 }\n\t\t$Opcode_5 = { 83 7D 18 00 74 25 8B 45 1C 83 E0 02 85 C0 74 1B C7 44 24 04 2D 00 }\n\t\t$Gafgyt_v17_0 = \"listening dn0\"  ascii wide\n\t\t$Gafgyt_v17_1 = \"/dev/misc/watchdog\"  ascii wide\n\t\t$Gafgyt_v17_2 = \"/proc/net/tcp\"  ascii wide\n\t\t$Gafgyt_v17_3 = \"/proc/self/exe\"  ascii wide\n\t\t$Gafgyt_v17_4 = \"chinks-eat-dogs\"  ascii wide\n\t\t$Gafgyt_v17_5 = \"someoffdeeznuts\"  ascii wide\n\n\n\tcondition:\n\t\t2 of ($Opcode_*) and 5 of ($Gafgyt_v17*)\n}\n\n\nrule Uptycs_Ransomware_Incransom \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c6cdd8f3340586620e663236141dc013\"\n\n\n\tstrings:\n\t\t$Ransomware_Incransom_0 = \"Your data is stolen and encrypted\"  ascii wide\n\t\t$Ransomware_Incransom_1 = \"INC Ransom\"  ascii wide\n\t\t$Ransomware_Incransom_2 = \"data will be published on our TOR darknet\"  ascii wide\n\t\t$Ransomware_Incransom_3 = \"Start killing ESXi servers\"  ascii wide\n\t\t$Ransomware_Incransom_4 = \"Don't delete or modify encrypted files\"  ascii wide\n\t\t$Ransomware_Incransom_5 = \"Start encryption of:\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Incransom*)\n}\n\n\nrule Uptycs_Xorddos_v7 \n{\n\tmeta:\n\t\tmalware_name = \"Xorddos\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"fd170bfc12679d0624643649f671f792\"\n\n\n\tstrings:\n\t\t$Xorddos_v7_0 = \"denyip=\"  ascii wide\n\t\t$Xorddos_v7_1 = \"filename=\"  ascii wide\n\t\t$Xorddos_v7_2 = \"rmfile=\"  ascii wide\n\t\t$Xorddos_v7_3 =  { 73 1E 80 3C 06 00 8D 14 30 8D 4C 37 FF 74 0D EB 36 0F B6 42 01 83 }\n\t\t$Xorddos_v7_4 =  { E4 8B 51 64 F6 C2 10 75 12 89 CB 89 D1 83 C9 40 89 D0 F0 0F B1 }\n\t\t$Xorddos_v7_5 =  { 42 45 32 46 41 34 36 41 42 41 39 35 34 31 46 32 } // encrypted data unique to xorddos family\n\t\t$Xorddos_v7_6 = \"dns=%127[^:]:%15[0-9.]\"  ascii wide\n\t\t$Xorddos_v7_7 = \"/bin|/etc|/lib|/lib64|/opt|/usr|/var|/tmp|/\"  ascii wide\n\t\t$Xorddos_v7_8 = \"# Default-Start: 1 2 3 4 5\"  ascii wide\n\t\t$Xorddos_v7_9 = \"/etc/daemon.cfg\"  ascii wide\n\t\t$Xorddos_v7_10 = \"syn=%15[0-9.]-%u:%u-%u:%u\"  ascii wide\n\t\t$Xorddos_v7_11 = \"# chkconfig:\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Xorddos_v7*)\n}\n\n\n\n\nrule Uptycs_Ransomware_Locker \n{\n\tmeta:\n\t\tmalware_name = \"LockerRansomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c18058f9e55ce4411aab954591fdfb9e\"\n\n\n\tstrings:\n\t\t$Ransomware_Locker_0 = \"you have been the victim of a cyber attack\"  ascii wide\n\t\t$Ransomware_Locker_1 = \"encrypted your data\"  ascii wide\n\t\t$Ransomware_Locker_2 = \"stop processes vm\"  ascii wide\n\t\t$Ransomware_Locker_3 = \"ignore extention, process all files in target\"  ascii wide\n\t\t$Ransomware_Locker_4 = \"Killvm\"  ascii wide\n\t\t$Ransomware_Locker_5 = \"no check running process\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Locker*)\n}\n\n\nrule Uptycs_Coinminer_Minerservice \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"6aef895f18278cfe0f09576dbf516a2f\"\n\n\n\tstrings:\n\t\t$Coinminer_Minerservice_0 = \"main.GetStats\"  ascii wide\n\t\t$Coinminer_Minerservice_1 = \"main.ReportHashRate\"  ascii wide\n\t\t$Coinminer_Minerservice_2 = \"main.ReportStatus\"  ascii wide\n\t\t$Coinminer_Minerservice_3 = \"main.http_sign\"  ascii wide\n\t\t$Coinminer_Minerservice_4 = \"main.http_post\"  ascii wide\n\t\t$Coinminer_Minerservice_5 = \"main.reg_device\"  ascii wide\n\t\t$Coinminer_Minerservice_6 = \"main.getConfig\"  ascii wide\n\t\t$Coinminer_Minerservice_7 = \"main.SetCpuPriority\"  ascii wide\n\t\t$Coinminer_Minerservice_8 = \"main.StartService\"  ascii wide\n\t\t$Coinminer_Minerservice_9 = \"main.keep_longio\"  ascii wide\n\t\t$Coinminer_Minerservice_10 = \"main.websocket_client_loop\"  ascii wide\n\t\t$Coinminer_Minerservice_11 = \"miner_getstat\"  ascii wide\n\t\t$Coinminer_Minerservice_12 = \"main.SetCpuPriority\"  ascii wide\n\t\t$Coinminer_Minerservice_13 = \"main.doUpdateWork\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Minerservice*)\n}\n\n\nrule Uptycs_Coinminer_Generic_v11 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"631344bd5e8e53cd946a2335618345de\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v11_0 = \"hashrate\"  ascii wide\n\t\t$Coinminer_Generic_v11_1 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_Generic_v11_2 = \"Could not connect to stratum server\"  ascii wide\n\t\t$Coinminer_Generic_v11_3 = \"mining.extranonce\"  ascii wide\n\t\t$Coinminer_Generic_v11_4 = \"mining.authorize\"  ascii wide\n\t\t$Coinminer_Generic_v11_5 = \"getWork\"  ascii wide\n\t\t$Coinminer_Generic_v11_6 = \"submitHashrate\"  ascii wide\n\t\t$Coinminer_Generic_v11_7 = \"mining.set_difficulty\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v11*)\n}\n\n\n\n\nrule Uptycs_Coinminer_Generic_v12 \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c358e7ab0a102cf7c326fadb7da4148b\"\n\n\n\tstrings:\n\t\t$Coinminer_Generic_v12_0 = \"stratum+tcp://\"  ascii wide\n\t\t$Coinminer_Generic_v12_1 = \"cryptonight\"  ascii wide\n\t\t$Coinminer_Generic_v12_2 = \"URL of mining server\"  ascii wide\n\t\t$Coinminer_Generic_v12_3 = \"username:password pair for mining server\"  ascii wide\n\t\t$Coinminer_Generic_v12_4 = \"no active pools, stop mining\"  ascii wide\n\t\t$Coinminer_Generic_v12_5 = \"run the miner in the background\"  ascii wide\n\t\t$Coinminer_Generic_v12_6 = \"port for the miner API\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Generic_v12*)\n}\n\n\nrule Uptycs_SSHBackdoor \n{\n\tmeta:\n\t\tmalware_name = \"SSHBackdoor\"\n\t\tdescription = \"An SSH backdoor is a covert method used by attackers to gain unauthorized remote access to a system via the Secure Shell (SSH) protocol. \"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"6ad9100138ebee5e65ba625c43a0e122\"\n\n\n\tstrings:\n\t\t$SSHBackdoor_0 = \"main.verifyPass\"  ascii wide\n\t\t$SSHBackdoor_1 = \"Started SSH backdoor on\"  ascii wide\n\t\t$SSHBackdoor_2 = \"No PTY requested.\"  ascii wide\n\t\t$SSHBackdoor_3 = \"Hash for backdoor\"  ascii wide\n\t\t$SSHBackdoor_4 = \"ssh-backdoor\"  ascii wide\n\t\t$SSHBackdoor_5 = \"main.hashPassword\"  ascii wide\n\t\t$SSHBackdoor_6 = \"main.sshterminal\"  ascii wide\n\t\t$SSHBackdoor_7 = \"main.passwordHandler\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($SSHBackdoor*)\n}\n\n\n\n\nrule Uptycs_Ransomware_TargetRansomware \n{\n\tmeta:\n\t\tmalware_name = \"TargetRansomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"4cfb98a9d495ded0c8bb40c28e84f0c0\"\n\n\n\tstrings:\n\t\t$Ransomware_TargetRansomware_0 = \"Your data has been stolen and encrypted\"  ascii wide\n\t\t$Ransomware_TargetRansomware_1 = \"&TargetID=\"  ascii wide\n\t\t$Ransomware_TargetRansomware_2 = \"We will delete the stolen data\"  ascii wide\n\t\t$Ransomware_TargetRansomware_3 = \"HOW TO DECRYPT\"  ascii wide\n\t\t$Ransomware_TargetRansomware_4 = \"Do not try to change or restore files yourself\"  ascii wide\n\t\t$Ransomware_TargetRansomware_5 = \"&max_size_of_file=\"  ascii wide\n\t\t$Ransomware_TargetRansomware_6 = \"Our blog of leaked companies\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_TargetRansomware*)\n}\n\n\nrule Uptycs_Disgomoji \n{\n\tmeta:\n\t\tmalware_name = \"Disgomoji\"\n\t\tdescription = \"DISGOMOJI is a sophisticated malware developed by UTA0137, a threat actor targeting government organizations and is derived from discord-c2, it utilizes emoji-based commands for stealthy communication and includes features for exfiltrating sensitive data like browser information and documents.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d5f2e3fafbb0701dc0f1adccc7141e63\"\n\n\n\tstrings:\n\t\t$Disgomoji_0 = \"takeScreenshot\"  ascii wide\n\t\t$Disgomoji_1 = \"downloadFileFromURL\"  ascii wide\n\t\t$Disgomoji_2 = \"createCronJob\"  ascii wide\n\t\t$Disgomoji_3 = \"findAndSendFiles\"  ascii wide\n\t\t$Disgomoji_4 = \"updateLogFile\"  ascii wide\n\t\t$Disgomoji_5 = \"handleZipFile\"  ascii wide\n\t\t$Disgomoji_6 = \"uploadAndSendToOshi\"  ascii wide\n\t\t$Disgomoji_7 = \"uploadAndSendToLeft\"  ascii wide\n\t\t$Disgomoji_8 = \"zipFirefoxProfile\"  ascii wide\n\t\t$Disgomoji_9 = \"zipDirectoryWithParts\"  ascii wide\n\n\n\tcondition:\n\t\t7 of ($Disgomoji*)\n}\n\n\nrule Uptycs_Coinminer_Nanominer_Update \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"76f58bec17fb9e698d9de6a611bfcec7\"\n\n\tstrings:\n\t\t$Coinminer_Nanominer_Update_0 = \"Cryptonight\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_1 = \"mining.subscribe\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_2 = \"Ethereum wallet\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_3 = \"stratum\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_4 = \"nanominer\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_5 = \"mining.set_difficulty\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_6 = \"mining.submit\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_7 = \"paymentId\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_8 = \"isNanominerDir\"  ascii wide\n\t\t$Coinminer_Nanominer_Update_9 = \"Coin to mine\"  ascii wide\n\n\n\tcondition:\n\t\t7 of ($Coinminer_Nanominer_Update*)\n}\n\n\nrule Uptycs_Ransomware_Mallox \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"8d0fd41d35df82d3e7e2ff5c1747b87c\"\n\n\n\tstrings:\n\t\t$Ransomware_Mallox_0 = \"READ_THIS_NOW.txt\"  ascii wide\n\t\t$Ransomware_Mallox_1 = \"Your computer has been breached\"  ascii wide\n\t\t$Ransomware_Mallox_2 = \"your important files have been stolen and encrypted\"  ascii wide\n\t\t$Ransomware_Mallox_3 = \"Tox chat ID:\"  ascii wide\n\t\t$Ransomware_Mallox_4 = \"We will provide you with a decryption tool\"  ascii wide\n\t\t$Ransomware_Mallox_5 = \"We will also publish all your private data that we obtained\"  ascii wide\n\t\t$Ransomware_Mallox_6 = \"mallox\"  ascii wide\n\n\n\tcondition:\n\t\t6 of ($Ransomware_Mallox*)\n}\n\n\n\n\nrule Uptycs_XorDDOS_v8 \n{\n\tmeta:\n\t\tmalware_name = \"XorDDOS\"\n\t\tdescription = \"XorDDDOS is a linux based malware which is used to launch larger scale Ddos attacks.It also has rootkit capabilities\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"9b77b0a0c87f172f96ca3230b1105477\"\n\n\n\tstrings:\n\t\t$XorDDOS_v8_0 = \"main.CommandHandler\"  ascii wide\n\t\t$XorDDOS_v8_1 = \"main.daemonize\"  ascii wide\n\t\t$XorDDOS_v8_2 = \"SocketFlood\"  ascii wide\n\t\t$XorDDOS_v8_3 = \"slowlorisattack\"  ascii wide\n\t\t$XorDDOS_v8_4 = \"getCpuUsage\"  ascii wide\n\t\t$XorDDOS_v8_5 = \"GetLatency\"  ascii wide\n\t\t$XorDDOS_v8_6 = \"HttpsDefault\"  ascii wide\n\t\t$XorDDOS_v8_7 = \"tlsAttack\"  ascii wide\n\t\t$XorDDOS_v8_8 = \"TCP flood attack finished\"  ascii wide\n\t\t$XorDDOS_v8_9 = \"UDP flood attack\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($XorDDOS_v8*)\n}\n\n\nrule Uptycs_Gafgyt_CVE_2017_17215v3_Update \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"453190b3bc014a0e36a9ddf6bd918a05\"\n//Modified entire rule and also changed condition\n\n\tstrings:\n\t\t$exploit_0 = \"POST /ctrlt/DeviceUpgrade_1\"  ascii wide\n\t\t$exploit_1 = \"echo HUAWEIUPNP\"  ascii wide\n\t\t$exploit_2 = \"HuaweiHomeGateway\"  ascii wide\n\t\t$Gafgyt_CVE_2017_17215v3_Update_0 = { 83 FE 01 76 12 0F B7 07 83 EE 02 48 83 C7 02 48 01 C2 83 FE 01 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_1 = { 41 88 02 48 85 D2 75 ED 5A 5B 5D 41 5C 41 5D 4C 89 F0 41 5E }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_2 = { C1 83 E1 0F 74 1A B8 10 00 00 00 48 29 C8 48 8D 0C 02 48 89 DA 48 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_3 = { 4E F8 48 8D 4E D8 49 8D 42 E0 48 83 C7 03 EB 6B 4C 8B 46 F8 48 8D }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_4 = { D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_5 = { 48 89 D8 48 83 C8 01 EB 04 48 8B 76 10 48 3B 46 08 72 F6 48 8B }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_6 = { FF 48 81 EC D0 00 00 00 48 8D 84 24 E0 00 00 00 48 89 54 24 30 C7 04 24 18 00 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_7 = { D0 EB 0F 40 38 37 75 04 48 89 F8 C3 49 FF C8 48 FF C7 4D 85 C0 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_8 = { F6 48 63 FF B8 36 00 00 00 0F 05 48 3D 00 F0 FF FF 48 89 C3 }\n\t\t$Gafgyt_CVE_2017_17215v3_Update_9 = { FE 48 39 F3 0F 94 C2 48 83 F9 FF 0F 94 C0 84 D0 74 16 4B 8D }\n\n\n\tcondition:\n\t\tall of ($exploit_*) and 6 of ($Gafgyt_CVE_2017_17215v3_Update*)\n}\n\n\nrule Uptycs_Skibidi \n{\n\tmeta:\n\t\tmalware_name = \"Skibidi\"\n\t\tdescription = \"The Skibidi malware exploits CVE-2023-1389 in TP-Link Archer AX21 and CVE-2024-21887 in Ivanti Connect Secure to infiltrate networks where it targets various Linux architectures,the malware then connects to a C2 server, listening for file events and sending results back to the attacker.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"afe2ffc26f82c8ee4b995bdcd2b2843f\"\n\n\n\tstrings:\n\t\t$Skibidi_0 = \"youre not skibidi enough\"  ascii wide\n\t\t// All the below strings are XOR-encoded strings (memory dump hardly has any readable ascii strings, so taken opcodes for YARA)\n\t\t$Skibidi_1 = {A7 F8 FA E7 EB A7 00}\n\t\t$Skibidi_2 = {A6 FB E7 00 A7 E5 E9 F8 FB 00}\n\t\t$Skibidi_3 = {A7 F8 FA E7 EB A7 FB F1 FB A7 E3 ED FA E6 ED E4 A7 F8 E1 EC D7 E5 E9 F0 00}\n\t\t$Skibidi_4 = {FA A5 F0 F8 00}\n\t\t$Skibidi_5 = {A5 A5 A5 F8 00}\n\t\t$Skibidi_6 = {A5 EA E9 FB E0 00}\n\t\t$Skibidi_7 = {c3 c1 c4 c4 00}\n\t\t$Skibidi_8 = {F1 E7 FD FA ED A8 E6 E7 FC A8 FB E3 E1 EA E1 EC E1 A8 ED E6 E7 FD EF E0 82 00}\n\n\n\tcondition:\n\t\tall of ($Skibidi*)\n}\n\nrule Uptycs_P2PInfect_Rsagen \n{\n\tmeta:\n\t\tmalware_name = \"P2PInfect\"\n\t\tdescription = \"P2PInfect is a peer-to-peer botnet which spreads through SSH brute-forcing, employs persistence mechanisms like cron jobs, and uses evasion techniques to maintain control.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d4795387dd51d7842d6ee29aba7e2adc\"\n\n\n\tstrings:\n\t\t$P2PInfect_Rsagen_0 = \"$ENC_EXE$\"  ascii wide\n\t\t$P2PInfect_Rsagen_1 = \"$EMAIL_ADDRS$\"  ascii wide\n\t\t$P2PInfect_Rsagen_2 = \"$XMR_COUNT$\"  ascii wide\n\t\t$P2PInfect_Rsagen_3 = \"$XMR_ADDR$\"  ascii wide\n\t\t$P2PInfect_Rsagen_4 = \"$KEY_STR$\"  ascii wide\n\t\t$P2PInfect_Rsagen_5 = \"$ENC_DATABASE$\"  ascii wide\n\t\t$P2PInfect_Rsagen_6 = \"lock failedlocked\"  ascii wide\n\t\t$P2PInfect_Rsagen_7 = \"/root/homeencrypt\"  ascii wide\n\t\t$P2PInfect_Rsagen_8 = \"procfdlock\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($P2PInfect_Rsagen*)\n}\n\n\nrule Uptycs_P2PInfect_v2 \n{\n\tmeta:\n\t\tmalware_name = \"P2PInfect\"\n\t\tdescription = \"P2PInfect is a peer-to-peer botnet which spreads through SSH brute-forcing, employs persistence mechanisms like cron jobs, and uses evasion techniques to maintain control.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"5997572f16876f4e8359a6f06d2f2a56\"\n// YARA ref: https://www.cadosecurity.com/blog/from-dormant-to-dangerous-p2pinfect-evolves-to-deploy-new-ransomware-and-cryptominer\n\n\tstrings:\n\t\t$P2PInfect_v2_0 = \"nohup $SHELL\"  ascii wide\n\t\t$P2PInfect_v2_1 = \"libs.so.1\"  ascii wide\n\t\t$P2PInfect_v2_2 = \"curl http:// -o /tmp/; if [ ! -f /tmp/ ]; then wget http:// -O /tmp/; fi; if [ ! -f /tmp/ ]; then ; fi; echo  && /tmp/\"  ascii wide\n\t\t$P2PInfect_v2_3 = \"root:x:0:0:root:/root:/bin/bash(?:([a-z_][a-z0-9_]*?)@)?(?:(?:([0-9]\\\\.){3}[0-9]{1,3})|(?:([a-zA-Z0-9][\\\\.a-zA-Z0-9-]+)))\"  ascii wide\n\t\t$P2PInfect_v2_4 = \"/etc/ssh/ssh_config/root/etc/hosts/home~/.././127.0::1.bash_historyscp-i-p-P.ssh/config(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}\"  ascii wide\n\t\t$P2PInfect_v2_5 = \"system.exec \\\"bash -c \\\\\\\"\\\\\\\"\\\"\"  ascii wide\n\t\t$P2PInfect_v2_6 = \"system.exec \\\"\\\"\"  ascii wide\n\t\t$P2PInfect_v2_7 = \"powershell -EncodedCommand\"  ascii wide\n\t\t$P2PInfect_v2_8 = \"GET /ip HTTP/1.1\"  ascii wide\n\t\t$P2PInfect_v2_9 = \"^(.*?):.*?:(\\\\d+):\\\\d+:.*?:(.*?):(.*?)$\"  ascii wide\n\t\t$P2PInfect_v2_10 = \"/etc/passwd.opass123456echo -e \\\"\\\" | passwd && echo  > ; echo -e \\\";/bin/bash-c\\\" | sudo -S passwd\"  ascii wide\n\n\n\tcondition:\n\t\t10 of ($P2PInfect_v2*)\n}\n\n\nrule Uptycs_Coinminer_Dogemone \n{\n\tmeta:\n\t\tmalware_name = \"Coinminer\"\n\t\tdescription = \"Coin miner is an application that uses the computing power to mine digital currency.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"50f1882c018c4a635e8f1fb0782cf54e\"\n\n\tstrings:\n\t\t$Coinminer_Dogemone_0 = \"dogemone\"  ascii wide\n\t\t$Coinminer_Dogemone_1 = \"Mining is not started. You need to start mining before you can see hash rate.\"  ascii wide\n\t\t$Coinminer_Dogemone_2 = \"Please, specify wallet address to mine for\"  ascii wide\n\t\t$Coinminer_Dogemone_3 = \"target account address has wrong format\"  ascii wide\n\t\t$Coinminer_Dogemone_4 = \"Print block, print_block\"  ascii wide\n\t\t$Coinminer_Dogemone_5 = \"Print transaction, print_tx\"  ascii wide\n\t\t$Coinminer_Dogemone_6 = \"Start mining for specified address\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Coinminer_Dogemone*)\n}\n\n\n\n\nrule Uptycs_Ransomware_Play \n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"1fa3574bb8f45497dbbf8421d0444428\"\n\n\tstrings:\n\t\t$Ransomware_Play_0 = \"First step is done.\"  ascii wide\n\t\t$Ransomware_Play_1 = \"/vmfs/volumes\"  ascii wide\n\t\t$Ransomware_Play_2 = \"vim-cmd vmsvc/getallvms > machines\"  ascii wide\n\t\t$Ransomware_Play_3 = \"vim-cmd vmsvc/power.off\"  ascii wide\n\t\t$Ransomware_Play_4 = \"encrypt:\"  ascii wide\n\t\t$Ransomware_Play_5 = \"esxcli storage filesystem list > storage\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Ransomware_Play*)\n}\n\n\n\n\nrule Uptycs_Mirai_hoho \n{\n\tmeta:\n\t\tmalware_name = \"Mirai\"\n\t\tdescription = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"f0f6c950e0dc34f38f9a5ecfe19261aa\"\n\n\tstrings:\n\t\t$Mirai_hoho_0 = \"hoho0\"  ascii wide\n\t\t$Mirai_hoho_1 = \"HOHO-LUGO7\"  ascii wide\n\t\t$Mirai_hoho_2 = \"GET /bins/hoho\"  ascii wide\n\t\t$Mirai_hoho_3 = \"xsocket\"  ascii wide\n\t\t$Mirai_hoho_4 = \"xconnect\"  ascii wide\n\n\n\tcondition:\n\t\tall of ($Mirai_hoho*)\n}\n\n\n\nrule Uptycs_Sedexp_v1 \n{\n\tmeta:\n\t\tmalware_name = \"Sedexp\"\n\t\tdescription = \"Sedexp uses udev rules in Linux for persistence, and to avoid detection, it manipulates memory and hides these rules using more advanced methods than before.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"43f72f4cdab8ed40b2f913be4a55b17e7fd8a7946a636adb4452f685c1ffea02\"\n\n\n\tstrings:\n\t\t$Sedexp_0 = \"ACTION==\\\"add\\\", ENV{MAJOR}==\\\"1\\\", ENV{MINOR}==\\\"8\\\", RUN+=\\\"%s %s:+\"  ascii wide\n\t\t$Sedexp_1 = \"/lib/udev/\"  ascii wide\n\t\t$Sedexp_2 = \"/etc/udev/rules.d/99-%s.rules\"  ascii wide\n\t\t$Sedexp_3 = \"cp -f %s %s && sync\"  ascii wide\n\t\t$Sedexp_4 = \"cleanup_module\"  ascii wide\n\t\t$Sedexp_5 = \".shstrtab\"  ascii wide\n\t\t$Sedexp_6 = \"call_usermodehelper\"  ascii wide\n\t\t$Sedexp_7 = {6e67696e78006874747064006170616368650073656465787000}\n\n\tcondition:\n\t\tall of ($Sedexp*)\n}\n\n\nrule Uptycs_Ransomware_Akira_v3\n{\n\tmeta:\n\t\tmalware_name = \"Ransomware\"\n\t\tdescription = \"Ransomware is a malware that encrypts sensitive information on your system and asks for ransom in exchange of restoring the encrypted data.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"696a86a4c569590b0522664924db7c90\"\n\n\n\tstrings:\n\t\t$Ransomware_Akira_v3_0 = \"Hi friends\"  ascii wide\n\t\t$Ransomware_Akira_v3_1 = \"we will try to sell personal information/trade secrets/databases/source codes\"  ascii wide\n\t\t$Ransomware_Akira_v3_2 = \"2. Paste this link - https://akira\"  ascii wide\n\t\t$Ransomware_Akira_v3_3 = \"akira_readme.txt\"  ascii wide\n\t\t$Ransomware_Akira_v3_4 = \".onion\"  ascii wide\n\t\t$Ransomware_Akira_v3_5 = \"3. Use this code\"  ascii wide\n\n\tcondition:\n\t\tall of ($Ransomware_Akira_v3*)\n}\n\n\nrule Uptycs_IrcProxy_Agent \n{\n\tmeta:\n\t\tmalware_name = \"IrcProxy\"\n\t\tdescription = \"Ircproxy is an agent that establishes IRC connection to send private messages.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c4afd12415247afe261bc29f0fadfe9f\"\n\n\n\tstrings:\n\t\t$IrcProxy_Agent_0 = \":IrcProxy! NOTICE %s :\"  ascii wide\n\t\t$IrcProxy_Agent_1 = \"PASS %s\"  ascii wide\n\t\t$IrcProxy_Agent_2 = \"NICK %s\"  ascii wide\n\t\t$IrcProxy_Agent_3 = \"Configuration: Daemon port......:%u\"  ascii wide\n\t\t$IrcProxy_Agent_4 = \"Password.........:%s\"  ascii wide\n\t\t$IrcProxy_Agent_5 = \"ircproxy.conf\"  ascii wide\n\n\tcondition:\n\t\tall of ($IrcProxy_Agent*)\n}\n\nrule Uptycs_Gafgyt_v18 \n{\n\tmeta:\n\t\tmalware_name = \"Gafgyt\"\n\t\tdescription = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"c5a6479c40d3444160167b7f65624d37\"\n\n        \n\tstrings:\n\t\t$Gafgyt_v18_0 = \"Description=My Miscellaneous Service\"  ascii wide\n\t\t$Gafgyt_v18_1 = \"Killed %d %s(main/malware/killer)\"  ascii wide\n\t\t$Gafgyt_v18_2 = \"admin:password123root\"  ascii wide\n\t\t$Gafgyt_v18_3 = \"bot - My Miscellaneous Service\"  ascii wide\n\t\t$Gafgyt_v18_4 = \"cnc dialed(main/killer) killer killedbashrc persistence achieved\"  ascii wide\n\t\t$Gafgyt_v18_5 = \"successfully added persistence config:\"  ascii wide\n\n\tcondition:\n\t\tall of ($Gafgyt_v18*)\n}\n\nrule Uptycs_Rootkit_RST\n{\n\tmeta:\n\t\tmalware_name = \"Rootkit\"\n\t\tdescription = \"A rootkit is a malicious software that allows an unauthorized user to have privileged access to a computer and to restricted areas of its software.\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\t\tmd5 = \"d32e10d5e9eed74d2f4e4c5c16ebaf99\"\n\n\n\tstrings:\n\t\t$Rootkit_RST_0 = \"[-] Unable to write shellcode\"  ascii wide\n\t\t$Rootkit_RST_1 = \"[+] Shellcode placed at 0x%\"  ascii wide\n\t\t$Rootkit_RST_2 = \"[-] Unable to detach from victim\"  ascii wide\n\t\t$Rootkit_RST_3 = \"[-] Unable to spawn shell\"  ascii wide\n\t\t$Rootkit_RST_4 = \"[+] Attached to %d\"  ascii wide\n\t\t$Rootkit_RST_5 = \"fini_dummy\"  ascii wide\n\t\t$Rootkit_RST_6 = \"Intelectual property of\"  ascii wide\n\t\n\tcondition:\n\t\tall of ($Rootkit_RST*)\n}\n\n\nrule Uptycs_Flooder_DnsAmp_v1\n{\n        meta:\n                malware_name = \"Flooder\"\n                description = \"Flooder malware conducts various types of Ddos attacks, it also includes DNS Amplification attack.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"cede91aedf749dae6fc759f800c70550\"\n\n\n        strings:\n                $Flooder_DnsAmp_v1_0 = \"server=`ps -ef | grep $1 | grep -v grep\"  ascii wide\n                $Flooder_DnsAmp_v1_1 = \"TcpQFloodThread1\"  ascii wide\n                $Flooder_DnsAmp_v1_2 = \"St13bad_exception\"  ascii wide\n                $Flooder_DnsAmp_v1_3 = \"FATAL: kernel too old\"  ascii wide\n                $Flooder_DnsAmp_v1_4 = \"nis [NOTFOUND=return] files\"  ascii wide\n                $Flooder_DnsAmp_v1_5 = \"/etc/sysconfig/32bit_ssse3_memcpy_via_32bit_ssse3_memmove\"  ascii wide\n                $Flooder_DnsAmp_v1_6 = \"======= Backtrace: =========\"  ascii wide\n                $Flooder_DnsAmp_v1_7 = \"======= Memory map: ========\"  ascii wide\n                $Flooder_DnsAmp_v1_8 = \"cat /proc/cpuinfo|grep 'cpu MHz'|sed\"  ascii wide\n                $Flooder_DnsAmp_v1_9 = \"+Baiduspider/\"  ascii wide\n\n\n        condition:\n                all of ($Flooder_DnsAmp_v1*)\n}\n\n\nrule Uptycs_Gafgyt_v19\n{\n        meta:\n                malware_name = \"Gafgyt\"\n                description = \"Gafgyt is an advanced version of Mirai malware mainly used for launching large-scale distributed denial of service (DDoS) attacks\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"27c1899c01cf35f6e865506dd1623d87\"\n\n\n        strings:\n                $Gafgyt_v19_0 = \"Joined RebirthReborn As\"  ascii wide\n                $Gafgyt_v19_1 = \"No space left on device\"  ascii wide\n                $Gafgyt_v19_2 = \":666\"  ascii wide\n                $Gafgyt_v19_3 = \"XMAS\"  ascii wide\n                $Gafgyt_v19_4 = \"Operation not permitted\"  ascii wide\n                $Gafgyt_v19_5 = \"Machine is not on the network\"  ascii wide\n                $Gafgyt_v19_6 = \"Package not installed\"  ascii wide\n                $Gafgyt_v19_7 = \"Object is remote\"  ascii wide\n                $Gafgyt_v19_8 = \"Too many users\"  ascii wide\n                $Gafgyt_v19_9 = {73796e007273740066696e0061636b00707368}\n\n\n        condition:\n                all of ($Gafgyt_v19*)\n}\n\nrule Uptycs_Flooder_Hestra_v1\n{\n        meta:\n                malware_name = \"Flooder\"\n                description = \"Flooder malware conducts various types of Ddos attacks, it also includes DNS Amplification attack.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"d5cc642aeffa719a4f150a49d387f1d3\"\n\n\n        strings:\n                $Flooder_Hestra_v1_0 = \"Fux0ring %s on port %d\"  ascii wide\n                $Flooder_Hestra_v1_1 = \"Host Unknown, moron: %s\"  ascii wide\n                $Flooder_Hestra_v1_2 = \"hestra.c by Blaze-` and |w0lf|\"  ascii wide\n                $Flooder_Hestra_v1_3 = \"Extremely Dangerous tool!!\"  ascii wide\n                $Flooder_Hestra_v1_4 = \"Usage: <hestra> <host> <port>\"  ascii wide\n                $Flooder_Hestra_v1_5 = \"echo_connect\"  ascii wide\n\n\n        condition:\n                5 of ($Flooder_Hestra_v1*)\n}\n\n\nrule Uptycs_Exploit_Unzip\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"d5dc2c0ca3b55dc6e81298944929e61b\"\n\n\n        strings:\n                $Exploit_Unzip_0 = \"[L33TSECURITY]\"  ascii wide\n                $Exploit_Unzip_1 = \"UNZIP EXPLOIT BY DVDMAN\"  ascii wide\n                $Exploit_Unzip_2 = \"Ph//shh/bin\"  ascii wide\n                $Exploit_Unzip_3 = \"[Usage] %s Offset\"  ascii wide\n                $Exploit_Unzip_4 = \"execshell\"  ascii wide\n                $Exploit_Unzip_5 = \"fakechunk\"  ascii wide\n\n\n        condition:\n                5 of ($Exploit_Unzip*)\n}\n\n\n\nrule Uptycs_Coinminer_PSK\n{\n        meta:\n                malware_name = \"CoinMiner\"\n                description = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"dd68a5a3bf9fbb099c9c29e73dbab782\"\n\n\n        strings:\n                $Coinminer_PSK_0 = \"stratum+tcp://\"  ascii wide\n                $Coinminer_PSK_1 = \"mine.\"  ascii wide\n                $Coinminer_PSK_2 = \".com:7777 -u\"  ascii wide\n                $Coinminer_PSK_3 = \"-p x -k\"  ascii wide\n\n\n        condition:\n                all of ($Coinminer_PSK*)\n}\n\nrule Uptycs_Mirai_ATK\n{\n        meta:\n                malware_name = \"Mirai\"\n                description = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                md5 = \"b9bacc54bc602fa7f0f56b93f78d09a5\"\n\n\n        strings:\n                $Mirai_ATK_0 = \"attack.c\"  ascii wide\n                $Mirai_ATK_1 = \"anti_gdb_entry\"  ascii wide\n                $Mirai_ATK_2 = \"resolve_cnc_addr\"  ascii wide\n                $Mirai_ATK_3 = \"attack_gre_eth\"  ascii wide\n                $Mirai_ATK_4 = \"attack_udp_generic\"  ascii wide\n                $Mirai_ATK_5 = \"attack_get_opt_ip\"  ascii wide\n                $Mirai_ATK_6 = \"attack_start\"  ascii wide\n                $Mirai_ATK_7 = \"attack_udp_discord\"  ascii wide\n                $Mirai_ATK_8 = \"attack_udp_bypass\"  ascii wide\n                $Mirai_ATK_9 = \"attack_udp_openvpn\"  ascii wide\n                $Mirai_ATK_10 = \"attack_udp_vse\"  ascii wide\n\n\n        condition:\n                8 of ($Mirai_ATK*)\n}\n\nrule Uptycs_Mirai_Pein\n{\n        meta:\n                malware_name = \"Mirai\"\n                description = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"0236c43e8b9a993f0a17193574e92208d8088a8df3d7229c3a0e716cbba1e563\"\n\n\n        strings:\n                $Mirai_Pein_0 = \"GET /pein.x86\"  ascii wide\n                $Mirai_Pein_1 = \"./bigbotPein\"  ascii wide\n                $Mirai_Pein_2 = {78383600455845430a004e49}\n\n\n        condition:\n                all of ($Mirai_Pein*)\n}\n\nrule Uptycs_Trojan_Agent_RST_v1\n{\n        meta:\n                malware_name = \"Trojan\"\n                description = \"Trojan is a type of malware that disguises themselves as legitimate files to gain access to user's device.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"081ddf973b6af75ea0d3d62dab679f770f6841f3c20f54672c044fc8b436f484\"\n\n\n        strings:\n                $Trojan_Agent_RST_v1_0 = \"Usage: %s <input file>\"  ascii wide\n                $Trojan_Agent_RST_v1_1 = \"./suntel -h %s\"  ascii wide\n                $Trojan_Agent_RST_v1_2 = \"# Lets try to OWN : %s\"  ascii wide\n                $Trojan_Agent_RST_v1_3 = {2f62696e2f7368002d630078787878797979797a7a7a7a00}\n\n\n        condition:\n                all of ($Trojan_Agent_RST_v1*)\n}\n\nrule Uptycs_Exploit_CAN_2004_0497\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"1ce74a730540eae81ec18b9d2e7f77183d2a8af755cac4142f8e495bdd520620\"\n\n\n        strings:\n                $Exploit_CAN_2004_0497_0 = \"raptor_chown.c - sys_chown missing DAC\"  ascii wide\n                $Exploit_CAN_2004_0497_1 = \"usage: %s file_name\"  ascii wide\n                $Exploit_CAN_2004_0497_2 = \"Error: Not vulnerable!\"  ascii wide\n                $Exploit_CAN_2004_0497_3 = \"raptor@0xdeadbeef.info\"  ascii wide\n                $Exploit_CAN_2004_0497_4 = \"sys_chown no jutsu!\"  ascii wide\n\n\n        condition:\n                4 of ($Exploit_CAN_2004_0497*)\n}\n\nrule Uptycs_Exploit_GMON_v1\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"5a7f9d852a51ff9d19a92842018e1769c9f8eb169f8c885d1d4b7b7c2234a2f1\"\n\n\n        strings:\n                $Exploit_GMON_v1_0 = \"/tmp/kidd0 created Ok\"  ascii wide\n                $Exploit_GMON_v1_1 = \"- Entering rootshell ;-) -\"  ascii wide\n                $Exploit_GMON_v1_2 = \"Phase 6. Executing /bin/su\"  ascii wide\n                $Exploit_GMON_v1_3 = \"glibc xploit for /bin/su\"  ascii wide\n\n\n        condition:\n                3 of ($Exploit_GMON_v1*)\n}\n\nrule Uptycs_Flooder_Ladvix_v1\n{\n        meta:\n                malware_name = \"Flooder\"\n                description = \"Flooder malware conducts various types of Ddos attacks, it also includes DNS Amplification attack.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"44a9389128df8afb8c9d60cb7dcb35ce43f2004da0f30530719eeb9070f00ac7\"\n\n\n        strings:\n                $Flooder_Ladvix_v1_0 = \"preparing flood...\"  ascii wide\n                $Flooder_Ladvix_v1_1 = \"flooding now...\"  ascii wide\n                $Flooder_Ladvix_v1_2 = \"floodport\"  ascii wide\n                $Flooder_Ladvix_v1_3 = \"Error: setsockopt() - Cannot set HDRINCL!\"  ascii wide\n                $Flooder_Ladvix_v1_4 = \"completed.0\"  ascii wide\n\n\n        condition:\n                4 of ($Flooder_Ladvix_v1*)\n}\n\n\n\nrule Uptycs_Hacktool_Spike_v1\n{\n        meta:\n                malware_name = \"Spike\"\n                description = \"SPIKE is a fuzzer creation kit, which provides an API to create custom fuzzers for network based protocols using the C programming language.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"f955eaf11f38f8eada8fc6e02dcadff4635a1884cc38157b003f7a82ff0f13d6\"\n\n\n\n        strings:\n                $Hacktool_Spike_v1_0 = \"/pentest/fuzzers/spike-\"  ascii wide\n                $Hacktool_Spike_v1_1 = \"spike_send_udp\"  ascii wide\n                $Hacktool_Spike_v1_2 = \"Warning, dce_wordstring() length overflowed!\"  ascii wide\n                $Hacktool_Spike_v1_3 = \"Malloc failed trying to allocate a spike\"  ascii wide\n                $Hacktool_Spike_v1_4 = \"/ntlm_brute target port username\"  ascii wide\n                $Hacktool_Spike_v1_5 = \"SMBencrypt\"  ascii wide\n                $Hacktool_Spike_v1_6 = \"s_get_random_fuzzstring\"  ascii wide\n\n\n        condition:\n                4 of ($Hacktool_Spike_v1*)\n}\n\nrule Uptycs_Backdoor_Prism_v1\n{\n        meta:\n                malware_name = \"Prism\"\n                description = \"It executes commands from a remote malicious user, effectively compromising the affected system.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"525bc0aec11da1171931c9942738093fc5178179f89ff27b1837ed882a4a960a\"\n\n\n        strings:\n                $Backdoor_Prism_v1_0 = {6874747064 [4-8] 20737461727465640a0a}\n                $Backdoor_Prism_v1_1 = {205368656c6c3a09090925730a00204465746163683a09095965730a0020}\n                $Backdoor_Prism_v1_2 = {466c7573682049707461626c65733a094e6f}\n                $Backdoor_Prism_v1_3 = {5265737061776e2044656c61793a0909256420}\n\n\n        condition:\n                all of ($Backdoor_Prism_v1*)\n}\n\nrule Uptycs_TrojanDownloader_v3\n{\n        meta:\n                malware_name = \"TrojanDownloader\"\n                description = \"A trojan-downloader is a type of trojan that installs itself to the system and waits until an Internet connection becomes available to connect to a remote server or website in order to download additional programs.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"6bda918b109a40552c8e3154e14e6327563c02bf860e2854ecd20c6352dc3cef\"\n\n\n        strings:\n                $TrojanDownloader_v3_0 = \"Failed to open file!\"  ascii wide\n                $TrojanDownloader_v3_1 = \"Failed to call socket()\"  ascii wide\n                $TrojanDownloader_v3_2 = \"Connecting to host...\"  ascii wide\n                $TrojanDownloader_v3_3 = \"Failed to connect to host.\"  ascii wide\n                $TrojanDownloader_v3_4 = \"Connected to host\"  ascii wide\n                $TrojanDownloader_v3_5 = \"GET /z/x86 HTTP/1\"  ascii wide\n                $TrojanDownloader_v3_6 = \"Failed to send get request.\"  ascii wide\n                $TrojanDownloader_v3_7 = \"Finished receiving HTTP header\"  ascii wide\n\n\n        condition:\n                5 of ($TrojanDownloader_v3*)\n}\n\nrule Uptycs_Flooder_SMLBR_v1\n{\n        meta:\n                malware_name = \"Flooder\"\n                description = \"Flooder malware conducts various types of Ddos attacks, it also includes DNS Amplification attack.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"6d219d2c9248084388cda88f98338aa552a08297d71d59b11cf766018462b439\"\n\n\n        strings:\n                $Flooder_SMLBR_v1_0 = \"Thread finished. Packets sent: %d\"  ascii wide\n                $Flooder_SMLBR_v1_1 = \"UDP flood completed\"  ascii wide\n                $Flooder_SMLBR_v1_2 = \"SYN flood completed\"  ascii wide\n                $Flooder_SMLBR_v1_3 = \"__START_SHELL__\"  ascii wide\n                $Flooder_SMLBR_v1_4 = \"__END_SHELL__\"  ascii wide\n                $Flooder_SMLBR_v1_5 = \"synflood %15s %d %d\"  ascii wide\n                $Flooder_SMLBR_v1_6 = \"Connection lost. Reconnecting...\"  ascii wide\n                $Flooder_SMLBR_v1_7 = \"execute_command\"  ascii wide\n\n\n        condition:\n                5 of ($Flooder_SMLBR_v1*)\n}\n\nrule Uptycs_Exploit_CVE_2021_22555\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"c8b20c91b60cd409fabc78b0117c1293c44babb3dc657768f6077827482a2b1b\"\n\n\n        strings:\n                $Exploit_CVE_2021_22555_0 = \"[+] Linux Privilege Escalation by\"  ascii wide\n                $Exploit_CVE_2021_22555_1 = \"[+] Netfilter heap out-of-bounds write (CVE-2021-22555)\"  ascii wide\n                $Exploit_CVE_2021_22555_2 = \"[+] STAGE 1: Memory corruption\"  ascii wide\n                $Exploit_CVE_2021_22555_3 = \"[*] Spraying primary messages...\"  ascii wide\n                $Exploit_CVE_2021_22555_4 = \"[*] Triggering out-of-bounds write...\"  ascii wide\n                $Exploit_CVE_2021_22555_5 = \"[*] Searching for corrupted primary message...\"  ascii wide\n\n\n        condition:\n                5 of ($Exploit_CVE_2021_22555*)\n}\n\nrule Uptycs_Flooder_Dofloo_v2\n{\n        meta:\n                malware_name = \"Flooder\"\n                description = \"Flooder malware conducts various types of Ddos attacks, it also includes DNS Amplification attack.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"e720e9eb73874fe874fe0ac49b52b4f02463813917c4444dfb42f63d08add609\"\n\n\n        strings:\n                $Flooder_Dofloo_v2_0 = \"execute_cfa_program\"  ascii wide\n                $Flooder_Dofloo_v2_1 = \"execute_stack_op\"  ascii wide\n                $Flooder_Dofloo_v2_3 = \"sed -i -e '2 i%s/%s start' /etc/rc.d\"  ascii wide\n                $Flooder_Dofloo_v2_4 = \"St17bad_function_call\"  ascii wide\n                $Flooder_Dofloo_v2_5 = \"Broken promise\"  ascii wide\n                $Flooder_Dofloo_v2_6 = \"Future already retrieved\"  ascii wide\n\n\n        condition:\n                all of ($Flooder_Dofloo_v2*)\n}\n\nrule Uptycs_Backdoor_Small_v2\n{\n        meta:\n                malware_name = \"Backdoor\"\n                description = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"ebd08b7775b2a472e64403cda50adaf75b7d16ed5b32c846b21eaa4a06d30507\"\n\n\n        strings:\n                $Backdoor_Small_v2_0 = \"DiE!!!\"  ascii wide\n                $Backdoor_Small_v2_1 = \"Can't fork pty, bye!\"  ascii wide\n                $Backdoor_Small_v2_2 = \"melebu backdoore J1nX\"  ascii wide\n                $Backdoor_Small_v2_3 = {69 73 74 65 6E 00 66 6F 72 6B 00 73 70 72 69 6E 74 66 00 68}\n\n\n        condition:\n                all of ($Backdoor_Small_v2*)\n}\n\nrule Uptycs_Mirai_Gorilla\n{\n        meta:\n                malware_name = \"Mirai\"\n                description = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"0671ab8eb145cea8e6b613b958a817e12d512a24ea1b5a3a2091a3b556c2a900\"\n\n        strings:\n                $Mirai_Gorilla_0 = \"Found And Killed Process: PID=\"  ascii wide\n                $Mirai_Gorilla_1 = \"var/tmp/sonia\"  ascii wide\n                $Mirai_Gorilla_2 = \"stm_hi3511_dvr\"  ascii wide\n                $Mirai_Gorilla_3 = \"which gdb > /dev/null 2>&1\"  ascii wide\n                $Mirai_Gorilla_4 = \"which lldb > /dev/null 2>&1\"  ascii wide\n                $Mirai_Gorilla_5 = \"/var/iamnewgorilla\"  ascii wide\n                $Mirai_Gorilla_6 = \"Exiting. gorilla botnet didnt like this honeypot....\"  ascii wide\n                $Mirai_Gorilla_7 = \"::respawn:%s && wget\"  ascii wide\n                $Mirai_Gorilla_8 = \"chmod +x /etc/init.d/mybinary\"  ascii wide\n                $Mirai_Gorilla_9 = \"The Gorilla Botnet Cats Came After You!\"  ascii wide\n\n\n        condition:\n                8 of ($Mirai_Gorilla*)\n}\n\nrule Uptycs_Backdoor_Sysback\n{\n        meta:\n                malware_name = \"Backdoor\"\n                description = \"Backdoor tries to connect to CNC server and acts according to the control of commands and controls of the server.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"9848c5531f77a63193fd1de8d89ffbc15bf8ac1cde5ef273858c5d91f0672859\"\n\n        strings:\n                $Backdoor_Sysback_0 = \"Sysback v1.0 - Coded by Nyo\"  ascii wide\n                $Backdoor_Sysback_1 = \"[*] Connected from : %s:%d\"  ascii wide\n                $Backdoor_Sysback_2 = \"[*] Connected to   : %s:%d\"  ascii wide\n                $Backdoor_Sysback_3 = \"[root@Sysback]#\"  ascii wide\n                $Backdoor_Sysback_4 = \"-= Sysback HELP =-\"  ascii wide\n                $Backdoor_Sysback_5 = \"tdopen - open telnetd port\"  ascii wide\n                $Backdoor_Sysback_6 = \"Added service \\\"telnet\\\" on port \\\"11111\\\" successfully!\"  ascii wide\n\n\n        condition:\n                all of ($Backdoor_Sysback*)\n}\n\nrule Uptycs_frp_client_and_server_v1\n{\n        meta:\n                malware_name = \"FRP\"\n                description = \"frp is a fast reverse proxy that helps expose a machine behind a NAT or firewall to the Internet.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"b717b0530df19d63df5e9973a9d74254806a1dedeb3ea2c08c70547ca5b50271\"\n\n        strings:\n                $frp_client_and_server_v1_0 = \"Put config to frpc and hot reload failed\"  ascii wide\n                $frp_client_and_server_v1_1 = \"github.com/fatedier/frp/cmd/frpc/sub.NewAdminCommand\"  ascii wide\n                $frp_client_and_server_v1_2 = \"github.com/fatedier/frp/cmd/frpc/sub.init.0.NewAdminCommand.func1\"  ascii wide\n                $frp_client_and_server_v1_3 = \"github.com/fatedier/frp/cmd/frpc/sub.ReloadHandler\"  ascii wide\n                $frp_client_and_server_v1_4 = \"github.com/fatedier/frp/cmd/frpc/sub.StatusHandler\"  ascii wide\n                $frp_client_and_server_v1_5 = \"github.com/fatedier/frp/cmd/frpc/sub.StopHandler\"  ascii wide\n                $frp_client_and_server_v1_6 = \"github.com/fatedier/frp/cmd/frpc/sub.runClient\"  ascii wide\n\n\n        condition:\n                5 of ($frp_client_and_server_v1*)\n}\n\nrule Uptycs_Mirai_Zte\n{\n        meta:\n                malware_name = \"Mirai\"\n                description = \"Mirai is malware that infects smart devices that run on ARC processors, turning them into a network of remotely controlled bots.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"c2aee90eaa34f7ed1ca1aa1aabcdfabbc5178aeb630f52c990182aad67a70372\"\n\n        strings:\n                $Mirai_Zte_0 = \"unisheen\"  ascii wide\n                $Mirai_Zte_1 = \"Fireitup\"  ascii wide\n                $Mirai_Zte_2 = \"example.ulfheim.net\"  ascii wide\n                $Mirai_Zte_3 = \"usage: busybox\"  ascii wide\n                $Mirai_Zte_4 = \"admin1234\"  ascii wide\n                $Mirai_Zte_5 = \"admin@123\"  ascii wide\n                $Mirai_Zte_6 = \"BrAhMoS@15\"  ascii wide\n                $Mirai_Zte_7 = \"GeNeXiS@19\"  ascii wide\n                $Mirai_Zte_8 = \"Zte521\"  ascii wide\n                $Mirai_Zte_9 = \"root621\"  ascii wide\n                $Mirai_Zte_10 = \"oelinux123\"  ascii wide\n\n\n        condition:\n                8 of ($Mirai_Zte*)\n}\n\nrule Uptycs_Coinminer_Xmrig_v12\n{\n        meta:\n                malware_name = \"Coinminer\"\n                description = \"Coin miner is an application that uses the infected device's physical resources to mine digital currency.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"ccfbb75b28f7758816994b63db4846e70187a25cb2cc5183f1000bbb7f7b496f\"\n\n        strings:\n                $Coinminer_Xmrig_v12_0 = \"stratum+tcp://pool.\"  ascii wide\n                $Coinminer_Xmrig_v12_1 = \"/bin/ps -p %i -T -o 'pcpu' --no-headers\"  ascii wide\n                $Coinminer_Xmrig_v12_2 = \"Error in running ps: %d\"  ascii wide\n                $Coinminer_Xmrig_v12_3 = \"Killed %d bot pids\"  ascii wide\n                $Coinminer_Xmrig_v12_4 = \"Die bitch: %d\"  ascii wide\n                $Coinminer_Xmrig_v12_5 = \"use pool %s:%d %s\"  ascii wide\n                $Coinminer_Xmrig_v12_6 = \"no active pools, stop mining\"  ascii wide\n                $Coinminer_Xmrig_v12_7 = \"new job from %s:%d diff %d\"  ascii wide\n                $Coinminer_Xmrig_v12_8 = \"xmr.crypto\"  ascii wide\n                $Coinminer_Xmrig_v12_9 = \"cryptonight\"  ascii wide\n\n\n        condition:\n                7 of ($Coinminer_Xmrig_v12*)\n}\n\nrule Uptycs_Exploit_CVE_2024_6387_v1\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"195ad99ee3741dbea5096b771ee195fee091038ad33a57c862aed409a66551b4\"\n\n        strings:\n                $Exploit_CVE_2024_6387_v1_0 = \"Attempting exploitation with glibc base: 0x%lx\"  ascii wide\n                $Exploit_CVE_2024_6387_v1_1 = \"Failed to establish connection, attempt %d\"  ascii wide\n                $Exploit_CVE_2024_6387_v1_2 = \"Possible exploitation success on attempt %d with glibc base 0x%lx!\"  ascii wide\n                $Exploit_CVE_2024_6387_v1_3 = \"Received response after exploit attempt (%zd bytes)\"  ascii wide\n                $Exploit_CVE_2024_6387_v1_4 = \"No immediate response from server - possible successful exploitation\"  ascii wide\n\n\n        condition:\n                4 of ($Exploit_CVE_2024_6387_v1*)\n}\n\nrule Uptycs_Exploit_NIPrint\n{\n        meta:\n                malware_name = \"Exploit\"\n                description = \"An exploit is a code that takes advantage of vulnerabilities for malicious purposes.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"93aefb53d755fb33d9dc1c320d2617ab6b36ccbda73810f5d909898bac75e61b\"\n\n        strings:\n                $Exploit_NIPrint_0 = \"[+] Connected to %s:515!\"  ascii wide\n                $Exploit_NIPrint_1 = \"[+] Exploit code was sent!\"  ascii wide\n                $Exploit_NIPrint_2 = \"[+] Connecting to %s:%d\"  ascii wide\n                $Exploit_NIPrint_3 = \"telnet %s %d\"  ascii wide\n                $Exploit_NIPrint_4 = \"[-] Not connected! NIPrint probably not vulnerable!\"  ascii wide\n\n\n        condition:\n                all of ($Exploit_NIPrint*)\n}\n\n\nrule Uptycs_ExploitScanTool_Pscan_v1\n{\n        meta:\n                malware_name = \"EXPLOITSCANTOOL\"\n                description = \"Exploitscantool is used for advanced scanning capabilities to identify potential vulnerabilities and provides a platform for executing exploits, enabling users to demonstrate the impact of identified vulnerabilities and assess the system's resilience against attacks.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"97e8c0cf1838ca34ce8b52bfb48788f4709dd11e4df721c03a3a6033994db884\"\n\n        strings:\n                $ExploitScanTool_Pscan_v1_0 = \"Usage: %s <b-block> <port> [c-block]\"  ascii wide\n                $ExploitScanTool_Pscan_v1_1 = \"Invalid b-range.\"  ascii wide\n                $ExploitScanTool_Pscan_v1_2 = \"Unable to allocate socket.\"  ascii wide\n                $ExploitScanTool_Pscan_v1_3 = \"Unable to set O_NONBLOCK\"  ascii wide\n                $ExploitScanTool_Pscan_v1_4 = \"Scan completed in %u seconds.\"  ascii wide\n\n\n        condition:\n                all of ($ExploitScanTool_Pscan_v1*)\n}\n\nrule Uptycs_ExploitScanTool_AutoSSHscan\n{\n        meta:\n                malware_name = \"EXPLOITSCANTOOL\"\n                description = \"Exploitscantool is used for advanced scanning capabilities to identify potential vulnerabilities and provides a platform for executing exploits, enabling users to demonstrate the impact of identified vulnerabilities and assess the system's resilience against attacks.\"\n                author = \"Uptycs Inc\"\n                version = \"1\"\n                sha256 = \"f93324c1d4636229dd2a5ce0847d90d7c62c6ec21c09a6950a3a0aa567e1ded9\"\n\n        strings:\n                $ExploitScanTool_AutoSSHscan_0 = \"[-] Unable to exit, entering neverending loop.\"  ascii wide\n                $ExploitScanTool_AutoSSHscan_1 = \"Kernel seems not to be vulnerable\"  ascii wide\n                $ExploitScanTool_AutoSSHscan_2 = \"Unable to spawn shell\"  ascii wide\n                $ExploitScanTool_AutoSSHscan_3 = \"Unable to jump to call gate\"  ascii wide\n\n\n        condition:\n                all of ($ExploitScanTool_AutoSSHscan*)\n}\n\n",
        "custom": false,
        "createdBy": "00000000-0000-0000-0000-000000000000",
        "updatedBy": "00000000-0000-0000-0000-000000000000",
        "createdAt": "2022-03-08T14:03:57.732Z",
        "updatedAt": "2024-10-21T02:42:43.252Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "e11a37c3-70a6-4039-8286-80d890bcf467",
          "yaraGroupRuleId": "469a90de-9434-43d4-9fee-09af1e7bfb26"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/e11a37c3-70a6-4039-8286-80d890bcf467"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "a9d00989-7529-4038-b690-9bdb53a9e098",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "76c1d36b-7f96-434b-aeaf-e0791bc5fa3f",
    "name": "SEICFilesYara_Desktop_MyDocuments_Download",
    "description": "SEICFilesYara_Desktop_MyDocuments_Download",
    "grouping": null,
    "includePaths": [
      "C:\\Users\\%\\Desktop\\%%",
      "C:\\Users\\%\\Documents\\%%",
      "C:\\Users\\%\\Downloads\\%%",
      "%SystemDrive%\\Users\\%\\Desktop\\%%",
      "%SystemDrive%\\Users\\%\\Documents\\%%",
      "%SystemDrive%\\Users\\%\\Downloads\\%%",
      "C:\\tmp\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [
      "%SystemDrive%\\Users\\%\\AppData\\Local\\Microsoft\\Outlook\\mapisvc.inf",
      "C:\\Users\\%\\AppData\\Local\\Microsoft\\Outlook\\%%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
    "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "createdAt": "2023-10-04T10:18:05.397Z",
    "updatedAt": "2024-08-08T12:36:31.208Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "6df967ce-4e2a-4230-ba24-51340a2975a8",
        "seedId": "0c21a4fa-a944-4911-b2d1-0f7d89acb9d9",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "test_sei3",
        "description": null,
        "rules": "\n\nrule uptycs_detected\n      {\n          strings:\n              $a = \"seidebugging\"\n   condition:\n              all of them\n      }\n\nrule test_rules: funtag\n{\n    strings:\n        $s_1 = \"This is Henry''s apostrophe test\"\n\n    condition:\n        1 of them\n}\n",
        "custom": true,
        "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "createdAt": "2023-12-01T10:41:04.618Z",
        "updatedAt": "2024-03-07T12:44:57.743Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "a9d00989-7529-4038-b690-9bdb53a9e098",
          "yaraGroupRuleId": "6df967ce-4e2a-4230-ba24-51340a2975a8"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/a9d00989-7529-4038-b690-9bdb53a9e098"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "10a5e7e4-0975-4a53-b32d-f2d1d437a278",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "b6733536-6261-42dc-b609-43ada4d48f89",
    "name": "Shell Interpreter Monitoring",
    "description": "Testing FIM detections for Shell interpreter changes",
    "grouping": null,
    "includePaths": [
      "/bin/bash",
      "/bin/sh",
      "/usr/bin/zsh",
      "/etc/profile",
      "~/.bashrc",
      "~/.bash_profile",
      "/usr/bin/bash",
      "/usr/bin/sh",
      "/usr/bin/perl"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "updatedBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "createdAt": "2024-07-22T10:43:19.274Z",
    "updatedAt": "2024-07-22T11:10:34.131Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/10a5e7e4-0975-4a53-b32d-f2d1d437a278"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "ea74c292-a412-48b0-959e-d63b226932a3",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "df567e7c-e1be-4b15-b7d4-ffebf458fb6b",
    "name": "Test-vamsi-1-hosts",
    "description": "",
    "grouping": null,
    "includePaths": [
      "C:\\testing-shein\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "f3969d5d-257e-421b-bd8b-200972f4daa7",
    "updatedBy": "f3969d5d-257e-421b-bd8b-200972f4daa7",
    "createdAt": "2022-12-08T08:47:15.986Z",
    "updatedAt": "2023-02-21T12:25:26.739Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/ea74c292-a412-48b0-959e-d63b226932a3"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "ec586024-7373-4e6a-9388-e9519c5ec1c3",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "c6c8f8e2-e62a-484b-a696-9a48c4fa707f",
    "name": "Test_TSC",
    "description": "TSC",
    "grouping": null,
    "includePaths": [
      "/tmp/%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "7dfd037f-1900-45c1-8b4e-06286d3fb11e",
    "updatedBy": "7dfd037f-1900-45c1-8b4e-06286d3fb11e",
    "createdAt": "2023-05-08T07:20:56.798Z",
    "updatedAt": "2023-05-08T07:20:56.798Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/ec586024-7373-4e6a-9388-e9519c5ec1c3"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "c70fd818-e21c-437a-8878-eded9f6eb4d3",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "f3d1ea92-67af-400e-9490-1abceccee821",
    "name": "Uma Test FIM 20210806",
    "description": "Test",
    "grouping": null,
    "includePaths": [
      "/etc/hosts"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "ad3f6416-9d9b-4bb5-aab8-e270ca9437b8",
    "updatedBy": "ad3f6416-9d9b-4bb5-aab8-e270ca9437b8",
    "createdAt": "2021-08-06T12:07:11.303Z",
    "updatedAt": "2021-08-06T12:07:11.303Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/c70fd818-e21c-437a-8878-eded9f6eb4d3"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "1ac52df8-967e-45ac-a122-de45507e76b4",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a89f54d5-e5c5-4f30-801c-c8375088e136",
    "name": "Vani_FIM",
    "description": "Monitor ssh files on MAC OS VM",
    "grouping": null,
    "includePaths": [
      "/Users/%/.ssh%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
    "updatedBy": "c4542e87-0e60-4f45-aca9-034055ee2442",
    "createdAt": "2023-09-28T10:27:19.019Z",
    "updatedAt": "2023-09-28T10:27:19.019Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/1ac52df8-967e-45ac-a122-de45507e76b4"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "62ec5339-d997-4975-a915-c306678e0855",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "285c0bd4-6d0a-458f-bd20-6c0e80dacd1b",
    "name": "Windows critical files",
    "description": "Monitors creation and modification of executable file types in important Windows locations",
    "grouping": null,
    "includePaths": [
      "%SystemRoot%\\Sys%\\%.dll",
      "%SystemRoot%\\Sys%\\%.bat",
      "%SystemRoot%\\Sys%\\%.exe",
      "%SystemRoot%\\Sys%\\%.vbs",
      "%SystemRoot%\\Sys%\\drivers\\etc\\hosts",
      "%SystemRoot%\\Fonts\\%.exe",
      "%SystemRoot%\\Fonts\\%.vbs",
      "%SystemRoot%\\%.exe",
      "%SystemRoot%\\%.scr"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:58.694Z",
    "updatedAt": "2020-02-25T16:19:21.822Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/62ec5339-d997-4975-a915-c306678e0855"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "6da2e1bf-d80b-4782-9595-61734b04ff82",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "64560e0b-22a9-4a03-8037-7450409908af",
    "name": "Windows startup items",
    "description": "Monitors Folders pertaining to autostart locations in Windows",
    "grouping": null,
    "includePaths": [
      "%SystemRoot%\\sys%\\Tasks\\%",
      "%SystemDrive%\\Users\\%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\%"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:59.490Z",
    "updatedAt": "2020-02-25T16:19:21.828Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/6da2e1bf-d80b-4782-9595-61734b04ff82"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "9538f749-fce4-4703-8bb8-31d4cd1d8c97",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a61040ac-4725-4b5c-a096-cde61e6cd1a5",
    "name": "Wix_test",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/etc/sudoers.d/%%",
      "/home/sb/Downloads/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "createdAt": "2024-10-03T14:30:55.377Z",
    "updatedAt": "2024-10-04T11:41:19.771Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "793db7bc-e414-4150-86e1-fb868121b7e8",
        "seedId": "c4df0f15-6c12-4a16-ac28-695730d86be4",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "malware_test",
        "description": "malware _test",
        "rules": "rule MalwareDetectionExample\n{\n    meta:\n        description = \"Detects files containing the suspicious string 'malicious_function_call'\"\n        author = \"Somnath\"\n        date = \"2024-08-21\"\n        version = \"1.0\"\n\n    strings:\n        $suspicious_string1 = \"malicious_function_call\"\n        $suspicious_string2 = { 4D 5A }\n\n    condition:\n        $suspicious_string1 or $suspicious_string2\n}\n\n",
        "custom": true,
        "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "createdAt": "2024-08-20T18:48:41.780Z",
        "updatedAt": "2024-08-21T07:06:05.879Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "9538f749-fce4-4703-8bb8-31d4cd1d8c97",
          "yaraGroupRuleId": "793db7bc-e414-4150-86e1-fb868121b7e8"
        }
      },
      {
        "id": "d58ab144-59d6-4495-98ad-ea3ed9071884",
        "seedId": "9ec1d365-2c45-4d55-926c-cd01f30b14e6",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "yaraeicartest",
        "description": "yaraeicartest",
        "rules": "rule malw_eicar  {\n\t\n\tmeta:\n\n\t\tdescription = \"Rule to detect the EICAR pattern\"\n      \tauthor = \"Marc Rivero | McAfee ATR Team\"\n      \treference = \"https://www.eicar.org/\"\n      \trule_version = \"v1\"\n        malware_type = \"eicar\"\n        malware_family = \"W32/Eicar\"\n        actor_type = \"Unknown\"\n        actor_group = \"Unknown\"\n\t\thash = \"275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f\"\n\n\tstrings:\n\n\t\t$s1 = \"X5O!P%@AP[4\\\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*\" fullword ascii\n\n\tcondition:\n\n\t \tany of them\n}\n\n\n\n\nrule MalwareDetectionExample\n{\n    meta:\n        description = \"Detects files containing the suspicious string 'malicious_function_call'\"\n        author = \"Somnath\"\n        date = \"2024-08-21\"\n        version = \"1.0\"\n\n    strings:\n        $suspicious_string1 = \"malicious_function_call\"\n        $suspicious_string2 = { 4D 5A }\n\n    condition:\n        $suspicious_string1 or $suspicious_string2\n}\n",
        "custom": true,
        "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "createdAt": "2024-10-04T09:05:24.383Z",
        "updatedAt": "2024-10-04T11:40:32.923Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "9538f749-fce4-4703-8bb8-31d4cd1d8c97",
          "yaraGroupRuleId": "d58ab144-59d6-4495-98ad-ea3ed9071884"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/9538f749-fce4-4703-8bb8-31d4cd1d8c97"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "d00eb71a-35a5-4957-9302-3f6ce5834f53",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "7ca2e594-89d1-4909-a9e3-2b181fbb9b2e",
    "name": "Yarafimtestkiran",
    "description": "yara fim rule test on non standar locations",
    "grouping": null,
    "includePaths": [
      "C:\\fimtest\\dummy\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
    "updatedBy": "e6268492-1373-4726-80f7-f516fc047ac0",
    "createdAt": "2023-10-13T10:05:21.995Z",
    "updatedAt": "2023-11-01T14:06:59.655Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "cdfcf454-0598-4586-a460-fb6edada3de8",
        "seedId": "20007c8f-8458-48ac-9106-089a6e599f91",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "SEIFilesYara",
        "description": "SEIFilesYara",
        "rules": "import \"hash\"\t//Enabled 2018-10-15\nimport \"pe\"\t//Enabled 2019-04-01\nimport \"time\"\t//Enabled 2019-04-02\nimport \"math\"\t//Enabled 2019-04-08\n\nrule evilElf : mirai\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-08-01\"\n    last_updated    = \"\"\n    samples         = \"aba4658ecad61d6143d1cc3e1b67ff0504dc9c1ad2563ef2f41ae2ca8dbeb77c\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"mirai\"\n    description     = \"This rule identifies files packed with UPX packer as observed in Mirai .elf executables.\"\n    process         = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"https://bazaar.abuse.ch/sample/aba4658ecad61d6143d1cc3e1b67ff0504dc9c1ad2563ef2f41ae2ca8dbeb77c/\"\n    reference       = \"https://app.twinwave.io/shared/82b4b3d0-d516-4582-ab59-58c632132f24/14e2a6a9f3b9784121eba425601d1532c3e4b9649006f2b0c1cd3508fbfed25a\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1581231\"\n    reference       = \"https://upx.github.io/\"\n  strings:\n    $header = {7F 45 4C 46}\n    \n    $s0 = \"This file is packed with the UPX executable packer\"\n    \n  condition:\n    $header at 0\n    and $s0\n    and filesize < 1MB\n}\n\nrule HTML_got_big_butt_and_it_cannot_lie_base64_iso_smuggling {\n  meta: \n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-28\"\n    last_updated    = \"\"\n    samples         = \"c3eee8226f01caf0633842be4ccac4bd4a4ee76d0a5b6f7e27268b0160fbdf94, 5bb4b1dc071bd9ad34eb1edbc053d89624de0b8afcf70cbb8307ca545b32deb1, 037e7329d78491a7b000b5770d7cf4da9eadc7f38ee19fb198cfb45cd7f2add2, d45b5ce7475291c5e59a7033cc13e1e48f10c2637959deb3bfae4369db0cfdaf, 9c77c4295a6bbe390fafb801d38e21615a684dd62cbbe276076c1a1c71dedcbe, 55f4d7297800a4a4142be065e1674229cb1b120e8ade7b4ff7938affcfdb85c6\"\n    prod            = \"true\"\n    family          = \"qakbot, asyncrat\"\n    description     = \"Identifies javascript/html samples attempting to smuggle base64 encoded ISO's as contents.\"\n    process         = \"Analyze web and process history in EDR to determine where this file ran, what context, and check network history to determine possible secondary download locations. EDR should have a process tree children including powershell or wscript if successful.\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    greetz          = \"Thanks to Corsin for the Yara Scan Service go brrr..\"\n    reference       = \"https://riskmitigation.ch/yara-scan/results/e1d5c670c45b7f47282dd8f2bb62ab4cd7c31dd7f92b3ab9c7e44ebacdb7af73/\"\n  strings:\n    $var = \"var \" ascii\n    $s = \"= 'AAAAAAAAAAAAAAAAAAAAAAA\" ascii\n  condition:\n    $var and\n    uint16(@s + 4) == 0x4141 and\n    math.entropy(@s + 4,1024) == 0\n}\n\nrule vbePadding :brushloader\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-25\"\n    last_updated    = \"\"\n    samples         = \"8263e5c2644c7df40051f9acf218fcd8d744883ae68aebfccf6748ff7d1e7f40\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Brushloader\"\n    description     = \"This rule identifies excessive padding found in the referenced Brushloader and other generic trojan samples.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user and clean file off end point, open intel on any IoC's identified by TW, etc).\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1283481\"\n    reference       = \"https://app.twinwave.io/shared/f72ab6f4-f235-4d3d-a3a5-7c9d716cb7ba/d6511dc3df7e86ec2e393337fe838992458d46d28a96b1d5718c457d77b08efc\"\n  strings:\n    $padding = {3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A}\n  condition:\n    #padding > 20 and\n    filesize < 1MB\n}\n\nrule js_substitution_builder : socgholish {\n  meta:\n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-19\"\n    last_updated    = \"\"\n    samples         = \"ce7e61f237d62642605249e7643d884ae911d858b2c88688ce70906cb5a3ff7f, 675058608b563ee965b594ed7d1d3f77dc7e3c7a95e09de655fec2103172816a, 132581a4352f13abea4512d496874cdcdf9e518d2bd2f789bd20a07c4ff03c3c\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    greetz          = \"Thanks to Corsin for the Yara Scan Service go brrr..\"\n    prod            = \"true\"\n    family          = \"SocGholish\"\n    description     = \"Identifies Socgholish javascript fetcher scripts using the substitution strategy to avoid detection.\"\n    process         = \"Analyze web and process history in EDR to determine where this script ran, what context, and check network history to determine possible secondary download locations.\"\n    reference       = \"https://bazaar.abuse.ch/sample/132581a4352f13abea4512d496874cdcdf9e518d2bd2f789bd20a07c4ff03c3c/#intel\"\n    reference       = \"https://riskmitigation.ch/yara-scan/results/f2d1b41df0d28faf79cf76fe290a599c9f4ca8585fc37be62abbbfaca27be387/\"\n  strings:\n    $function = \"function(\"\n    $substitution_initialization = /var [A-Za-z]{1,2}\\s?=\\s?'[A-Za-z]{1,2}';/\n    $new_this_builder = /this\\[(:?[\\x27]?[A-Za-z]{1,15}[\\x27]?\\s?\\+\\s?){1,5}[\\x27]?[A-Za-z]{1,15}[\\x27]?\\]/\n  condition:\n    filesize < 1MB and\n    #function > 5 and\n    $substitution_initialization and \n    #new_this_builder > 1\n\n}\n\nrule botnetDownloader : Mirai botnet\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-15\"\n    last_updated    = \"\"\n    samples         = \"dba43046cb5382991cf1ce3015f589843a9516252103732e27135e618545c1af\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Mirai\"\n    description     = \"This rule looks for Linux/iOS based scripts that connect to hardcoded IoCs to download a payload via curl and changes the file to an executable.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - Remediate as required (e.g. block, contact end user, open intel, etc). Check in Crowdstrike for the existence of the script and associated network calls, downloads, etc.  If found, host based remediation should be conducted - escalate.\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1548860\"\n    reference       = \"https://app.twinwave.io/shared/10c068fb-7104-4122-b161-e7e9e89345f7/06b8e939d9c6219fb754180bd857acad20a1ad9c2f4dec8534acdd4ecc4077a8\"\n  \n  strings:\n    $header = {23 21 2F 62 69 6E 2F 62 61 73 68} // #!/bin/bash \n    $cd     = {63 64 20 2F 6D 6E 74 20 7C 7C 20 63 64 20 2F 72 6F 6F 74} // cd /mnt || cd /root\n    $curl   = {63 75 72 6C 20 2D 4F 20 68 74 74 70} // curl -O http\n    \n  condition:\n    $header at 0 and\n    all of them and\n    filesize < 10KB\n}\n\nrule biff_auto_open_label : maldoc {\n    meta:\n        description     = \"Identifies Office documents with biff8 or biff12 binary streams that contain a label with auto_open condition, common in malicious documents.\"\n\t    author          = \"Ryan C. Moon\"\n        creation_date   = \"2022-07-06\"\n\t    last_modified   = \"\"\n        greetz          = \"Thanks to the A1000 gang\"\n        greetz          = \"Thanks to Corsin for YASS\"\n        prod            = \"false\"\n        family          = \"emotet, zloader, qakbot, cobaltstrike\"\n        process         = \"Alert should be attached to an email ticket with an office document attachment or a download of an office document, load the document into Twinwave and validate maliciousness. Identify possible secondary communications urls and validate if they have been fetched by the host/user/process that generated this alert.\"\n        reference       = \"https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/d148e898-4504-4841-a793-ee85f3ea9eef\"\n    strings:\n        // label has code 0x01 , AUTO_OPEN\n        $auto_open_label_01 = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 01 }\n        // label has \"A\" like \".A.U.T.O..\"\n        $auto_open_label_A = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 41 }\n        // label has \"a\" like \".a.u.t...\"\n        $auto_open_label_a = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 61 }\n    condition:\n        any of ($auto_open_label_*)\n}\n\nrule zip_smuggling : qakbot\n{\n    meta:\n        description     = \"Catches html or js files smuggling zips in them. This is seen in Qakbot where execution of the html leads to download of a zip file.\"\n\tauthor          = \"Nilanjana Saha\"\n        creation_date   = \"2022-06-30\"\n\tlast_modified   = \"2022-08-01\"\n        updated_by      = \"\"\n        greetz          = \"Thanks to Ryan C. Moon,  Nathan Fowler, Peter Misurek for their insightful tip.\"\n        prod            = \"true\"\n        process         = \"These files would usually be caught by the JavaScript_functions filter but in case it makes it past the filter and triggers this rule, upload the html in TW. The infection flow would be html --> zip --> lnk. Grab the IOCs, add blocks to them, notify the user to delete the email (if applicable) and add them to intel.\"\n        reference       = \"https://twitter.com/ankit_anubhav/status/1541834898784194561\"\n    strings:\n\t$string = \"msSaveOrOpenBlob\"\n\t$string_hex = \"\\x6d\\x73\\x53\\x61\\x76\\x65\\x4f\\x72\\x4f\\x70\\x65\\x6e\\x42\\x6c\\x6f\\x62\"\t//hex encoded msSaveOrOpenBlob\n        $string1 = \"msSaveBlob\"\n        $b64_PK = \"UEsDB\"\t//Base64'd zip magic byte 'PK'\n        $b64_coversion = \"b64toBlob\"\t//decodes the base64'd zip\n    condition:\n        (  uint16(0) == 0x0a0d\n        or uint16(0) == 0x0a0a\n        or uint16(0) == 0x2020\n        or uint16(0) == 0x0909\n        or uint16(0) == 0x213c\n        )\n        and (any of ($string*) or all of ($b64*))\n        and filesize < 2MB\n}\n\nrule ObfuscatedJS : Ramnit rat\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-05-29\"\n    last_update = \t\"2022-07-12\"\n    sample = \t\t\"5eaf3f61484206b61e9fd32ec9e72daf55474196055c0e9e999461fac154ac32\"\n    sample =           \"422238f5634232c39d91f2989df2e56c1a4e0c0c107598db46bbc90c10175461\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"This rule identifies javascript files that are heavily obfuscated.  May indicate Ramnit or other similar banking trojan.\" \n    process =          \"Submit this .js file to Twinwave and review the results.  Enter any IoCs in an Intel ticket and add them to the Blocked by Infosec FF list.  Notify the user as necessary.  Review events in Crowdstrike and look for any DNS calls to the IoCs you identified during your Twinwave analysis, any powershell that was executed, or any external binaries that may have been loaded during the time of the incident.\"\n    reference = \t\"https://app.twinwave.io/job/1eb9dfb7-2ef8-428f-a3e9-9ea70a341c81\"\n    reference = \t\"https://bazaar.abuse.ch/sample/5eaf3f61484206b61e9fd32ec9e72daf55474196055c0e9e999461fac154ac32\"\n    reference = \t\"https://malpedia.caad.fkie.fraunhofer.de/details/ps1.sload\"\n\n  strings:\n    $re0 = /0x[0-9a-zA-Z:,]{4,8}/\n    $re1 = /'[A-Za-z0-9+\\/]{9,12}',/\n    $re2 = /\\(function\\(_0x[0-9a-zA-Z]{6}/\n    $re3 = /_0x[0-9A-Z]{5},/\n    \n    $js1 = \"var\"\n    $js2 = \"function\"\n    $js3 = \"return\"\n    $js4 = \"parseInt\"\n   \n  condition:\n    ($re2 at 0 and\n    #re0 and #re1 > 80 and\n    all of ($js*)) or \n    ($js1 at 0 and #re3 > 30)\n    and filesize < 1MB\n}\n\nrule atob_phishing_html : phishing\n{\n    meta:\n        description     = \"Potential HTML phishing using atob( with base64 encoded phishing url. If this rule triggers, there's a very high chance that the html file is a phishing lure\"\n        author          = \"Nilanjana Saha\"\n        creation_date   = \"2022-06-16\"\n        last_updated    = \"2022-07-01\"\n        greetz          = \"Thanks to A1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n        process         = \"Upload the attachment to TW. Check for extracted strings starting with 'atob(' followed by a base64 encoded value. Decode it and that would be your phishing url. In case the base64 string decodes to a benign domain like 'cdn.bootjs.org', look further for any other url or escalate the ticket to be looked upon by an IR analyst.  Phish should be able to be decoded with recipe atob_phishing_html.md\"\n        reference       = \"Dropped emails by 'Repetitive_Subject_Attachment_Quarantine' filter, Firefly ticket#202294\"\n    strings:\n        $atob1 = /var data = atob\\(\"[a-zA-Z0-9\\/+=]{3,200}\"\\)/\n\t$atob2 = \"var data = atob(\\\"\"\n        $scr = \"</script>\"\n    condition:\n        ($atob1 and $scr and filesize < 5KB)\n\tor\n\t($atob2 and $scr and filesize > 5KB and filesize < 10KB)\n}\n\nrule Blowphish_phishing_lure : phishing\n{\n    meta:\n        description     = \"Finds decimal encoded phish lures that use Blowfish values, terse lures\"\n\tauthor          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-06-27\"\n        last_updated    = \"2022-06-28\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n        process         = \"Upload the attachment to TW, identify if file contains click lure or forwards. Phish should be able to be decoded with recipe Blowphish_phishing_lure.md\"\n        reference       = \"Firefly ticket#203980\"\n        samples         = \"091e303b973591ff3ba073ed61f5ae1a97f88afb, 0bdf56465ee15c3651b808a5430c25ec5a13f2fa, 0c2b11bf2ff5fc473f18531774385a1b915d9bf8, 0f048502b7cd48d4407958c40d9f8f497a665132, 1393729787279534201b77a9cd90487865e19bbe, 2848b018efa8ea00753f4233a502162238ce5dfe, 30c04c814db94a1406fd3fcc04f732f4aecbf9ab, 346530ffd6a0929cbb4f150174b4b9b9dd5e32b1, 36f536e0d11af448eb4f2ba39dec88128213a880, 3f1dbceda06cbbf4d1dbfaca1cf5227e3ffd01df, 4e5c4f643bf52d7546113b4d49e11b64dce5d0eb, 4f9d3df22550ffe2b32cdf70a62b2cc95e83ed10, 5c684bd032a57f1b50524ae0fef7046907756b61, 6607eb0a77e8e2f0dfdbede97427a55adce87194, 72dd4d232a9726c388f407ee4e52dd5675ce42dc, 75cf077ed761a0779e498d2086439282cea1d629, 76d3e9a1c978760666e4ab3a9f95fe80598380e4, 98770e3783912cbf574700bdd41c5553baaf434e, 9f48c82cd755097704750f5441ad5099a41050af, aedd0732a030e297456def6c4c7162d5699fe98c, bef626de8451ddded348517ccdc0e004b3191a93, c0488ab46209bb2a5cb8ebba860bfa0f1c1a42c4, c4e3ae01b4c7c93f07f9abaa6a54a5d532fe259c, d8f464628705f0fdea898223706a58a483459058, dd3cada19b1c85297fac2ca14263e11ec0fb47a5, e04fc07653a8f28b594798cd642103ce75cf8059, e3bcfa3a9ce572771e5b8a7306a728f2e1a48758, e481d7fe302d47ccdbbfdf4df01ebc6279b68113, eeddad60222c67c9aa7ae8d6c4eefc8042823399, f73fc2ba1d870f4c8c4ff11da41ed718704fc39a\"\n    strings:\n\t$string1 = \"const emails\"\n\t$string2 = \"const key\"\n\t$script = \"</script\"\n\t$script_https_preamble = \"https://\"\n\t$script_http_preamble = \"http://\"\n\t$script_blowphish = \"$2y$10$\"\n    condition:\n        any of ($string*)\n\tand $script\n\tand any of ($script_*)\n\tand filesize < 1MB\n}\n\nrule pdf_rectangle_links : solarmarker {\n  meta:\n    description = \"Detects link rectangles in Solarmarker pdf lures that are commonly used as secondary malware download urls.\" \n    author          = \"SEI Powerful Princesses\"\n    creation_date   = \"2022-06-23\"\n    last_updated    = \"\"\n    samples         = \"fede7c3405b1ab38f1f4ee89b1d0410696520d9c742d95fe7b7d5d9c77d79c3a, e12a377ffaf8461775abe8be783c400eedbe00a24677afb32326c972c7b8ed9a, 09e94521062d445609cb5657634f79461ca6d63018b62b310199d76958456d2b, eb968ccab7c3e5a3deb97c85c4ca78a665a28ba8cfd3b749960a5080e0b49e4e, f3b2ea7e50ee63b8b1593e861b8375a6e5ffffe00826bf63710a73a61b6eb4e6, 7c851fba6f5ae64faa8581d52821de3defe9c43e5ef806b93927aa4cf5e6c144, 37a729d39cfb7b1d0fd6f7515e15b0287d89e9bcb92b998013e10d1c344c1d64, bcc3fc569d47ff50fdc4da25b8926447266c0196e4937d5b47f2287fbc7d9a75, 2bc6a1608de388d6e5f533205c91de031145d92d516fd018c2155246045c40cd, 6e9d8010bd141e3e3816be1cdcfec0cfce78fc5449ffcae1dd31c63e0ea935ba, 0ff32997b7c807110be229414c7b6c7bd4bc2d47beef0db097fee8ba867d63fd\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    process         = \"Expect to find a url with a google url as the referer. The pdf will contain links and buttons to the next download in the chain, as well as additional nonsense text (cut and paste from an unrelated document in most cases). See pcre: \"\n    reference       = \"Firefly Ticket #202841\"\n  strings:\n    //%PDF\n    $pdf_file_magic = { 25 50 44 46 }\n    $type = \"[<</Type\"\n    $link = \"/Link\"\n    $rectangle = \"/Rect\"\n    $uri = \"/URI (http\"\n    $attribute_seperator = \">>>><<\"\n  condition:\n    filesize > 10KB and filesize < 200KB and\n    $pdf_file_magic at 0 and\n    all of them\n}\n\nrule VBShenanigans\n{\n  meta:\n    description = \"Virtual Basic script openning up with execute method, found in multiple generic malware, trojan and Ursnif samples.  Typically followed by obfuscation.\"\n    author = \"Sean Dalnodar\"\n    date = \"20220523\"\n    sample = \"0a32b76a81539d7c1e0c822755c8c138651238a227bab3df7bf2c29090337866\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $s0 = \"execute(\"\n  condition:\n    filesize < 1MB\n    and $s0 at 0\n}\n\nrule Malicious_LinkFiles : Qakbot\n{   \n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-23\"\n        description     = \"MS link files calling out cmd and/or powershell to run a ps1 script or rundll32 to execute a DLL file. The link file would probably be dropped from a zip, img or iso file and should be a fairly good indicator of a malicious activity.\"\n\tsha256          = \"952cf03dc158d89e7d7b211f8155d3f70f40554f0351dac67b371e14bd96f12c\"\n\tnotes           = \"This rule covers the link files dropped from recent Bumblebee, emotet campaigns as well.\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\t\n        $header = {4c00 0000 0114}\n\t$pow = /powershell(\\.exe)?/\tnocase wide ascii\n\t$api1 = \"rundll32.exe\"\tnocase wide ascii\n        $api2 = \"shell32.dll\"\tnocase wide ascii\n\t$cmd = \"cmd.exe\"\tnocase wide ascii\n\t$string1 = \"regsvr32.exe\"\tnocase wide ascii\n\t$string2 = \"Base64Decode\"\tnocase wide ascii\n     condition:\n        $header at 0\n\tand ($pow or (any of ($api*)) or $cmd or all of ($string*))\n}\n\nrule ObfuscationMyAz\n{\n  meta:\n    description = \"IoC http:// Obfuscation identified in multiple file types\"\n    author = \"Sean Dalnodar\"\n    date = \"20220519\"\n    sample = \"b2da4f266238a82e4f2484642d8d2d0f9c65e1abf9c3d22d2a4fb5559a94022b\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $PDF = { 25 50 44 46 }\n    $http0 = /(68|48)\\W(74|54)\\W(74|54)\\W(70|50)\\W3A\\W2F\\W2F/\n    $http1 = /2F\\W2F\\W3A\\W(70|50)\\W(74|54)\\W(74|54)\\W(68|48)/\n    $http2 = /(68|48)(74|54)(74|54)(70|50)3A2F2F/\n    $http3 = /2F2F3A(70|50)(74|54)(74|54)(68|48)/\n    $false1 = \"us-ascii?Q?687474703A2F2F\"\n  condition:\n    filesize < 1MB\n    and not $PDF at 0\n    and not $false1\n    and any of ($http*)\n}\n\nrule Malicious_CHM_HTML_file\n{   \n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-17\"\n        description     = \"This indicates of maliciously compiled HTML file stemming from a CHM file (Microsoft’s HTML help file format). If this rule trips on a html file dropped/decompiled from a chm file, it should possibly be malware.\"\n\tmd5             = \"9eee040175e2ed57a3b9cb8409753c36\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\t\n        $string1 = \"style=\\\"visibility:hidden\\\"\"\tnocase wide ascii\n\t$string3 = \"powershell\"\tnocase ascii wide\n    condition:\n        all of them\n}\n\nrule revil_reviles_evil_wiles_spec1 : revil {\n  meta:\n      author          = \"Ryan C. Moon\"\n      date            = \"2022-05-12\"\n      description     = \"Revil cross-sectional null space indicator for pe32\"\n      spider_spec     = 1\n      prod            = \"true\"\n  strings:\n    $s0 = { 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 }\n    $s1 = { 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 }\n  condition:\n    uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n    and filesize > 100KB and filesize < 200KB\n    and $s0 at 902 and $s1 at 942\n}\n\nrule Reversed_PE : Formbook\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-06\"\n        description     = \"A reversed PE file\"\n        sha256          = \"ca557fb77212bd0b155aa1a5fb04227fff434480c31df43d8a8360c0e4cc9621\"\n        greetz          = \"Thanks to Brad Duncan for the sample and thanks to the A1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $string = \"edom SOD ni nur eb tonnac margorp sihT\" wide ascii\n        $api = \"lld.23lenrek\"\tnocase wide ascii\n     condition:\n        uint16(0) == 0x0000\n        and uint16be(filesize-2) == 0x5a4d\n        and $string\n        and $api\n}\n\nrule Customized_Executable : Hancitor\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-05-01\"\n        modified        = \"2022-05-04\"\n        description     = \"Hancitor using non-standard DOS header with customised DOS stub, zero header entropy before 0x3C and a ton of customised PE section names. If this rule triggeres, it's likely malicious.\"\n        sha256          = \"82fb76661e1ece9a665744d7864ef0c7f87822d7e2e1ae03cbf23050751d037f\"\n        greetz          = \"Thanks to Ryan Moon for the help with PE sections and thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n       $header = \"This program cannot be run in DOS mode\" wide ascii\n    condition:\n        uint16be(0) == 0x4d5a\n    and\n        (not $header in (0..128)\n         or math.entropy(17,42) == 0\n         or for any i in (0..pe.number_of_sections) :\n          (\n           (pe.sections[i].name != \".bss\")\n            and (pe.sections[i].name != \".cormeta\")\n            and (pe.sections[i].name != \".data\")\n            and (pe.sections[i].name != \".debug$F\")\n            and (pe.sections[i].name != \".debug$P\")\n            and (pe.sections[i].name != \".debug$S\")\n            and (pe.sections[i].name != \".debug$T\")\n            and (pe.sections[i].name != \".drective\")\n            and (pe.sections[i].name != \".edata\")\n            and (pe.sections[i].name != \".idata\")\n            and (pe.sections[i].name != \".idlsym\")\n            and (pe.sections[i].name != \".pdata\")\n            and (pe.sections[i].name != \".rdata\")\n            and (pe.sections[i].name != \".reloc\")\n            and (pe.sections[i].name != \".rsrc\")\n            and (pe.sections[i].name != \".sbss\")\n            and (pe.sections[i].name != \".sdata\")\n            and (pe.sections[i].name != \".srdata\")\n            and (pe.sections[i].name != \".sxdata\")\n            and (pe.sections[i].name != \".text\")\n            and (pe.sections[i].name != \".tls\")\n            and (pe.sections[i].name != \".tls$\")\n            and (pe.sections[i].name != \".vsdata\")\n            and (pe.sections[i].name != \".xdata\")\n           )\n         )\n}\n\n\nrule Powershell_Calls : Asyncrat\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-04-25\"\n        description     = \"VBS calling Powershell to download the next stage of malware\"\n        md5             = \"d2bf5c573f52b268c4e4d8aeb8d0a95d\"\n        greetz          = \"Thanks to Corsin's YAS\"\n        prod            = \"true\"\n\n    strings:\n        $string1 = {4e [0-1] 65 [0-1] 77 [0-1] 2d [0-1] 4f [0-1] 62 [0-1] 6a [0-1] 65 [0-1] 63 [0-1] 74 }\t//New-Object\n        $string2 = \"ExecutionPolicy Bypass\"\tnocase ascii wide\n        $string3 = \"PowerShell\"\tnocase ascii wide\n        $string4 = \"Sleep\"    nocase ascii wide\n\t$string5 = {57 [0-6] (73|53) [0-4] 63 [0-6] 72 [0-6] 69 [0-6] 70 [0-6] 74 [0-6] 2e}\t//W(S|s)cript.\n\n    condition:\n        2 of ($string*)\n        and filesize < 1MB\n}\n\n\nrule PE_ZeroHeaderEntropy\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Looks for no stuff (nulls) where there usually is, likely a maldoc as per a1000 results\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) == 0\n        and not pe.is_dll()\n}\n\nrule Anti_analysis_checks : EnigmaStub\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Malware using API calls used to detect analysis environment.\"\n        md5             = \"06a83ea5044358ae862a6ecc09043362\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n        $string1 = \"IsDebuggerPresent\"    ascii wide\n        $string2 = \"GetMenuBarInfo\"    ascii wide\n        $string3 = \"InitializeCriticalSectionAndSpinCount\"    nocase ascii\n        $string4 = \"CoCreateGuid\"    ascii wide\n        $string5 = \"PlaySoundA\"    ascii wide\n        $string6 = \"WNetEnumResourceA\"    ascii wide\n    condition:\n        uint16be(0) == 0x4d5a\n        and not pe.is_dll()\n        and pe.number_of_sections <=2\n        and for any i in (0..pe.number_of_sections) : ( pe.sections[0].name != \".text\" )\n        and any of them\n        and filesize <=5MB\n}\n\nrule pe_sections_irregularity : EnigmaStub\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Looks for executables where the first section is not .text which is weird because this section contains code from where execution starts and pointers to the import table.\"\n        md5             = \"06a83ea5044358ae862a6ecc09043362\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and for any i in (0..pe.number_of_sections) : ( pe.sections[0].name != \".text\" )\n}\n\nrule VBSDecrypt\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-04-01\"\n        modified        = \"2022-04-06\"\n        description     = \"This yara matches the olevba output of an xls file\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n      $string1 = \"Decrypt(\"    nocase\n      $string2 = \"vbNewLine\"    nocase\n      $string5 = \"VBA\"\n\n    condition:\n      all of ($string*)\n      and math.max(@string1,@string2) - math.min(@string1,@string2) <= 512\n}\n\nrule FakeDoc_RootEntry : Avemaria\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-04\"\n        modified        = \"2022-04-06\"\n        description     = \"Detects non office originated document through non standard stream directory entries, root entry\"\n        md5             = \"0c2d08b08915485c5dd491dd8b4ef910\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n       $string1 = {52 00 6f 00 6f 00 74 00 20 00 45 00 6e 00 74 00 72 00 79 00}\t//R.o.o.t. .E.n.t.r.y.\n       $a1 = \"Root Entry\" nocase ascii wide\n\n    condition:\n       uint16be(0) == 0xd0cf\n       and $a1 at 1024\n       and not $string1 at 1024\n}\n\nrule Malstuff_embedded_ISO : malISO\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-22\"\n        modified        = \"2022-07-28\"\n        description     = \"ISO files with very specific byte sequencing embedding MZ files, vbs scripts making http callouts or ps1 scripts. This is a highly abused technique used to deliver malware by various TAs.\"\n        samples         = \"b8ff4c51c55d882d48dfab019ff3c767, b25b99717cba92fae8493d82126a612a, 2d8c74f6c5dab9f9101e7c45435c1de5, 95b04d57695be395ed56f730104451df, 6eece9180d9b3b220f448a30863c8968, 5efea55d30cb4cb25047dba774392fb8\"\n        reference       = \"https://riskmitigation.ch/yara-scan/results/ccdca4d59a88a30a15ba4e8c6c7357a12c4ec7c410a5f3645c6fb4edb351cec2\"\n        prod            = \"true\"\n    strings:\n        $string1 = {(00|01) [3] 30 (31|33)} //.CD001 or .BEA01\n        $string2 = {(00|02) [3] 30 (31|32|33)} //.CD001 or .NSR02 or .NSR03\n        $string3 = {(00|ff) [3] 30 (31|33)} //.CD001 or .TEA01\n        $a1 = \"MZ\" wide ascii\n        $a2 = \"This program cannot be run in DOS mode\" wide ascii\n        $http = /https?:\\/\\//    nocase ascii wide\n        $pow = \"powershell.exe\"  ascii wide nocase\n     condition:\n        uint16be(0) == 0x0000\n        and math.entropy(0,117) == 0\n        and (($string1 at 32768) or ($string2 at 34816) or ($string3 at 36864))\n        and ((all of ($a*)) or $http or $pow)\n}\n\nrule ExeWithSpecificByteSequencing : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-29\"\n        description     = \"Executable with specific byte sequencing and unusual sections in pe header\"\n        sha256          = \"fc664da216f1fbdf57cff4bdb02d8f6bff8a34272964b93fd72fc53d7c1029ec\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    condition:\n        uint16be(0) == 0x4d5a\n        and uint16(1024) == 0x0000\n        and uint16(4096) != 0x0000\n        and math.entropy(1024,193) == 0\n        and pe.number_of_sections >= 5\n}\n\nrule RansomCryptoCallELF\n{\n  meta:\n    description = \"Cryptopp crypto library and file/directory access function calls found in avosLockerSamples\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-21\"\n    sample = \"d7112a1e1c68c366c05bbede9dbe782bb434231f84e5a72a724cc8345d8d9d13\"\n    sample = \"10ab76cd6d6b50d26fde5fe54e8d80fceeb744de8dbafddff470939fac6a98c4\"\n    sample = \"0cd7b6ea8857ce827180342a1c955e79c3336a6cf2000244e5cfd4279c5fc1b6\"\n    sample = \"7c935dcd672c4854495f41008120288e8e1c144089f1f06a23bd0a0f52a544b1\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $header = {45 4C 46} // ELF\n    $s0 = \"CryptoPP\" // CryptoPP C++ library\n    $s1 = \"AllocatorBase\" // cryptopp call\n    $s2 = \"ArraySink\" // cryptopp call\n    $s3 = \"BufferedTransformation\" // cryptopp call\n    $s4 = \"NameValuePairs\" // cryptopp call\n    $s5 = \"fopen\" //file access\n    $s6 = \"opendir\" //directory access\n      condition:\n    filesize < 2MB\n    and $header at 01\n    and all of ($s*)\n}\n\nrule htmlPhish\n{\n  meta:\n    description = \"HTML phishing attachment\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-17\"\n    samples = \"f8b9a985566c0bff5adcbd12ff977b826353133776f187f433201ed0fca4f1a5\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $header = \"<html\"\n    $loginButton = {24 28 27 23 73 75 62 6d 69 74 2d 62 74 6e 27 29 2e 68 74 6d} // $('#submit-btn').htm\n    $redirect = {20 77 69 6e 64 6f 77 2e 6c 6f 63 61 74 69 6f 6e 2e 72 65 70 6c 61 63 65 28 22 68 74 74 70 73} // window.location.replace(\"https\n  condition:\n    all of them\n}\n\nrule VBshell\n{\n  meta:\n    description = \"VisualBasic call to create an object and gain access to Operating System level shell. e.g. Run a cmd command from VBS\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-17\"\n    samples = \"bbe7d1a995d054268058b71454f7dba16271536217bcbc8320b31c6724bf534b\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $s1 = \"CreateObject(\\\"Wscript.Shell\\\")\" nocase ascii\n  condition:\n    filesize < 1MB\n    and $s1\n}\n\nrule pe32_binge_and_purge_entropy : wiper {\n  meta:\n    author          = \"Ryan C. Moon\"\n    date            = \"2022-03-15\"\n    description     = \"Very terse PE32 with specific 1024-byte start of execution offset. Possible Caddywiper.\"\n    samples         = \"a294620543334a721a2ae8eaaf9680a0786f4b9a216d75b55cfd28f39e9430ea\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"false\"\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n    and uint16(1024) != 0x0000\n    and uint16(0x0c) == 0xFFFF\n    and filesize < 10KB\n    and not pe.is_dll()\n    and math.entropy(576,448) == 0\n}\nrule Malicious_Javascript : Strrat\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-14\"\n        description     = \"Javascript using some commonly abused functions - a possible indicator of nefarious behaviour\"\n\tmd5             = \"810657575491c355b44256d40b5af16a\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $a1 = \"\\\\0x61\\\\0x64\\\\0x6F\\\\0x64\\\\0x62\\\\0x2E\"     //adodb.\n        $a2 = \"\\\\0x43\\\\0x68\\\\0x61\\\\0x72\\\\0x53\\\\0x65\\\\0x74\"     //ChaSet\n        $b1 = \"adodb.\" ascii nocase wide\n        $b2 = \"CharSet\" ascii nocase wide\n        $string1 =  \"join\"      nocase wide ascii\n        $string2 = \"eval\"    ascii nocase wide\n        $string3 = \"CreateObject\"    ascii nocase wide\n\n      //exclusion\n        $benign = \"res.cisco.com\"\n    condition:\n        5 of them\n        and not $benign\n}\n\nrule MZCryptoCalls\n{\n  meta:\n    description = \"MZ Executable with AEScrypter included and .Net System.Security.Cryptography Namespace function calls noted in multiple Ransomwave variations Samples\"\n    author = \"Sean Dalnodar\"\n    sample = \"979f9d1e019d9172af73428a1b3cbdff8aec8fdbe0f67cba48971a36f5001da9\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    namespace_info = \"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography?view=net-6.0\"\n    prod = \"true\"\n  strings:\n    $a0 = \"AesCrypter\" // AEScryptor is a tool to decrypt and encrypt files created with aescrypt (see aescrypt.com).\n    $b0 = \"CryptoStreamMode\" // Specifies the mode of a cryptographic stream\n    $b1 = \"CipherMode\" // Block cipher algorithms encrypt data in block units, rather than a single byte at a time.\n    $b2 = \"ICryptoTransform\" // Defines the basic operations of cryptographic transformations.\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule MZwithSystemInfoCalls\n{\n  meta:\n    description = \"sysinfoapi.h functions that retrieve information about the current system to an application running under WOW64\"\n    author = \"sdalnodar@seic.com\"\n    sample = \"e6ba3c99d03a90b56195da9740446321c66edacfb8f1b04743bbab6a5d99d316\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod = \"true\"\n  strings:\n    $GetComputerName = {47 65 74 43 6F 6D 70 75 74 65 72 4E 61 6D 65}\n    $GetNativeSystemInfo = {47 65 74 4E 61 74 69 76 65 53 79 73 74 65 6D 49 6E 66 6F}\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule Win32InternetMethodCalls20220311\n{\n  meta:\n    description = \"DLL System Proxy and Internet Callback Method Calls.\"\n    author = \"Sean Dalnodar\"\n    sample = \"d6270e3130fb58e770cd61ea5fdeaa13f0a0205294d074a4503356977bf8aedf\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod = \"true\"\n  strings:\n    $CoSetProxyBlanket = {43 6F 53 65 74 50 72 6F 78 79 42 6C 61 6E 6B 65 74 }\n    $InternetSetStatusCallback = {49 6E 74 65 72 6E 65 74 53 65 74 53 74 61 74 75 73 43 61 6C 6C 62 61 63 6B}\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\nrule feodoTrojan20220310\n{\n  meta: description = \"Generic Trojan Sample (possibly Feodo) - System Uptime Check inside windows executable.\"\n    author = \"Sean Dalnodar\"\n    date   = \"2022-03-10\"\n    sample = \"b1be5ea484bcd2312fafb7fef39c3ad0a04baecbe0fc3be6a7233377b19fae8d\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod   = \"true\"\n  strings:\n    $s0 = {47 65 74 54 69 63 6B 43 6F 75 6E 74 00 00 4B 45 52 4E 45 4C 33 32 2E 64 6C 6C } // GetTickCount..KERNEL32.dll\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\n\nrule MZ_w_Hardcoded_AV_Errors\n{\n  meta:\n    description = \"Hardcoded AVerrors found in Conti and other various ransomeware samples\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-08\"\n    samples = \"980cc58338038f70184403a98f1166b17938ebe362f373f4f366be1aaeecc923\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $ = \"alloc@std\"\n    $ = \"error@std\"\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\nrule Executable_with_multiple_dos_stubs : Wiper\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-14\"\n        modified        = \"2022-02-25\"\n        description     = \"Executable with multiple dos stubs which is not normal because an this means the executable has another executable embedded in it\"\n        md5             = \"382fc1a3c5225fceb672eea13f572a38\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n\t$string = {(74|54) [0-1] (68|48) [0-1] (69|49) [0-1] (73|53) [0-1] 20 [0-1] (70|50) [0-1] (72|52) [0-1] (6f|4f) [0-1] (67|47) [0-1] (72|52) [0-1] (61|41) [0-1] (6d|4d) [0-1] 20 [0-1] (63|43) [0-1] (61|41) [0-1] (6e|4e) [0-1] (6e|4e) [0-1] (6f|4f) [0-1] (74|54) [0-1] 20 [0-1] (62|42) [0-1] (65|45) [0-1] 20 [0-1] (72|52) [0-1] (75|55) [0-1] (6e|4e) [0-1] 20 [0-1] (69|49) [0-1] 20 [0-1] 44 [0-1] 4f [0-1] 53 [0-1] 20 [0-1] (6d|4d) [0-1] (6f|4f) [0-1] (64|44) [0-1] (65|45) } //This program cannot be run in DOS mode\n        $mz_header = {4d 5a}\n\n   condition:\n        uint16be(0) == 0x4d5a\n        and #mz_header > 1\n        and #string  > 1\n}\n\nrule Embedded_bat_vbs_script_in_Excel : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-03\"\n\tmodified        = \"2022-02-23\"\n        description     = \"Looks for an obfuscated excel file with either a .bat or .vbs script or both embedded in it and calls out cmd and wscript to run the script\"\n        md5             = \"57a257fac9627354ec9984974a21f5d9\"\n        sha256          = \"9fbfe65437dca5ab88f8e395f9f89941aba67776e53e441188edfdc522aad884\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $bat = \".bat\"\n\t$string1 = {(73|53) [0-6] (74|54) [0-6] (61|41) [0-6] (72|52) [0-6] (74|54) [0-6] 2f [0-6] (62|42)} //start /B\n        $string2 = \"/WAIT\"\n        $string3 = \"echo\"\n        $string4 = { (77|57) [0-4] (73|53) [0-4] (63|43) [0-4] (72|52) [0-4] (69|49) [0-4] (70|50) [0-4] (74|54) [0-4] 2e [0-4] (63|43) [0-4] (72|52) [0-4] (65|45) [0-4] (61|41) [0-4] (74|54) [0-4] (65|45) [0-4] (6f|4f) [0-4] (62|42) [0-4] (6a|4a) [0-4] (65|45) [0-4] (63|43) [0-4] (74|54) }    //wscript.createobject\n        $vbs = \".vbs\"\n        $string5 = {63 [0-6] 6d [0-6] 64[0-6] 20 [0-6] 2f [0-6] 63}    //cmd /c\n   condition:\n         uint16be(0) == 0xd0cf\n         and ($bat or $vbs)\n         and 3 of ($string*)\n}\n\n\nrule Executable_with_embedded_jpg : nanocore\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-16\"\n        description     = \"Executable with an embedded url to download a jpg file\"\n        md5             = \"6afd56eba5faff1a98ab0f3af510774e\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $jpg = \".jpg\"   nocase wide ascii\n        $https = \"https://\" nocase wide ascii\n        $http = \"http://\"       nocase wide ascii\n        $string = \"encoding=\\\"UTF-8\\\"\"\tnocase\n\n\n   condition:\n        uint16be(0) == 0x4d5a\n        and $jpg\n        and ($https or $http)\n        and $string\n}\n\nrule xlcall32_baza\n{\n    meta:\n\tdescription = \"XLCall32 - XLL Dropper used by BazaLoader\"\n\tauthor = \"HP Threat Research @HP_Security\"\n\tfiletype = \"XLL\"\n\tmaltype = \"Loader\"\n\tdate = \"2022-02-03\"\n\n    strings:\n\t$xlcall = \"XLCall32\"\n\t$mzheader1 = { \tC6 44 24 ?? 4D\n\t\t\tC6 44 24 ?? 5A\n\t\t\tC6 44 24 ?? 90\n\t\t\tC6 44 24 ?? 00 }\n\n\t$mzheader2 = { \tC6 84 24 ?? 00 00 00 4D\n\t\t\tC6 84 24 ?? 00 00 00 5A\n\t\t\tC6 84 24 ?? 00 00 00 90\n\t\t\tC6 84 24 ?? 00 00 00 00 }\n\n\t$dosmode1 = { \tC6 44 24 ?? 44\n\t\t\tC6 44 24 ?? 4f\n\t\t\tC6 44 24 ?? 53\n\t\t\tC6 44 24 ?? 20\n\t\t\tC6 44 24 ?? 6d\n\t\t\tC6 44 24 ?? 6f\n\t\t\tC6 44 24 ?? 64\n\t\t\tC6 44 24 ?? 65 }\n\n\t$dosmode2 = { \tC6 84 24 ?? 00 00 00 44\n\t\t\tC6 84 24 ?? 00 00 00 4f\n\t\t\tC6 84 24 ?? 00 00 00 53\n\t\t\tC6 84 24 ?? 00 00 00 20\n\t\t\tC6 84 24 ?? 00 00 00 6d\n\t\t\tC6 84 24 ?? 00 00 00 6f\n\t\t\tC6 84 24 ?? 00 00 00 64\n\t\t\tC6 84 24 ?? 00 00 00 65 }\n\n    condition:\n\tany of ($mzheader*) and any of ($dosmode*) and $xlcall\n}\n\nrule maldoc_cmd_mshta_http : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-01-19\"\n        description     = \"Emotet excel spreadsheet calling cmd or mshta for stage 2 download\"\n        sample          = \"0c890caa5574298838e2463f2a9eec1f\"\n        prod            = \"true\"\n    strings:\n        $cmd_mshta_hex = {6d [0-1] 73 [0-1] 68 [0-1] 74 [0-1] 61 }\n        $cmd_hex = { 63 [0-1] 6d [0-1] 64 [0-1] 20 [0-1] 2f [0-1] 63}\n        $cmd = \"cmd /c\"\n\n   condition:\n        uint16be(0) == 0xd0cf\n        and any of ($cmd*)\n}\n\nrule adwind_202201013_xmldom : adwind\n{\n    meta:\n        author = \"SEI Competitive Bagel Bites Eating Crew\"\n        contact = \"infosec-ir@seic.com\"\n        description = \"Adwind2 abusing anonymous functions to decode encoded scripts to call eval on reconstructed vbs\"\n        sample = \"e58a24b433a523b44e80a23d1993113b965850e9260970f3fed211a3e641503c\"\n        date = \"2022-01-13\"\n        greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod = \"true\"\n        tlp = \"green\"\n    strings:\n        // microsoft.xmldom\n        $s0 = { 6d 69 63 72 6f 73 6f 66 74 2e 78 6d 6c 64 6f 6d }\n        // microsoft.xmldom but hex\n        $s1 = \"\\\\x6d\\\\x69\\\\x63\\\\x72\\\\x6f\\\\x73\\\\x6f\\\\x66\\\\x74\\\\x2e\\\\x78\\\\x6d\\\\x6c\\\\x64\\\\x6f\\\\x6d\" nocase\n        $s2 = \"function(\" ascii nocase\n        $eval = \"eval(\" ascii nocase\n\n    condition:\n        $eval and 2 of ($s*)\n}\n\nrule apt_nobelium_powsershell_reg_loader_decoded {\n    meta:\n        id = \"c8ee9c40-fa28-4b9a-98e8-88ccc4a16091\"\n        description = \"Matches the decoded version of the Powershell loader stored in the registry\"\n        version = \"1.0\"\n        creation_date = \"2021-12-07\"\n        modification_date = \"2021-12-07\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $x = \"FromBase64String((gp HKCU:\\\\\\\\SOFTWARE\\\\\\\\\"\n        $y = \"Remove-ItemProperty HKCU:\\\\\\\\SOFTWARE\\\\\\\\\"\n        $z = \"Invoke([IntPtr]::Zero)\"\n   condition:\n        filesize < 3KB and\n        $x and #y == 2 and\n        $z at (filesize-22)\n}\n\nrule apt_nobelium_html_smuggling_iso {\n    meta:\n        id = \"9bd5b626-8ea3-4607-a858-58deff18396c\"\n        version = \"1.0\"\n        description = \"Detect HTML smuggling with ISO\"\n        hash = \"b87073c34a910f20a83c04c8efbd4f43\"\n        hash = \"3d18bc4bfe1ec7b6b73a3fb39d490b64\"\n        source = \"SEKOIA\"\n        classification = \"TLP:WHITE\"\n    strings:\n        $ = \"new Blob\"\n        $ = \".click();\"\n        $ = { 28 [1-20] 2c 22 [1-20]\n                 2e 69 73 6f 22 2c 22 61\n                 70 70 6c 69 63 61 74 69\n                 6f 6e 2f 78 2d 63 64 2d\n                 69 6d 61 67 65 22 29 }\n    condition:\n        filesize > 1MB and filesize < 2MB and all of them\n\n}\n\nrule apt_nobelium_hta_in_iso {\n     meta:\n         id = \"874ab41b-5c60-4303-8776-e1c10313a401\"\n        description = \"Matches ISO file embedding HTA\"\n        hash = \"d4fdf63d88da2d59569bb621b18bf5e4\"\n        hash = \"cc08a6df151b8879a4969b2e99086b48\"\n        version = \"1.0\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $ = \"ImgBurn v2\"\n        $ = \"<hta:application\"\n    condition:\n        all of them and\n        filesize > 1MB and\n        filesize < 3MB\n\n}\n\nrule apt_nobelium_cs_loader_obfuscation {\n    meta:\n        id = \"5f21b031-3dc1-4dad-b775-6099bfcb0472\"\n        version = \"1.0\"\n        description = \"Detect obfuscated CobaltStrike loaders used by NOBELIUM\"\n        hash = \"41dd8cee47c036e7e9e92c395c5d1feb\"\n        hash = \"4365057ef0c5a9518d95d53eab5995a8\"\n        source = \"SEKOIA\"\n        classification = \"TLP:WHITE\"\n    strings:\n        $j1 = { DD 05 ?? ?? ?? ?? DD 9D }\n        $j2 = { C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 }\n        $c1 = { 81 7D ?? FF 00 00 00 0F 8E ?? ?? FF FF }\n    condition:\n        pe.characteristics & pe.DLL and\n        pe.number_of_exports > 20 and\n        filesize > 300KB and filesize < 400KB and\n        #j1 > 50 and #j2 > 50 and #c1 == 2\n\n}\n\nrule remcos_SpaceInvaders_20220106 {\n  meta:\n    description = \"Profiles remcos space-separated shell exec function calls in vba scripts\"\n    author = \"SEI Assassin Squad\"\n    contact = \"infosec-ir@seic.com\"\n    date = \"2022-01-06\"\n    samples = \"b1df072eba923c472e461200b35823fde7f8e640bfb468ff5ac707369a2fa35e\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n  strings:\n    $h1 = { 68 ?? 65 ?? 6c ?? 6c ?? 45 }\n  condition:\n    uint16(0) == 0xcfd0 and any of them\n}\nrule EXPL_JNDI_Exploit_Patterns_Dec21_1 {\nmeta:\n  description = \"Detects JNDI Exploit Kit patterns in files\"\n  author = \"Florian Roth\"\n  reference = \"https://github.com/pimps/JNDI-Exploit-Kit\"\n  date = \"2021-12-12\"\n  prod = \"yes\"\nstrings:\n  $x01 = \"/Basic/Command/Base64/\"\n  $x02 = \"/Basic/ReverseShell/\"\n  $x03 = \"/Basic/TomcatMemshell\"\n  $x04 = \"/Basic/JettyMemshell\"\n  $x05 = \"/Basic/WeblogicMemshell\"\n  $x06 = \"/Basic/JBossMemshell\"\n  $x07 = \"/Basic/WebsphereMemshell\"\n  $x08 = \"/Basic/SpringMemshell\"\n  $x09 = \"/Deserialization/URLDNS/\"\n  $x10 = \"/Deserialization/CommonsCollections1/Dnslog/\"\n  $x11 = \"/Deserialization/CommonsCollections2/Command/Base64/\"\n  $x12 = \"/Deserialization/CommonsBeanutils1/ReverseShell/\"\n  $x13 = \"/Deserialization/Jre8u20/TomcatMemshell\"\n  $x14 = \"/TomcatBypass/Dnslog/\"\n  $x15 = \"/TomcatBypass/Command/\"\n  $x16 = \"/TomcatBypass/ReverseShell/\"\n  $x17 = \"/TomcatBypass/TomcatMemshell\"\n  $x18 = \"/TomcatBypass/SpringMemshell\"\n  $x19 = \"/GroovyBypass/Command/\"\n  $x20 = \"/WebsphereBypass/Upload/\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($x*) and not 1 of ($fp*)\n  and filesize < 1MB\n}\n\nrule icedIDGolfBalls {\nmeta:\n  description = \"looks for common variable/method names and padding identified in icedID samples\"\n  author = \"SEI Assassin Squad\"\n  contact = \"sdalnodar@seic.com\"\n  date = \"2021-12-16\"\n  samples = \"d9db19ea9058142903d6dd21b854cd865ce8e22aca3389c73091538c799828b5\"\n  tlp = \"green\"\n  prod = \"true\"\n  analysis = \"https://app.twinwave.io/shared/08652ddb-3de8-4aaa-ad19-a5e042b5ceb9/dc45e7b5c789ac3eb920b197fb6aaa90e06789cdd918d2df94bd2012421d190b\"\n  greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\nstrings:\n  $ = \"powLikeYou\"\n  $ = \"powLoveTube\"\n  $ = \"girlKarolLike\"\n  $ = \"karolLoveGirl\"\n  $ = \"doorYouLoad\"\n  $ = \"tubePow\"\n  $ = \"loadTubeLove\"\n  $ = \"dowGirlDoor\"\n  $ = \"dowNextLove\"\n  $ = \"doorLikePow\"\n  $ = \"likePowLike\"\ncondition:\n  any of them\n  and filesize < 1MB\n}\n\n\nrule crimson_rat_pe32_padding {\nmeta:\n  description = \"Finds crimson .net built PE32 with fake padding to make them biggies\"\n  author = \"Ryan C. Moon (@moonbas3)\"\n  team = \"SEI Dirty Dozen Hunt Group\"\n  date = \"2021-12-16\"\n  samples = \"67a225feedc5ce4adf75acb41e8b0e746e7daaec779225cd72f860a263b92a6e\"\n  tlp = \"green\"\n  prod = \"true\"\n  greetz = \"Greetz to the A1000 Reversing Labs crew\"\nstrings:\n  $padding = /\\x1c\\x00{210}/\ncondition:\n  uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550 and\n  #padding > 5\n}\n\nrule Win32_Trojan_Emotet : tc_detection malicious\n{\n    meta:\n\n        author              = \"ReversingLabs\"\n\n        source              = \"ReversingLabs\"\n        status              = \"RELEASED\"\n        sharing             = \"TLP:WHITE\"\n        category            = \"MALWARE\"\n        malware             = \"EMOTET\"\n        description         = \"Yara rule that detects Emotet trojan.\"\n\n        tc_detection_type   = \"Trojan\"\n        tc_detection_name   = \"Emotet\"\n        tc_detection_factor = 5\n\n    strings:\n\n        $decrypt_resource_v1 = {\n            55 8B EC 83 EC ?? 53 8B D9 8B C2 56 57 89 45 ?? 8B 3B 33 F8 8B C7 89 7D ?? 83 E0 ??\n            75 ?? 8D 77 ?? EB ?? 8B F7 2B F0 83 C6 ?? 8D 0C 36 E8 ?? ?? ?? ?? 8B D0 89 55 ?? 85\n            D2 74 ?? 83 65 ?? ?? 8D 43 ?? 83 65 ?? ?? C1 EE ?? 8D 0C B0 8B F2 8B D9 2B D8 83 C3\n            ?? C1 EB ?? 3B C1 0F 47 5D ?? 85 DB 74 ?? 8B 55 ?? 8B F8 8B 0F 8D 7F ?? 33 CA 0F B6\n            C1 66 89 06 8B C1 C1 E8 ?? 8D 76 ?? 0F B6 C0 66 89 46 ?? C1 E9 ?? 0F B6 C1 66 89 46\n            ?? C1 E9 ?? 0F B6 C1 66 89 46 ?? 8B 45 ?? 40 89 45 ?? 3B C3 72 ?? 8B 7D ?? 8B 55 ??\n            33 C0 66 89 04 7A 5F 5E 8B C2 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v1 = {\n            56 57 33 C0 BF ?? ?? ?? ?? 57 50 50 6A ?? 50 FF 15 ?? ?? ?? ?? BA ?? ?? ?? ?? B9 ??\n            ?? ?? ?? E8 ?? ?? ?? ?? 68 ?? ?? ?? ?? 57 8B F0 56 68 ?? ?? ?? ?? 57 FF 15 ?? ?? ??\n            ?? 83 C4 ?? 8B CE 5F 5E E9\n        }\n\n        $decrypt_resource_v2 = {\n            55 8B EC 83 EC ?? 8B 41 ?? 8B 11 33 C2 53 56 8D 71 ?? 89 55 ?? 8D 58 ?? 89 45 ?? 83\n            C6 ?? F6 C3 ?? 74 ?? 83 E3 ?? 83 C3 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? FF D0 8D 14 1B B9 ?? ?? ?? ?? 52 6A ?? 50 E8 ?? ?? ?? ?? BA ??\n            ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 89 45 ?? 85 C0 74 ?? C1 EB ?? 8B C8 57 33 C0 8D\n            14 9E 33 DB 8B FA 2B FE 83 C7 ?? C1 EF ?? 3B F2 0F 47 F8 85 FF 74 ?? 8B 16 8D 49 ??\n            33 55 ?? 8D 76 ?? 0F B6 C2 43 66 89 41 ?? 8B C2 C1 E8 ?? 0F B6 C0 66 89 41 ?? C1 EA\n            ?? 0F B6 C2 66 89 41 ?? C1 EA ?? 0F B6 C2 66 89 41 ?? 3B DF 72 ?? 8B 45 ?? 33 D2 8B\n            4D ?? 5F 66 89 14 41 8B C1 5E 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v2 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? 50 6A ?? 6A ?? 51 6A ?? B9 ?? ?? ?? ??\n            E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 85 C0 0F 88 ?? ?? ?? ?? 56\n            B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B 15 ?? ?? ?? ?? 8B F0 8D 85 ?? ?? ?? ?? 8D [1-5] 51\n            51 50 56 8D [1-5] 68 ?? ?? ?? ?? 51 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B\n            C8 E8 ?? ?? ?? ?? FF D0 83 C4 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 56 6A ?? 50 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 B8 ?? ?? ?? ?? 5E 8B E5 5D C3 33 C0 8B E5 5D C3\n        }\n\n        $decrypt_resource_v3 = {\n            56 8B F1 BA [6-9] B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 56 6A ?? 50 68 ?? ?? ?? ??\n            BA ?? ?? ?? ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 5E C3\n        }\n\n        $generate_filename_v3 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 53 56 57 8B F1 8B FA 6A ?? 8D 4D ?? E8 ?? ?? ?? ?? BB ??\n            ?? ?? ?? 8D 8D ?? ?? ?? ?? 53 E8 ?? ?? ?? ?? 53 8D 8D ?? ?? ?? ?? E8 ?? ?? ?? ?? 83\n            C4 ?? 8D 85 ?? ?? ?? ?? BB ?? ?? ?? ?? 8B D3 56 50 BE ?? ?? ?? ?? [2-5] 8B CE E8 ??\n            ?? ?? ?? 59 FF D0 57 8D 85 ?? ?? ?? ?? 8B D3 50 [2-5] 8B CE E8 ?? ?? ?? ?? 59 FF D0\n            8D 85 ?? ?? ?? ?? C7 45 ?? ?? ?? ?? ?? 89 45 ?? BA ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? B9\n            ?? ?? ?? ?? 89 45 ?? B8 ?? ?? ?? ?? 66 89 45 ?? 8D 45 ?? 50 68 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? 59 FF D0 F7 D8 5F 1B C0 5E 40 5B 8B E5 5D C3\n        }\n\n        $decrypt_resource_v4 = {\n            56 57 8B FA E8 ?? ?? ?? ?? 8B F0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 8B 0D ?? ?? ?? ??\n            89 44 B9 ?? A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? FF D0 8B F8 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ??\n            ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 6A ?? 57\n            FF D0 5F 5E C3\n        }\n\n        $generate_filename_snippet_v4 = {\n            A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ??\n            ?? ?? ?? A3 ?? ?? ?? ?? 56 53 FF D0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ??\n            ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 5F 5E 33 C9 8D\n            04 43 66 89 08 5D 5B 59 C3\n        }\n\n        $decrypt_resource_snippet_v5 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89 02 8B C1 C1 E8 ?? 8D 52\n            ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89 42 ?? 0F B6 C1 66 89 42\n            ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43 5F 5E 8B C3 5B 83 C4 ??\n            C3\n        }\n\n        $decrypt_resource_snippet_v6 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 88 0A 8B C1 C1 E8 ?? 8D 52 ?? C1 E9 ??\n            88 42 ?? 88 4A ?? C1 E9 ?? 45 88 4A ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 5D C6 04\n            03 ?? 5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $liblzf_decompression_1 = {\n            83 EC ?? 8B 44 24 ?? 53 55 8D 2C 11 89 4C 24 ?? 8B 54 24 ?? 33 DB 03 C2 89 6C 24 ??\n            56 89 44 24 ?? 0F B6 41 ?? 8D 72 ?? 0F B6 11 C1 E2 ?? 0B D0 8D 45 ?? 89 44 24 ?? 57\n            8B F9 3B C8 0F 83 ?? ?? ?? ?? 0F B6 47 ?? C1 E2 ?? 0B D0 6B C2 ?? 8B CA C1 E9 ?? 33\n            CA 89 54 24 ?? 8B 54 24 ?? C1 E9 ?? 2B C8 8B 44 24 ?? 81 E1 ?? ?? ?? ?? 8B 2C 88 8B\n            C7 2B 44 24 ?? 03 6C 24 ?? 89 04 8A 8B C7 8B 54 24 ?? 2B C5 48 89 44 24 ?? 3D ?? ??\n            ?? ?? 0F 8D ?? ?? ?? ?? 3B EA 0F 86 ?? ?? ?? ?? 8A 45 ?? 3A 47 ?? 0F 85 ?? ?? ?? ??\n            0F B6 55 ?? 8D 4F ?? 0F B6 45 ?? 89 4C 24 ?? 0F B6 09 C1 E2 ?? 0B D0 C1 E1 ?? 0F B6\n            07 0B C8 3B D1 0F 85 ?? ?? ?? ?? 8B 44 24 ?? B9 ?? ?? ?? ?? 2B C7 3B C1 6A ?? 0F 47\n            C1 89 44 24 ?? 8D 46 ?? 5A 3B 44 24 ?? 72 ?? 33 C9 8B C6 85 DB 0F 94 C1 2B C1 83 C0\n            ?? 3B 44 24 ?? 0F 83 ?? ?? ?? ?? 8B C6 8D 4B ?? 2B C3 88 48 ?? 33 C0 85 DB 8B 5C 24\n            ?? 0F 94 C0 2B F0 83 FB ?? 0F 86 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ??\n            ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85\n            ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47\n        }\n\n        $liblzf_decompression_2 = {\n            0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A\n            47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45\n            ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47\n            ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ??\n            6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8D 0C 3A 2B EF 42 41 3B D3\n            73 ?? 8A 04 29 3A 01 74 ?? 8B 5C 24 ?? 83 EA ?? 83 FA ?? 73 ?? 8B CB 8A C2 C1 F9 ??\n            C0 E0 ?? 02 C8 88 0E 46 EB ?? 8B C3 C1 F8 ?? 2C ?? 88 06 8D 42 ?? 88 46 ?? 83 C6 ??\n            8B 7C 24 ?? 8B 44 24 ?? 47 88 1E 03 FA 33 DB 83 C6 ?? 3B F8 72 ?? 8B 6C 24 ?? 8D 46\n            ?? 3B 44 24 ?? 76 ?? 33 C0 EB ?? 3B 74 24 ?? 73 ?? 8A 07 43 88 06 46 8B 44 24 ?? 47\n            83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B F8 73 ?? 8B 54 24 ?? E9 ?? ?? ?? ?? 8A 07 43\n            88 06 46 47 83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B FD 72 ?? 8B CE 8D 53 ?? 2B CB 88\n            51 ?? 33 C9 85 DB 0F 94 C1 2B F1 2B 74 24 ?? 8B C6 5F 5E 5D 5B 83 C4 ?? C3\n        }\n\n        $decrypt_resource_snippet_v7 = {\n            C1 EE ?? 3B F9 0F 47 F0 85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89\n            02 8B C1 C1 E8 ?? 8D 52 ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89\n            42 ?? 0F B6 C1 66 89 42 ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43\n            5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $state_machine_snippet_v7 = {\n            8D 84 24 ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B\n            94 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24\n            ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 54 24 ??\n            8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? 8D 94\n            24 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24 ?? ?? ?? ?? 50 E8 ?? ?? ?? ?? FF 74 24\n            ?? 8B F0 FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? F7 DE 8B 94 24 ?? ?? ?? ?? 1B F6\n            81 E6 ?? ?? ?? ?? 81 C6 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ??\n            ?? ?? ?? 8B 94 24 ?? ?? ?? ?? 8B 4C 24 ?? E8 ?? ?? ?? ?? 83 C4 ?? E9\n        }\n\n    condition:\n        uint16(0) == 0x5A4D and\n        (\n            $decrypt_resource_v1 and\n            $generate_filename_v1\n        ) or\n        (\n            $decrypt_resource_v2 and\n            $generate_filename_v2\n        ) or\n        (\n            $decrypt_resource_v3 and\n            $generate_filename_v3\n        ) or\n        (\n            $decrypt_resource_v4 and\n            $generate_filename_snippet_v4\n        ) or\n        (\n            $decrypt_resource_snippet_v5 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v6 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v7 and\n            $state_machine_snippet_v7\n        )\n}\nrule solarmarker_pdf_downloader {\n  meta:\n    description = \"Finds Solarmarker-generated pdfs using shapes with embedded links.\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    date = \"2021-11-18\"\n    samples = \"aad015178e6b6476aaa6cef7198ee0ddf523e0c23614c9ef403bf339f220d1d4,e3d432bbeebefc5cfe1733659597a5f8b4c43d9a683b3c47f695e9e754369a54,b367e876ffa73ad3ad1d086d8f99d98cf8014bf561854b41f12eb3605878bcde,c6c6e4c5c40346511196e5ea676e866455b92d6f7b810bc9f775734e4236f79e\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n    comment = \"Solarmarker uses normal pdf generation software, so this mostly focuses on the terseness of their geometric links along with the text padding and pipe delimiters\"\n  strings:\n    $s1 = \"/Rect [\" ascii\n    $s2 = \"/URI /URI (http\" ascii\n    $s3 = { 7c [1-2] 7c 7c [1-2] 29 3e }\n    $s4 = \"/FlateDecode \" ascii\n  condition:\n    uint32be(0) == 0x25504446\n    and all of them\n    and $s2 in (0..255) and #s2 < 3\n    and $s3 in (0..512)\n}\n\nrule HTML_atob_Phishing\n{\n    meta:\n        author = \"Nathan Fowler/Jim Farnish\"\n        date = \"2021-03-02\"\n        modified = \"2021-10-19\"\n        description = \"Potential HTML phishing using document.write(atob( the values are base64 encoded or URI encoded unescape\"\n        wiki = \"/reference/O365\"\n    strings:\n        $a1 = /document\\.write\\([\\x20\\x09]*atob\\(/        ascii\n        $a2 = /document\\.write\\([\\x20\\x09]*unescape\\(/    ascii\n        $b = \"</script\"                                   nocase ascii\n    condition:\n        any of ($a*)\n        and $b\n}\n\n\nrule AdwindRAT_jRat_7Oct21\n{\n  meta:\n    description     = \"Finds jrat includes in java jar files left over from forking jrat to adwind.\"\n    author          = \"SEI Hunt Team Deadly Yara Assassination Squad\"\n    date            = \"2021-10-07\"\n    samples = \"13510f3ee14e47e2fc457215420e795f0959e33411e4fa2e8a889a3c7fb858d9\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $jrat = { 2f 4a 52 61 74 2e 63 6c 61 73 73 }\n    $jar_meta = { 4d 45 54 41 2d 49 4e 46 2f 4d 41 4e 49 46 45 53 54 2e 4d 46 }\n  condition:\n    uint16be(0) == 0x504b and\n    all of ($j*)\n}\n\nrule maldoc_sheet_eval_reverse_join_split {\n  meta:\n    description = \"Detects maldocs vba macro with eval and any reverse-joined strings or via split.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-10-06\"\n    samples = \"d6c487b1fb3d31851921b343f3d131f7cb4c0469a60484037a6fa8cfbdc29dea\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $dfm = { d0 cf 11 e0 }\n    $vba = { 56 42 41 }\n    $eval = \"eval(\"\n    $s1 = \"split(\"\n    $s2 = \"reverse(\"\n    $s3 = \"join(\"\n    $s4 = { (48|68|50|70) [0-4] (54|74) [0-4] (54|74) [0-4] (50|70|48|68) }\n  condition:\n    $dfm at 0 and $vba and $eval and 2 of ($s*)\n}\n\n\nrule DLL_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-10-05\"\n        sample          = \"From Validation portal - 0148b8275bab6e00a98da011489b6d3e84c809d99ee190a5b00840f3f63cba93\"\n        tlp             = \"green\"\n        prod            = \"true\"\n        description     = \"Some commonly used API calls by malware. Probable indicator of a malicious executable.\"\n    strings:\n       $string1 = \"URLDownloadToFileA\"\tnocase ascii wide\n       $string2 = \"RegCreateKeyExW\"\tnocase ascii wide\n       $string3 = \"VirtualAlloc\"\tnocase ascii wide\n       $string4 = \"KERNEL32.dll\"    nocase ascii wide\n    condition:\n        uint16be(0) == 0x4d5a\n        and 2 of ($string*)\n}\n\nrule Too_Many_3s\n{\n    meta:\n       author          = \"Nilanjana Saha/Ryan Moon\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an insanely big chunk of numbers in a PE file with excess of 3's in it. If this rule triggers, it's indicative of maliciousness\"\n    strings:\n       $string1 = \"This program must be run under Win32\"        nocase ascii wide\n       $string5 = { 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? }\n       $string6 = { 25 25 25 }\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n        and #string5 > 20\n}\n\nrule Win32_Header\n{\n    meta:\n       author          = \"Nilanjana Saha\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an unusual STUB, it's definitely malicious if this rule triggers\"\n       greetz          = \"Thanks to Reversing labs for access to A1000\"\n    strings:\n        $string1 = \"This program must be run under Win32\"    nocase ascii wide\n        $a1 = \"URL.DLL\" nocase ascii wide\n        $a2 = \"InetIsOffline\" nocase ascii wide\n        $api = \"kernel32.dll\"    nocase ascii wide\n     condition:\n        uint16be(0) == 0x4d5a\n        and $string1\n        and all of ($a*)\n        and #api>=2\n}\n\nrule base64_powershell_builder {\n  meta:\n    description = \"Identifies hostile .ps files that use other files to write/read base64 to create pe32.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-09-23\"\n    samples = \"7a30581de07bad69f3f05af56edeccdfae83a025532daad559d30a381ce1f6d3\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"SEI Hunting crew: Sean Dalnodar, Nilanjana Saha, and Jerry Zepp\"\n  strings:\n    $s0 = \"@echo off\"\n    $r0 = /echo [a-zA-Z0-9\\x2f\\x2b]{76}={0,2}>{1,2}[a-zA-Z0-9]{1,64}/\n  condition:\n    filesize < 1MB and $s0 at 0 and #r0 > 50\n}\n\nrule PE_MZ_AdminPDB\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"Medium\"\n\t\tdate = \"2021-08-10\"\n\t\tdescription = \"PE/MZ compiled with the presence of an administrator PDB\"\n\tstrings:\n\t\t$ = /C:(\\\\Users)?\\\\Admin[^\\x00]{2,256}\\.pdb/\tnocase ascii\n\tcondition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule HTML_HighAscii_Phish\n:maldoc\n{\n    meta:\n                description = \"Potential HTML phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-06-04\"\n\t\tmodified = \"2021-08-09\"\n\t\treference = \"/wiki/get2\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\"\n\n    strings:\n                $a1 = \"<script\"\tnocase ascii\n\t\t$a2 = \"<frame\"\tnocase ascii\n\t\t$a3 = \"<iframe\"\tnocase ascii\n\t\t$a4 = \"<embed\"\tnocase ascii\n\t\t$a5 = \"<object\" nocase ascii\n\n\t\t//Catch-all attempts\n\t\t$a6 = /function[^a-z]/ nocase ascii\n\t\t$a7 = \".html\"\tnocase ascii\n\n\t\t$exclude1 = \".topleft     { background: #1B4992 url(https://www.privatepost.net/template/v4/images/red_tl.gif); }\"\n                $exclude2 = \"function numberFormatPerc(_number) {\"\n\t\t$exclude3 = \"<!-- Generated by Aspose.Words for .NET \"\n\t\t$exclude4 = \"http://schemas.microsoft.com/office/word/\"\n\t\t$exclude5 = \"http://schemas.microsoft.com/office/excel/\"\n\t\t$exclude6 = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><sst xmlns=\\\"http://schemas.openxmlformats.org/\"\n\t\t$exclude7 = { efbb bf3c 3f78 6d6c }\n\t\t$exclude8 = \"document.getElementById(\\\"btnFDTypeAutoFill\\\").click();\"\n\n    condition:\n                uint16be(0) == 0xefbb\n                and any of ($a*)\n\t\tand not any of ($exclude*)\n}\n\nrule PDF_Google_Docs_Renderer\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-07-01\"\n\t\tdescription = \"Google Docs Renderer with ancient PDF 1.4 specification and BOM (Byte Order Mark) leading the title, possible malspam or phishing.\"\n\t\treference = \"Firefly Ticket #145122\"\n\tcondition:\n\t\tuint32be(0) == 0x25504446\t//%PDF-1.4\n\t\tand uint32be(4) == 0x2d312e34\t//%PDF-1.4\n\n\t\t//BOM in the title\n\t\tand ( for any i in (0..64) : (\n\t\t\t    uint32be(i) == 0x3c3c2f54\n\t\t\tand uint32be(i+4) == 0x69746c65\n\t\t\tand uint32be(i+8) == 0x203c4645\n\t\t\tand uint32be(i+12) == 0x46463030\n\t\t\t)\n\t\t)\n\t\t//Skia/PDF m93 Google Docs Renderer\n\t\tand ( for any i in (0..512) : (\n\t\t\t    uint32be(i) == 0x28536b69\n\t\t\tand uint32be(i+4) == 0x612f5044\n\t\t\tand uint16be(i+8) == 0x4620\n\t\t\tand uint32be(i+14) == 0x476f6f67\n\t\t\tand uint32be(i+18) == 0x6c652044\n\t\t\t)\n\t\t)\n}\n\nrule PE_Darkside_Ransomware\n:malexe\n{\n        meta:\n                description = \"PE/MZ with byte code matching Darkside Ransomware subroutine\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2021-06-18\"\n                hash = \"7f97f85a6f340e199666b5f2d141c08ff4eccca5\"\n    strings:\n            // matching calling sequence\n            // sub add mov test add jz mov push movzx cmp jna\n            //  mov add mov pop movzx cmp jn\n\n            $ = {   81 EC AC 00 00 00 8B 45 0C F7 45 14 00 04 00 00\n                    74 02 8B 00 50 0F B6 C0 83 F8 0F 76 05 B8 0F 00\n                    00 00 89 45 F0 58 0F B6 C4 83 F8 11 76 05 }\n\n    condition:\n            uint16(0) == 0x5a4d\n            and\n            all of them\n\n}\n\nrule PE_MZ_SleepingWithTheEnemy\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-17\"\n        description = \"PE/MZ containing the Sleep or Kernel32 API call but written backwards.\"\n        reference = \"/wiki/raccoon\"\n        sample = \"ecf14e5b521fd83697915fe02ab94585de651c21917d9f949d3c13b3beecac20\"\n    strings:\n        $ = /\\x00peels\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x00\\x00p\\x00e\\x00e\\x00l\\x00s\\x00\\x00/\t\t\t\tnocase ascii\n        $ = /23lenrek\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x002\\x003\\x00l\\x00e\\x00n\\x00r\\x00e\\x00k\\x00/\t\tnocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and any of them\n}\n\n\nrule PE_MZ_NonsenseCertIssuerOrSubject\n{\n\tmeta:\n\t\tauthor \t\t= \"Nathan Fowler\"\n\t\tdate \t\t= \"2021-06-16\"\n\t\tdescription \t= \"PE/MZ with an invalid certificate issuer or subject\"\n\t\treference \t= \"/wiki/agenttesla\"\n\t\tsample \t\t= \"1af4b28e44d75b4fe50ae509798a626c\"\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t        and (\n\t\t\t      pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t\t   or pe.signatures[pe.number_of_signatures - 1].subject matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t)\n}\n\nrule PE_MZ_AveMaria_Stealer\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2021-06-16\"\n\t\tdescription\t= \"Presence of Ave Maria Stealer or Vitali Kremez as a folder path wide\"\n\t\treference\t= \"/wiki/avemaria\"\n\n\tstrings:\n\t\t$ = { \t4100 7600 6500 5f00 4d00 6100 7200 6900\n\t\t\t6100 2000 5300 7400 6500 6100 6c00 6500\n\t\t} //Ave_Maria Stealer\n\n\t\t$ = {\t5c00 5600 6900 7400 6100 6c00 6900 2000\n\t\t\t4b00 7200 6500 6d00 6500 7a00 5c00\n\t\t} // Vitali Kremez\n\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand any of them\n}\n\nrule AveMaria_API_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-06-13\"\n\t\tDescription\t= \"Matches AveMaria and other malware samples using a string of API calls\"\n\t\tReference \t= \"/wiki/AveMaria\"\n\t\tsha256\t\t= \"ac14bf805d1796f1463b5f27b79496dab9a07f5bd50336628bcfbdc2dc996acf\"\n\t\tTLP\t\t= \"Amber\"\n\t\tGreetz\t\t= \"Thanks to Reversing Labs, to A1000 gang\"\n    strings:\n    \t$a1 = \"bcrypt.dll\"    nocase ascii\n    \t$a2 = \"urlmon.dll\"    nocase ascii\n   \t$a3 = \"ws2_32.dll\"    nocase ascii\n    \t$a4 = \"netapi32.dll\"    nocase ascii\n    \t$a5 = \"crypt32.dll\"    nocase ascii\n    \t$a6 = \"psapi.dll\"    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n    \tand all of them\n}\n\nrule qakbot_20210607 {\n  meta:\n    description = \"Identifies Qakbot samples via commonly used API sets\"\n    author=\"Vikalp Tripathi\"\n    reference=\"https://www.malware-traffic-analysis.net/2021/06/04/2021-06-03-thru-04-Qakbot-malware-and-artifacts.zip\"\n    date = \"2021-07-06\"\n    tlp = \"amber\"\n    prod = true\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n  strings:\n    $a1=\"ConvertSidToStringSid\" nocase ascii\n    $a2=\"GetUserProfileDirectory\" nocase ascii\n    $a3=\"LookupAccountName\" nocase ascii\n    $a4=\"RegDeleteValue\" nocase ascii\n    $a5=\"RegLoadKey\" nocase ascii\n    $a6=\"RegSetValueEx\" nocase ascii\n    $a7=\"RegDeleteValue\" nocase ascii\n\n\n    $b3=\"GDI32.dll\" nocase ascii\n    $b4=\"ole32.dll\" nocase ascii\n    $b5=\"OLEAUT32.dll\" nocase ascii\n    $b6=\"stager_1.dll\" nocase ascii\n\n    $c6=\"ADVAPI32.dll\" nocase ascii\n    $c1=\"GetSidSubAuthorityCount\" nocase ascii\n    $c2=\"OpenThreadToken\" nocase ascii\n    $c3=\"GetSidSubAuthority\" nocase ascii\n    $c4=\"OpenProcessToken\" nocase ascii\n    $c5=\"LookupAccountSidW\" nocase ascii\n\n    $d4=\"KERNEL32.dll\" nocase ascii\n    $d1=\"lstrcpynW\" nocase ascii\n    $d2=\"lstrcmpiA\" nocase ascii\n    $d3=\"lstrcatW\" nocase ascii\n  condition:\n    uint16(0)==0x5a4d\n    and 4 of ($a*)\n    and any of ($b*)\n    and 3 of ($c*)\n    and 2 of ($d*)\n}\n\nrule malware_via_api {\n  meta:\n    description = \"Identifies miscellaneous malware via certificate API library calls and matching library includes\"\n    author=\"Vikalp Tripathi\"\n    sample=\"bdb26c5860ed5657c9b29eae09079c950159ccc2ebc56f2dffc190d90e33efa4\"\n    date = \"2021-07-06\"\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n    tlp = \"amber\"\n    prod = \"true\"\n  strings:\n    //libraries\n    $a1=\"crypt32.dll\" nocase ascii\n    $a2=\"rpcrt4.dll\" nocase ascii\n    $a3=\"user32.dll\" nocase ascii\n    $a4=\"shlwapi.dll\" nocase ascii\n    $a5=\"kernel32.dll\" nocase ascii\n    //imports\n    $b1=\"RpcServerListen\" nocase ascii\n    $b2=\"NdrServerCall2\" nocase ascii\n    $b3=\"I_RpcBindingIsClientLocal\" nocase ascii\n    $b4=\"UuidFromStringA\" nocase ascii\n    $b14=\"VirtualProtect\" nocase ascii\n    $b5=\"VirtualProtectEx\" nocase ascii\n    $b6=\"VirtualAlloc\" nocase ascii\n    $b7=\"CertFreeCertificateChain\" nocase ascii\n    $b8=\"CryptImportPublicKeyInfo\" nocase ascii\n    $b9=\"CertFreeCertificateContext\" nocase ascii\n    $b10=\"CertCreateCertificateContext\" nocase ascii\n    $b11=\"CertFindCertificateInStore\" nocase ascii\n    $b12=\"CertEnumCertificatesInStore\" nocase ascii\n    $b13=\"CryptDecodeObject\"\n  condition:\n    uint16(0)==0x5a4d\n    and 3 of ($a*)\n    and 8 of ($b*)\n}\n\nrule PE_MZ_TooManySections\n{\n        meta:\n                author = \"sysopfb/Nathan Fowler\"\n                date = \"2021-06-02\"\n                description = \"PE/MZ with an insane number of PE sections\"\n        condition:\n                uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n                and pe.number_of_sections >= 50\n}\n\n\nrule PE_MZ_PrintableChrs1024\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-01\"\n        description = \"A long series of printable characters at offset 1024 decimal\"\n        reference = \"/wiki/icedid\"\n        thanks = \"sysopfb\"\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and (for all i in (1024..4096) : (uint8(i) != 0x00))\n        and (for all i in (0656..1023) : (uint8(i) == 0x00))\n}\n\nrule MZ_Hancitor_DLL_File\n{\n\tmeta:\n\t\tauthor          = \"Nilanjana Saha\"\n\t\tdate            = \"2021-05-31\"\n\t\tdescription     = \"Hancitor Dll leading to cobalt strike and ficker stealer infection\"\n\t\treference       = \"https://www.malware-traffic-analysis.net/2021/05/24/index2.html\"\n\tstrings:\n\t\t$ = {\n\t\t\t4300 c741 0401 0000 00b8 0200 0000 e950\n\t\t\t0200 00c7 4104 0200 0000 b805 0000 00e9\n\t\t\t3f02 0000 c741 0403 0000 00b8 0800 0000\n\t\t\te92e 0200 00c7 4104 0400 0000 b80b 0000\n\t\t\t00e9 1d02 0000 c741 0405 0000 00b8 0e00\n\t\t\t0000 e90c 0200 00c7 4104 0600 0000 b811\n\t\t\t0000 00e9 fb01 0000 c741 0407 0000 00b8\n\t\t\t1400 0000 e9ea 0100 00c7 4104 0800 0000\n\t\t\tb816 0000 00e9 d901 0000 c741 0409 0000\n\t\t\t00b8 1800 0000 e9c8 0100 00c7 4104 0a00\n\t\t\t0000 b81a 0000 00e9 b701 0000 c741 040b\n\t\t\t0000 00b8 1c00 0000 e9a6 0100 00c7 4104\n\t\t\t0c00 0000 b81e 0000 00e9 9501 0000 c741\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule IceID_from_stolenimage {\n\tmeta:\n\t\tauthor =\"Vikalp Tripathi\"\n\t\treference = \"https://www.malware-traffic-analysis.net/2021/05/27/index.html\"\n\n\tstrings:\n\t\t//$b1=\"PluginInit\" nocase\n\t\t$b2=\"shell32.dll\" nocase ascii\n\t\t$a1=\"CreateFileW\" nocase ascii\n\t\t$a2=\"CommandLineToArgvW\" nocase ascii\n\t\t$a5=\"DeleteCriticalSection\" nocase ascii\n\t\t$a6=\"GetFinalPathNameByHandleW\" nocase ascii\n\t\t$a3=\"CloseHandle\" nocase ascii\n\t\t$a4=\"EnterCriticalSection\" nocase ascii\n\t\t//$b5=\"Update\" nocase ascii\n\t\t$b6= \"kernel32.dll\" nocase ascii\n\n\tcondition:\n\t\tuint16(0)==0x5a4d\n\t\tand any of ($b*)\n\t\tand all of ($a*)\n}\n\nrule OLEVBA_VBAStomping\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-28\"\n\t\tdescription = \"Olevba suspects the use of VBA Stomping; look for suspicious pcode\"\n\t\treference = \"https://medium.com/walmartglobaltech/vba-stomping-advanced-maldoc-techniques-612c484ab278\"\n\tstrings:\n\t\t$ = \"|Suspicious|VBA Stomping        |\"\tascii\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule OLEVBA_Office_Excel4_Crash\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-03\"\n\t\tmodifed = \"2021-05-24\"\n\t\tdescription = \"Use of Excel 4 Macros with an abnormal macro parsing which causes olevba to crash.  This is likely Trickbot or Qakbot\"\n\t\treference = \"/wiki/qakbot, /wiki/trickbot, https://github.com/decalage2/oletools/issues/647\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\t\tsample = \"1c01713290a559e74eb6ef93d53f3910\"\n\t\tsample = \"393042b6ace53afa9a85773037442e02 \"\n\tstrings:\n\t\t$ = \"UnboundLocalError: local variable 'stringValue' referenced before assignment\"\n\t\t$ = \"struct.error: unpack requires a buffer of\"\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule Office_ThickClient_Lure\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-24\"\n\t\tdescription = \"Office document attempting to lure the recipient into using the Desktop Excel version for exploitation\"\n\tstrings:\n\t\t$ = \"document using Online Viewer\"\n\t\t$ = \", please use Desktop PC\"\n\t\t$ = \"WHY   I   CANNOT   OPEN   THIS\"\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand any of them\n}\n\nrule MZ_PE_DataExfiltrator_mOrx\n{\n    meta:\n        author\t\t= \"Malware Utkonos\"\n\tmodified\t= \"2021-05-24\"\n\tmodified_author\t= \"Nathan Fowler\"\n        date\t\t= \"2021-05-07\"\n        description\t= \"Very wide rule to find an adversary handle that appears in many malicious samples and is potentially TrickBot related.\"\n\treference\t= \"/wiki/trickbot\"\n    strings:\n        $ = \"mOrx\"\n    condition:\n        uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_Hancitor_Emotet_ByteCode\n{\n\tmeta:\n\t\tdescription = \"Office document with shared byte code in Emotet and Hancitor maldocs\"\n\t\tauthor = \"Nathan Fowler/Vikalp Tripathi\"\n\t\trisk = \"high\"\n\t\tdate = \"2021-05-21\"\n\tstrings:\n\t\t$weird = {\t\t0e00 626a 626a 381a 381a 0000 0000 0000\n\t\t\t\t\t\t0000 0000 0000 0000 0000 0000 0904 1600\n\t\t\t\t\t\t2e0e 0000 5a70 d265 5a70 d265\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand $weird at 544\n}\n\nrule Office_Macro_EXEC\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and an optional EXEC call to cmd, msiexec, certutil, powershell, mshta, rundll, or regsvr32\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Vikalp Tripathi\"\n                risk = \"high\"\n                date = \"2019-06-24\"\n\t\tmodified = \"2021-05-21\"\n                tlp = \"GREEN\"\n                sample = \"4e8a09af76b5f1b162a75ea221a1360a\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $badness1 = /EXEC\\x28[\\x27\\x22]?([cC][mM][dD]|[pP][oO][wW][eE][rR]|[mM][sS][iI][eE][xX][eE][cC]|[cC][eE][rR][tT][uU][tT][iI][lL]|[mM][sS][hH][tT][aA]|[rR][uU][nN][dD][lL][lL])/\n\t\t$badness2 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness3 = /m.?s.?i.?e.?x.?e.?c/\t\tnocase ascii wide\n\t\t$badness4 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness5 = /c.?e.?r.?t.?u.?t.?i.?l/\t\tnocase ascii wide\n\t\t$badness6 = /m.?s.?h.?t.?a/\t\t\tnocase ascii wide\n\t\t$badness7 = /r.?u.?n.?d.?l.?l/\t\t\tnocase ascii wide\n\t\t$badness8 = /r.?e.?g.?s.?v.?r.?3.?2/\t\tnocase ascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and any of ($badness*)\n}\n\nrule PE_MZ_SleepyKernels\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with more than one instance of kernel32 and Sleep\"\n        description = \"This implies this PE/MZ is embedding another PE/MZ and it is sleepy cause sleepy sleeps\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-01\"\n        modified    = \"2021-05-21\"\n\tthanks      = \"Vikalp Tripathi\"\n        sample      = \"e5f5f693ddda55535169ed36cf260de8, 06983f709a4332d18e948d55fa137581\"\n        feelz       = \"https://youtu.be/7pOEW6bGK1I?t=65\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n\t$kern = \"kernel32\"\tnocase ascii wide\n        $ = { 53 6c65 6570 }    //Sleep\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n}\n\nrule Office_XML_Terse_WebSetting_External_Relationship\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-20\"\n\t\tthanks = \"David Coomber\"\n\t\tdescription = \"Excessively terse external relationship frame\"\n\tstrings:\n\t\t$ = \"/relationships/frame\\\"\"\n\t\t$ = \"Target=\\\"http\"\n\t\t$ = \"TargetMode=\\\"External\\\"\"\n\t\t$a = \"Relationships\"\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand all of them\n\t\tand #a == 2\n}\n\nrule OLEVBA_And_Office_Obfuscated_PowerShell\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-05-19\"\n\t\tdescription = \"Office document containing obfuscated powershell or other obfuscated malfeasance\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$a1 = /[^\\r\\n]{0,128}p[`^]*o[`^]*w[`^]*e[`^]*r[`^]*s[`^]*h[`^]*e[`^]*l[`^]*l[^\\r\\n]{0,128}/\tnocase ascii\t//powershell; additional capture is for resume-context\n\t\t$a2 = /CHAR\\(99\\).{0,8}&.{0,8}CHAR\\(109\\).{0,8}&.{0,8}CHAR\\(100\\)/\tnocase ascii\t//\"cmd\"\n\t\t$a3 = /N[`^]*e[`^]*w[`^]*-[`^]*O[`^]*b[`^]*j[`^]*e[`^]*c[`^]*t[`^]* [`^]*N[`^]*e[`^]*t[`^]*\\.[`^]*W[`^]*e[`^]*b[`^]*C[`^]*l[`^]*i[`^]*e[`^]*n[`^]*t/\t\t\t\t\t\tnocase ascii\t//New-Object Net.WebClient\n\t\t$a4 = /\\$\\{[`^]*e[`^]*n[`^]*V[`^]*:/\tnocase ascii\t//${env\n\t\t$a5 = \"CHAR(A94)&CHAR(111)&CHAR(119)&CHAR(101)&CHAR(114)&CHAR(115)&CHAR(104)&CHAR(101)&CHAR(108)&CHAR(108)\"\tnocase wide ascii\n\n\t\t$n1 = \"|May run PowerShell commands\"\tnocase ascii\n\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of ($a*) and not any of ($n*)\n}\n\nrule Ursnif_Big_REM\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-19\"\n\t\tdescription = \"REM ascii statement followed by a huge wall of non-breaking text\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t$ = /REM [^\\x20\\x09\\r\\n]{1024}/\n\tcondition:\n\t\t(  uint8(0) == 0x0a\n\t\tor uint8(0) == 0x0d\n\t\tor uint8(0) == 0x3c\n\t\tor uint8(0) == 0x20\n\t\tor uint8(0) == 0x09\n\t\t) and all of them\n}\n\nrule Office_4Byte_Pepe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"4 byte variable split/concat evasion technique\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = {\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Potential_Equation_Editor_Exploit\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"Potential Equation Editor Exploit in oddly cased OleNative which is used in the kit builder.\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"Ole10NA\"\t\tascii wide\n\t\t$ = \"Ole10NaT\"\t\tascii wide\n\t\t$ = \"Ole10NatI\"\t\tascii wide\n\t\t$ = \"Ole10NatiV\"\tascii wide\n\t\t$ = \"Ole10NativE\"\tascii wide\n\tcondition:\n\t\t( uint16be(0) == 0x504b or uint16be(0) == 0xd0cf )\n\t\tand any of them\n}\n\nrule XML_Too_Much_PHP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"XML Office Document with just too many PHP URLs in the XML\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$a = \".php\"\tnocase ascii wide\n\tcondition:\n\t\tuint32be(0) ==0x3c3f786d\n\t\tand #a >= 6\n}\n\nrule Office_Xor_Clng_AO\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"Office document containing Xor function, auto-open behavior, and clng\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$x1 = { (58|78) (4f|6f) (52|72) }\t\t//Xor\n\t\t$x2 = { (43|63) (4c|6c) (4e|6e) (47|67) }\t//Clng\n\n\t\t$w1 = { (58|78) [1] (4f|6f) [1] (52|72) }\t\t//Xor\n\t\t$w2 = { (43|63) [1] (4c|6c) [1] (4e|6e) [1] (47|67) }\t//Clng\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"       nocase wide ascii\n                $ao5 = \"Evaluate\"       nocase wide ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand ( all of ($x*) or all of ($w*) )\n\t\tand any of ($ao*)\n}\n\nrule Office_Embedded_Script_Language\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-19\"\n\t\tdescription = \"Embedded Script Language in native Office file magic, potential code execution attempt.\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t//Capture up to 255 bytes for context\n\t\t$ = /\\x3cscript language=.{0,255}/\tnocase ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule JavaScript_HexEncoding_Flood\n{\n  meta:\n    description = \"Detects potential phishing or other nefarious JS nonsense using hex->html encoding.\"\n    date = \"2021-03-25\"\n    modified = \"2021-03-29\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    greetz0 = \"Reversing Labs and the A1000 Gang\"\n    greetz1 = \"hi2u 25 March 2021 Birmingham Tornado Team\"\n    greetz2 = \"Nathan 'Smash all the Encodings' Fowler\"\n  strings:\n    $script_the_things = \"<script\"\n    $script_the_thingsh = { 3c (73|93) (63|83) (72|92) (69|89) (70|90) (74|94) }\n    $script_the_thingshw = { 3c 00 (73|93) 00 (63|83) 00 (72|92) 00 (69|89) 00 (70|90) 00 (74|94) 00 }\n    $hex_the_things = { 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 }\n    $hex_the_things_u = { 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4]  5c 75 }\n\n    //Exclusions\n    $not1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n    $not2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n    $not3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n    $not4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"\tascii\n\n  condition:\n    filesize < 1MB and any of ($script_the_things*) and any of ($hex_the_things*) and not any of ($not*)\n}\n\nrule Office_Binary_PutWrite\n{\n        meta:\n                description = \"Office document using binary write and put to a pound numeric file handle\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-03-22\"\n                sample = \"1573d9cb372724883e4bacdef81af436\"\n\t\treference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n\t\t$bw1 = /B.?i.?n.?a.?r.?y.?.?A.?s.?.?#?.?[0-9]/i\n\t\t$bw2 = /P.?u.?t.?.?#?.?[0-9]/i\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$exclude1 = { 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\t\t$exclude2 = \"Makro am 13.07.2005 von hkrassnitzer aufgezeichnet\"\n\t\t$exclude3 = \"SMA-LazardOrders@seic.com\"\tascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($bw*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule multiple_concats_in_xlm_formula_spinal_tap_amps_at_elven\n{\n   meta:\n       date = \"2021-03-18\"\n       author = \"Will Metcalf\"\n       reference = \"https://www.youtube.com/watch?v=hW008FcKr3Q\"\n       description = \"Behold The Great And Powerful Match Iterator. SILENT BUILDER AMPS TO 11\"\n       score = 90\n   strings:\n       $magic1 = \"<?xml\" nocase ascii wide\n       $magic2 = \"<xm:macrosheet\" nocase ascii wide\n       $fstart = \"<f>\" nocase ascii wide\n       $fend = \"</f>\" nocase ascii wide\n       $henge1 = \"REGISTER(\" nocase ascii wide fullword\n       $henge2 = \"CALL(\" nocase ascii wide fullword\n       $henge3 = \"SET.NAME(\" nocase ascii wide fullword\n       $henge4 = \"SET.VALUE(\" nocase ascii wide fullword\n       $henge5 = \"EXEC(\" nocase ascii wide fullword\n       $henge6 = \"FORMULA(\" nocase ascii wide fullword\n       $henge7 = \"FORMULA.ARRAY(\" nocase ascii wide fullword\n       $henge8 = \"FORMULA.FILL(\" nocase ascii wide fullword\n       $ampsat11 = /\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;/ nocase ascii wide\n   condition:\n         all of ($magic*) and any of ($henge*) and (for any i in (1..#fstart) : (for any of ($henge*) : ($ in (@fstart[i]..@fend[i])) and $ampsat11 in (@fstart[i]..@fend[i])))\n}\n\nrule PE_MZ_NET_TotallySpacedOut\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-15\"\n\t\tdescription = \"PE/MZ with VS_VERSION_INFO values containing excessive trailing space which is quite abnormal.\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = /ProductName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /CompanyName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /LegalCopyright[^\\x01]{1,128}\\x20{16}/\twide\n\t\t$ = /Comments[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\t\t\tascii\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule PE_MZ_JUCOAction\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-10\"\n\t\tdescription = \"Repeated byte code inefficient in a packed executable that may correlate to the packer being used\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"be run under Win32\"\n\t\t$ = {\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Office_Enable_Editing\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-03-03\"\n\t\tdescription = \"Office document asking the user to enable editing, which enables the macro code.\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = \"enable editing\"\tnocase ascii wide\n\t\t$ = \"enable content\"\tnocase ascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule vm_cat_and_also_cat {\n  meta:\n    description = \"Detects common vm-detection techniques in vbs scripts.\"\n    date = \"2021-02-23\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    public_samples = \"fa96ef5de5c10538834ed92d9a99185f1b9eeb2beb9d2ef9d4ff8e57f36061c4, 15719bb40281aadf8f2a95c1719534ee71317dbbc5e5e2b3572add27e2c0e786\"\n    greetz0 = \"Thanks to Fowler for encoding alternatives\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n  strings:\n    $getobj = \"GetObject(\" nocase\n    $getobjh = { (67|87) (65|85) (74|94) (6f|8f) (62|82) (6a|8a) (65|85) (63|83) (74|94) 28 }\n    $getobjhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $serviceQuery = \"objWMIService.ExecQuery(\" nocase\n    $serviceQueryb = \"b2JqV01JU2VydmljZS5FeGVjUXVlcnko\"\n    $serviceQueryh = { (6f|8f) (62|82) (6a|8a) (77|97) (6d|8d) (69|89) (73|93) (65|85) (72|92) (76|96) (69|89) (63|83) (65|85) 2e (65|85) (78|98) (65|85) (63|83) (71|91) (75|95) (65|85) (72|92) (79|99) 28 }\n    $serviceQueryhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $str0 = \"winmgmts:\" nocase\n    $path0 = \".\\\\root\" nocase\n    $path1 = \"\\\\cimv2\" nocase\n    $attr0 = \"Win32_Bios\" nocase\n    $attr1 = \"Win32_PnPEntity\" nocase\n    $attr2 = \"Win32_ComputerSystem\" nocase\n    $attr3 = \"Win32_Process\" nocase\n\n  condition:\n    $str0 and (any of ($getobj*) or any of ($serviceQuery*)) and any of ($path*) and any of ($attr*)\n}\n\nrule Office_OpenXML_External_oleObject_Link\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external linked OLE object, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-23\"\n\t\tmodified = \"2021-02-24\"\n                tlp = \"GREEN\"\n\t\tsample = \"02bc0a764bceb7df398ea898b1501f09\"\n\t\treference = \"/wiki/loki\"\n\n        strings:\n                $a1 = /oleObject\\x22[^\\x3c]+Target=\\x22http[^\\x22]+/\n                $a2 = /Target=\\x22http[^\\x22]+[^\\x3c]+oleObject\\x22/\n\n\t\t//Exclusions\n\t\t$e1 = \"/docs.ims.corp.seic.com/\"\tascii\n\n        condition:\n\t\t//file magic in this case was document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n\t\t\tor uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and any of ($a*)\n\t\tand not any of ($e*)\n}\n\nrule Office_Word_DocMcStuffings\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-24\"\n\t\tdescription = \"Document embedded in a document, using PK format, containing the string Microsoft_Office_Word_Macro-Enabled_Document which seems to indicate a document kit builder.\"\n\t\treference = \"/wiki/zloader, /wiki/guloader\"\n\tstrings:\n\t\t$ = \"Microsoft_Office_Word_Macro-Enabled_Document\"\n\tcondition:\n\t\tuint32be(0) == 0x504b0304\n\t\tand all of them\n}\n\nrule PDF_ExifTool_MetaStomped\n{\n    meta:\n        author = \"Nathan Fowler/Sean Dalnodar\"\n        date = \"2021-02-19\"\n\tlast_updated = \"2022-05-25\"\n        sample = \"b1eee4586ba12643f711ea40100ab6a73ba720c1\"\n        greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist.\"\n        prod = \"true\"\n        description = \"Exiftool META PDF stomping; exiftool when stomping metadata in PDFs must always leave it's mark.  This is noted in the exiftool manual.  To correctly stomp a PDF you must take the PDF, conver it using qpdf, then re-PDF it.\"\n        process = \"This rule indicatesa PDF where someone has used Exiftool to modify or delete meta data.  Review the PDF and validate it is not malicious via Twinwave.  Validate all redirections to unknown sites that may be secondary downloaders or phishing lures.\"  \n        reference = \"/wiki/bazar\"\n    strings:\n        $ = \"BeginExifTool\"  ascii\n        $ = \"EndExifTool\"  ascii\n    condition:\n        uint32be(0) == 0x25504446\n        and all of them\n}\n\nrule PE_MZ_ColumnFluffer256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-19\"\n\t\tdescription = \"Two null-byte separated code structure indicating potential PE/MZ stuffing in the packer for the purposes of obfuscation\"\n\tstrings:\n\t\t$ = /([^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}){256}/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule HTML_JavaScript_Refresh\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript window.location\"\n                analyst_notes = \"This is potentially phishing or highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-03\"\n\t\tmodified = \"2021-02-18\"\n                tlp = \"GREEN\"\n\n        strings:\n                $r1 = /window\\.location\\.[^\\r\\n]{0,128}/\tnocase ascii\n\n                //Exclusions\n                $e1 = \".citrixdata.com/\"        ascii\n                $e2 = \".force.com/\"             ascii\n                $e3 = \".sharefile.com/\"         ascii\n                $e4 = \".documentforce.com/\"     ascii\n                $e5 = \".salesforce.com/\"        ascii\n\n        condition:\n                filesize < 8KB\n                and uint16(0) == 0x213c\n                and any of ($r*)\n                and not any of ($e*)\n}\n\n\nrule RAR_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-12\"\n\tmodified = \"2021-02-18\"\n        reference = \"\"\n        description = \"Single executable file embedded in RAR archive\"\n        sample = \"4d394070f5c9be4f97077ba1d877213d, 6620cc2603cb9189cbfae2e318e806a3\"\n\n    strings:\n        //Bad file extensions\n        $bad_ext = /\\.(exe|scr|bat|cmd|jse?|vbs)\\x0a/   nocase ascii\n\n        //Anchor pattern\n        $anchor = /\\.[a-zA-Z]{3}\\x0a/\n\n    condition:\n        uint32(0) == 0x21726152\n        and #bad_ext <= 2\n        and #anchor <=2\n\tand all of them\n}\n\nrule Office_OLE_EquationEditorHex\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Will Metcalf\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Word Document using raw hex Equation Editor as a CSLID potential CVE-2017-11882 exploit\"\n\t\treference = \"/wiki/zloader, https://www.lastline.com/labsblog/evading-static-analyzers-by-solving-the-equation-editor/\"\n\tstrings:\n\t\t$ = { 02CE020000000000C000000000000046 }\t//CVE-2017-11882,  CLSID {0002CE02-0000-0000-C000-000000000046} of Equation Editor\n\t\t$ = /ole.{0,32}native/\tnocase wide\n\tcondition:\n\t\tall of them\n}\n\nrule Office_OLE_Macro_SheetProtection\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Embedded Word Document, as OLE, with Macros Enabled followed by sheetProtection in the same file.\"\n\t\treference = \"/wiki/zloader\"\n\tstrings:\n\t\t$ = \"sheetProtection\"\t\t\t\t\tnocase ascii\n\t\t$ = \"oleObject progId=\\\"Word.DocumentMacroEnabled\"\tnocase ascii\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x3c3f786d )\n\t\tand all of them\n}\n\nrule PE_MZ_Dridex_NopNopNop_Flowbissa\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-11\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"Indicators of a packer commonly used with Dridex since 2019.\"\n\tstrings:\n\t\t$a = { 90909055 }\n\t\t$b = \"^_[]\"\tascii\n\t\t$c = /RSDS[^\\x5c]{1,64}\\.pdb/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 6\n\t\tand #b > 1\n\t\tand $c\n}\n\nrule multiple_concats_in_excel4_formula_exec\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 6E 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x006e))\n}\n\nrule multiple_concats_in_excel4_formula_register\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 95 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0095))\n}\n\nrule multiple_concats_in_excel4_formula_call\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 96 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0096))\n}\n\nrule multiple_concate_c_path_builder\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = { 06 00 [0-8194] 42 ?? 50 01 }\n\t\t$meat = { 17 01 00 43 17 01 00 3A 17 01 00 5C 17 01 00 }\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0150))\n}\n\nrule Excel4_Biff8\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"Will Metcalf, Brad Duncan\"\n        date = \"2021-02-04\"\n        description = \"Legacy Excel 4 document with a modern BIFF8 header, there's a rift in the space-time continiuum\"\n        feelz = \"https://youtu.be/tGOtIPMP7VM?t=80\"\n        risk = \"high\"\n    strings:\n        $ = { 0908 1000 0006 0500 }\n        $ = \"Excel 4\"\n    condition:\n        uint16be(0) == 0xd0cf\n        and all of them\n}\n\nrule OLEVBA_Office_Excel4M_Execution\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-02-04\"\n\t\tdescription = \"Office document using Excel4M to execute an external application\"\n\t\tfirefly = \"Ticket #126736\"\n\n\tstrings:\n\t\t//Opens a dynamic data exchange (DDE) channel to an application and returns the number of\n\t\t//the open channel. Once you have opened a channel to another application with INITIATE, you\n\t\t//can use EXECUTE and SEND.KEYS to control the other application from a Microsoft Excel\n\t\t//macro. (SEND.KEYS is available only with Microsoft Excel for Windows.) If INITIATE is\n\t\t//successful, it returns the number of the open channel. All the subsequent DDE macro functions\n\t\t//use this number to specify the channel. If INITIATE is unsuccessful, FALSE is returned.\n\t\t$a1 = \"INITIATE(\"\tascii\n\t\t$ab1 = \"POKE(\"\t\tascii\n\t\t$ab2 = \"REQUEST(\"\tascii\n\t\t$ab3 = \"EXECUTE(\"\tascii\n\t\t$ab4 = \"SEND.KEYS(\"\tascii\n\n\t\t//Starts a separate program. Use EXEC to start other programs with which you want to\n\t\t//communicate. Use EXEC with Microsoft Excel's other DDE functions (INITIATE, EXECUTE, and\n\t\t//SEND.KEYS) to create a channel to another program and to send keystrokes and commands to\n\t\t//the program. (SEND.KEYS is available only in Microsoft Excel for Windows.)\n\t\t$b1 = \"EXEC(\"\t\tascii\n\n\t\t//Enables or disables a custom command or menu. Disabled commands appear dimmed and\n\t\t//can't be chosen. Use ENABLE.COMMAND to control which commands the user can click in a\n\t\t//menu bar.\n\t\t$b2 = \"ENABLE.COMMAND(\"\tascii\n\n\t\t//Enables or disables a drawing object or the selected drawing object. A disabled object will not\n\t\t//run any macro events assigned to it, and the controls will be grayed out.\n\t\t$b3 = \"ENABLE.OBJECT(\"\tascii\n\n\t\t//Deletes a file from the disk. Although you will normally delete files manually, you can, for\n\t\t//example, use FILE.DELETE in a macro to delete temporary files created by the macro.\n\t\t$b4 = \"FILE.DELETE(\"\tascii\n\n\t\t//Equivalent to clicking the Add Mailer command on the Mail submenu of the File menu. Adds a\n\t\t//new PowerTalk mailer to the active workbook. Use this command to add addressing or subject\n\t\t//information to a workbook that you want to send to another user.\n\t\t$b5 = \"MAIL.ADD.MAILER(\"\tascii\n\n\t\t//Registers the specified dynamic link library (DLL) or code resource and returns the register ID.\n\t\t//You can also specify a custom function name and argument names that will appear in the\n\t\t//Paste Function dialog box. If you register a command (macro_type = 2), you can also specify a\n\t\t//shortcut key. Because Microsoft Excel for Windows and Microsoft Excel for the Macintosh use\n\t\t//different types of code resources, REGISTER has a slightly different syntax form when used in\n\t\t//each operating environment.\n\t\t$b6 = \"REGISTER(\"\tascii\n\n\t\t//NCF - Possibly unregistered CALL functions to Kernel functions\n\t\t//https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ee391643(v=vs.85)\n\t\t//Assuming that the REGISTER function is in cell A5, after your macro registers GetTickCount,\n\t\t//you can use the CALL function to return the number of milliseconds that have elapsed:\n\t\t$b7 = \"CALL(\\\"shell\"\tnocase ascii\n\t\t$b8 = \"CALL(\\\"user\"\tnocase ascii\n\t\t$b9 = \"CALL(\\\"kernel\"\tnocase ascii\n\t\t$b10 = \"CALL(\\\"shlwapi\"\tnocase ascii\n\t\t$b11 = \"CALL(\\\"mstask\"\tnocase ascii\n\t\t$b12 = \"CALL(\\\"ole\"\tnocase ascii\n\t\t$b13 = \"CALL(\\\"dbg\"\tnocase ascii\n\t\t$b14 = \"CALL(\\\"url\"\tnocase ascii\n\n\t\t//Defines a name on a macro sheet to refer to a value. The defined name exists only on the\n\t\t//macro sheet's list of names and does not appear in the global list of names for the workbook.\n\t\t//The SET.NAME function is useful for storing values while the macro is calculating.\n\t\t$c1 = \"SET.NAME(\"\tnocase ascii\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand (\n\t\t\t($a1 and any of ($ab*))\n\t\t\tor any of ($b*)\n\t\t\tor #c1 >= 6\n\t\t)\n}\n\nrule Office_XML_Functionally_Stupid\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\tmodified = \"2021-02-03\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"Excessive amount of curly brace, semi-colon, and-or parenthesis function building.  Likely multi-script language Office document stuffing\"\n\n\tstrings:\n\t\t$od = \"/officeDocument/\"\n\n\t\t$p1 = \"(){\"\n\t\t$p2 = \"})(\"\n\t\t$p3 = \"();\"\n\t\t$p4 = \")+(\"\n\n\t\t//Not functional math\n\t\t$e1 = \"<f>((((\"\n\n\tcondition:\n\t\t//<?xml\n\t\tuint32(0) == 0x6d783f3c\n\t\tand $od\n\t\tand (#p1 + #p2 + #p3 + #p4) > 1024\n\t\tand not any of ($e*)\n}\n\nrule AnyFile_B64_Encoded_ThisProgram {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n\t\tdate = \"2019-08-20\"\n\t\tmodified = \"2019-08-21\"\n\t\treference = \"\"\n\t\tsamples = \"\"\n\n\tstrings:\n\n\t\t// Various encodings of \"This program \"\n\n\t\t$a1 = \"lzIHByb2dyYW0gY2F\" ascii wide // This program cannot\n\t\t$a2 = \"aXMgcHJvZ3JhbSBjYW5\" ascii wide // This program cannot\n\t\t$a3 = \"GlzIHByb2dyYW0gY2Fubm\" ascii wide // This program cannot\n\t\t$a4 = \"hpcyBwcm9ncmFtIGNhbm5\" ascii wide // This program cannot\n\t\t$a5 = \"aXMgcHJvZ3JhbSBjYW5ub3\" ascii wide // This program cannot\n\t\t$a6 = \"hpcyBwcm9ncmFtIGNhbm5vdC\" ascii wide // This program cannot\n\n\t\t$a8 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a9 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a10 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a11 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgBvAH\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a12 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8AdA\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a13 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB0AC\" ascii wide // Null-spaced wide format of This program cannot\n\n\t\t$a15 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a16 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a17 = \"QAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a18 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a19 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a20 = \"HQAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\n\t\t$a22 = \"9ubmFjIG1hcmdvcnA\" ascii wide // tonnac margorp sihT\n\t\t$a23 = \"b25uYWMgbWFyZ29ycCB\" ascii wide // tonnac margorp sihT\n\t\t$a24 = \"Rvbm5hYyBtYXJnb3JwIHN\" ascii wide // tonnac margorp sihT\n\t\t$a25 = \"G9ubmFjIG1hcmdvcnAgc2\" ascii wide // tonnac margorp sihT\n\t\t$a26 = \"b25uYWMgbWFyZ29ycCBzaW\" ascii wide // tonnac margorp sihT\n\t\t$a27 = \"Rvbm5hYyBtYXJnb3JwIHNpaF\" ascii wide // tonnac margorp sihT\n\n\t\t$a29 = \"546869732070726f6772616d2063616e6e6f7420\" ascii wide nocase // This program cannot\n\n\t\t$a31 = \"20746f6e6e6163206d6172676f72702073696854\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a33 = \" tonnac margorp sihT\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a35 = \"aXMgcHJvZ3JhbSB\" ascii wide // This program must\n\t\t$a36 = \"hpcyBwcm9ncmFtIG1\" ascii wide // This program must\n\t\t$a37 = \"lzIHByb2dyYW0gbXV\" ascii wide // This program must\n\t\t$a38 = \"aXMgcHJvZ3JhbSBtdX\" ascii wide // This program must\n\t\t$a39 = \"hpcyBwcm9ncmFtIG11c3\" ascii wide // This program must\n\t\t$a40 = \"GlzIHByb2dyYW0gbXVzdC\" ascii wide // This program must\n\n\t\t$a42 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a43 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHM\" ascii wide // Null-spaced wide format of This program must\n\t\t$a44 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a45 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQBzAH\" ascii wide // Null-spaced wide format of This program must\n\t\t$a46 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHMAdA\" ascii wide // Null-spaced wide format of This program must\n\t\t$a47 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB0AC\" ascii wide // Null-spaced wide format of This program must\n\n\t\t$a49 = \"QAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a50 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a51 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a52 = \"HQAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a53 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a54 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program must\n\n\t\t$a56 = \"c3VtIG1hcmdvcnA\" ascii wide // tsum margorp sihT\n\t\t$a57 = \"N1bSBtYXJnb3JwIHN\" ascii wide // tsum margorp sihT\n\t\t$a58 = \"RzdW0gbWFyZ29ycCB\" ascii wide // tsum margorp sihT\n\t\t$a59 = \"c3VtIG1hcmdvcnAgc2\" ascii wide // tsum margorp sihT\n\t\t$a60 = \"RzdW0gbWFyZ29ycCBzaW\" ascii wide // tsum margorp sihT\n\t\t$a61 = \"HN1bSBtYXJnb3JwIHNpaF\" ascii wide // tsum margorp sihT\n\n\t\t$a63 = \"546869732070726f6772616d206d75737420\" ascii wide nocase // This program must\n\n\t\t$a65 = \"207473756d206d6172676f72702073696854\" ascii wide nocase // tsum margorp sihT\n\n\t\t$a67 = \" tsum margorp sihT\" ascii wide nocase // tsum margorp sihT\n\n\t\t//Exclusions, RFC2822 body matchihng\n\t\t$e1 = \"Received: from oreo.seic.com\"\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand any of ($a*)\n\t\tand not any of ($e*)\n}\nrule PE_MZ_Pp_Pals\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-26\"\n\t\tdescription = \"Packer associated with Qakbot\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = { 7050 2070 5020 7050 2070 5020 7050 }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule XMLHTTP_atob_Phishing\n{\n\tmeta:\n\t\tdescription = \"Potential HTML attachment or other JavaScript using XMLHTTP and atob, possible phishing\"\n\t\tdate = \"2021-01-21\"\n\t\trisk = \"high\"\n\tstrings:\n\t\t$ = /\\.open\\(\"GET\",[\\x09x20]+atob\\(/\n\t\t$ = \"XMLHttpRequest();\"\n\tcondition:\n\t\tall of them\n}\n\nrule MZ_Header_In_Document\n{\n        meta:\n                description = \"MZ Header found in RTF or Office file\"\n                author = \"Nathan Fowler/Sean Dalnodar\"\n                risk = \"high\"\n                date = \"2018-10-02\"\n                modified = \"2022-06-28\"\n                tlp = \"GREEN\"\n                thanks = \"RH-MP\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $doc1 = \"Document\" wide\n                $doc2 = \"Workbook\" wide\n                $doc3 = \"OLE Package\"\n                $doc4 = \"ObjInfo\" wide\n\n                $mz1 = \"4d5a 9000 0300 0000\" nocase wide ascii\n                $mz2 = \"4d5a 5000 0200 0000\" nocase wide ascii\n                $mz3 = \"4d5a 0000 0000 0000\" nocase wide ascii\n                $mz4 = \"4d5a 4152 5548 89e5\" nocase wide ascii\n                $mz5 = \"4d5a 8000 0100 0000\" nocase wide ascii\n                $mz6 = \"4d5a 9000 0300 0400\" nocase wide ascii\n                $mz7 = \"4d5a e800 0000 005b\" nocase wide ascii\n\n                $mz8 = { 4d5a 9000 0300 0000 }\n                $mz9 = { 4d5a 5000 0200 0000 }\n                $mz10 = { 4d5a 0000 0000 0000 }\n                $mz11 = { 4d5a 4152 5548 89e5 }\n                $mz12 = { 4d5a 8000 0100 0000 }\n                $mz13 = { 4d5a 9000 0300 0400 }\n                $mz14 = { 4d5a e800 0000 005b }\n\n                $mz15 = { 4d005a00 90000000 03000000 000000 }\n                $mz16 = { 4d005a00 50000000 02000000 000000 }\n                $mz17 = { 4d005a00 00000000 00000000 000000 }\n                $mz18 = { 4d005a00 41005200 55004800 8900e5 }\n                $mz19 = { 4d005a00 80000000 01000000 000000 }\n                $mz20 = { 4d005a00 90000000 03000000 040000 }\n                $mz21 = { 4d005a00 e8000000 00000000 005b00 }\n\n                $mz22 = \"This program cannot be run in\"  nocase\n                $mz23 = \"This program must be\"           nocase\n\n                $mz24 = \"546869732070726f6772616d2063616e6e6f742062652072756e20696e\" nocase wide ascii\n                $mz25 = \"546869732070726f6772616d206d757374206265\"                   nocase wide ascii\n\n                $mz26 = { 5468 6973 2070 726f 6772 616d 2063 616e 6e6f 7420 6265 2072 756e 2069 6e }\n                $mz27 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 }\n\n                $mz28 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006300 61006e00 6e006f00 74002000 62006500 20007200 75006e00 20006900 6e }\n                $mz29 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006d00 75007300 74002000 620065 }\n\n\t\t//Exclude MSI\n\t\t$msi = { EFBF BDEF BFBD 11E0 A1B1 1AEF BFBD }\n\n\t\t//Exclusions\n\t\t$e1 = {  4d5a 0000 0000 0000 ??00 5300 7500 6d00 6d00 6100 7200 79 }\n\t\t$e2 = \"Mellon Financial Corporation\"\n\n        condition:\n                ($rtf at 0 or $xml at 0 or ($office at 0 and any of ($doc*))) and any of ($mz*) and not $msi\n\t\tand not any of ($e*)\n}\n\nrule PE_MZ_AncientNET\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-07\"\n\t\tdescription = \"PE/MZ using an ancient version of .NET and a current signed certificate\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = { 2e4e 4554 4672 616d 6577 6f72 6b2c 5665 7273 696f 6e3d 7634 2e30 0000 } //.NET 4.0\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n\n\t\t//Certificate expires in 6 months or more\n\t\tand pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + 15552000\n}\n\nrule PE_MZ_BangBang\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2021-01-07\"\n                description = \"PE/MZ using !-! or @-@ wide as a separator for byte logic after being packed.\"\n                reference = \"/wiki/redline, /wiki/agenttesla, /wiki/quasar\"\n        strings:\n                $a1 = { 0021 002d 0021 00 }\n                $a2 = { 0040 002d 0040 00 }\n        condition:\n                uint16be(0) == 0x4d5a\n                and (#a1 + #a2) > 2048\n}\n\nrule Office_Macro_EmbeddedFormObject\n{\n        meta:\n                description = \"Office document with a macro and auto-open functionality with multiple (greater than or equal to 2) embedded form objects\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-01-05\"\n                sample = \"1573d9cb372724883e4bacdef81af436, 746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Numeric User Path\n\t\t$nu = /[A-Za-z]:\\\\Users\\\\[0-9]+\\\\/\n\n\t\t//Negations\n\t\t$n1 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and #fo >= 2\n\t\tand (any of ($ao*) or $nu)\n\t\tand any of ($vb*)\n\t\tand not any of ($n1*)\n}\n\nrule Office_Macro_EmbeddedFormObject_Excel4\n{\n        meta:\n                description = \"Office document with an Excel 4 Macro, VBA, and an embedded form object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2019-09-27\"\n\t\tmodified = \"2021-01-04\"\n                sample = \"746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Excel4\n\t\t$ex4 = \"Excel4\"\t\twide ascii\n\n\t\t//Negations\n\t\t$n1 = \"SQL2K14ODS01\"\twide ascii\n\t\t$n2 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $fo\n\t\tand $ex4\n\t\tand any of ($vb*)\n\t\tand not any of ($n*)\n}\n\nrule PE_MZ_12S_dadada\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-12-21\"\n                description = \"Potential signs of packer and packer-stuffed PE/MZ seen with Dridex\"\n                reference = \"/wiki/dridex\"\n                feelz =\t\"https://www.youtube.com/watch?v=jqk0jwNs2Ew&t=52\"\n        strings:\n                //0030bc0: 7475 7265 3d22 7838 3622 0d0a 2020 2020  ture=\"x86\"..\n                //0030bd0: 2020 2020 2020 2020 7075 626c 6963 4b65          publicKe\n                //0030be0: 7954 6f6b 656e 3d22 3635 3935 6236 3431  yToken=\"6595b641\n                $ = { 22 0d0a 2020 2020 2020 2020 2020 2020 7075 626c 6963 4b65 7954 6f6b 656e 3d22 }\n                $ = { a?3e a?3e a?3e a?3e b?3e b?3e b?3e b?3e }\n                $ = { da dada dada dada }\n        condition:\n                uint16be(0) == 0x4d5a\n                and all of them\n}\n\nrule Office_XML_Russian_Macro\n{\n        meta:\n                author = \"Nathan Fowler/Nilanjana\"\n                creation_date = \"2020-12-17\"\n                last_update = \"2022-04-12\"\n                sample = \"\"\n                greetz = \"Thanks to the a1000 Reversiing Labs Crew for the research assist\"\n                prod = \"true\"\n                description = \"Office XML document containing the phrases Макросы (Macros), Листы (Sheets), Sheet1 (Лист1) or This book (ЭтаКнига)\"\n                reference = \"/wiki/qakbot\"\n                process = \"This rule flagged because this document contains key values in Russian.  Since SEI doesn't conduct much/any business with this country the analyst should submit the associated xls document to Twinwave and validate it is not malicious.  Make sure to review any redirects to websites or secondary downloads that are identified to ensure they are not malicious or phishing lures\"\n                reference = \" \"\n        strings:\n                $ = \"Макросы\"   ascii wide\n                $ = \"mакросы\"   ascii wide\n                $ = \"Листы\"     ascii wide\n                $ = \"Лист1\" ascii wide\t//Sheet1\n                $ = \"ЭтаКнига\" ascii wide\t//This book\n        condition:\n                (uint32be(0) == 0x3c3f786d or uint16be(0) == 0xd0cf)\n                and any of them\n}\n\nrule Office_XML_Excel4\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-17\"\n        description = \"Office Excel 4.0 represented in XML which is a modern document format.  Abnormal time-warp\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = \"Excel 4.0\"    ascii wide\n    condition:\n        uint32be(0) == 0x3c3f786d and all of them\n}\n\nrule PE_MZ_KernelNotKernelAgain\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-16\"\n        reference = \"/wiki/dridex\"\n        sample = \"487765c199a6ae9ea318ec795d342328\"\n        description = \"Use of hidden kernel32 that has been obfuscated to avoid detection via a malware packer\"\n    strings:\n        $ = /[^kK]ernel32?\\.dll/    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule Office_Biff8_Excel4\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-14\"\n\t\tdescription = \"Office 4.0 expressed in Biff8, a modern document format\"\n\t\treferece = \"/wiki/trickbot\"\n\t\tsample = \"86a7c75c6be25bef045c825542646b61\"\n\tstrings:\n\t\t$ = \"Excel 4.0\"\tascii\n\t\t$ = \"Biff8\"\tascii\n\t\t$ = /Excel (200|19)/\tascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_OpenXML_Potential_Phishing\n{\n        meta:\n                description = \"Office XML Document suspected of being a carrier for phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-11\"\n\t\tmodified = \"2020-12-14\"\n                tlp = \"GREEN\"\n\n        strings:\n                $xml = { 3c3f 786d 6c }\n\n\t\t$rel1 = /\\x2frelationships\\x2fhyperlink\\x22 Target=\\x22https?:\\x2f\\x2f[^\\x22]+\\x22 TargetMode=\\x22External\\x22/\n\t\t$rel2 = /\\x2frelationships\\x2fimage\\x22 Target=\\x22[^\\x3a]{1,8}/\n\t\t$rel3 = \"<Relationship Id=\\\"rId\"\n\n\t\t//Exclusions\n\t\t$exclude1 = \"niit\"\tnocase ascii\n\t\t$exclude2 = \"seic\"\tnocase ascii\n\t\t$exclude3 = \"/capgemini.com/\"\t\tnocase ascii\n\t\t$exclude4 = \"/www.capgemini.com/\"\tnocase ascii\n\t\t$exclude5 = \"/xceedwealthmanagement.org/harvey-reiner/\"\tnocase ascii\n        condition:\n                $xml at 0 and filesize <= 3KB and (#rel1 > 2 and #rel1 < 10) and (#rel2 > 2 and #rel2 < 10) and (#rel3 < 24) and not any of ($exclude*)\n}\n\nrule Office_IttyBittyBiteyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-22\"\n\t\tmodified = \"2020-12-11\"\n\t\tdescription = \"Office document with strange PK instanced byte separation\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$a1 = {\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t}\n\n\t\t$pk = { 504b 0304 1400 }\t//PK\n\n\t\t//0000650: 0022 2422 232c 2323 305f 293b 5b52 6564  .\"$\"#,##0_);[Red\n\t\t//0000660: 5d5c 2822 2422 232c 2323 305c 291e 0422  ]\\(\"$\"#,##0\\)..\"\n\t\t$a2 = { 3b 5b52 6564 5d5c 2822 2422 232c 2323 305c 29 }\n\n\t\t$a3 = \"Linked Cell\"\twide ascii\n\n\t\t//Negations\n\t\t//0023f10: 2700 3002 ed00 b600 1400 5375 6e47 6172  '.0.......SunGar\n\t\t//0023f20: 642e 494f 436f 6e6e 6563 7469 6f6e 2400  d.IOConnection$.\n\t\t$n1 = \"SunGard.IOConnection\"\tascii\n\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand #pk > 1\n\t\tand not any of ($n*)\n}\n\nrule Office_INCLUDEPICTURE_ExtHREF\n{\n\tmeta:\n\t\tdescription = \"Office, XML, or RTF document using INCLUDEPICTURE and an external HREF\"\n\t\tanalyst_notes = \"The external HREF may be malicious\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-08-11\"\n\t\tmodified = \"2020-12-10\"\n\t\tthanks = \"David Heise\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$a = /INCLUDEPICTURE[\\x20\\x09\\r\\n\\x22\\x27]*[hf]t{1,2}ps?:\\/\\/.{4,256}MERGEFORMAT/\n\n\t\t$n1 = \"eroomweb.seic.com\"\n\n\tcondition:\n\t\t(uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 or uint32be(0) == 0x3c3f786d)\n\t\tand $a and not any of ($n*)\n}\n\nrule Biff5ProtectedExcel4BurnInHell\n{\n\tmeta:\n\t\tauthor = \"Will Metcalf\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Office 97 Biff5 password protected document\"\n\tstrings:\n\t\t$a1 = { 0908080000050500[4]2f000400 }\n\t\t$a2 = { 000042006F006F006B00[57]0002 }\n\t\t$a3 = { 457863656C20342E30 }\n\t\t$n1 = { 0908080000050500[4]2f000400(00|01) }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand not $n1\n}\n\nrule Office_DoubleClutchingGrumpies\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"David Heise, Will Metcalf\"\n        date = \"2020-12-02\"\n        description = \"Excel 4.0 used without a BIFF version, no document encryption, and the lack of traditional CHRGEN seen containing 0x7b, 0x7c, and 0x7d in 0x0? wide spacing\"\n\n    strings:\n        $a = \"Excel 4.0\"\n        $b1 = \"Biff\"\n        $b2 = \"Encryption\"\n        $b3 = { 7b0? 0000 7c0? 0000 7d }\n\n    condition:\n        uint16be(0) == 0xd0cf\n        and $a and not any of ($b*)\n}\n\nrule Office_EggDt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Abnormally encrypted Office document attempting to evade tool usage by boutique Excel encryption processing that is currently unknown or understood\"\n\tstrings:\n\t\t$ = { 45 2b67 ??67 2b44 ???? 74 }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Macrosheeeeeeeeeeeeet\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-10-15\"\n\t\tupdated = \"2020-11-23\"\n\t\tthanks = \"Will Metcalf for the backslashes\"\n                description = \"Office macrosheet in XML indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n                reference = \"/wiki/qakbot,/wiki/zloader\"\n        strings:\n\t\t$ = \"Target=\\\"macrosheets\"\n        condition:\n                filesize < 128KB\n                and uint8(0) == 0x3c\n                and all of them\n}\n\nrule Office_Terse_PK_Macrosheets\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-15\"\n\tupdated = \"2020-11-23\"\n\tthanks = \"Will Metcalf for the backslashes\"\n        description = \"Office document in PK format with a macrosheets folder indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = /[\\x2f\\x5c]macrosheets/\t\tnocase ascii wide\n        $ = /\\.(jpe?g|png|gif)/\t\t\tnocase ascii wide\n        $ = \"Content_Types\"\t\t\t\tnocase ascii wide\n    condition:\n        filesize < 128KB\n        and uint32be(0) == 0x504b0304\n        and all of them\n}\n\nrule PE_MZ_CafeBafe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-23\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"0xcafe PE/MZ byte separator used for reference and obfuscation\"\n\tstrings:\n\t\t$a = { bafe ffff cafe ffff cafe ffff bafe ffff }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 128\n}\n\nrule PE_MZ_NET_ATeam\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a = { a0 a2a2 a3a4 adae }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 8\n}\n\nrule PE_MZ_NET_IP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a =\"_@IP\"\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 32\n}\n\nrule OLEVBA_Office_Excel4M_VMCheck_GetWorkspace\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tdescription = \"Office document using GET.W to check machine capability, VM detect\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$ = \"GET.WORKSPACE(11\"\tascii\t//X position of Excel\n\t\t$ = \"GET.WORKSPACE(12\"\tascii\t//Y position of Excel\n\t\t$ = \"GET.WORKSPACE(13\"\tascii\t//Workspace width\n\t\t$ = \"GET.WORKSPACE(14\"\tascii\t//Workspace height\n\t\t$ = \"GET.WORKSPACE(16\"\tascii\t//Free RAM in kilobytes\n\t\t$ = \"GET.WORKSPACE(17\"\tascii\t//Total RAM in kilobytes available to Excel\n\t\t$ = \"GET.WORKSPACE(18\"\tascii\t//Math Co-Processor present\n\t\t$ = \"GET.WORKSPACE(19\"\tascii\t//Mouse present\n\t\t$ = \"GET.WORKSPACE(23\"\tascii\t//Full path to startup directory or folder\n\t\t$ = \"GET.WORKSPACE(24\"\tascii\t//Full path to alternative startup directory\n\t\t$ = \"GET.WORKSPACE(26\"\tascii\t//Username\n\t\t$ = \"GET.WORKSPACE(27\"\tascii\t//Orgname\n\t\t$ = \"GET.WORKSPACE(31\"\tascii\t//Debug or single step macro check\n\t\t$ = \"GET.WORKSPACE(37\"\tascii\t//Country and locale\n\t\t$ = \"GET.WORKSPACE(42\"\tascii\t//Can play sounds\n\t\t$ = \"GET.WORKSPACE(43\"\tascii\t//Can record sounds\n\t\t$ = \"GET.WORKSPACE(44\"\tascii\t//DLL check\n\t\t$ = \"GET.WORKSPACE(49\"\tascii\t//MAPI session in use\n\t\t$ = \"GET.WORKSPACE(64\"\tascii\t//Excel Mail System check\n\t\t$ = \"GET.WINDOW(5\"\tascii\t//Width, in points\n\t\t$ = \"GET.WINDOW(6\"\tascii\t//Height, in points\n\t\t$ = /GET\\.(WINDOW|WORKSPACE)\\([\\x20\\x09]*[A-Z]/\tascii\t//Potential evasion attempt by using a non-integer function call to GET.WORKSPACE or GET.WINDOW\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule PE_MZ_NET_lN4k\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdescription = \"PE/MZ with specific odd byte code almost exclusively seen with malware.  0 FPs on A1000\"\n\t\treference = \"/wiki/agenttesla\"\n\t\tdate = \"2020-11-10\"\n\t\tsamples = \"626758f886985fd8b5abd2526c42ea38, 1fa0185ac05a81b5cd35a4baf4c327e4\"\n\tstrings:\n\t\t//Honestly, who knows?  I dunno.\n\t\t//000934AC  A26C4E            mov [0x4e6c],al\n\t\t//000934AF  346B              xor al,0x6b\n\t\t$a = \"lN4k\"\t\t\tascii\n\t\t$ = \"WrapNonExceptionThrows\"\tascii\n\tcondition:\n\t\tfilesize < 2048KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n\t\tand #a >= 4\n}\n\nrule Office_TrailerPark_DoubleWide\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-15\"\n\t\tmodified = \"2020-11-10\"\n                risk = \"high\"\n                comments = \"Office document with macro using double-wide CHARGEN and Embedded Object\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$em = \"Embedded Object\" nocase wide ascii\n\n\t\t//Really long CHRGEN that is double-wide starting with exclamation and ending with tidle\n\t\t$double_wide = { 2100000022000000230000002400000025000000260000002700000028000000290000002a0000002b0000002c0000002d0000002e0000002f000000300000003100000032000000330000003400000035000000360000003700000038000000390000003a0000003b0000003c0000003d0000003e0000003f000000400000004100000042000000430000004400000045000000460000004700000048000000490000004a0000004b0000004c0000004d0000004e0000004f000000500000005100000052000000530000005400000055000000560000005700000058000000590000005a0000005b0000005c0000005d0000005e0000005f000000600000006100000062000000630000006400000065000000660000006700000068000000690000006a0000006b0000006c0000006d0000006e0000006f000000700000007100000072000000730000007400000075000000760000007700000078000000790000007a0000007b0000007c0000007d0000007e0000007f00000080000000 }\n\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb4 = \"OLE\"\tnocase wide ascii\n                $vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$negation1 = \";Data Source=SQL2K14ODS01\\\\INST2;\"\twide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $em and $double_wide and any of ($vb*) and not any of ($negation*)\n}\n\nrule OLE_URL_TinyDoc\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-11-05\"\n                description = \"OLE embedded document, extremely\tsmall in size, with a WIDE bare\tURL\"\n                reference = \"/wiki/lokibot\"\n                firefly\t= \"Ticket #126303\"\n\n        strings:\n                $ = \"Root Entry\"\twide\n                $ = \"Ole\"\t\twide\n                $ = \"://\"\t\twide\n\n\tcondition:\n\t\tfilesize < 6KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\n\nrule JavaScript_Unicode_Flood\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Potential phishing using excessive unicode\"\n\n\tstrings:\n\t\t$ = \"script\"\t\t\tnocase ascii\n\t\t$ = /(\\x5c[uU][0-9a-f]{2,4}){128}/\tascii\n\n\tcondition:\n\t\t(\tuint16be(0) == 0xefbb\n\t\t\tor uint8(0) == 0x3c\n\t\t\tor uint8(0) == 0x0a\n\t\t\tor uint8(0) == 0x0d\n\t\t\tor uint8(0) == 0x09\n\t\t\tor uint8(0) == 0x20\n\t\t)\n\t\tand all of them\n}\n\nrule OLEVBA_Office_Excel4_ResolutionCheck\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Use of Excel 4 Macros to perform a resolution check of the local machine prior to macro execution; sandbox detect\"\n\t\treference = \"/wiki/zloader\"\n\t\tthanks = \"Peter Misurek, Michelle Ticer\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\n\tstrings:\n\t\t$ = \"Excel 4.0\"\n\t\t$ = \"APP.MAXIMIZE(\"\n\t\t$ = \"GET.WORKSPACE(\"\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand all of them\n}\n\nrule Office_Macro_Comspec\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing environment variable comspec with VBA\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /%.?c.?o.?m.?s.?p.?e.?c.?%/\tnocase ascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Document_Close\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing Document_Close with the purposes of executing a macro upon document closure\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /D.?o.?c.?u.?m.?e.?n.?t.?_.?C.?l.?o.?s.?e/\tascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\n\n\nrule Suspected_PDF_Link_Image_Phish\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to URI\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-19\"\n                modified = \"2020-10-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n\t\t//2019-02-08 For performance\n\t\t$perf1 = \"/Rect\"\n\t\t$perf2 = \"/Link\"\n\t\t$perf3 = \"URI\"\n\n\t\t//2019-02-08\n\t\t//In some cases there is a 0x0a present between these, so for the first time ever, I'm using the '.' metacharacter\n\t\t///LInk./A 14 0 R./Border [0 0 0]./H /I./Rect [ 99.6735 646.9335 469.3665 656.0910 ].>>.endobj.14 0 obj.<< /Type /Action./S /URI./URI (http://angull\n                $link = /\\x2fLink(.|[\\r\\n]){0,64}\\x2fRect(.|[\\r\\n]){1,128}URI[\\x20\\x09]*\\x28[fh]t?tp[^\\x22\\r\\n\\x29\\x20]+/\n\n                //URL Exclusions\n                $exclude1 = /URI\\x20?\\x28(mailto|https?:\\x2f\\x2f[^\\x2f]+\\.(goldman|gs|morganstanley|spectrongroup|bloomberg|fisglobal|netxpro)\\.com\\x2f|https?:\\x2f\\x2f(tass)\\.com\\x2f)/\n\n                //PDF exclusions, the samples seen seem to not have /Form entities defined\n                //2019-01-02 - OneDrive phish contains a singular \"/Form/BBox\"\n                $exclude2 = /\\x2fForm[\\x20\\x09]*\\x2f/\n                $include2 = /\\x2fForm[\\x20\\x09]*\\x2fBBox/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n\t\t//2019-02-08 Chasing PDF creators at this point :(\n                //mPDF PHP-based content creator\n\t\t//dompdf content creator\n                $mpdf1 = \"mPDF \"\twide\n\t\t$mpdf2 = \"dompdf \"\twide\n\t\t$mpdf3 = \"CPDF\"\t\twide\n\n\t\t//This might FP a ton, but lets see if any 'wide' version of PDF is just weird/wonky leading/trailing spaced\n\t\t$mpdf4 = \" PDF\"\tnocase wide\n\t\t$mpdf5 = \"PDF \"\tnocase wide\n\n        condition:\n                    (filesize < 1024KB)\n                and uint16(0) == 0x5025\n                and ($pdf at 0)\n\t\tand all of ($perf*)\n                and (#link > 0 and #link < 3 )\n                and not $exclude1\n                and ( not $exclude2 or $include2 )\n                and (\n\t\t\t( not $title1 or $title2 )\n\t\t\t or any of ($mpdf*)\n\t\t)\n}\n\nrule Office_HiddenSheetSheeeeeeeeet\n{\n\tmeta:\n\t\tdescription = \"Office document with hidden or very hidden sheet with non-0x00 6 significant bits\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Didier Stevens\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-10-27\"\n\t\treference = \"https://isc.sans.org/forums/diary/Excel+4+Macros+Abnormal+Sheet+Visibility/26726/\"\n\t\treference = \"https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/b9ec509a-235d-424e-871d-f8e721106501\"\n\n\tstrings:\n\t\t$a = { 8500 ???? ???? ???? (01|02|03)01 }\n\t\t$b = { 8500 0000 0000 0000 (01|02|03)01 }\n\t\t$c = \"Excel\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $c\n\t\tand for any i in (1..#a): (uint16(@a[i] + 2) - uint16(@a[i] + 10) == 8)\n\t\tand not $b\n}\n\nrule PE_MZ_MF_DatJUCO_Action\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-21\"\n        comments = \"Excessive loop-based add xor, xor, add, add, jnz, jnc iteratively\"\n        reference = \"/wiki/qakbot\"\n        feelz = \"https://www.youtube.com/watch?v=fipQisc68dQ\"\n\n    strings:\n\n        //003FEEC8  65007200          add [gs:bp+si+0x0],dh\n        //003FEECC  3300              xor ax,[bx+si]\n        //003FEECE  3200              xor al,[bx+si]\n        //003FEED0  0000              add [bx+si],al\n        //003FEED2  0000              add [bx+si],al\n        //003FEED4  7500              jnz 0xeed6\n        //003FEED6  7300              jnc 0xeed8\n        //003FEED8  65007200          add [gs:bp+si+0x0],dh\n        //003FEEDC  3300              xor ax,[bx+si]\n        //003FEEDE  3200              xor al,[bx+si]\n        //003FEEE0  0000              add [bx+si],al\n        //003FEEE2  0000              add [bx+si],al\n        //003FEEE4  7500              jnz 0xeee6\n        //003FEEE6  7300              jnc 0xeee8\n        $ = {\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n        }\n\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule PE_MZ_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE executable using 0x0b repeatedly and more than 32768 times\"\n                analyst_notes = \"This is potentially highly abnormal, based on PE_MZ_NET_BobThePEBuilder\"\n                author = \"Nathan Fowler\"\n                date = \"2020-10-19\"\n                samples = \"d831b3b3fb3030a9f9a1e9259105e57b\"\n                reference = \"/wiki/qakbot\"\n        thanks = \"Chris Fry\"\n\n        strings:\n                $a = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n\t\t\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #a > 32768\n}\n\n\nrule ta551_maldoc_zip\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-14\"\n\tmodified = \"2020-10-15\"\n        comments = \"Potential encrypted archive containing a singular document matching ta551/icedid naming convention\"\n        thanks = \"Michelle Ticer\"\n        reference = \"/wiki/icedid\"\n        greetz = \"Tony Drake, your FS-ISAC presentation gave me this very idea.\"\n    strings:\n        $d1 = \".docPK\"    ascii\n        $d2 = \".xlsPK\"    ascii\n        $d3 = \".docmPK\"   ascii\n        $d4 = \".xlsmPK\"   ascii\n        $d5 = \".docxPK\"   ascii\n        $d6 = \".xlsxPK\"   ascii\n    condition:\n        uint32be(0) == 0x504b0304\n        and uint32be(4) == 0x14000900\n        and uint16be(8) == 0x0800\n        and ( #d1 == 1 or #d2 == 1 or #d3 == 1 or #d4 == 1 or #d5 == 1 or #d6 == 1 )\n}\n\nrule PE_MZ_LongB64_2048\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-13\"\n\t\tdescription = \"PE/MZ with embedded long base64 starting with AAA, likely packed and obfuscated malware\"\n\t\treference = \"/wiki/asyncrat\"\n\tstrings:\n\t\t$ = /AAA[a-zA-Z0-9\\x2f\\x2b\\x3d-]{2048}/\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Macro_Shell\n{\n    meta:\n        description = \"Office macro contains code to run an executable or system command\"\n        risk = \"high\"\n\tauthor = \"Nathan Fowler\"\n\tmodified = \"2020-10-06\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $shell = \"WScript.Shell\"\n\n\t$exclude1 = { 5753 6372 6970 742e 5368 656c 6c00 2400 5203 0100 2500 5403 0100 b600 0f00 2f2f 434f 4e46 4952 4d31 2e74 7874 2e } //WScript.Shell CONFIRM1.txt\n\t$exclude2 = { 61 7869 6d75 6d20 3420 7461 6273 2066 6f72 2031 2064 6179 41 }\t\t//Maximum 4 tabs for 1 day - literally\n\t$exclude3 = { 70 776d 6f70 736d 7574 7561 6c66 756e 6473 406d 656c 6c6f 6e2e 636f 6d }\t//BNY\n\t$exclude4 = {\t4441 503a 2f2f\n\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and $shell and not any of ($exclude*)\n}\n\nrule Office_Macro_ShellExecute_FSO\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using subclassed ShellExcuteA and FileSystemObject\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\tmodified = \"2020-10-06\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"ShellExecuteA\"\t\t\twide ascii\n\t\t$badness2 = \"shell32.dll\"\t\t\tnocase wide ascii\n\t\t$badness3 = \"Scripting.FileSystemObject\"\tnocase wide ascii\n\n\t\t$exclude = {\n\t\t\t\t4441 503a 2f2f\n\t\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n\t\tand not $exclude\n}\n\nrule Office_WordSoup\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-21\"\n\t\tdescription = \"Office document containing many terse sentences with no periods, likely word soup nonsense\"\n\t\treference = \"/wiki/ta551,/wiki/icedid\"\n\tstrings:\n\t\t$soup = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){2,8}\\x00/\tascii\n\t\t$sauce = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){12}/\tascii\n\t\t$vb1 = \"VBA\"\twide ascii\n\t\t$vb2 = \"VBE\"\twide ascii\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand #soup > 32\n\t\tand not $sauce\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_OLEFormatDoVerb\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-09-16\"\n                description = \"Instanced OleFormat.DoVerb action, likely embedded OLE content with execution\"\n                reference = \"https://isc.sans.org/forums/diary/A+Mix+of+Python+VBA+in+a+Malicious+Word+Document/26578/\"\n\n        strings:\n\t\t$ = /O.?L.?E.?F.?o.?r.?m.?a.?t.?\\..?D.?o.?V.?e.?r.?b/\tnocase ascii\n\n        condition:\n\t\tuint16be(0) == 0xd0cf\n                and all of them\n}\n\nrule Office_XML_CDOMessage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Instanced CDO.Message Object in XML\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\n\t\t$ = \"CDO.Message\"\t\tnocase wide ascii\n\t\t$ = \"GetEncodedContentStream\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand any of them\n}\nrule Office_SpaceButt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-15\"\n\t\tdescription = \"Office document with excessive 0x20 padding to EOF\"\n\t\treference = \"/wiki/emotet\"\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand uint32(filesize-4)\t== 0x20202020\n\t\tand uint32(filesize-8)\t== 0x20202020\n\t\tand uint32(filesize-12)\t== 0x20202020\n\t\tand uint32(filesize-16)\t== 0x20202020\n}\n\nrule PE_MZ_EofDoom {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-10\"\n                description     = \"PE/MZ with 0xe? partitioned null\"\n                sample          = \"790b0d9e2b17f637c3e03e410aa22d16eccfefd28d74b226a293c9696edb60ad\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_NET_PDB {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-08\"\n                description     = \"PE/MZ with a PDB sandwiched betweren WrapNonExceptionThrows and CoreExeMain with too much 0x2a\"\n                sample          = \"91738cb45f5a36f2c957d9aa58c5ccf07c377a50c7d2e134e203347cbbccd0a1\"\n                reference       = \"/wiki/hawkeye\"\n\n        strings:\n\n\t\t$a = {\t5772 6170 4e6f 6e45 7863 6570 7469 6f6e\n\t\t\t5468 726f 7773 [16-128] 3a 5c [1-128] 2e70\n\t\t\t6462 [1-128] 5f43 6f72 4578 654d 6169 6e\n\t\t}\n\t\t$s = { 2a }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $a\n\t\tand #s > 1024\n}\n\nrule PE_MZ_NET_HeadInStars\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-31\"\n        description = \"PE/MZ with excessive asterisk padding at the beginning of the PE/MZ\"\n        reference = \"/wiki/raccoon\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n\t$s = {\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t}\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and $s in (512..1024)\n}\n\nrule RTF_On3\n:maldoc\n{\n    meta:\n        description = \"Potential Equation 3 Native maldoc using RTF and on.3 byte code\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-26\"\n\n    strings:\n\t$ = \"6f6e2e33000000\" ascii\n\n    condition:\n        uint16(0) == 0x5c7b\n        and all of them\n}\n\nrule Office_ActiveWindowHwnd\n{\n        meta:\n                description = \"Office Document using a call reference to ActiveWindow HWND\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = { \t41[0-1] 63[0-1] 74[0-1] 69[0-1] 76[0-1] 65[0-1] 57[0-1]\n\t\t\t69[0-1] 6e[0-1] 64[0-1] 6f[0-1] 77[0-9] 48[0-1] 77[0-1]\n\t\t\t6e[0-1] 64\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0  //office\n                and all of them\n}\n\nrule PE_MZ_NET_CommaCommaCommaChameleon\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-24\"\n        description = \"PE/MZ with excessive 0x2c padding and a extremely long alphanumeric string\"\n        sample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n        reference = \"/wiki/agenttesla\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n        $c = { 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c }\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #c > 256\n}\n\nrule Office_PipeHead\n{\n        meta:\n                description = \"Office Document using piped command to a URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = /=[\\x20\\x09\\r\\n]*[\\x22\\x27](cmd|powershell|msiexec|certutil|mshta|rundll|regsvr32)[ex.\\x20\\x09]*\\x7c[\\x20\\x09]*[hf]t{1,2}p/\tnocase wide ascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and all of them\n}\n\nrule Office_SpaceAdmin\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc with excessive font declarations and spaced-out Administrator as the author\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-08-17\"\n\t\tmodified = \"2020-08-21\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$f1 = { 4300 6100 6c00 6900 6200 7200 6900 3100 }\n\t\t$a1 = /[^\\x20]Admin(istrator)?[\\x20]{48}/\tascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand ($a1 in (512..2048))\n\t\tand #f1 > 16\n}\n\nrule RTF_HookedOnPhonics\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using RTF with absolutely no letters in the first 1024 bytes.  No one taught them how the alphabet works\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-20\"\n        reference = \"/wiki/njrat\"\n        sample = \"2e72a053bf09d29401a9eaf0cb196b49\"\n\n    strings:\n        $alpha = /\\{\\\\rt.[^a-zA-Z]{1024}/\n\n    condition:\n        uint16(0) == 0x5c7b          //rtf\n        and $alpha at 0\n}\n\nrule Java_Jar_NoClass\n:maljar\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-08-20\"\n                description = \"More than 8 extremely tersely named class files with less than 4 long class file names\"\n                analyst_notes = \"This could potentially be a jRAT or AdWind\"\n                tlp  = \"AMBER\"\n                refernece = \"/wiki/qrat, /wiki/adwind\"\n\n        strings:\n\n                $class1 = /\\x2f[a-z]{1,3}\\.class/\n                $class2 = /\\x2f[^\\x2f]{4,64}\\.class/\n                $meta = \"META-INF/MANIFEST.MF\"\n\n        condition:\n                uint16(0) == 0x4b50\n                and $meta in (0..4096)\n                and #class1 >= 8\n\t\tand #class2 < 4\n}\n\nrule Office_GetObj_Create_Reverse\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using StrReverse, Auto Open behavior, GetObject, and Create -- possibly also Winmgmts\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-06\"\n\t\tupdated = \"2020-08-17\"\n                hash = \"e015e70e7fd1dae6423afaa0352b45f6\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/kpot, /wiki/agenttesla\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"StrReverse\"            nocase wide ascii\n                $bad2 = \"GetObject\"\t\tnocase wide ascii\n                $bad3 = \"Create\"\t\tnocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and ( all of ($bad*) or $bad1 )\n                and any of ($ao*)\n                and any of ($vb*)\n}\n\nrule Office_Biff_Forms_CallByName\n:maldoc\n{\n        meta:\n\t\tdescription = \"Potential maldoc using Biff, Microsoft Forms 2.0, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-14\"\n                reference = \"/wiki/muddywater\"\n                feelz =\t\"https://www.youtube.com/watch?v=sQgd6MccwZc&t=20\"\n\n        strings:\n                $bad1 = \"CallByName\"    nocase ascii\n                $bad2 = \"Biff\"          nocase ascii\n                $bad3 = \"Microsoft Forms 2.0\"   nocase ascii\n\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Auto_Open\"\tnocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"\tnocase wide ascii\n                $ao6 = \"Auto_Exec\"\tnocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and all of ($bad*)\n                and any of ($ao*)\n}\n\nrule Office_IWshRuntimeLibrary_Shell\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc using IWshRuntimeLibrary to avoid CreateObject for Shell\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-05-22\"\n\t\tmodified = \"2020-08-07\"\n\t\thash = \"\"\n\t\tthanks = \"Will Metcalf\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/ursnif, /wiki/ta551\"\n\t\tsample = \"7f6288f4124a41d23db91008fa7341ae\"\n\n\tstrings:\n\t\t$bad1 = \"IWshRuntimeLibrary\"    nocase ascii\n\t\t$bad2 = \"wshom.ocx\"             nocase ascii\n\n\t\t$func1 = \"WshShell\"     nocase ascii\n\t\t$func2 = \".exe\" \t\tnocase ascii\n\t\t$func3 = /S.?c.?r.?i.?p.?t.? .?H.?o.?s.?t/\tnocase ascii\n\t\t$func4 = \"Xor\"\t\t\tnocase ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($bad*)\n\t\tand any of ($func*)\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n}\n\nrule Office_macro_responseBody\n{\n        meta:\n                description = \"Office document with macro code and response.Body\"\n\t\tanalyst_notes = \"This suggests this document interacts with websites and could potentially download malicious code\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//response.Body\n\t\t$badness = { 72[0-1]65[0-1] 73[0-1]70[0-1] 6f[0-1]6e[0-1] 73[0-1]65[0-2] 42[0-1]6f[0-1] 64[0-1]79 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_BIFF_CompObj_SBVBA\n{\n        meta:\n                description = \"Office document with macro code, BIFF compound document, and sheet-bound VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\t\tsample = \"4560ad14320551fa027d5c5006806bb5ba04dde028d7486c6ed2e467e99e8923\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"CompObj\"\t\tnocase wide\n\t\t$badness2 = \"biff\"\t\tnocase ascii\n\t\t$badness3 = { 44 6f63 756d 656e 743d 5368 6565 7420 [1-2]2f 2648 [8] 0d0a }\t//Sheet with Hex\n\t\t$badness4 = { 7d3b 5642 453b 2648 [8] 0d0a 0d0a }\t\t\t\t//Sheet with VBA\n\t\t$badness5 = { 50 4b03 0414 0006 0008 0000 }\t\t\t\t\t//PK Header\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and all of ($badness*)\n\t\tand #badness5 >= 3\n}\n\nrule Office_ChrGen_DoubleWide\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a double-wide CHRGEN string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-03\"\n                tlp = \"GREEN\"\n                reference = \"meows://isc.sans.org/forums/diary/Powershell+Bot+with+Multiple+C2+Protocols/26420/\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = { \t     0000 2e00 0000 2f00 0000 3000 0000\n\t\t\t\t3100 0000 3200 0000 3300 0000 3400 0000\n\t\t\t\t3500 0000 3600 0000 3700 0000 3800 0000\n\t\t\t\t3900 0000 3a00 0000 3b00 0000 3c00 0000\n\t\t\t\t3d00 0000 3e00 0000 3f00 0000 4000 0000\n\t\t\t\t4100 0000 4200 0000 4300 0000 4400 0000\n\t\t\t\t4500 0000 4600 0000 4700 0000 4800 0000\n\t\t\t\t4900 0000 4a00 0000 4b00 0000 4c00 0000\n\t\t\t\t4d00 0000 4e00 0000 4f00 0000 5000 0000\n\t\t\t\t5100 0000 5200 0000 5300 0000 5400 0000\n\t\t\t\t5500 0000 5600 0000 5700 0000 5800 0000\n\t\t\t\t5900 0000 5a00 0000 5b00 0000 5c00 0000\n\t\t\t\t5d00 0000 5e00 0000 5f00 0000 6000 0000\n\t\t\t\t6100 0000 6200 0000 6300 0000 6400 0000\n\t\t\t\t6500 0000 6600 0000 6700 0000 6800 0000\n\t\t\t\t6900 0000 6a00 0000 6b00 0000 6c00 0000\n\t\t\t\t6d00 0000 6e00 0000 6f00 0000 7000 0000\n\t\t\t\t7100 0000 7200 0000 7300 0000 7400 0000\n\t\t\t\t7500 0000 7600 0000 7700 0000 7800 0000\n\t\t\t\t7900 0000 7a00 0000 7b00 0000 7c00 0000\n\t\t\t\t7e00 0000\n\t\t}\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_HyperActiveX\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a Active VBA referencing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-31\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/valak\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"ActiveDocument\"\tnocase wide ascii\n\t\t$badness2 = \"ActiveWindow\"\tnocase wide ascii\n\t\t$badness3 = \"AutoHyphenation\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and all of ($badness*)\n}\n\nrule RealtimeYARA_o365_MacroEnable_Lure_Phish\n{\n        meta:\n                description = \"For use with Realtime Yara, matches md5 hash of image files used to entice recipients to enable macros or in phishing.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-15\"\n\t\tmodified = \"2020-09-09\"\n                tlp = \"GREEN\"\n\n        strings:\n                $jpg = { ffd8 ffe0 }\n\t\t$png =  { 8950 4e47 }\n        condition:\n                ($jpg at 0 or $png at 0)\n\t\tand filesize < 1024KB\n\t\tand (\n\t\t\t   hash.md5(0,filesize) == \"cdd03ba433ed0dd9445f0b4e6dd1a8e0\"\n\t\t\tor hash.md5(0,filesize) == \"2e3bc57790a1d3efe3dc49a398b1d4cd\"\n\t\t\tor hash.md5(0,filesize) == \"be7b5759a393fe1ee984e51de1b7dece\"\n\t\t\tor hash.md5(0,filesize) == \"521e6c2cc53de688260a48038a927afb\"\n\t\t\tor hash.md5(0,filesize) == \"c1267b689e929da51079dbe1ce08a57e\"\n\t\t\tor hash.md5(0,filesize) == \"cb962fa46dd7a02b53de2ff0e3b64094\"\n                        or hash.md5(0,filesize) == \"e5a96401ed343f79689294d1220c1272\"\n                        or hash.md5(0,filesize) == \"0dcb622ae9d718c538b24461c02af774\"\n\t\t\tor hash.md5(0,filesize) == \"c83d6b3b78aaf31ffee261fac2e7da9d\"\n\t\t\tor hash.md5(0,filesize) == \"cb40aa7cfb731ee9ead328dd73b43f72\"\t//Fin7 Maldoc\n\t\t\tor hash.md5(0,filesize) == \"9d4e27858795fe5a3aa23f55766c17db\"\t//AveMaria 2019-04-22\n\t\t\tor hash.md5(0,filesize) == \"eed6d4b6d183733b1ac2e0b2e9b18597\"\t//Retefe 2019-05-22\n\t\t\tor hash.md5(0,filesize) == \"04d8309436013894781a5a7647565783\"\t//CrimsonRat 2020-01-23 Ticket #87466\n\t\t\tor hash.md5(0,filesize) == \"d63b2dee989ac4e41301c9dcb31970a3\"\t//Formbook 2020-01-28\n\t\t\tor hash.md5(0,filesize) == \"d3d219eccad17e0aa11d97765b89014a\"\t//Unknown 2020-03-16\n\t\t\tor hash.md5(0,filesize) == \"766a1b16e29459a47052e183f7e2c3bc\"\t//Maze 2020-04-20 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"82355ce62e9c9ac5ce9b8457751b6d91\"\t//Maze 2020-04-20 image2.png\n\t\t\tor hash.md5(0,filesize) == \"28731825446d8bd37889c4f64c5b2127\"\t//Maze 2020-04-20 image4.jpeg\n\t\t\tor hash.md5(0,filesize) == \"584efa6623128629636a7f9004ecef17\"\t//Trickbot? 2020-40-22 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"2903f9ca73c42c2f9a78cc869746569c\"\t//Trickbot? 2020-40-22 image1.jpg\n\t\t\tor hash.md5(0,filesize) == \"d9d5d51273a8ed68497b6b403cd39b7b\"\t//Valak 2020-07-31\n\t\t\tor hash.md5(0,filesize) == \"26c0efb2b26c8b43ce83bf6f9a53def3\"\t//ta551 2020-08-07\n\t\t\tor hash.md5(0,filesize) == \"3e79a2bfc6dd76b7eef3a025800ba10d\"\t//Azorult XMLHTTP 2020-09-09\n\t\t)\n}\n\nrule Office_SymbolicHex\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto behavior, and a hex-ascii string between a symbol character\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-28\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/valak\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /([\\x21-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7e][0-9]{1,2}){128}/\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand $badness\n}\n\nrule Office_MaxStonksNotStonks\n{\n        meta:\n                description = \"Office document with native Office file magic at offset 0 followed by multiple mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-21\"\n\t\tmodified = \"2020-07-24\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $badness = { 504b 0304 1400 0600 0800 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//005f4b0: ed00 b600 1400 5375 6e47 6172 642e 494f  ......SunGard.IO\n\t\t//005f4c0: 436f 6e6e 6563 7469 6f6e 2400 3602 0100  Connection$.6...\n\t\t$exclude1 = \"SunGard.IOConnection\"\tascii\n\n\t\t//009e940: ffff 0d00 0008 3200 0000 4d61 6b72 6f20  ......2...Makro\n\t\t//009e950: 616d 2031 332e 3037 2e32 3030 3520 766f  am 13.07.2005 vo\n\t\t//009e960: 6e20 686b 7261 7373 6e69 747a 6572 2061  n hkrassnitzer a\n\t\t//009e970: 7566 6765 7a65 6963 686e 6574 0200 0008  ufgezeichnet....\n\t\t$exclude2 = { 4d61 6b72 6f20 616d 2031 332e 3037 2e32 3030 3520 766f 6e20 686b 7261 7373 6e69 747a 6572 2061 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n                and not $badness in (0..8192)\n\t\tand #badness >= 2\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule PE_MZ_MF_ABC123\n:malexe\n{\n        meta:\n                description = \"PE/MZ with excessive chrgen alpha declaration\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2020-07-21\"\n                tlp         = \"AMBER\"\n                reference   = \"/wiki/cobint\"\n\t\tfeelz\t    = \"meows://www.youtube.com/watch?v=sHQ_IEosaT4&t=10\"\n\t\tsample\t    = \"a3cad4f0caf2af2d2dd31aa6ea1b1af4\"\n\n        strings:\n\t\t$a1 = \"IsDebuggerPresent\"\t\tascii\n\t\t$a2 = \"abcdefghijklmnopqrstuvwxyz\"\tascii wide nocase\n\t\t$a3 = \"123456789\"\t\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize < 4096KB\n\t\tand all of ($a*)\n\t\tand #a2 >= 6\n\t\tand #a2 >= ( #a3 * 2 )\n}\n\nrule PE_MZ_DebugBreak\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE/MZ with suspicious API calls\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2020-07-17\"\n\t\ttlp         = \"AMBER\"\n\t\treference   = \"/wiki/icedid\"\n\n\tstrings:\n\n\t\t$ = \"DebugBreak\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"KillTimer\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"UnhandledExceptionFilter\"\n\t\t$ = \"WriteFile\"\n\t\t$ = \"Sleep\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 4096KB\n\t\tand all of them\n}\n\nrule PE_MZ_URL_XOR\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a single byte XOR key containing a URL\"\n        author      = \"Nathan Fowler\"\n\tthanks\t    = \"Sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-24\"\n\tmodified    = \"2020-07-14\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$a1 = \"http://\"\t\txor\n\t$a2 = \"https://\"\txor\n\n\t$exclude = {\n\t\t443a 5c6a\n\t\t656e 6b69 6e73 5c77 6f72 6b73 7061 6365\n\t\t5c43 4943 445f 456e 636f 6d70 6173 735c\n\t\t4375 7272 656e 745c 4275 696c 645c 456d\n\t\t4c69 7465 5c43 6c69 636b 4c6f 616e 5072\n\t\t6f78 7949 6d70 6c5c 6f62 6a5c 4a65 6e6b\n\t\t696e 735c 436c 6963 6b4c 6f61 6e50 726f\n\t\t7879 496d 706c 2e70 6462 00\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($a*)\n\tand not $exclude\n}\n\nrule Office_Macro_PK_Link_4\n{\n        meta:\n                description = \"Office document with Excel 4 macro code, linked cell, and mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-14\"\n                tlp = \"GREEN\"\n                sample = \"9cf44f1dd44ea313a0d931130ebb1aaf\"\n\t\treference = \"/wiki/hancitor\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$badness1 = \"Linked Cell\"\tascii\n\t\t$badness2 = \"Linked Cell\"\twide\n\t\t$badness3 = \"Excel 4.0 Macros\"\tascii\n\t\t$badness4 = { 504b 0304 1400 0600 0800 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n\t\tand not $badness4 in (0..8192)\n}\n\nrule PE_MZ_BuffyBuffs256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-13\"\n\t\treference = \"/wiki/pony\"\n\t\tdescription = \"PE/MZ with a repeated padded byte sequence that makes absolutley no sense.  Buffy Buffs!\"\n\n\tstrings:\n\t\t$ = /a{256}/    nocase ascii\n\t\t$ = /b{256}/    nocase ascii\n\t\t$ = /c{256}/    nocase ascii\n\t\t$ = /d{256}/    nocase ascii\n\t\t$ = /e{256}/    nocase ascii\n\t\t$ = /f{256}/    nocase ascii\n\t\t$ = /g{256}/    nocase ascii\n\t\t$ = /h{256}/    nocase ascii\n\t\t$ = /i{256}/    nocase ascii\n\t\t$ = /j{256}/    nocase ascii\n\t\t$ = /k{256}/    nocase ascii\n\t\t$ = /l{256}/    nocase ascii\n\t\t$ = /m{256}/    nocase ascii\n\t\t$ = /n{256}/    nocase ascii\n\t\t$ = /o{256}/    nocase ascii\n\t\t$ = /p{256}/    nocase ascii\n\t\t$ = /q{256}/    nocase ascii\n\t\t$ = /r{256}/    nocase ascii\n\t\t$ = /s{256}/    nocase ascii\n\t\t$ = /t{256}/    nocase ascii\n\t\t$ = /u{256}/    nocase ascii\n\t\t$ = /v{256}/    nocase ascii\n\t\t$ = /w{256}/    nocase ascii\n\t\t$ = /x{256}/    nocase ascii\n\t\t$ = /y{256}/    nocase ascii\n\t\t$ = /z{256}/    nocase ascii\n\t\t$ = /0{256}/    ascii\n\t\t$ = /1{256}/    ascii\n\t\t$ = /2{256}/    ascii\n\t\t$ = /3{256}/    ascii\n\t\t$ = /4{256}/    ascii\n\t\t$ = /5{256}/    ascii\n\t\t$ = /6{256}/    ascii\n\t\t$ = /7{256}/    ascii\n\t\t$ = /8{256}/    ascii\n\t\t$ = /9{256}/    ascii\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_b64URL\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto-behavior, and a base64 encoded URL\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-10\"\n\t\tthanks = \"Brad Duncan\"\n\t\tsample = \"2433e76542036ab53b138a98eeda548a\"\n\t\treference = \"/wiki/formbook\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$b64_alphabet1 = /a.?b.?c.?d.?e.?f.?g.?h.?i.?j.?k.?l.?m.?n.?o.?p.?q.?r.?s.?t.?u.?v.?w.?x.?y.?z/    ascii\n\t\t$b64_alphabet2 = /A.?B.?C.?D.?E.?F.?G.?H.?I.?J.?K.?L.?M.?N.?O.?P.?Q.?R.?S.?T.?U.?V.?W.?X.?Y.?Z/    ascii\n\n\t\t$encstring_1 = \"R0cD\" ascii wide // http://\n\t\t$encstring_2 = \"HRwOi\" ascii wide // http://\n\t\t$encstring_3 = \"dHA6Ly\" ascii wide // http://\n\t\t$encstring_4 = \"B0AHQAcAA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_5 = \"QAdABwADo\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_6 = \"dAB0AHAAOgA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_7 = \"B0AHQAcAA6AC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_8 = \"HQAdABwADoALw\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_9 = \"dAB0AHAAOgAvAC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_10 = \"HRwcz\" ascii wide // https://\n\t\t$encstring_11 = \"R0cHM\" ascii wide // https://\n\t\t$encstring_12 = \"dHBzOi\" ascii wide // https://\n\t\t$encstring_13 = \"R0cHM6Ly\" ascii wide // https://\n\t\t$encstring_14 = \"dAB0AHAAcwA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_15 = \"B0AHQAcABzADo\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_16 = \"QAdABwAHMAOgA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_17 = \"dAB0AHAAcwA6AC\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_18 = \"B0AHQAcABzADoALw\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_19 = \"HQAdABwAHMAOgAvAC\" ascii wide // Null-spaced wide format of https://\n\n\t\t//Byte reversal of the above in case they call reverse\n\t\t$encstring_20 = \"Dc0R\"\n\t\t$encstring_21 = \"iOwRH\"\n\t\t$encstring_22 = \"yL6AHd\"\n\t\t$encstring_23 = \"AAcAQHA0B\"\n\t\t$encstring_24 = \"oDAwBAdAQ\"\n\t\t$encstring_25 = \"AgOAAHA0BAd\"\n\t\t$encstring_26 = \"CA6AAcAQHA0B\"\n\t\t$encstring_27 = \"wLAoDAwBAdAQH\"\n\t\t$encstring_28 = \"CAvAgOAAHA0BAd\"\n\t\t$encstring_29 = \"zcwRH\"\n\t\t$encstring_30 = \"MHc0R\"\n\t\t$encstring_31 = \"iOzBHd\"\n\t\t$encstring_32 = \"yL6MHc0R\"\n\t\t$encstring_33 = \"AwcAAHA0BAd\"\n\t\t$encstring_34 = \"oDAzBAcAQHA0B\"\n\t\t$encstring_35 = \"AgOAMHAwBAdAQ\"\n\t\t$encstring_36 = \"CA6AwcAAHA0BAd\"\n\t\t$encstring_37 = \"wLAoDAzBAcAQHA0B\"\n\t\t$encstring_38 = \"CAvAgOAMHAwBAdAQH\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($b64_alphabet*)\n\t\tand any of ($encstring*)\n}\n\nrule PE_MZ_MF_NET_FruitLoops\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-10\"\n\t\treference = \"/wiki/asyncrat\"\n\t\tdescription = \"PE/MZ with that has been packed and stuffed with excessive localized address looping\"\n\t\tsample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n\n\tstrings:\n\n\t\t//000289DE  AE                scasb\n\t\t//000289DF  E280              loop 0x8961\n\t\t//000289E1  8CE2              mov dx,fs\n\t\t//000289E3  808BE281AC        or byte [bp+di-0x7e1e],0xac\n\t\t//000289E8  E281              loop 0x896b\n\t\t//000289EA  AA                stosb\n\t\t//000289EB  E280              loop 0x896d\n\t\t//000289ED  8BE2              mov sp,dx\n\t\t//000289EF  80ADE280AC        sub byte [di-0x7f1e],0xac\n\t\t//000289F4  E280              loop 0x8976\n\t\t//000289F6  AD                lodsw\n\t\t//000289F7  E281              loop 0x897a\n\t\t//000289F9  AD                lodsw\n\t\t//000289FA  E281              loop 0x897d\n\t\t//000289FC  AA                stosb\n\t\t//000289FD  E280              loop 0x897f\n\t\t//000289FF  AB                stosw\n\t\t//00028A00  E280              loop 0x8982\n\t\t//00028A02  AC                lodsb\n\t\t//00028A03  E281              loop 0x8986\n\t\t//00028A05  AF                scasw\n\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fruit = { A? E28? [7] A? E28? [7] E28? A? E28? A? E28? A? E28? A? }\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t\tand all of them\n\t\tand #fruit > 2\n}\n\nrule OLE_Packager_Shell_Obj {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-06-18\"\n\t\treference = \"/wiki/get2\"\n\t\tdescription = \"Packer Shell Object use check for embedded item\"\n\n\tstrings:\n\t\t$ = \"<oleObject progId=\\\"Packager Shell Object\\\" shapeId=\\\"\"\n\n\tcondition:\n\t\tall of them\n}\n\nrule crimeware_ta505_html_attachment {\n  meta:\n    author = \"Corsin Camichel, @cocaman\"\n    date = \"2020-06-14\"\n    version = \"1.0\"\n    tlp = \"green\"\n    description = \"Detects html attachments sent by TA505 (June 2020)\"\n\n  strings:\n      $div_style_none = \"<div style=\\\"display:none;\\\">\"\n      $html_div = \"<div\"\n      $html_iframe_attr = \"width: 100%; height: 100%; border: 0px\"\n      $html_element_id_1 = \"placeholder\"\n      $html_element_id_2 = \"iframeTemplate\"\n      $html_rnd_text = \"{{RND_TEXT}}\"\n      $html_javascript = \"<script type=\\\"text/javascript\\\">\"\n\n\n  condition:\n    $div_style_none at 3 and\n      #html_div >= 3 and\n      $html_iframe_attr and\n        (all of ($html_element_id_*) or $html_rnd_text) and\n      $html_javascript\n}\n\nrule Office_Excel4M_StupidEncrypted\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using Excel 4 macro obfuscation that has been encrypted in a rather poor manner\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-06-10\"\n\t\treference = \"/wiki/zloader\"\n\t\treference = \"meows://isc.sans.edu/forums/diary/Job+applicationthemed+malspam+pushes+ZLoader/26222/\"\n\n    strings:\n\t\t$ = \"Excel 4.0 Macros\"\tascii\n\t\t$ = \"Microsoft Enhanced Cryptographic\"\twide\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Active_Env_Shell\n:maldoc\n{\n\tmeta:\n\t\tauthor  = \"Nathan Fowler\"\n\t\tdate    = \"2019-01-30\"\n\t\tmodified = \"2020-06-02\"\n\t\ttlp     = \"GREEN\"\n\t\tdescription = \"Office document which contains a macro, auto execution behavior, environment, SetAttr, and shell functions\"\n\t\tsample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n\tstrings:\n\t\t$magic = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Macro present\n\t\t$vb1 = \"VBE\"    wide ascii\n\t\t$vb2 = \"VBA\"    wide ascii\n\t\t$vb4 = \"OLE\"    wide ascii\n\t\t$vb5 = \"stdole\" wide ascii\n\n\t\t//Auto-behavior\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Document_Open\"\tnocase wide ascii\n                $ao3 = \"Workbook_Open\"\tnocase wide ascii\n\t\t$ao4 = \"AutoExec\"\tnocase wide ascii\n\n\t\t//Badness\n\t\t$bad1 = \"Active\"\tnocase wide ascii\n\t\t$bad2 = \"Environ\"\tnocase wide ascii\n\t\t$bad3 = \"Shell\"\t\tnocase wide ascii\n\t\t$bad4 = \"SetAttr\"\tnocase wide ascii\n\t\t$bad5 = \"Environ\"\tnocase wide ascii\n\n\t\t//Likely bad string manipulation\n\t\t$lbad1 = \"Asc\"\t\tnocase wide ascii\n\t\t$lbad2 = \"Chr\"\t\tnocase wide ascii\n\t\t$lbad3 = \"Right\"\tnocase wide ascii\n\t\t$lbad4 = \"Left\"\t\tnocase wide ascii\n\t\t$lbad5 = \"Mid\"\t\tnocase wide ascii\n\t\t$lbad6 = \"Len\"\t\tnocase wide ascii\n\t\t$lbad7 = \"Xor\"\t\tnocase wide ascii\n\n\t\t//Hex anchor of hex-ascii\n\t\t$anchor = /[A-Fa-f0-9]{64}/\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n\t\t//Other exclusions\n\t\t$exclude5 = { 00 4100 6c00 6c00 6900 6100 6e00 7a00 4700 4900 }\n\n\t\t//FactSet\n\t\t$exclude6 = { 00 4661 6374 5365 748? }\n\n\t\t//SunGard\n\t\t$exclude7 = \"SunGard\"\n    $exclude8 = \"Capital Markets Price Comparison\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $magic at 0 and any of ($vb*) and any of ($ao*) and any of ($bad*) and any of ($lbad*) and not any of ($exclude*) and $anchor\n}\n\nrule PE_MZ_NET_OctoPack\n{\n    meta:\n    author = \"Nathan Fowler\"\n    date = \"2020-05-29\"\n    reference = \"/wiki/nanocore\"\n    description = \"PE/MZ with that has been packed and stuffed with character rotation, OctoPack Packer\"\n    reference = \"https://octopus.com/docs/packaging-applications/create-packages/octopack\"\n\n    strings:\n\n    $net = \"WrapNonExceptionThrows\"\n    $o1 = \"OctoPack\"    nocase ascii\n    $o2 = \"OctopusFileSystem\"\n    $o3 = \"OctopusPhysicalFileSystem\"\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n    and $net and any of ($o*)\n}\n\nrule PE_MZ_PipeHead\n{\n    meta:\n       author = \"Nathan Fowler\"\n       date = \"2020-05-26\"\n       reference = \"/wiki/loki\"\n       description = \"PE/MZ with fixed pipe character 0x7c in the PE/MZ header\"\n\n    strings:\n\n\t$a = { 6d6f 6465 2e0d 0d0a [16-24] 7c [7] 7c [7] 7c [7] 7c [7] 7c }\n\n    condition:\n\tfilesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n        and $a in (100..256)\n}\n\nrule PE_MZ_Qakbot_IEnumConn_GUID\n{\n    meta:\n       author = \"James Quinn/Randy Pargman\"\n       date = \"2020-05-19\"\n       reference = \"/wiki/qakbot\"\n       description = \"PE/MZ packed Qakbot GUID of IEnumConnections Interface seen with packed samples of Qakbot\"\n       modified_author = \"Nathan Fowler\"\n\n    strings:\n\n        $ = \"{b196b287-bab4-101a-b69c-00aa00341d07}\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n        and not pe.is_dll()\n        and all of them\n}\n\nrule win_ragnarlocker_a0 {\n    meta:\n        author = \"BYEMAN@zirconic.net\"\n        last_update = \"2020-04-15\"\n        description = \"detection based on the single Ragnarlocker sample currently found in Malpedia\"\n        hash = \"9bdd7f965d1c67396afb0a84c78b4d12118ff377db7efdca4a1340933120f376\"\n        malpedia_reference = \"https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarlocker\"\n        malpedia_version = \"2020-04-15\"\n        malpedia_license = \"CC BY-NC-SA 4.0\"\n        malpedia_sharing = \"TLP:AMBER\"\n\n    strings:\n        $low0 = \"---RAGNAR SECRET---\"\n        $low1 = \"***********************************************************************************\"\n        $low2 = \"FJTQRH]k(!Y<QQ15K:7)V1s(:DYW6pLCRC)dHC4zIYA)nW\\\"y ,qiy`&v])`Ib}>M\"\n        $low3 = \".ragnar_\" wide\n        $low4 = \"RGNR_\" wide\n        $low5 = \"%s-%s-%s-%s-%s\" wide\n        $hex0 = {66 66 66 0f 1f 84 00 00 00 00 00 0f b7 8c 55 10 f0 ff ff 42 81 f1 ?? ?? ?? ?? 03 f1 8b c6 c1 c0 ?? 2b f0 3b d7 7?}\n        $hex1 = {33 d2 0f b6 cb f? ?? ?? 8b 45 ?? 0f ?? ?? ?? 03 c7 03 c8 0f ?? ?? 8a 84 3d 00 ff ff ff}\n        $hex2 = {40 8d 7f 01 0f b6 d0 8? ?? ?? 8? ?? ?? ?? ?? ?? ?? 0f b6 c1 03 c3 0f b6 d8 [7-14] 8b 45 14 0f b6 d1 [7-16] 03 d1 0f b6 ca 0f [5-8] 30 4f ff 83 ee 01 7?}\n\n    condition:\n            uint16(0) == 0x5a4d\n        and\n            (\n                (1 of ($hex*) and all of ($low*))\n            or\n                (2 of ($hex*) and 3 of ($low*))\n            )\n}\n\nrule Office_OpenXML_veryHidden\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external Excel 4 macro via linking, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-05-07\"\n                tlp = \"GREEN\"\n                sample = \"0ebd48fccb7a7a608bdb800fb34dd235\"\n                reference = \"https://inquest.net/blog/2020/05/06/ZLoader-4.0-Macrosheets-\"\n                thanks = \"WillyMac\"\n\n        strings:\n                $a1 = \"/xlMacrosheet\"\t\t\t\tascii\n                $a2 = \"macrosheet\"\t\t\t\tascii\n\n\t\t$b = /[\\x3e\\x3b][A-Z]{3,6}\\x28[^\\x29]{1,32}\\x29/\tascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n\t\tand (any of ($a*) and #b > 512)\n}\n\nrule PE_MZ_DoYouEvenNullBruh\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a significantly large amount of contigious bytecode without any NUL\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-05-05\"\n\tmodified    = \"2020-05-06\"\n        sample      = \"8fca7af21a18eea054de86c2b061f3e2\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n        $kern = \"kernel32\"      nocase ascii wide\n\t$bruh = /\\x00[^\\x00]{2048}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n\tand not pe.is_dll()\n}\n\nrule RTF_Office_Administrator_Hex\n{\n        meta:\n                description = \"RTF/Office hex or ascii Administrator author with space padding or ADMIN User Path\"\n                author = \"Nathan Fowler\"\n                thanks = \"Cocaman\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2020-04-23\"\n\t\tsample = \"7ce0cbacee78e838d58d01e18ac2efaa\"\n\n        strings:\n\t\t$ = \"41646d696e6973747261746f7220202020202020202020202020202020202020202020202020202020202020202020202020202020\"\tnocase ascii\n\t\t$ = { 5c55 7365 7273 5c41 444d 494e 49 }\t\t//C:\\\\Users\\\\ADMIN\n\n\tcondition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 )\n\t\tand any of them\n}\n\nrule Office_Zip_Image_Lure\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc with Macro code and a singular image, potentially used as a lure to enable Macros\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n\tupdated = \"2020-04-21\"\n        reference = \"/wiki/formbook\"\n        sample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $macro = \"vbaProject.bin\"    ascii\n\n        $img1 = \".jpeg\"    nocase ascii\n        $img2 = \".jpg\"    nocase ascii\n        $img3 = \".png\"    nocase ascii\n\n\t$negation = \"/printerSettings\"\n\n    condition:\n        uint16(0) == 0x4b50\n        and $macro\n\tand (#img1 + #img2 + #img3) > 0\n\tand (#img1 + #img2 + #img3) <= 2\n\tand not $negation\n}\n\nrule Office_Forms_Array_Split\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using embedded form object array splitting\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-20\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/maze\"\n\t\tsample = \"ad30987a53b1b0264d806805ce1a2561\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"Split\"\t\t\tnocase ascii\n\t\t$bad2 = /([0-9]{2,3},){16}/\tascii\n\t\t$bad3 = \"Microsoft Forms 2.0\"\tascii\n\t\t$bad4 = \"Embedded Object\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule PE_MZ_HeadSpace\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with padding of 0x20 in the first 512 bytes of the PE/MZ\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-14\"\n        sample      = \"9e4be44cd94bf353c0a358a1d22d40ce\"\n        reference   = \"\"\n\n    strings:\n\t$space = { 2020 2020 00 }\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and $space in (128..512)\n}\n\n\nrule PE_MZ_100_Dalmations\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of 0x00 between 100-byte non-null data\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-13\"\n        sample      = \"\"\n        reference   = \"/wiki/ursnif\"\n\n    strings:\n        $dalmations = /\\x00([^\\x00]{100}\\x00{328,338}){8}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and all of them\n}\n\nrule PE_MZ_dotNET_PaddedTokenJuice\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of PublicKeyToken\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-09\"\n        sample      = \"973b19554de9736755cfb4a5d1c9ffa8\"\n        reference   = \"/wiki/agenttesla\"\n\tfeelz\t    = \"https://www.youtube.com/watch?v=gaF7kT5Moc0&t=34\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\n\t$ = /Token=[a-f0-9]{16}PAD/\n\n\t$juice = /[\\x2b\\x7e][^\\x20-7f][A-Z]/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand not pe.is_dll()\n        and all of them\n\tand #juice > 4096\n}\n\nrule Office_MsRdpClient\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using MsRdpClientShell or other calls\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                modified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32, e3893a8b21f9226a48ec0e10d5c3f414\"\n                thanks = \"Steve Tai\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad = /MsRdpClient[A-Za-z0-9]+/   ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and $bad\n                and any of ($vb*)\n}\n\nrule Office_StartupPath_CallByName\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using CallByName and StartupPath\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n\t\tmodified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n\t\tthanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"CallByName\"\tascii\n                $bad2 = \"StartupPath\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\n\nrule doc_is_a_jar : maldoc {\n  meta:\n    description = \"Finds docs that are jars.\"\n    date = \"2020-03-20\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    greetz = \"Nathan C. Fowler, sysopfb, Jim Farnish\"\n    samples = \"a29a29c542b44c44f08db0a286dcedcc\"\n    tlp = \"green\"\n    prod = \"true\"\n    family = \"qrat\"\n    notes = \"This is a strange jar that is a doc that is a jar, but it's really silverlight. QRat involved fun-time.\"\n  strings:\n    //.classPK\n    $s0 = { 2e 63 6c 61 73 73 50 4b }\n  condition:\n    uint16(0) == 0xcfd0 and filesize < 2000KB and $s0\n}\n\nrule PE_MZ_AE_AL_UA\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a definition for Accept-Encoding and Accept-Language\"\n        description = \"This implies this PE/MZ is constructing defined and explicit HTTP request headers\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-03-20\"\n\tsample\t    = \"64a1d0dfdbd8cf4ff63682bfc748b1c2\"\n\n    strings:\n\t$ = \"Accept-Encoding\"\tnocase wide ascii\n\t$ = \"Accept-Language\"\tnocase wide ascii\n\t$ = \"User-Agent\"\tnocase wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_JavaScript_Embed_TryCatchFunction\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using JavaScript try, catch, and function\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n                thanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]catch[\\{\\(]/             ascii\n                $bad2 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]try[\\{\\(]/               ascii\n                $bad3 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]function[\\{\\(]/          ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule guloader_encrypted_preamble {\n  meta:\n    description = \"Finds GuLoader encrypted payloads based on the 64-byte preamble the group appends to the front of the file. Ascertains randomness of the file based on entropy afterwards.\"\n    date = \"2020-03-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"c4feebe17bd8750d3b201bcbc1b35f8d, 553b765ae891b259a91c9bbf39b3e0a8, 6d632124adc38e28d60a07f686044b47, b70d3a70fc5c7fc78f16c936fa54f27f, 4b2b2cbbddfe0c3a4a07101f735ca325, 92a222679eee72860e930a11c59ac154, 8a83ddc8696f9c46626e404485c9858f\"\n    tlp = \"green\"\n    prod = \"true\"\n    thanks = \"https://countuponsecurity.com/2016/03/09/unleashing-yara-part-3/\"\n  strings:\n    $s1 = /[a-f0-9]{64}/\n  condition:\n    filesize < 1000KB and filesize > 100KB and\n    $s1 at 0 and\n    math.entropy(65,160) > 6.5\n}\n\n\n\nrule PE_HeaderNonZeroEntropy\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 20 bytes of header with non-zero entropy.\"\n        description = \"This implies there is stuff where stuff usually isn't.\"\n        author      = \"Peter Misurek, Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-03\"\n\tmodified    = \"2020-03-11\"\n        sample      = \"ee0285249e50c5f5272bf8303eee3309\"\n        sample      = \"ca41b469a22a6def1e0b1dc84a57bf64\"\n        sample      = \"c640246c825676d1fc946cbdb7c47644\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$ = { 4f50 6174 6368 496e 7374 616c 6c3a 20 }\t//OPatchInstall seen with Fiddler\n\t$ = { b05b 3f73 df06 3f72 b05b c072 df06 3f72\n\t      b05b 3d73 df06 3f72 5269 6368 de06 3f72\n\t} //Symantec VIP\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n\tand not pe.is_dll()\n\tand not any of them\n}\n\nrule PE_MZ_MF_36 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-11\"\n                description     = \"PE/MZ with specific 0x36 byte spacing\"\n                sample          = \"eb2d39761489978be92e74cd873d7332\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = { 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36 }\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize <= 4096KB\n                and not pe.is_dll()\n                and all of them\n}\n\nrule dll_packer_science_not_feelz_2\n{\n\tmeta:\n\t\tsample=\"98cbaf55376e928b0c78fce3867d95b9ef4b45c1d91f103f00dad403dd524189\"\n\t\tthanks=\"Fowler\"\n\t\tauthor=\"Jason Reaves\"\n\tstrings:\n\t\t$a1 = {c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 [0-20] c1 45 08 04 [0-14] 8b 4? 08 [1-2] 78 77 77 77}\n\tcondition:\n\t\tall of them\n}\n\nrule PE_MZ_MF_CLC {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-03\"\n                description     = \"PE/MZ with specific clc, add, db\"\n                sample          = \"2b69d9463c6439973579fe04a781fb73\"\n                reference       = \"/wiki/netwire\"\n\n        strings:\n\t\t$ = {\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.is_dll()\n                and all of them\n}\n\nrule vbs_sins_reverse_base64 {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using reverse base64. As seen with Gozi/Ursnif.\"\n    date = \"2020-03-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"afc0be7f5fae05d84739b0c40723f5e6\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    // code preamble with == reverse base64 encoding\n    $s0 = { 63 6f 64 65 20 3d 20 22 3d }\n    // base64 detection\n    $s1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n  condition:\n    filesize > 1000KB and uint16(0) == 0x6f63 and\n    $s0 at 0 and $s1\n}\n\nrule vbs_sins_vertical_tab_ascii {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using hundreds of vertical tabs as separators. As seen with Qakbot\"\n    date = \"2020-02-26\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"4e8eeab906ee506e57c186c69048c40a\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s0 = \"Function\" ascii\n    $s1 = /\\x0a\\x0b\\x0b[^\\x0a\\x0b]/\n  condition:\n    filesize > 1000KB and uint8(0) == 0x0a and\n    all of ($s*)\n}\n\nrule PE_MZ_MF_3F_3E {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-24\"\n                description     = \"PE/MZ with specific 0x3F and 0x3E byte spacing\"\n                sample          = \"4762bc6f2a62120c6309036de944d5eb\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F\n\t\t}\n\n\t\t$ = {\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E\n\t\t }\n\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize <= 4096KB\n                and not pe.is_dll()\n\t\tand all of them\n}\n\nrule PE_MZ_Kernel_Not_Kernel {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-21\"\n                description     = \"PE/MZ with specific kernel32.dll instanced as non-kernel32.dll\"\n                sample          = \"699e2a36312b07f677805829b7c832d5\"\n                reference       = \"/wiki/gootkit\"\n\n        strings:\n\t\t//Lets fixate on byte placement and an upper case ASCII set but a lowercase 'dll'\n\t\t//000f660: 6363 5f5f 5f65 655f 735f 5ff1 6f72 7900  cc___ee_s__.ory.\n\t\t//000f670: 4645 524e 4546 3232 2e64 6c6c 0000 5669  FERNEF22.dll..Vi\n\t\t//000f680: 7274 7561 6c41 6c6c 6f63 0000 7871 6f72  rtualAlloc..xqor\n\n\t\t$a = { 00 (4?|5?)(4?|5?) (4?|5?)(4?|5?) (4?|5?)(4?|5?) 3?3? 2e64 6c6c }\n\n\t\t$b1 = \"KERNEL32.DLL\"\tascii\n\t\t$b2 = \"KERNEL32.dll\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n                and $a and not any of ($b*)\n}\n\nrule PE_MZ_MF_CAB_cmp {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-20\"\n                description     = \"PE/MZ with specific byte ordering of cmp\"\n                sample          = \"e81ea61add3e8788672a9190401289e5\"\n                reference       = \"/wiki/ursnif\"\n\n        strings:\n\t\t//000CAB25  3ADC              cmp bl,ah\n\t\t//000CAB27  3AE0              cmp ah,al\n\t\t//000CAB29  3AE4              cmp ah,ah\n\t\t//000CAB2B  3AE8              cmp ch,al\n\n\t\t//000CAB2D  3AEC              cmp ch,ah\n\t\t//000CAB2F  3AF0              cmp dh,al\n\t\t//000CAB31  3AF4              cmp dh,ah\n\t\t//000CAB33  3AF8              cmp bh,al\n\n\t\t//000CAB35  3AFC              cmp bh,ah\n\t\t//000CAB37  3A08              cmp cl,[bx+si]\n\n\t\t//000CAB39  3B0C              cmp cx,[si]\n\t\t//000CAB3B  3B10              cmp dx,[bx+si]\n\t\t//000CAB3D  3B14              cmp dx,[si]\n\t\t//000CAB3F  3B18              cmp bx,[bx+si]\n\n\t\t//000CAB41  3B1C              cmp bx,[si]\n\t\t//000CAB43  3B20              cmp sp,[bx+si]\n\t\t//000CAB45  3B24              cmp sp,[si]\n\t\t//000CAB47  3B28              cmp bp,[bx+si]\n\t\t//000CAB49  3B2C              cmp bp,[si]\n\n\t\t//000CAB4B  3B30              cmp si,[bx+si]\n\n\t\t$ = {\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3??C 3??8\t\t//This part is really odd to me.  Min->Max in one step\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t}\n\n        condition:\n\t\tfilesize <= 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\n}\n\nrule ASCII_Dropper_NeedABreak\n:malhtml\n{\n        meta:\n                description = \"ASCII programming language instancing and excessively long non-linebroken quoted string\"\n                analyst_notes = \"This is potentially an ASCII script-based dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-19\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/adwind\"\n                sample = \"85096e4eb76c8b65c8ce4aed8d17ee4b\"\n\n        strings:\n               $a1 = \"function\"\tnocase ascii\n\t\t$a2 = /[\\x22\\x27][^\\r\\n\\x22\\x27\\x00\\x20\\x09]{2048}/\tascii\n\t\t$b1 = \";base64,\"\tascii\n\n        //exclusions\n               $exclusion1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n               $exclusion2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n               $exclusion3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n               $exclusion4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"     ascii\n               $exclusion5 = \"https://www.broadridge.com/intl/white-paper/shareholder-rights-directive\"\n\n        condition:\n\t            not uint16(0) == 0xcfd0\t//office\n\t\tand not uint32(0) == 0x6d783f3c\t//xml\n\t\tand not uint32(0) == 0x0a786564\t//dex\n                and (      uint8(0) == 0x20\t//Space\n                        or uint8(0) == 0x09\t//Tab\n\t\t\tor uint8(0) == 0x0a\t//LF\n\t\t\tor uint8(0) == 0x0d\t//CR\n\t\t\tor uint8(0) == 0x3c\t//<\n\t\t\tor uint8(0) == 0x24\t//$\n\t\t\tor uint8(0) == 0x27\t//'\n\t\t\tor uint8(0) == 0x22\t//\"\n\t\t\tor uint8(0) == 0x61\t//a...\n\t\t\tor uint8(0) == 0x62\n\t\t\tor uint8(0) == 0x63\n\t\t\tor uint8(0) == 0x64\n\t\t\tor uint8(0) == 0x65\n\t\t\tor uint8(0) == 0x66\n\t\t\tor uint8(0) == 0x67\n\t\t\tor uint8(0) == 0x68\n\t\t\tor uint8(0) == 0x69\n\t\t\tor uint8(0) == 0x6A\n\t\t\tor uint8(0) == 0x6B\n\t\t\tor uint8(0) == 0x6C\n\t\t\tor uint8(0) == 0x6D\n\t\t\tor uint8(0) == 0x6E\n\t\t\tor uint8(0) == 0x6F\n\t\t\tor uint8(0) == 0x70\n\t\t\tor uint8(0) == 0x71\n\t\t\tor uint8(0) == 0x72\n\t\t\tor uint8(0) == 0x73\n\t\t\tor uint8(0) == 0x74\n\t\t\tor uint8(0) == 0x75\n\t\t\tor uint8(0) == 0x76\n\t\t\tor uint8(0) == 0x77\n\t\t\tor uint8(0) == 0x78\n\t\t\tor uint8(0) == 0x79\n\t\t\tor uint8(0) == 0x7A\t//z\n                )\n                and all of ($a*)\n\t\tand not any of ($b*)\n\t\tand not any of ($exclusion*)\n}\n\nrule CryptographyFunction\n{\n  meta:\n    author = \"CISA trusted 3rd party\"\n    incident = \"10271944.r1.v1\"\n    date =    \"2019-12-25\"\n    category = \"Hidden_Cobra\"\n    family = \"HOTCROISSANT\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ALGO_crypto_1 = { 8A [1-5] 32 [1-4] 32 [1-4] 32 [1-4] 88 [1-5] 8A [1-4] 32 [1-4] 22 [1-4] 8B [1-5] 8D [3-7] 33 [1-4] 81 [3-7] C1 [1-5] C1 [1-5] 0B [1-4] 8D [1-5] 33 [1-4] 22 [1-4] C1 [1-5] 33 [1-4] 32 [1-4] 8B [1-4] 83 [1-5] C1 [1-5] 33 [1-4] C1 [1-5] C1 }\n  condition:\n    uint16(0) == 0x5A4D and any of them\n}\n\nrule crypt_constants_2\n{\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n    (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule lsfr_constants {\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n   (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule Office_Excel_4_Macro_Localized\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using Excel 4.0 Macros with a non-en-US localized 'macro' value\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-05\"\n        reference = \"/wiki/azorult\"\n        sample = \"2c93fb1a782b37146be53bd7c7a829da\"\n\n    strings:\n\t$a1 = { 4578 6365 6c20 342e 3020 4d61 }\n\t$a2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 }\n\t$a3 = \"57863656c20342e30204d61\"\t\t\t\t\tnocase ascii\n\t$a4 = \"45007800630065006c00200034002e00300020004d006100\"\tnocase ascii\n\n\t$b1 = { 4578 6365 6c20 342e 3020 4d61 6372 6f }\n\t$b2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 6300 7200 6f }\n\t$b3 = \"457863656c20342e30204d6163726f\"\t\t\t\t\tnocase ascii\n\t$b4 = \"45007800630065006c00200034002e00300020004d006100630072006f\"\tnocase ascii\n\n    condition:\n\t(\n\t\t   uint16(0) == 0x5c7b\t\t//rtf\n\t\tor uint32(0) == 0x6d783f3c\t//xml\n\t\tor uint16(0) == 0x0a0d\t\t//asc\n                or uint16(0) == 0x0a0a\t\t//asc\n                or uint16(0) == 0x2020\t\t//asc\n                or uint16(0) == 0x0909\t\t//asc\n                or uint16(0) == 0x213c\t\t//html\n\t        or uint16(0) == 0xcfd0\t\t//office\n\t)\n\tand any of ($a*)\n\tand ((#a1 + #a2 + #a3 + #a4) > (#b1 + #b2 + #b3 + #b4))\n}\n\nrule qakbot_sad_math : vbs {\n  meta:\n    description = \"Finds qakbot stage 1 vbs with sad math inside of it.\"\n    date = \"2020-02-04\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ae4cb914039c22b52ab5c2580c537de9\"\n    reference = \"/wiki/qakbot\"\n    tlp = \"green\"\n    notes = \"This is low response (~400 samples ever), but no falses.\"\n  strings:\n    $dim = \"dim \"\n    $sad = /\\x0a[a-zA-Z]{1,6}\\s=\\s([0-9]{1,4}\\s[\\+\\-]\\s){3,32}[0-9]{1,5}\\x0a/\n  condition:\n    filesize > 100KB and\n    $dim and #sad > 20\n}\n\nrule HTML_msBlob\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript .msSaveOrOpenBlob\"\n                analyst_notes = \"This is potentially a maldoc dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-04\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/poshadvisor\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Web/API/Navigator/msSaveOrOpenBlob\"\n\t\tsample = \"e6cd6c3baf1aaf0ad8e74461e9b09cc4\"\n\n        strings:\n                $ = \".msSaveOrOpenBlob\"\tascii\n                $ = \".msSaveBlob\"\tascii\n\n        condition:\n                (\t   uint16(0) == 0x0a0d\n\t\t\tor uint16(0) == 0x0a0a\n\t\t\tor uint16(0) == 0x2020\n\t\t\tor uint16(0) == 0x0909\n\t\t\tor uint16(0) == 0x213c\n\t\t)\n                and any of them\n}\n\nrule Office_VBA_Public\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using regsvr32, wmic process, or C:/Users/Public/ with a URL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-03\"\n        reference = \"\"\n        sample = \"50d518246c2b61f5b427948f87a0aa24\"\n\n    strings:\n\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $bad1 = \"regsvr32\"              nocase ascii\n        $bad2 = \"wmic process\"          nocase ascii\n        $bad3 = \"wmic.exe process\"      nocase ascii\n        $bad4 = \"c:\\\\users\\\\public\\\\\"   nocase ascii\n\n        $url1 = \"https://\"\tnocase ascii\n        $url2 = \"http://\"\tnocase ascii\n        $url3 = \"ftp://\"        nocase ascii\n\n    condition:\n\tuint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($vb*)\n        and any of ($bad*)\n        and any of ($url*)\n}\n\nrule PE_MZ_MF_xor_spacebutt {\n\n        meta:\n\t\tauthor          = \"Nathan Fowler\"\n                date            = \"2020-01-31\"\n                description     = \"PE/MZ with specific byte ordering of xor and and [bx+si],ah to EOF\"\n                sample          = \"d0e0aac1a7a2f82dfbf89fedeee14a40\"\n                reference\t= \"/wiki/bladabindi\"\n\n        strings:\n                //0014EAE1  301E170D          xor [0xd17],bl\n                //0014EAE5  31363031          xor [0x3130],si\n                //0014EAE9  3132              xor [bp+si],si\n                //0014EAEB  3030              xor [bx+si],dh\n                //0014EAED  3030              xor [bx+si],dh\n                //0014EAEF  3030              xor [bx+si],dh\n                $ = { 3030 3030 3030 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and uint32(filesize-4) == 0x20202020\n                and all of them\n\n}\n\nrule PE_MZ_MF_lumberjax6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated push ax at 6 and 8 byte distances\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074FC5  50                push ax\n\t\t//00074FC6  41                inc cx\n\t\t//00074FC7  44                inc sp\n\t\t//00074FC8  44                inc sp\n\t\t//00074FC9  49                dec cx\n\t\t//00074FCA  4E                dec si\n\t\t//00074FCB  47                inc di\n\t\t//00074FCC  50                push ax\n\t\t//00074FCD  41                inc cx\n\t\t//00074FCE  44                inc sp\n\t\t//00074FCF  44                inc sp\n\t\t//00074FD0  49                dec cx\n\t\t//00074FD1  4E                dec si\n\t\t//00074FD2  47                inc di\n\t\t//00074FD3  58                pop ax\n\t\t//00074FD4  58                pop ax\n\t\t//00074FD5  50                push ax\n\t\t$ = {\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule PE_MZ_MF_inc_add_db {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated inc word, add, db, at fixed offsets\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074AAD  FF00              inc word [bx+si]\n\t\t//00074AAF  00FF              add bh,bh\n\t\t//00074AB1  FF                db 0xff\n\t\t//00074AB2  FF                db 0xff\n\t\t//00074AB3  FF                db 0xff\n\t\t//00074AB4  FF                db 0xff\n\t\t//00074AB5  FF00              inc word [bx+si]\n\t\t//00074AB7  00FF              add bh,bh\n\t\t//00074AB9  FF                db 0xff\n\t\t//00074ABA  FF                db 0xff\n\t\t//00074ABB  FF                db 0xff\n\t\t//00074ABC  FF                db 0xff\n\t\t$ = { \tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_Macro_Long\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using &H long manipulation with Chr, Asc, Len, or Mid with high compatibility\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n        reference = \"/wiki/formbook\"\n\tsample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n\t$hc1 = \"VBA6\"\t\tascii\n\t$hc2 = \"VBA7\"\t\tascii\n\t$hc3 = \"Win16\"\t\tascii\n\t$hc4 = \"Win32\"\t\tascii\n\t$hc5 = \"Win64\"\t\tascii\n\t$hc6 = \"Mac\"\t\tascii\n\n\t$f1 = \"Chr\"\t\tascii\n\t$f2 = \"Mid\"\t\tascii\n\t$f3 = \"Asc\"\t\tascii\n\t$f4 = \"Len\"\t\tascii\n\n\t$l1 = \"\\\"&H\\\"\"\t\tascii\n\t$l2 = \"'&H'\"\t\tascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n\tand all of ($hc*)\n\tand any of ($f*)\n\tand any of ($l*)\n}\n\nrule PE_MZ_lumberjax_6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-27\"\n                description     = \"PE/MZ with specific byte ordering of repeated ax\"\n                sample          = \"f6f4e15ed664afc6bdd3abf5ca77edc5\"\n                reference       = \"/wiki/formbook\"\n\n        strings:\n\n        //push ax\n        $ = {\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50\n        }\n\n        //add [b?+?i],ax\n        $ = {\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n        }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_OleObject_Terse_WideURL\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using URL wide encoding in an terse Ole Sheet\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\n    strings:\n        //OLE\n        $a1 = { 00 4f00 6c00 6500 0000 }\n\n        //Numeric \"Sheet[0-9]!Object \"\n        $a2 = { 0000 5368 6565 74?? 214f 626a 6563 7420 }\n\n        //URL embed\n        $u1 = \"http://\"         wide\n        $u2 = \"https://\"        wide\n        $u3 = \"ftp://\"\t        wide\n\n    condition:\n\tfilesize < 3KB\n\tand uint32(0) == 0xe011cfd0\n\tand all of ($a*)\n\tand any of ($u*)\n}\n\nrule Office_XML_Ole_autoLoad\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using an embedded OLE object attempting to auto execute\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\tmore_info = \"meows://docs.microsoft.com/en-us/office/vba/api/excel.oleobject.autoload\"\n\n    strings:\n\t$ = /<oleObjects><oleObject[^\\r\\n]+autoLoad=[\\x22\\x27]?(1|true)[\\x22\\x27]?/\tnocase ascii\n\n    condition:\n\tfilesize < 2KB\n\tand uint32(0) == 0x6d783f3c\n\tand all of them\n}\n\nrule Office_Emotet_JibJAB\n:maldoc\n{\n    meta:\n        description = \"Potential Emotet maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The JAB variables are the use of a dollar-sign at the very beginning of the base64 encoding\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-15\"\n\tmodified = \"2020-01-22\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/emotet\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        //$jab1 = { 0000 4a41 42 }\n        //$jab2 = { 0000 4a00 4100 4200 }\n\n\t//2020-01-15 seen in d79f7d6e6d53c51a1bc68ead8c78a3a6\n\t//00002c0: 2020 2020 4a41 4257 4147 732c 2c2c 2c73      JABWAGs,,,,s\n\t$jab1 = /[\\x00\\x20\\x09\\x3c\\r\\n]{2}J\\x00?A\\x00?B/\tascii\n\n\t//2020-01-22, negation handling for JABIL INC\n\t$neg1 = { 0000 4a41 4249 4c20 494e 43 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n\tand not any of ($neg*)\n}\n\nrule PE_MZ_MF_dridexpacker {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2020-01-22\"\n\t\tdescription     = \"PE/MZ with specific add/xor logic potentially Dridex or similar packer\"\n\t\tsample          = \"551de8d77807cee610e4ed129adde44f\"\n\t\treference       = \"/wiki/dridex\"\n\n\tstrings:\n\t\t//00037014  0020              add [bx+si],ah\n\t\t//00037016  0000              add [bx+si],al\n\t\t//00037018  3000              xor [bx+si],al\n\t\t//0003701A  0000              add [bx+si],al\n\n\t\t$ = { 0020 0000 3000 0000 }\n\n\t\t//0003600E  0100              add [bx+si],ax\n\t\t//00036010  1000              adc [bx+si],al\n\t\t//00036012  0000              add [bx+si],al\n\t\t//00036014  1800              sbb [bx+si],al\n\t\t//00036016  00800000          add [bx+si+0x0],al\n\t\t//0003601A  0000              add [bx+si],al\n\t\t//0003601C  0000              add [bx+si],al\n\t\t//0003601E  0000              add [bx+si],al\n\t\t//00036020  0000              add [bx+si],al\n\t\t//00036022  0000              add [bx+si],al\n\t\t//00036024  0000              add [bx+si],al\n\t\t//00036026  0100              add [bx+si],ax\n\t\t//00036028  0100              add [bx+si],ax\n\t\t//0003602A  0000              add [bx+si],al\n\t\t//0003602C  3000              xor [bx+si],al\n\t\t//0003602E  00800000          add [bx+si+0x0],al\n\t\t//00036032  0000              add [bx+si],al\n\t\t//00036034  0000              add [bx+si],al\n\t\t//00036036  0000              add [bx+si],al\n\n\t\t$ = { 00 00800000 [19] 00 00800000 0000 }\n\n\t\t//Kernel32 use\n\t\t$ = \"KERNEL32.dll\"    ascii\n\t\t$ = \"kernel32\"        ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.characteristics & pe.DLL\n\t\tand all of them\n}\n\nrule PE_MZ_MF_coocoo4coccopuffs {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-21\"\n        description     = \"PE/MZ with specific abnormal add, ror byte, or al\"\n        sample          = \"085ad62be3425cb4d822aec3396a159c\"\n        reference       = \"/wiki/agenttesla\"\n\n    strings:\n\t//000CB3F7  0000              add [bx+si],al\n\t//000CB3F9  0000              add [bx+si],al\n\t//000CB3FB  0000              add [bx+si],al\n\t//000CB3FD  0000              add [bx+si],al\n\t//000CB3FF  0000              add [bx+si],al\n\t//000CB401  C00C00            ror byte [si],byte 0x0\n\t//000CB404  0C00              or al,0x0\n\t//000CB406  0000              add [bx+si],al\n\t//000CB408  1030              adc [bx+si],dh\n\t//000CB40A  0000              add [bx+si],al\n\t//000CB40C  0000              add [bx+si],al\n\t//000CB40E  0000              add [bx+si],al\n\t//000CB410  0000              add [bx+si],al\n\t//000CB412  0000              add [bx+si],al\n\t//000CB414  0000              add [bx+si],al\n\t$ = { 0000 C00C00 0C00 0000 }\n\n\t//000002D9  7310              jnc 0x2eb\n\t//000002DB  0000              add [bx+si],al\n\t//000002DD  0A800100          or al,[bx+si+0x1]\n\t//000002E1  0004              add [si],al\n\t//000002E3  7311              jnc 0x2f6\n\t//000002E5  0000              add [bx+si],al\n\t//000002E7  0A800200          or al,[bx+si+0x2]\n\t//000002EB  0004              add [si],al\n\t//000002ED  7312              jnc 0x301\n\t//000002EF  0000              add [bx+si],al\n\t//000002F1  0A800300          or al,[bx+si+0x3]\n\t//000002F5  0004              add [si],al\n\t//000002F7  7313              jnc 0x30c\n\t//000002F9  0000              add [bx+si],al\n\t//000002FB  0A800400          or al,[bx+si+0x4]\n\t//000002FF  0004              add [si],al\n\t//00000301  7314              jnc 0x317\n\t//00000303  0000              add [bx+si],al\n\t$ = {\n\t\t     0000 [2]0100 [2]\n\t\t[2] 0000 [2]0200 [2]\n\t\t[2] 0000 [2]0300 [2]\n\t\t[2] 0000 [2]0400 [2]\n\t\t[2] 0000\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_MF_nummyC_xorciser {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-17\"\n        description     = \"PE/MZ with specific abnormal xor with excessive cccc byte separation\"\n        sample          = \"\"\n        reference       = \"/wiki/emotet\"\n\n    strings:\n        //0001F379  33B033B4          xor si,[bx+si-0x4bcd]\n        //0001F37D  33B833BC          xor di,[bx+si-0x43cd]\n        //0001F381  33C0              xor ax,ax\n        //0001F383  33C4              xor ax,sp\n        //0001F385  33C8              xor cx,ax\n        //0001F387  33CC              xor cx,sp\n        //0001F389  33D0              xor dx,ax\n        //0001F38B  33D4              xor dx,sp\n        //0001F38D  33F8              xor di,ax\n        //0001F38F  33FC              xor di,sp\n        //0001F391  3314              xor dx,[si]\n        //0001F393  342C              xor al,0x2c\n        //0001F395  3458              xor al,0x58\n        //0001F397  345C              xor al,0x5c\n        //0001F399  3460              xor al,0x60\n        //0001F39B  3464              xor al,0x64\n        $ = { 33C0 33C4 33C8 33CC }\n\n        //0001F3C9  34C0              xor al,0xc0\n        //0001F3CB  34C4              xor al,0xc4\n        //0001F3CD  34C8              xor al,0xc8\n        //0001F3CF  34CC              xor al,0xcc\n        $ = { 34C0 34C4 34C8 34CC }\n\n        //0001F362  803384            xor byte [bp+di],0x84\n        $ = { 8033 }\n\n        //Feelz\n        $ = {\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule Office_Ursnif_PD94\n:maldoc\n{\n    meta:\n        description = \"Potential Ursnif maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The PD94 variables are the use base64 encoded XML likely xsl at the very beginning\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-12-19\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/ursnif\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $jab1 = { 0000 5044 3934 6257 7767 646d 56 }\n        $jab2 = { 0000 5000 4400 3900 3400 6200 5700 7700 6700 6400 6d00 5600 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n}\n\nrule PE_MZ_MF_push_ecx_or {\n\n    meta:\n\tauthor          = \"Nathan Fowler\"\n        thanks          = \"Jerry Zepp\"\n        date            = \"2019-12-06\"\n        description     = \"PE/MZ with too much push ecx with or ecx,ebx\"\n        sample          = \"\"\n        reference\t= \"\"\n\n    strings:\n\n//\t0003F18B  51                push ecx\n//\t0003F18C  51                push ecx\n//\t0003F18D  51                push ecx\n//\t0003F18E  51                push ecx\n//\t0003F18F  51                push ecx\n//\t0003F190  51                push ecx\n//\t0003F191  2C17              sub al,0x17\n//\t0003F193  1010              adc [eax],dl\n//\t0003F195  0B0B              or ecx,[ebx]\n//\t0003F197  0B0B              or ecx,[ebx]\n//\t0003F199  0B050B0B0B0B      or eax,[dword 0xb0b0b0b]\n//\t0003F19F  0C0D              or al,0xd\n\n        $ = { 5151 5151 5151 5151 [2-4] 0B0B }\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule certificate_chicanery_b64_too_long {\n  meta:\n    description = \"Detects pem-encoded certificates that are too long to be real.\"\n    date = \"2019-12-05\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ffe3a6b7edb96c0e33fc50b514d46ac4\"\n    tlp = \"green\"\n    analyst_note = \"Fake pem-encoded certificates that are actually files. Maximum pem length is 32768 by standard.\"\n    prod = \"true\"\n  strings:\n    $head = \"-----BEGIN CERTIFICATE-----\" ascii\n    $tail = \"-----END CERTIFICATE-----\" ascii\n  condition:\n    uint16(0) == 0x2d2d and filesize > 33KB\n    and $head at 0 and $tail in (filesize-32..filesize)\n    and #head == 1 and #tail == 1\n}\n\nrule PE_MZ_MF_xor_enter {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-05\"\n        description     = \"PE/MZ with similar xor against eax dh,bh to enter\"\n        sample          = \"\"\n        reference       = \"/wiki/hawkeye\"\n\n    strings:\n\n        //00151EEC  A030A830AC        mov al,[0xac30a830]\n        //00151EF1  30B030B430B8      xor [eax-0x47cf4bd0],dh\n        //00151EF7  30BC30C030C430    xor [eax+esi+0x30c430c0],bh\n        //00151EFE  C830CC30          enter 0xcc30,0x30\n\n        $ = { A0[4] 30B?[4] 30B?[5] C830 }\n        $ = { CCCC CCCC CCCC }     //Bunch of int3 nonsense\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule PE_MZ_MF_pop_xor {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-02\"\n        description     = \"PE/MZ with similar xor against al 0x?6->0x?e\"\n        sample          = \"6c0bd3a2425bde56d7e827ce036c6c0d\"\n        reference       = \"/wiki/sodinokibi\"\n\n    strings:\n\n        //00028C58  5B                pop ebx\n        //00028C59  3464              xor al,0x64\n        //00028C5B  346B              xor al,0x6b\n        //00028C5D  3480              xor al,0x80\n        //00028C5F  348C              xor al,0x8c\n        //00028C61  3496              xor al,0x96\n        //00028C63  349E              xor al,0x9e\n        //00028C65  34A6              xor al,0xa6\n        //00028C67  34AE              xor al,0xae\n        //00028C69  34B6              xor al,0xb6\n        //00028C6B  34BE              xor al,0xbe\n        //00028C6D  34C6              xor al,0xc6\n        //00028C6F  34CE              xor al,0xce\n        //00028C71  34D6              xor al,0xd6\n        //00028C73  34DE              xor al,0xde\n        //00028C75  34E6              xor al,0xe6\n        //00028C77  34EE              xor al,0xee\n        //00028C79  34F6              xor al,0xf6\n        //00028C7B  34FE              xor al,0xfe\n        //00028C7D  3406              xor al,0x6\n\n        $ = { A6?? AE?? B6?? BE?? C6?? CE?? D6?? DE?? E6?? EE?? F6?? FE }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_VBS_WSHRat {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-12-02\"\n\t\tdescription     = \"PE/MZ or VBS with literal text indicating it is WSHRat\"\n\t\tsample          = \"d2c395fe219cf04c7f57ea75f312f028\"\n\t\treference       = \"/wiki/houdini, /wiki/wshrat\"\n\n\tstrings:\n\n\t\t//00005520: 1243 6f70 7972 6967 6874 20c2 a920 2032  .Copyright ..  2\n\t\t//00005530: 3031 3900 000a 0100 056b 6c70 6c75 0000  019......klplu..\n\t\t//00005540: 1201 000d 5753 4852 6174 2050 6c75 6769  ....WSHRat Plugi\n\t\t//00005550: 6e00 0000 7c71 0000 0000 0000 0000 0000  n...|q..........\n\t\t//00005560: 9e71 0000 0020 0000 0000 0000 0000 0000  .q... ..........\n\t\t$ = \"WSHRat \"\tascii\n\t\t$ = \"NIUm\"\tascii // WSHRat\n\t\t$ = \"0hSYX\"\tascii // WSHRat\n\t\t$ = \"SFJhdC\"\tascii // WSHRat\n\n\tcondition:\n\t\t((uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550)\n\t\tor uint8(0) == 0x27)\n\t\tand any of them\n}\n\nrule Office_Macro_IntBuilding\n{\n        meta:\n                description = \"Office document with an excessively long single byte split-based tokenized string likely using binary write and put to drop an executable\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-21\"\n                sample = \"fbe55179449262e64d524738ab63f00a\"\n                reference = \"/wiki/crimsonrat\"\n\n        strings:\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//YARA will go nuts unless it has a forward anchor generating atoms\n\t\t$bad_mamajama = /\\x00([0-9]{1,3}[^0-9]){1024}/\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $bad_mamajama\n\n}\n\nrule PE_MZ_CrimsonRAT {\n\n        meta:\n                author          = \"Nathan Fowler\"\n\t\tthanks\t\t= \"Jason Blanks, Jason Reaves\"\n                date            = \"2019-11-21\"\n                description     = \"PE/MZ with a fixed unique packer/crypter/attribution string identified by Jason Blanks\"\n                sample          = \"ae23d2c808c2849dcd0cf2f1bdcf98d6\"\n                reference       = \"/wiki/crimsonrat\"\n\n        strings:\n\n\t\t$ = \"dooursuac\"\t\t\t\t\tnocase wide ascii\n\t\t$ = \"71461f04-2faa-4bb9-a0dd-28a79101b599\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_Echo\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto open, and @echo off\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-20\"\n                tlp = \"GREEN\"\n                sample = \"598ae1d71df7dee7c7f8a39fc723cdef, 5ec4fa2f8e0ceb362148da93b98a5839\"\n                reference = \"/wiki/dridex\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness = \"@echo off\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and any of ($ao*)\n                and $badness\n}\n\nrule HTML_Meta_Refresh\n:malhtml\n{\n\tmeta:\n\t\tdescription = \"ASCII HTML attachment using META REFRESH\"\n\t\tanalyst_notes = \"This is potentially phishing or highly abnormal\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-24\"\n\t\tmodified = \"2019-11-19\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$r1 = /<meta[\\x20\\x09\\r\\n]+HTTP-EQUIV=[\\x22\\x27\\r\\n]*REFRESH[\\r\\n\\x22\\x27\\x20\\x09]*content=/\tnocase ascii\n\n\t\t//Exclusions\n\t\t$e1 = \".citrixdata.com/\"\tascii\n\t\t$e2 = \".force.com/\"\t\tascii\n\t\t$e3 = \".sharefile.com/\"\t\tascii\n\t\t$e4 = \".documentforce.com/\"\tascii\n\t\t$e5 = \".salesforce.com/\"\tascii\n\n\tcondition:\n\t\tfilesize < 8KB\n\t\tand uint16(0) != 0xcfd0\n\t\tand any of ($r*)\n\t\tand not any of ($e*)\n}\n\n\nrule PE_MZ_Fixed_100byte_B64 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-14\"\n                description     = \"PE/MZ with a fixed 100 bytes sequentially separated by quad-null at least 32 times\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference       = \"/wiki/emotet\"\n\n        strings:\n\n\t\t$b64 = /(\\x00\\x00\\x00\\x00[A-Za-z0-9\\x2b\\x2f\\x3d]{100}){32}\\x00\\x00\\x00\\x00/\n\t\t$dot_net = \"WrapNonExceptionThrows\"\n\n        condition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $b64\n\t\tand not $dot_net\n}\n\nrule Office_Macro_Forms_DoubleEscapePath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using Microsoft Forms 2.0 with an escaped path string\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"Microsoft Forms 2.0 Form\"\t\twide ascii\n\t\t$badness2 = \"Embedded Object\"\t\t\twide ascii\n\t\t$badness3 = \"c:\\\\\\\\\"\t\t\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n}\n\nrule Office_Forms_ShellV_ActiveWindow\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0, ShellV, and ActiveWindow\"\n\n\tstrings:\n\t\t$ = \"Microsoft Forms 2.0 Form\"\n\t\t$ = \"Embedded Object\"\n\t\t$ = \"ShellV\"\n\t\t$ = \"ActiveWindow\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Macro_Forms_B64\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0 and what appears to be a long base64 embed with macro code\"\n\n\tstrings:\n\t\t//0000e20: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n\t\t//0000e30: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n\t\t//0000e40: 6564 6465 6420 4f62 6a65 6374 000d 0000  edded Object....\n\t\t//0000e50: 0046 6f72 6d73 2e46 6f72 6d2e 3100 f439  .Forms.Form.1..9\n\n\t\t$f1 = \"Microsoft Forms 2.0 Form\"\n\t\t$f2 = \"Embedded Object\"\n\n\t\t//Base64 fixation on \\x2b\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2f]{1,256}\\x2b\\x2b?){8}/\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($f*)\n\t\tand $b64\n\t\tand any of ($vb*)\n}\n\nrule PE_MZ_MF_ButtXorcising_00aa800 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-07\"\n                description     = \"PE/MZ with 0x00 to xor eax,dh at 0x00aa800\"\n                sample          = \"119272817301ed65056fce0a988ca4e2\"\n                reference       = \"/wiki/emotet\"\n\n        condition:\n\t\t//000AA7FC  0000              add [eax],al\n\t\t//000AA7FE  0000              add [eax],al\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3030              xor [eax],dh\n\t\t//000AA804  0000              add [eax],al\n\t\t//000AA806  0000              add [eax],al\n\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3000              xor [eax],al\n\n\t\t//Hold my beer!\n\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d\n\t\tand uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint16(0x00aa800) == 0x3030\n\t\tand (\n\t\t\t   uint16(0x00aa800+2) == 0x0030\n\t\t\tor uint16(0x00aa800+2) == 0x3030\n\t\t\tor uint16(0x00aa800+2) == 0x3000\n\t\t\tor uint16(0x00aa800+2) == 0x0000\n\t\t)\n\t\tand uint32(0x00aa800-4) == 0x00000000\n\t\tand uint32(filesize-4) == 0x00000000\n}\n\nrule PE_MZ_MF_nop_cli_aaa {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with a potential nop loop and plenty of cli to aaa\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference\t= \"/wiki/formbook\"\n\n        strings:\n\t\t//000960C4  00DA              add dl,bl\n\t\t//000960C6  90                nop\n\t\t//000960C7  E200              loop 0x960c9\n\t\t//000960C9  A5                movsd\n\n\t\t$s1 = { 90?? ??a5 }\n\n\t\t//0009691D  FA                cli\n\t\t//0009691E  37                aaa\n\n\t\t$s2 = { fa37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #s2 > 32\n}\n\nrule PE_MZ_MF_aaa_xor {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with aaa to xor likely at fixed byte spaces repeatedly\"\n                sample          = \"2a59b2da2f755298511fb02d0c562d09, ade3222c8a1116639e08ecc6a945f16a\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//0003700B  37                aaa\n\t\t//0003700C  3233              xor dh,[bp+di]\n\t\t//0003700E  363039            xor [ss:bx+di],bh\n\t\t//00037011  363338            xor di,[ss:bx+si]\n\t\t//00037014  3431              xor al,0x31\n\t\t//00037016  37                aaa\n\t\t//00037017  3232              xor dh,[bp+si]\n\t\t//00037019  3034              xor [si],dh\n\t\t//0003701B  3235              xor dh,[di]\n\t\t//0003701D  3131              xor [bx+di],si\n\t\t//0003701F  3838              cmp [bx+si],bh\n\t\t//00037021  37                aaa\n\t\t//00037022  3339              xor di,[bx+di]\n\t\t//00037024  3338              xor di,[bx+si]\n\t\t//00037026  3039              xor [bx+di],bh\n\t\t//00037028  3237              xor dh,[bx]\n\t\t//0003702A  353035            xor ax,0x3530\n\t\t//0003702D  37                aaa\n\n\t\t$s1 = { 37 [8-12] 37 [8-12] 37 [8-12] 37 }\n\n\t\t//00037044  37                aaa\n\t\t//00037045  3137              xor [bx],si\n\t\t//00037047  37                aaa\n\n\t\t$s2 = { 37 [2] 37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $s1 in (filesize-128..filesize)\n\t\tand $s2 in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_xor_add {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with xor edi, and an odd add of null bytes via add eax+eax+0x0\"\n                sample          = \"c65c495d5b6c6141f9075f333376577a\"\n                reference\t= \"/wiki/troldesh\"\n\n        strings:\n\t\t//000F8770  0E                push cs\n\t\t//000F8771  6C                insb\n\t\t//000F8772  33FF              xor edi,edi\n\t\t//000F8774  003A              add [edx],bh\n\t\t//000F8776  00740000          add [eax+eax+0x0],dh\n\n\t\t$ = { 33ff 003a 0074 0000 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MF_ButtXorcising {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a significant amount of cmp and xor at EOF likely\"\n                sample          = \"b89aa47071ff9e25758503b9ebf830e1\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//00045203  3031              xor [ecx],dh\n\t\t//00045205  3534 3438 30        xor eax,0x30383434\n\t\t//0004520A  3335 3931 3736      xor esi,[dword 0x36373139]\n\t\t//00045210  3135 3538 3636      xor [dword 0x36363835],esi\n\t\t//00045216  3536 3936 30        xor eax,0x30363936\n\t\t//0004521B  3238              xor bh,[eax]\n\t\t//0004521D  3239              xor bh,[ecx]\n\t\t//0004521F  3031              xor [ecx],dh\n\t\t//00045221  3335 3333 3733      xor esi,[dword 0x33373333]\n\t\t//00045227  3931              cmp [ecx],esi\n\t\t//00045229  333535373834      xor esi,[dword 0x34383735]\n\t\t//0004522F  3036              xor [esi],dh\n\t\t//00045231  363332            xor esi,[ss:edx]\n\t\t//00045234  3539343034        xor eax,0x34303439\n\t\t//00045239  383533383830      cmp [dword 0x30383833],dh\n\t\t//0004523F  3031              xor [ecx],dh\n\t\t//00045241  3534343830        xor eax,0x30383434\n\t\t//00045246  333539313736      xor esi,[dword 0x36373139]\n\t\t//0004524C  313535383636      xor [dword 0x36363835],esi\n\n\t\t$butt = { 3031 [16-48] 3031 [16-48] 3031 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #butt >= 8\n\t\tand $butt in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_MoveNJump {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a very tight sequence of mov eax,eax with jump dword to similar bytes\"\n                sample          = \"b13338b707a3f01899b967e510470d57\"\n                reference\t= \"/wiki/imminentrat\"\n\n        strings:\n                //0000400  FF252C514100      jmp dword [dword 0x41512c]\n                //00000406  8BC0              mov eax,eax\n                //00000408  FF2528514100      jmp dword [dword 0x415128]\n                //0000040E  8BC0              mov eax,eax\n                //00000410  FF2524514100      jmp dword [dword 0x415124]\n                //00000416  8BC0              mov eax,eax\n                //00000418  FF2520514100      jmp dword [dword 0x415120]\n                //0000041E  8BC0              mov eax,eax\n                //00000420  FF251C514100      jmp dword [dword 0x41511c]\n                //00000426  8BC0              mov eax,eax\n                //00000428  FF2518514100      jmp dword [dword 0x415118]\n                //0000042E  8BC0              mov eax,eax\n                //00000430  FF2538514100      jmp dword [dword 0x415138]\n                //00000436  8BC0              mov eax,eax\n                //00000438  FF2514514100      jmp dword [dword 0x415114]\n                //0000043E  8BC0              mov eax,eax\n                //00000440  FF2510514100      jmp dword [dword 0x415110]\n                //00000446  8BC0              mov eax,eax\n                //00000448  FF250C514100      jmp dword [dword 0x41510c]\n                //0000044E  8BC0              mov eax,eax\n                //00000450  FF2508514100      jmp dword [dword 0x415108]\n                //00000456  8BC0              mov eax,eax\n                //00000458  FF2504514100      jmp dword [dword 0x415104]\n                //0000045E  8BC0              mov eax,eax\n                //00000460  FF2548514100      jmp dword [dword 0x415148]\n                //00000466  8BC0              mov eax,eax\n                //00000468  FF2544514100      jmp dword [dword 0x415144]\n                //0000046E  8BC0              mov eax,eax\n                //00000470  FF2540514100      jmp dword [dword 0x415140]\n                //00000476  8BC0              mov eax,eax\n                //00000478  FF2554514100      jmp dword [dword 0x415154]\n                //0000047E  8BC0              mov eax,eax\n                //00000480  FF2550514100      jmp dword [dword 0x415150]\n                //00000486  8BC0              mov eax,eax\n                //00000488  FF2500514100      jmp dword [dword 0x415100]\n                //0000048E  8BC0              mov eax,eax\n                //00000490  FF25FC504100      jmp dword [dword 0x4150fc]\n\n                $ = {\n                     \tff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n        }\n\n\tcondition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_MF_push_inc_dec_pop_xor {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and xor\"\n\t\tsample\t\t= \"682226ea12f4323a3cbba4f6d05cc731\"\n\t\treference\t= \"/wiki/trickbot\"\n\n        strings:\n                //000C01D4  50                push eax\n                //000C01D5  41                inc ecx\n                //000C01D6  44                inc esp\n                //000C01D7  44                inc esp\n                //000C01D8  49                dec ecx\n                //000C01D9  4E                dec esi\n                //000C01DA  47                inc edi\n                //000C01DB  58                pop eax\n                //000C01DC  58                pop eax\n                //\n                //000C01DD  50                push eax\n                //000C01DE  41                inc ecx\n                //000C01DF  44                inc esp\n                //000C01E0  44                inc esp\n                //000C01E1  49                dec ecx\n                //000C01E2  4E                dec esi\n                //000C01E3  47                inc edi\n\n                $wtf1 = {\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                }\n\n\t\t//0009C001  42                inc edx\n\t\t//0009C002  3130              xor [eax],esi\n\t\t//0009C004  0000              add [eax],al\n\t\t//0009C006  0000              add [eax],al\n\n\t\t$wtf2 = { 42 3130 0000 0000 }\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_MF_push_inc_dec_pop {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and shl dword\"\n\n        strings:\n\t\t//000C01D4  50                push eax\n\t\t//000C01D5  41                inc ecx\n\t\t//000C01D6  44                inc esp\n\t\t//000C01D7  44                inc esp\n\t\t//000C01D8  49                dec ecx\n\t\t//000C01D9  4E                dec esi\n\t\t//000C01DA  47                inc edi\n\t\t//000C01DB  58                pop eax\n\t\t//000C01DC  58                pop eax\n\t\t//\n\t\t//000C01DD  50                push eax\n\t\t//000C01DE  41                inc ecx\n\t\t//000C01DF  44                inc esp\n\t\t//000C01E0  44                inc esp\n\t\t//000C01E1  49                dec ecx\n\t\t//000C01E2  4E                dec esi\n\t\t//000C01E3  47                inc edi\n\n                $wtf1 = {\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t}\n\n\t\t//0003AEE7  C12020            shl dword [eax],byte 0x20\n\t\t$wtf2 = { C12020 }\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_ADD_EAX_4 {\n\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-11-01\"\n\t\tdescription\t= \"PE/MZ with an abnormal amount of 'add eax,4' possitionally concatenated together\"\n\t\tthanks\t\t= \"Rob Simmons, master of math feelz\"\n\n\tstrings:\n\t\t$wtf = { 83c004 [24-29] 83c004 [24-29] 83c004 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #wtf >= 8\n}\n\nrule DirectVBE7DLL_URL\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE7.DLL, password protection, and URLs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-11-01\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$auto1 = \"Workbook_Open\"\n\t\t$auto2 = \"Document_Open\"\n\t\t$auto3 = \"Workbook_Close\"\n\t\t$auto4 = \"Document_Close\"\n\n\t\t$url1 = \":/\"\n\t\t$url2 = \"/:\"\n\n\t\t$pass1 = \"Password\" nocase\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n\t\tuint16(0) == 0xcfd0 and $office1 at 0\n                and all of ($dll*) and any of ($vb*) and any of ($auto*) and any of ($url*) and all of ($pass*)\n\t\tand not any of ($exclude*)\n}\n\n\nrule PE_MZ_NET_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 0x0b repeatedly\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-22\"\n                samples = \"fb4116fc8cb498fd4bd521e0d46a4526\"\n                reference = \"/wiki/agenttesla\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n                $ = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_NET_64x3x3_ABC\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 64 bytes of 3 byte lowercase a-z nonsense null separated\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-16\"\n\t\tsamples = \"0af7e3fe796cd3f1420ae9132ec59078\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$choochoo_it_is_the_idiot_train = /(\\x00[a-z]{3}){64}/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #choochoo_it_is_the_idiot_train > 16\n\n}\n\nrule PE_MZ_DOUBLESTUFFED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed, with an embedded PE/MZ\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"Ronnie T\"\n        risk        = \"high\"\n        date        = \"2019-10-15\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"208f55b5aec627fc100cad0703caf78b,35961988631d38424f0d43acdc3d6040,71ea6fe86188e0b487efbc30678115d0,840072e60195f3f593768b3df42cf99d,8d536592acc6050087ee8b70f7e79c64,8eda0309ee2d27408adf1bc4eba14b82,fa94e348babc6c9d0feaf30f6808fa62\"\n\n    strings:\n        //This program ... be run\n        $p1 = { 2154 6869 7320 7072 6f67 7261 6d20 [4-6] 2062 6520 7275 6e20 }\n\n    condition:\n\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and #p1 >= 2\n}\n\nrule PE_MZ_SHA1_WIDE_VSI_PACKED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed,  with a wide SHA1 hash null separated after VS_VERSION_INFO\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n\t$vsi = \"VS_VERSION_INFO\"\t\t\twide\n\t$sha = /\\x00\\x00([a-fA-F0-9]\\x00){40}\\x00/\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(0x80) != uint32(0x85)\n\tand uint32(0x86) != uint32(0x91)\n\tand uint32(0x92) != uint32(0x95)\n\tand all of them\n\tand @sha > @vsi\n}\n\nrule PE_MZ_NET_Portable_Pads\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable with PADPAD and super-duper portable.\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"    ascii\n\t$ = \"PADPAD\"\n\n\t//Portable + portable\n\t$ = { 7000 6f00 7200 7400 6100 6200 6c00 65 }\n\t$ = { 5000 6f00 7200 7400 6100 6200 6c00 65 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule vbs_sins_many_small_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using thousands of small arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-10-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"637b148a482a96cad07aafec5c9726cf, bc24d1771a323d2ef64aa13ba0c1f29c, 26446c8003ec839ddb9e35bf4a51b154\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /=array\\(([a-z0-9]{2,12},){25}/ nocase\n  condition:\n    filesize > 100KB and filesize < 10000KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 500\n}\n\nrule PE_MZ_NET_Confuser\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable using ConfuserEx\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/quasar\"\n        sample      = \"75602c2990a65a38484bfa45c622edf5\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\tascii\n\t$ = \"ConfuserEx v\"\t\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_2Spooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is making ghost noises\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        $ = {\n            4545 45?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4545 45\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_SoSpooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is probably making ghost noises between a 41 byte separation of 0x03 EOT\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        //Short circuit to avoid long atoms?\n        $johnny5 = { 0303 03[41] 0303 03 }\n\n        //PCRE time\n        $pcre_anchor = /\\x03{3}[^\\x03]{41}\\x03{3}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $johnny5\n        and $pcre_anchor\n}\n\nrule doc_is_an_msi : maldoc {\n  meta:\n    description = \"Finds documents that are actually exes that are actually msis using exe-to-msi converter.\"\n    date = \"2019-10-02\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"12e9bf78f8fcf9bb363031b8095a02ad\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler, Oracle of Delphi Compilers\"\n  strings:\n    // www.exetomsi.com\n    $s1 = { 77 77 77 2e 65 78 65 74 6f 6d 73 69 2e 63 6f 6d }\n    // Exe to msi converter\n    $s2 = { 45 78 65 20 74 6f 20 6d 73 69 20 63 6f 6e 76 65 72 74 65 72 }\n    // This program cannot be run in DOS mode\n    $t1 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f 74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20 6d 6f 64 65 }\n    // This program must be run under Win32\n    $t2 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 6d 75 73 74 20 62 65 20 72 75 6e 20 75 6e 64 65 72 20 57 69 6e 33 32 }\n  condition:\n    uint16(0) == 0xcfd0 and\n    all of ($s*) and ($t1 or $t2)\n}\n\nrule ta505_dll_packer_science_not_feelz\n:malexe\n{\n\tmeta:\n\t\tauthor = \"sysopfb\"\n\t\tadjustments = \"Nathan Fowler\"\n\t\tdate = \"2019-10-01\"\n\t\treference = \"/wiki/ta505\"\n\t\tsample = \"60d670ba325ab1ff6f64b810681a780c\"\n\n\tstrings:\n\t\t$ = { c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 c1 45 08 04 8b 4d 08 81 c1 78 77 77 77 }\n\n\tcondition:\n                (uint16(0) == 0xcfd0 or (uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550))\n\t\tand all of them\n}\n\nrule PE_MZ_HineyButt_PDB\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a PDB in the last 8 bytes of a file\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n        $dll = \".DLL\"       nocase ascii\n\t$pdb = \".pdb\"       nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand $dll in (512..768)\n        and $pdb in (filesize-8..filesize)\n}\n\nrule PE_MZ_Many_kernel32DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 'kernel32.DLL' instanced twice, once at the beginning of the file after the PE header\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$kern = \"kernel32.DLL\"\tnocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $kern in (512..768)\n\tand #kern >= 2\n}\n\nrule PE_MZ_PaddingUpFront_DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with DLL instanced in the beginning of the file and XXPADDING present\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$dll = \".DLL\"\t\tnocase ascii\n\t$pad = \"XXPADDING\"\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $dll in (512..768)\n\tand $pad\n}\n\nrule vbs_sins_yuge_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using yuge arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-09-25\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    greetz = \"Jose Tejada, Miscreant Hunter\"\n    samples = \"ab606edac9743bd38329630496e13bcc, 048a451e99556b0f90576c2a976073d7\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /\\)\\x0a[a-z]{1,15}=array\\(([a-z0-9]{1,2},){500}/ nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 25\n}\n\nrule vbs_sins_funky_const {\n  meta:\n    description = \"Isolates 'interesting'  vbs files that obfuscate using const. As seen in Qakbot\"\n    date = \"2019-09-23\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"fa72ac316f5d4fe20f4b4fcca16033da, c9a59a536d6ee03780c60638a427dbe9\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"creATeOBjEct(\\\"Scripting.FileSystemObject\\\")\" ascii nocase\n    $s2 = \"GetOsVersion\" ascii nocase\n    $s3 = \":const\" ascii nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    all of ($s*) and #s3 > 50\n}\n\n\nrule OLE_Execution_2016\n{\n        meta:\n                description = \"Office document containing shell execution functions and OLE\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-09-24\"\n        strings:\n                $ole1 = \"OLE\"\n\n                //$http1 = \"http://\" nocase\n                //$http2 = \"https://\" nocase\n\t\t$http3 = \"XMLHTTP\"\n\t\t$http4 = \"ResponseBody\" nocase\n\n                $script1 = \"vbscript\" nocase\n                $script2 = \"wscript\" nocase\n                $script3 = \"Scripting.\"\n                $script5 = \"CreatObject\"\n\n                $exe1 = \".exe\" nocase\n                $exe2 = \"Env\"\n                $exe3 = \".Shell\" nocase\n                $exe4 = \".Run \" nocase\n\n        condition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0)\n                and any of ($ole*) and any of ($http*) and any of ($script*) and any of ($exe*)\n}\n\nrule PE_MZ_B_Emotet_IP\n:malexe\n{\n    meta:\n        description = \"PE/MZ with fixed byte offset values\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\tanalyst_notes = \"These byte offset matches appear to be related to a heavily packed PE/MZ with explicit byte offsets used for unpacking.\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint16(0x0003772C) == uint16(0x00000088)\n\tand uint16(0x0003785C) == uint16(0x00000088)\n}\n\nrule PE_MZ_ABC\n:malexe\n{\n    meta:\n        description = \"PE/MZ with some ABC fluff\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\n    strings:\n\t$ = { \t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t}\n\n\t$ = {\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t}\n\n\t$ = { \t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t}\n\n\t$ = {\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t}\n\n\t$ = {\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t}\n\n\t$ = {\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t}\n\n    condition:\n\tfilesize < 768KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_Kernel_No_Kernel\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a Lev Distance transformation of kernel32 of one.\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-12\"\n        tlp         = \"AMBER\"\n\n    strings:\n        //Lev Distance 1 transformations of Kernel32 ASCII non-wide\n        $ = /[^k]ernel32/    nocase ascii\n        $ = /k[^e]rnel32/    nocase ascii\n        $ = /ke[^r]nel32/    nocase ascii\n        $ = /ker[^n]el32/    nocase ascii\n        $ = /kern[^e]l32/    nocase ascii\n        $ = /kerne[^l]32/    nocase ascii\n        $ = /kernel[^3]2/    nocase ascii\n        $ = /kernel3[^2]/    nocase ascii\n\n        //Lev Distance 1 transformations of Kernel32 ASCII wide\n        $ = /[^k]\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00[^e]\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00[^r]\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00[^n]\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00[^e]\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00[^l]\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x00[^3]\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x00[^2]/    nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_NET_SquidFsckers\n:malexe\n{\n        meta:\n\t\tdescription = \"PE/MZ .NET executable with an excessive amount of character-curlybrace embraces and ASCII immediately after assembly\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2019-09-12\"\n                tlp         = \"AMBER\"\n                sample      = \"84c7b34d6f53d8223ac2c2a40b38f831\"\n                reference   = \"/wiki/hawkeye\"\n\n        strings:\n                $net = \"WrapNonExceptionThrows\"\n                $squid1 = /[a-zA-Z][\\x7b\\x7d]/\n                $squid2 = /[\\x7d\\x7d][a-zA-Z]/\n                $ass = /<\\/assembly>[A-Za-z]/\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $net\n                and $ass\n                and (#squid1 + #squid2) > 1024\n}\n\nrule PE_MZ_AspireCrypt\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-06\"\n                description = \"PE MZ packed/encrypted with AspireCrypt\"\n                samples = \"a55b7e19b8990ec82acef9e0248be445\"\n\n        strings:\n\t\t//*protected by AspireCrypt - aspirecrypt.net\n\t\t$ = \"aspirecrypt\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule base64_string_theory {\n  meta:\n    description = \"Identifies hostile .ps1 files that use other files to write/read base64 to exes.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-20\"\n    samples = \"187d6fac509379430c969459e53851a5, 85ac7cda6c50b42ce8be5fb32944f9ae, fd2c513cfb6943b5de95b18acfb25b57\"\n    family = \"remcos\"\n    greetz = \"Nathan Fowler of Clan Feelz, Peter Misurek of Clan Feelz, Reversing Labs and the A1000 Wonder machine\"\n    feelz = \"https://www.youtube.com/watch?v=5FELdBsixGg\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"WriteAllBytes(\" ascii nocase\n    $s2 = \"FromBase64String(\" ascii nocase\n    // .exe encoded as argument\n    $s3 = \"LmV4ZQ==\"\n    // execute the thing\n    //$s4 = \"Start-Process\"\n  condition:\n    filesize < 1MB and\n    for any i in (1..16): ( i == 0x0a ) and\n    all of them\n}\n\nrule base64_wide_theory {\n  meta:\n    description = \"Finds incredibly long wide base64 sections within .net v2 executables, observed in Raccoon for string->executable crafting\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-09-06\"\n    samples = \"2abdc20b86f1be28e8b7fee52cd4f5f0\"\n    reference = \"/wiki/raccoon\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler - Human-Based Machine Learner, Rob Pantz - Base64 Decoder\"\n    tlp = \"green\"\n  strings:\n    //CorExeMain|00|mscoree.dll\n    $s1 = { 43 6f 72 45 78 65 4d 61 69 6e 00 6d 73 63 6f 72 65 65 2e 64 6c 6c }\n    // base64 wide area, fronted by \\x01 (start of heading?)\n    $s2 = { 22 e0 01 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    $s1 and $s2\n}\n\nrule PE_MZ_NET_Cntrline_0xff_Cont\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-05\"\n                reference = \"/wiki/azorult\"\n                description = \"PE MZ with an excessive amount of center-line 4 byte 0xff\"\n                samples = \"2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n\t\tgreetz = \"Ryan Moon\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /([^\\xff]{6}\\xff\\xff\\xff\\xff[^\\xff]{6}){8}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule too_many_high_ascii_ffff : malexe {\n  meta:\n    description = \"Finds out when there are just too many 0xFFFF, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"4716659cf8e22c72fa517ea649009c17, fe6c366a9197d1a9e924fa2a3338e1eb, 2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n    greetz = \"Nathan Fowler, CyberSwordsmith, Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n    prod = \"true\"\n  strings:\n    $xff = { ff ff [14] ff ff }\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    #xff > 100\n}\n\nrule Susp_MS_Lnk_CMD\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File spawning cmd /C\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-09\"\n        sample          = \"b61d0630c4efd55397eedd9e7ab323ae\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n\n       $cmd             = \"cmd.exe\"   ascii nocase\n       $arg             = \"/c\"        wide ascii nocase\n       $set             = \"set\"       wide ascii nocase\n\n    condition:\n        uint16(0) == 0x4c\n        and uint16(0x3c) == 0x7         // start minimized\n        and filesize < 20KB\n        and $bytes at 0x50\n        and @arg[1] - @cmd[#cmd] < 300\n        and @set[1] - @arg[#arg] < 10\n}\n\nrule Susp_MS_Lnk_Embedded_Payload\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File with embedded payload in machine name field\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-12\"\n        sample          = \"\"\n        sample          = \"\"\n        sample          = \"\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes1         = { 00 60 00 00 00 03 00 00\n                            a0 58 00 00 00 00 00 00 }\n        $bytes2         = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n    condition:\n        uint16(0) == 0x004c\n        and uint16(0x3c) == 0x0007       // start minimized\n        and $bytes2 at 0x50\n        and (filesize - @bytes1 > 500)\n}\n\nrule Office_WinHTTP_DirectDLL\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"WinHTTP function call with direct instancing of the WinHTTP DLL\"\n\t\tanalyst_notes = \"This maldoc contains Internet payload/functionality interaction\"\n\n\tstrings:\n\n\t\t//Lowercase wide and non-wide DLL direct instancing coupled with correct 'WinHttp' non-wide\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" ascii\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" wide\n\t\t$ = { 00 5769 6e48 7474 }\n\n\tcondition:\n\t\t//d0cf 11e0 a1b1 1ae1\n\t\tuint32(0) == 0xe011cfd0\n\t\tand all of them\n}\n\nrule PE_MZ_CleanButt_262140_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-04\"\n                reference = \"/wiki/loki\"\n                description = \"PE MZ with no human readable words in the last 262140 bytes to EOF\"\n\t\tanalyst_notes = \"It is very abnormal to have a PE/MZ that contains no human readable words, either in wide or non-wide format, in the last 262140 bytes to EOF.\"\n                samples = \"0ba008a118dc5b6d8d6143c4f9e0c66c\"\n\n        strings:\n\t\t$ascii_word1 = /\\x00[A-Za-z][a-z]{3,32}\\x00/\n\t\t$ascii_word2 = /\\x00[A-Za-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00/\n\n        condition:\n                filesize <= 4096KB\n\t\tand filesize > 262140\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not $ascii_word1 in (filesize-262140..filesize)\n                and not $ascii_word2 in (filesize-262140..filesize)\n}\n\nrule PE_Generic_Stealer\n:malexe\n{\n    meta:\n        description = \"\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-08-08\"\n\tmodified    = \"2019-09-04\"\n        source      = \"https://pastebin.com/raw/Yxsy9t6C\"\n        sample      = \"9982685953def8f730e37c9fab083076\"\n        sample      = \"c71459c3dabf8529ccb6dcade5e10432\"\n        tlp         = \"AMBER\"\n\n    strings:\n        // SELECT .. FROM moz_logins : camel-case\n        $stealer    = { (53|73) 00 (45|65) 00 (4c|6c) 00 (45|65) 00 (43|63)\n                        00 (54|74) 00 20 00 [0-40] 20 00 (46|66) 00 (52|72)\n                        00 (4f|6f) 00 (4d|6d) 00 20 00 6d 00 6f 00 7a 00 5f\n                        00 6c 00 6f 00 67 00 69 00 6e 00 73 00 }\n\n        $stealer2    = { (53|73) (45|65) (4c|6c) (45|65) (43|63)\n                         (54|74) 20 [0-40] 20 (46|66) (52|72)\n                         (4f|6f) (4d|6d) 20 6d 6f 7a 5f\n                         6c 6f 67 69 6e 73 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and 1 of ($stealer*)\n}\n\nrule PE_MZ_416_PipeHead_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ian Slacke\"\n                date = \"2019-09-03\"\n                reference = \"/wiki/raccoon\"\n                description = \"Multiple terse 4-16 byte pipe separated ascii printable values and instanced APIs\"\n                samples = \"239d209251de435fe56ff3cbebd23e2e\"\n\n        strings:\n\t\t$pipes = /\\x7c[\\x20-\\x7b\\x7d-\\x7e]{4,16}\\x7c/\n\n\t\t$api1 = \"WINHTTP.dll\"\tnocase wide ascii\t//Winnernets!\n\t\t$api2 = \"CRYPT32.dll\"\tnocase wide ascii\t//Crytpo API\n\t\t$api3 = \"SHLWAPI.dll\"\tnocase wide ascii\t//Shell API\n\t\t$api4 = \"KTMW32.dll\"\tnocase wide ascii\t//Kernel transaction manager\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #pipes >= 6\n\t\tand any of ($api*)\n}\n\nrule powerdrinkers_and_powerisos {\n  meta:\n    description = \"Identifies PowerISO and MagicISO files containing one exe used as the setup indicator. Observed in Remcos RAT.\"\n    date = \"2019-08-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"9eb841fc96f9f3f810a380bce4f0b459, b93836ecd4bb77e2afc669c1ac728d97, ba3fd5a3054cfe717aa9f1e39ac75cb9\"\n    thanks = \"Peter Misurek for big null rule and the maths, Trevor Jones, Hunter of Threat$, Nathan Fowler, Purveyor of Fine Feelz\"\n    tlp = \"green\"\n    reference = \"/wiki/remcos\"\n    prod = \"true\"\n  strings:\n    // start of iso archive is nulllllllllllllllllls (for like 30k), so pointer at 0 is 0000\n    // iso dvd tags\n    // CD001 type with version 01\n    $cd001 = { 02 43 44 30 30 31 01 }\n    // bea01 type instead, same version 01\n    $bea01 = { 42 45 41 30 31 01 }\n    // autorun this exe on open instruction\n    $run_exe = { 53 65 74 75 70 3d [1-128] 2e }\n    // normally files have names in iso, this exe does not\n    $no_leader_exe = { 00 00 00 00 00 00 00 00 00 00 00 00 00 4d 5a }\n  condition:\n    uint16(0) == 0x0000\n    and filesize > 100KB\n    and ($cd001 or $bea01)\n    and math.entropy(0,4096) == 0\n    and ($run_exe or $no_leader_exe)\n}\n\n\nrule PE_MZ_Mega_Flowbissa\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n\t\tmodified = \"2019-08-28\"\n                reference = \"/wiki/dridex, /wiki/avemaria\"\n                description = \"This very well could be Dridex or another abnormal packer.\"\n                analyst_notes = \"No idea why this actually works.\"\n                samples = \"c69585d584497dbcec267b6a0444a160, 30a6db8fb2b1a148220d9b93d5394380, fc81d570e1985dd47a5cd7bf55a993b9\"\n                feelz = \"https://youtu.be/R4Yu5TIgnTI?t=305\"\n\n        strings:\n                $flowbissa1 = \"^_[]\"\n                $flowbissa2 = \"_^[]\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n\t\t\t   #flowbissa1 > 5\n                \tor #flowbissa2 > 5\n\t\t)\n}\n\nrule PE_1010_2020_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-30\"\n                modified = \"2019-08-28\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and this weird counting stuffs\"\n                analyst_notes = \"This is a strange malware packer usualy with API calls used for VM detection/debugger detection and the 0x10->0x20 byte code is unusual.  The file may also use Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017, eb419cd10c94221e5223deb0e2857c97, 40b5945111a4e5175e731f67671eccb3, e492a6f1791974182879e2f17109d08a\"\n                thanks = \"Ryan Moon\"\n\n        strings:\n                //VM Check\n                $a1 = \"IsProcessorFeaturePresent\"\n                $a2 = \"IsDebuggerPresent\"\n\n                //1010->2020 usually null separated\n                $a3 = {    1010 1010 1010 1010 1010 1010 1010 1010    [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n                //0001f730: 5769 6465 4368 6172 546f 4d75 6c74 6942  WideCharToMultiB\n                //0001f740: 7974 6500 4b45 524e 454c 3332 2e64 6c6c  yte.KERNEL32.dll\n                $c1 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000a940: d600 4465 6c65 7465 4669 6c65 5700 4b45  ..DeleteFileW.KE\n                //000a950: 524e 454c 3332 2e64 6c6c 0000 ed01 4c6f  RNEL32.dll....Lo\n                $c2 = { 4465 6c65 7465 4669 6c65 5700 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000207c0: 0000 d103 4d75 6c74 6942 7974 6554 6f57  ....MultiByteToW\n                //000207d0: 6964 6543 6861 7200 4b45 524e 454c 3332  ideChar.KERNEL32\n                $c3 = { 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 7200 4b45 524e 454c 3332 }\n\n\t\t//00036a70: 616d 6500 0e01 456e 756d 5379 7374 656d  ame...EnumSystem\n\t\t//00036a80: 4c6f 6361 6c65 7345 7800 4b45 524e 454c  LocalesEx.KERNEL\n\t\t//00036a90: 3332 2e64 6c6c 0000 7702 5365 6e64 4d65  32.dll..w.SendMe\n\t\t$c4 = { 456e 756d 5379 7374 656d  4c6f 6361 6c65 7345 7800 4b45 524e 454c }\n\n\t\t//002e480: 6549 6e70 7574 4100 5200 436c 6f73 6548  eInputA.R.CloseH\n\t\t//002e490: 616e 646c 6500 4b45 524e 454c 3332 2e64  andle.KERNEL32.d\n\t\t//002e4a0: 6c6c 0000 6b01 4765 7450 726f 7057 0000  ll..k.GetPropW..\n\t\t$c5 = { 436c 6f73 6548 616e 646c 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n\t\t//0073000: e700 4372 6561 7465 5265 6d6f 7465 5468  ..CreateRemoteTh\n\t\t//0073010: 7265 6164 0000 4b45 524e 454c 3332 2e64  read..KERNEL32.d\n\t\t$c6 = { 4372 6561 7465 5265 6d6f 7465 5468 7265 6164 0000 4b45 524e 454c 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of ($a*)\n                and all of ($b*)\n                and any of ($c*)\n}\n\nrule gzip_contains_fake_exe : malexe {\n  meta:\n    description = \"Finds gzips with fake exe inside it that purports to be something else.\"\n    example = \"gzip containing jello.XLSX.exe in manifest\"\n    date = \"2019-08-28\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"e9b38ecad7856aead9c9a0b7be9a6f81\"\n    tlp = \"green\"\n    reference = \"/wiki/lokibot\"\n    prod = \"true\"\n  strings:\n    $fake_xls = /xlsx?\\.exe/ nocase\n    $fake_pdf = /pdf\\.exe/ nocase\n    $fake_doc = /docx?\\.exe/ nocase\n  condition:\n    uint16(0) == 0x8b1f\n    and any of them\n}\n\n\nrule PE_Big_Null\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-08-02\"\n        description   = \"\"\n        analyst_notes = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 40 i in(0..filesize):\n            (math.entropy(i*4096,4096) == 0)\n}\n\nrule PE_MZ_NET_PoundEquals\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"/wiki/nanocore\"\n                description = \"WrapNonExceptionThrows and 128 or more #=\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR.  This is likely an unpacked .NET executable\"\n                samples = \"8cdbf3c971c5617ae84f4c54ad16f87f\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$pe = \"#=\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #pe >= 128\n}\n\nrule PE_MZ_NET_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"\"\n                description = \"WrapNonExceptionThrows and 64 or more 8 byte fefe's.\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR\"\n                samples = \"6830373dc023bed9653a5e8c45782cd5\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fefe = /[fFeE]{8}/\n\t\t$ = \"VS_VERSION_INFO\"\twide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fefe >= 64\n}\n\nrule dine_and_dash_encoding : vbs {\n  meta:\n    description = \"Finds vbs files that have strange dashes + replace desires as probable field separators.\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"a5674232717a96084184e4b1ee3bd033\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227297/\"\n    tlp = \"green\"\n    notes = \"This is low response (~40 samples ever), but no falses.\"\n  strings:\n    $execute = \"execute(eval\" nocase\n    $replace = \"replace(\" nocase\n    $dine_and_dash = /-([A-Za-z0-9]{1,9}-){30}/\n  condition:\n    filesize < 100KB and\n    $execute and $replace and $dine_and_dash\n}\n\n\nrule Pepe_returns : malexe {\n  meta:\n    description = \"Potential dropper/stealer - PE + NulSoft installer + PEPEs\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"9f4d8bd1cba2681f3bcf642f56342ac7\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227296\"\n    tlp = \"green\"\n    greetz = \"Nathan Fowler, Crypto-PEPE-ologist\"\n  strings:\n    // nsoft installer - \"|c0|.ndata\"\n    $ndata = { 2e 6e 64 61 74 61 }\n    // KERNEL32 no dll, nulls\n    $kernel32 = { 00 4b 45 52 4e 45 4c 33 32 00}\n    // PEPE spice returns\n    $pepe_returns = { 45 ?? 50 8d 45 ?? 50 }\n  condition:\n    filesize > 400KB and filesize < 50MB\n    and uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and $ndata and $kernel32\n    and #pepe_returns > 5\n}\n\n\nrule PE_MZ_NET_MODULE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Peter Misurek\"\n                date = \"2019-08-27\"\n                reference = \"\"\n                description = \".NET executable with a wide URL and a Module pointed to an executable name\"\n                analyst_notes = \"This is likely some unpacked malware that is Internet aware\"\n\t\tsamples = \"80362c16664eec2644ce303a6f022053\"\n\n        strings:\n\t\t$ = \"://\"\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /\\x3cModule\\x3e\\x00[^\\x2e]{1,32}\\.exe\\x00/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MasterP\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-27\"\n                reference = \"/wiki/nemty\"\n                description = \"Looks like an op code or something.\"\n                analyst_notes = \"No idea why this actually works but it's probably an op code\"\n                samples = \"0e0b7b238a06a2a37a4de06a5ab5e615\"\n                feelz = \"meows://youtu.be/yGnMQsG4avI?t=14\"\n\n        strings:\n                $flowbissa1 = \",$P]\"\n                $flowbissa2 = \"4$P^\"\n                $flowbissa3 = \"<$P_\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                         #flowbissa1 > 10\n                      or #flowbissa2 > 10\n                      or #flowbissa3 > 10\n                )\n}\n\nrule PE_Comments_Little_Spaces\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-02\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule PE_MZ_VB6_NULL\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"MSVBVM60.DLL to NUL instanced in first 1024 bytes of file with 0x005642352136\"\n\t\tanalyst_notes = \"This PE/MZ is not packed but appears poorly crafted and malicious in nature\"\n\t\tsamples = \"8244e16cbc0d39564614f3bc2f9be0a5\"\n\n\tstrings:\n\t\t$vbm = {\t4d53 5642 564d 3630 2e44 4c4c 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n\t\t$vb56 = \"VB5!6\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $vbm in (128..1024)\n\t\tand $vb56\n}\n\nrule PE_MZ_SluttyPutty\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"Putty ASCII URL in the PE with IsDebuggerPresent\"\n\t\tanalyst_notes = \"This PE/MZ is attempting to appear like a legitimate Putty application\"\n\t\tsamples = \"7e13b2d92d7490b8b3a1f10edfe2f410\"\n\n\tstrings:\n\t\t$ = \"https://www.chiark.greenend.org.uk/~sgtatham/putty/\"\n\t\t$ = \"IsDebuggerPresent\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_aPlib\n:malexe\n{\n\tmeta:\n\t\tauthor=\"_pusher_\"\n\t\tdate=\"2016-06\"\n\t\tmodified = \"2019-08-23\"\n\t\tmodified_author = \"Nathan Fowler\"\n\t\treference = \"meows://github.com/x64dbg/yarasigs/blob/master/packer.yara\"\n\n\tstrings:\n\t\t$a0 = { 60 8B 74 24 24 8B 7C 24 28 8B 44 24 2C FC 33 DB B2 80 39 18 74 42 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 }\n\t\t$a1 = { 60 8B 74 24 24 8B 7C 24 28 FC 33 DB 33 D2 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a3 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a4 = { 61 94 55 B6 80 A4 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 8B C5 }\n\t\t$a5 = { B2 80 A4 B6 80 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3C AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 26 AC D1 E8 74 2F 13 C9 EB 1A 91 48 C1 E0 08 AC FF 53 04 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a6 = { B2 80 31 DB A4 B3 02 E8 6D 00 00 00 73 F6 31 C9 E8 64 00 00 00 73 1C 31 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 10 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 29 D9 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 ?? 11 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a7 = { 33 C9 FF D3 73 16 33 C0 FF D3 73 23 B6 80 41 B0 10 FF D3 12 C0 73 FA 75 42 AA EB E0 E8 46 00 00 00 02 F6 83 D9 01 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 48 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a8 = { 33 C9 FF 14 24 73 18 33 C0 FF 14 24 73 21 B3 02 41 B0 10 FF 14 24 12 C0 73 F9 75 3F AA EB DC E8 43 00 00 00 2B CB 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 41 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a9 = { 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a10 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 12 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 2B CB 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 4D 13 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule PE_MZ_VP_KernelSanders\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"Terse kernel32 API invocation for VirtualProtect with three or more Kernel32 instances\"\n                analyst_notes = \"This is a strange malware packer usually with API calls used for VM detection/debugger detection may use the 0x10->0x20 byte code\"\n                samples = \"4716659cf8e22c72fa517ea649009c17\"\n                feelz = \"https://youtu.be/DD0Sr2jpgnQ?t=93\"\n\n        strings:\n                //VirtualProtect to Kernel32\n                //0023d70: 5669 7274 7561 6c50 726f 7465 6374 0000  VirtualProtect..\n                //0023d80: 6b65 726e 656c 3332 2e64 6c6c 0000 0000  kernel32.dll....\n                $ = /VirtualProtect\\x00\\x00kernel32\\.dll\\x00\\x00\\x00\\x00/    nocase ascii\n\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #kern > 2\n}\n\nrule too_many_end_of_text_filler : malexe {\n  meta:\n    description = \"Finds out when there are just too many things, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"563735efb7ebe455df3640ecbf8408f8\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n  strings:\n    // EOT ascii\n    $end_of_text = /\\x03{32}/\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    #end_of_text > 10\n}\n\nrule PE_MZ_DoubleDLL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-16\"\n        reference = \"/wiki/guildma, https://isc.sans.edu/forums/diary/Guildma+malware+is+now+accessing+Facebook+andYouTube+to+keep+uptodate/25222/\"\n        description = \"MZP Delphi Executable that is a potential stealer\"\n        sample = \"9411341b781aa43b66b8f83658d5011b\"\n\n    strings:\n\t$dll1 = \"comctl32.dll\"\tnocase ascii\n\t$dll2 = \"kernel32.dll\"\tnocase ascii\n\t$dll3 = \"vcltest3.dll\"\tnocase ascii\n\t$dll4 = \"oleaut32.dll\"\tnocase ascii\n\t$dll5 = \"ole32.dll\"\tnocase ascii\n\n    condition:\n\tuint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #dll1 >= 2\n\tand #dll2 >= 2\n\tand all of them\n}\n\nrule PE_Extra_Naked\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d\n                and pe.characteristics & pe.RELOCS_STRIPPED\n                and pe.characteristics & pe.LINE_NUMS_STRIPPED\n                and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n                and pe.characteristics & pe.DEBUG_STRIPPED\n}\n\nrule PE_MZ_NET_1020_TooManySigns\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-19\"\n        reference = \"/wiki/nanocorehawkeye\"\n        description = \".NET executable with too many signature components\"\n        sample = \"a92669ec8852230a10256ac23bbf4489\"\n\n    strings:\n\t//Assembly to null\n\t$ = { 0d0a 3c2f 6173 7365 6d62 6c79 3e0d 0a00 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t//1010->2020 compiler\n\t$ = { \t1010 1010 1010 1010 1010 1010 1010 1010\n\t     \t[1-8]\n\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t}\n\n\t$s1 = \"Microsoft Code Signing PCA\"\n\t$s2 = \"Microsoft Time-Stamp\"\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n\tand #s1 >= 5\n\tand #s2 >= 5\n}\n\nrule shelling_out_and_being_violent : malexe {\n  meta:\n    description = \"Identifies API calls to Shell32.dll handles using ComSpec instead of cmd as the command interpreter with NUL as the ShellExecA verb.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-13\"\n    samples = \"5a2ad7e2c91b21c03aaf17915595306f\"\n    greetz = \"Brad Duncan, URLHaus, JB and Greg for Phoenix\"\n  strings:\n    $shell_dll = { 53 68 65 6c 6c 33 32 2e 64 6c 6c }\n    $shell_exec = { 53 68 65 6c 6c 45 78 65 63 75 74 65 41 }\n    $shell_default_null_verb = { 4e 55 4c }\n    $shell_comspec_call = { 43 6f 6d 53 70 65 63 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and all of them\n}\n\nrule PE_MZ_WallOfNull_EOF\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an insane amount of explicit NUL to EOF\"\n                author = \"Nathan Fowler\"\n                sample = \"59e255e597dc584a20009385367cc85e\"\n                reference = \"\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x00000000\t\t\t\t//Short-circuit\n\t\tand for all i in(1..1024): (uint32(filesize-(i*4)) == 0x00000000) //4096 bytes to NUL EOF\n}\n\nrule PE_MZ_Assembly_EOF_API\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an assembly tag within 128 bytes to NUL EOF and INET/RDP API calls\"\n                analyst_notes = \"Potential Predator Stealer binary\"\n                author = \"Nathan Fowler\"\n                sample = \"a8d9a1d74d75111d1248932e13545a5d\"\n                reference = \"/wiki/predator\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$assembly = /\\x3c\\x2fassembly\\x3e[\\r\\n]*\\x00{1,128}$/\t//Match NUL to EOF\n\n\t\t$api1 = \"KERNEL32.dll\"\tnocase ascii\n\t\t$api2 = \"WININET.dll\"\tnocase ascii\n\t\t$api3 = \"USER32.dll\"\tnocase ascii\n\t\t$api4 = \"WTSAPI32.dll\"\tnocase ascii\t\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/\n\t\t$api5 = \"WTSSendMessageW\"\tnocase ascii\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/nf-wtsapi32-wtssendmessagew\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $assembly in (filesize-128..filesize)\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000) //16 bytes to NUL EOF\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_Guest_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with a Base64 encoding of the word Guest\"\n                analyst_notes = \"Potential RevengeRAT binary\"\n                author = \"Nathan Fowler\"\n                sample = \"30391066d576f91ec888dad1bc8d7566\"\n                reference = \"/wiki/revengerat\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"R3Vlc3Q=\"\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZP_Winapi_BB\n:malexe\n{\n        meta:\n\t\tdescription = \"PZ MZP with Winapi.Windows call near EOF, potentially Danabot\"\n                analyst_notes = \"Potential Danabot binary\"\n                author = \"Nathan Fowler\"\n                sample = \"8e2a3d781ff800fe400ca50879ecc727, ae4af8f29c1736b15c23dda0bd654235, 2f3db6c096a9b02f3bf8e7abeb1bddad\"\n                reference = \"/wiki/danabot\"\n                risk = \"high\"\n                date = \"2019-08-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $api1 = \"Winapi.\"\n\n\t\t$bytebash1 = {\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t}\n\n\t\t$bytebash2 = { \t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t}\n\n\t\t//Double-pack-built PE?\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n        condition:\n                uint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $api1 in (filesize-1024..filesize)\n\t\tand all of them\n}\n\nrule crypt_sniffer : malexe {\n\tmeta:\n\t\tdescription = \"Finds the crypto API calls used by remcos exes.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \"2019-08-07\"\n\t\tsample = \"9f00c4aeab418866544aef17db3ecac0\"\n\t\tsource = \"https://pastebin.com/raw/JaGe6qX8\"\n\tstrings:\n\t\t// whole tamale is a combination of crypt32.dll and api prep with some error strings between them.\n\t\t$whole_tamale = { 00 00 00 00 43 00 72 00 79 00 70 00 74 00 33 00 32 00 2e 00 64 00 6c 00 6c 00 00 00 43 72 79 70 74 50 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 43 72 79 70 74 55 6e70 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 00 00 43 00 72 00 79 00 70 00 74 00 50 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 00 00 43 00 72 00 79 00 70 00 74 00 55 00 6e 00 70 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 }\n\t\t// our friend xpadding\n\t\t$padding = { 58 50 41 44 44 49 4e 47 }\n\t\t// fake rar reference\n\t\t$fake_rar = { 73 66 78 72 61 72 }\n\t\t// real rar\n\t\t$real_rar = { 77 69 6e 2e 72 61 72 20 47 6d 62 48 }\n\t\t// rar inside it\n\t\t$rar_header = { 52 61 72 21 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $whole_tamale and $rar_header and $fake_rar and $padding\n\t\tand not $real_rar\n}\n\n\nrule PE_Quad_Nul_B64_256_5M\n:malexe\n{\n        meta:\n                description = \"PZ MZ with multiple quad-null separated long 256 byte base64 encoded ascii strings\"\n                analyst_notes = \"Potential Amadey binary\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n                sample = \"35adc7a2f8d0a8d81df65db7a5b7d0d6\"\n                reference = \"/wiki/amadey\"\n                risk = \"high\"\n                date = \"2019-08-06\"\n                tlp = \"GREEN\"\n\n        strings:\n                //Base64\n                $b64 = /[^\\x00][\\x00]{4}[A-Za-z0-9\\x2b\\x2f]{256}/   ascii\n\n        condition:\n\t\tfilesize < 5MB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #b64 >= 2\n}\n\nrule base64_enbiggens : malexe {\n\tmeta:\n\t\tdescription = \"Finds base64 embedded files inside malware.. very very large sections of it.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \t\"2019-08-06\"\n\t\tsamples = \"7a50fd9c8c8a8fc4a42f4a5c51f6394ec26013abee1be3ba7f4285f67d5accb4\"\n\t\tgreetz = \"Thanks to Vitali Kremez for pushing out trickbot/amadey data\"\n\t\tsource = \"https://twitter.com/VK_Intel/status/1158620228261208064\"\n\tstrings:\n\t\t// bomberman?\n\t\t//$ = { 42 6f 6d 62 65 72 6d 61 6e 20 32 70 }\n\t\t// I don't know what this file is, but it's 78k of valid base64.\n\t\t// md5:741c612aa5d39a134879d28c444a0b39\n\t\t$ = /\\x00[a-zA-Z0-9\\x2f\\x2b]{4092}/\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0xfe repetition\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\tstrings:\n\t\t$fe = {\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t}\n\n                $ = \"PADDINGXX\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fe > 128\n}\n\nrule calling_cards : gh0strat\n{\n\tmeta:\n\t\tdescription = \"gh0stRAT's calling cards\"\n\t\tauthor      = \"Ryan C. Moon (moonbas3)\"\n\t\tdate        = \"2019-08-02\"\n\t\treference\t\t= \"/wiki/gh0strat\"\n\t\tsample      = \"530545bbd28da7a01fdf7d6751352f63, c91c85f49bfaecd360639eeb50252707, 037e4546381b718ac32f0ecddfb78871\"\n\t\ttlp \t\t\t\t= \"white\"\n\t\tgreetz\t\t\t= \"@P3pperP0tts and urlhaus\"\n\tstrings:\n\t\t$calling_card2 = { 5f 61 64 6a 75 73 74 5f 66 64 69 76 }\n\t\t$calling_card3 = { 5f 65 78 63 65 70 74 5f 68 61 6e 64 6c 65 72 33 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $calling_card2 and $calling_card3\n}\n\nrule PE_MZ_2E_Trailers\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0x2e trailing bytecode to EOF\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x2e2e2e2e\t\t\t\t//Short-circuit speed\n                and for all i in(1..8): (uint32(filesize-(i*4)) == 0x2e2e2e2e)\t//32 bytes of 0x2e to EOF\n}\n\nrule PE_Weekend_Hacking\n:malexe\n{\n        meta:\n                description = \"PE or resource re-built on weekend\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2019-04-08\"\n\t\tmodified = \"2019-08-01\"\n                hash = \"1f43c6a18bc727b14df2814e91546e0b\"\n                tlp = \"AMBER\"\n\n\tstrings:\n\t\t//001b200: bd06 0000 0200 0000 0000 0401 474e 5520  ............GNU\n\t\t//001b210: 4320 342e 352e 3200 012f 7573 722f 7372  C 4.5.2../usr/sr\n\t\t//001b220: 632f 6d69 6e67 772d 7275 6e74 696d 652f  c/mingw-runtime/\n\t\t$exclude = { 474e 5520 4320 342e 352e 32 [2] 2f 7573 722f 7372 632f 6d69 6e67 772d 7275 6e74 696d 652f }\n\n        condition:\n                uint16(0) == 0x5a4d\n                // #define EPOCH_DOW 3\n                // #define SECS_PER_DAY 86400\n                // dow = ((timestamp / SECS_PER_DAY) + EPOCH_DOW) % 7;\n                and ( ((pe.resource_timestamp\\86400)+3)%7==0 or ((pe.resource_timestamp\\86400)+3)%7==6 )\n\t\tand not #exclude > 4\n}\n\nrule MZ_KERNEL_SANDERS_SPACETIME\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tmodified = \"2019-08-01\"\n\t\tdescription = \"PE/MZ with too much leading or training space or too old, and two or more kernel32.dll calls\"\n\t\treference = \"/wiki/icedid\"\n\t\tsamples = \"b44306f812171715d3e2da7490807050\"\n\n\tstrings:\n\t\t$KW = \"kernel32.dll\"    nocase wide ascii\n\n\t\t//0003440: 0054 4849 5320 4953 2054 4845 204d 4152  .THIS IS THE MAR\n\t\t//0003450: 4b45 5220 5354 5249 4e47 2046 4f52 2054  KER STRING FOR T\n\t\t//0003460: 4845 2045 434c 4950 5345 204f 4f4d 5048  HE ECLIPSE OOMPH\n\t\t//0003470: 2045 5854 5241 4354 4f52 2031 3937 302d   EXTRACTOR 1970-\n\t\t//0003480: 3132 2d30 3320 0000 0000 0000 0000 0000  12-03 ..........\n\t\t$exclude1 = \"THIS IS THE MARKER STRING FOR THE ECLIPSE OOMPH EXTRACTOR 1970-12-03\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand #KW >= 2\n\t\tand not any of ($exclude*)\n\t\tand (\n\t\t\tpe.version_info[\"Comments\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{6,}/\n\n\t\t\tor pe.version_info[\"Comments\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /[\\x20\\x09]{6,}$/\n\n\t\t\t//or pe.resource_timestamp    <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t\tor pe.timestamp            <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t)\n}\n\nrule PE_MZ_Bracket_Storm\n:malexe\n{\n    meta:\n        description     = \"Too many symbols (so many), inspired by Nanocore and Ramnit .scr files\"\n        author          = \"Ryan C. Moon (moonbas3)\"\n        date\t\t= \"2019-07-31\"\n        sample          = \"dd85773f073b2a7e32822960362cf053,c4f7e74f7ed4ae3e54b02c3ae9f0385fb9a1b741,d9bbaaf12acda3f90bee992e41c7147f558c3bcc\"\n        greetz          = \"Nathan Fowler, PCRE Gunfighter\"\n\treference\t= \"/wiki/nanocore, /wiki/ramnit\"\n\n    strings:\n        $wininet_lib = \"WININET.dll\" nocase\n        $r_lulz = /[^\\x7b-\\x7f][\\x7b-\\x7f]{300}/\n        $r_lulz2 = /[^\\x5b-\\x5f][\\x5b-\\x5f]{300}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n        and $wininet_lib and any of ($r*)\n}\n\nrule Java_JarHeads_2F\n:maljar\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-06-26\"\n\t\tmodified = \"2019-07-31\"\n\t\tdescription = \"More than 256 of lowercase folder names to camel-case or alpha-digit class name in a JAVA archive that is less than 1024KB.  Potential RAT and JAR stuffing evasion methods.\"\n\t\tanalyst_notes = \"This could potentially be a jRAT such as qRAT\"\n\t\tsamples = \"cdff7af0290135e0fc4748abf9b9041f, a42be1f121cd7a8d809b449d2e88f468\"\n\t\ttlp  = \"AMBER\"\n\t\trefernece = \"/wiki/qrat, /wiki/adwind\"\n\n\tstrings:\n\t\t$class1 = /\\x00[a-z\\x2f]+[A-Z][a-z]+\\.class/\n\t\t$class2 = /\\x00([a-z][0-9]{6,}\\x2f)+[a-z][0-9]{6,}\\.class/\n\t\t$meta = \"META-INF/MANIFEST.MF\"\n\n\tcondition:\n\t\tuint16(0) == 0x4b50\n\t\tand $meta in (0..4096)\n\t\tand ( #class1 > 256 or #class2 > 16 )\n\t\tand filesize < 1024KB\n}\n\nrule PE_MZ_RARSFX_EXE_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-29\"\n                description = \"PE/MZ RAR SFX containing an additional singular executable that is invoked from RAR SFX Setup\"\n\t\tanalyst_notes = \"This appears to be an attempt to obfuscate a PE/MZ inside of a RAR SFX PE/MZ\"\n                reference = \"/wiki/loki\"\n                samples = \"90dcfd2f25f50c91b61d2f476a0ede21\"\n\n        strings:\n\t\t//0049820: ed00 04ed 0000 bc7a 314d 8000 0003 434d  .......z1M....CM\n\t\t//0049830: 543b 5468 6520 636f 6d6d 656e 7420 6265  T;The comment be\n\t\t//0049840: 6c6f 7720 636f 6e74 6169 6e73 2053 4658  low contains SFX\n\t\t//0049850: 2073 6372 6970 7420 636f 6d6d 616e 6473   script commands\n\t\t//0049860: 0d0a 0d0a 5061 7468 3d25 7465 6d70 250d  ....Path=%temp%.\n\t\t//0049870: 0a53 6574 7570 3d64 6670 6d77 7477 6e67  .Setup=dfpmwtwng\n\t\t//0049880: 2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a  .exe..Silent=1..\n\t\t//0049890: 4f76 6572 7772 6974 653d 310d 0a00 7cbf  Overwrite=1...|.\n\t\t$ = { \t\t\t\t\t53 4658\n\t\t\t2073 6372 6970 7420 636f 6d6d 616e 6473\n\t\t\t0d0a 0d0a 5061 7468 3d25 7465 6d70 250d\n\t\t\t0a53 6574 7570 3d [5-16]\n\t\t\t2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a\n\t\t\t4f76 6572 7772 6974 653d 310d 0a\n\t\t}\n\n\t\t$exe = \".exe\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand $exe in (filesize-256..filesize)\n}\n\nrule PE_MZ_UPX_VERINFO_TOO_MUCH\n:malexe\n{\n\tmeta:\n\t\tauthor \t\t\t= \"Nathan Fowler\"\n\t\tdate \t\t\t= \"2019-07-25\"\n\t\tdescription \t= \"PE/MZ, UPX packed, with too much byte data after the VS_VERSION_INFO field and two or more kernel32.dll calls\"\n\t\tanalyst_notes \t= \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n\t\treference \t\t= \"/wiki/remcos\"\n\t\tsamples \t\t= \"baa0507fe166496d54f332a809c3e77c\"\n\n\tstrings:\n\t\t$V \t\t= \"VS_VERSION_INFO\"\twide\n\t\t$kern \t= \"kernel32\"\t\tnocase wide ascii\n\t\t$UPX \t= \"UPX\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $UPX in (32..512)\n\t\tand #kern >= 2\n\t\tand @V + 655350 < filesize\n}\n\nrule PE_MZ_KERNEL32_TOO_MANY_SOCK\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-24\"\n                description = \"PE MZ with more than or equal to three Kernel32 instances with Socket functionality\"\n                analyst_notes = \"This PE/MZ is highly abnormal and suggests that it may be stuffed with an additional PE\"\n                reference = \"/wiki/lokibot\"\n                samples = \"d9f05847190b022c5dc8d541442e7fd8\"\n                tlp = \"AMBER\"\n\n        strings:\n                $kern = \"kernel32.dll\"  nocase wide ascii\n\n                $exclude1 = \"RAR SFX\"    wide ascii\n                $exclude2 = \"NSIS\"    wide ascii\n\n                $api1 = \"getpeer\"    nocase wide ascii\n                $api2 = \"gethostby\"    nocase wide ascii\n                $api3 = \"getprotoby\"    nocase wide ascii\n                $api4 = \"getservby\"    nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern >= 4\n                and not any of ($exclude*)\n                and any of ($api*)\n}\n\nrule PE_MZ_Text_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n\t\tmodified = \"2019-07-22\"\n                description = \"PE MZ with a wall of text to EOF\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with base64 payload\"\n                reference = \"/wiki/trickbot, /wiki/amadey\"\n                samples = \"eff82b032f6b038987152f2ddc850c6e, e319a1cdcf0a1e5b6395891b6a283590\"\n                tlp = \"AMBER\"\n                feelz = \"meows://www.youtube.com/watch?v=l-O5IHVhWj0&feature=youtu.be&t=205\"\n\n        strings:\n                $b64 = /[a-zA-Z0-9\\x2b\\x2f]{128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and filesize < 4MB\n                and $b64 in (filesize-136..filesize-4)            //4 byte nonsense buffer in either direction\n\n}\n\nrule PE_MZ_KERNEL32_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Robert Simmons\"\n                date = \"2019-07-19\"\n                description = \"PE MZ with Kernel32 in the last 2048 bytes of the file\"\n\t\tanalyst_notes = \"This PE/MZ is highly abnormal\"\n                reference = \"/wiki/sodinokibi\"\n                samples = \"1ce1ca85bff4517a1ef7e8f9a7c22b16\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$kern = \"kernel32.dll\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $kern in (filesize-2048..filesize)\n\n}\n\nrule Office_Macro_Base64_Ascii\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and what appears to be a non-wide long base64 ascii embedded string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /[^A-Za-z0-9\\x2b\\x2f\\x3d_-][A-Za-z0-9\\x2b\\x2f\\x3d_-]{1024}/\t\tascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_Macro_PS_CLSID\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to PowerShell with -enc or a CLSID for WSH Shell Object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Windows Script Host Shell Object\n\t\t$clsid = \"72C24DD5-D70A-438B-8A42-98424B88AFB8\"\t\tnocase wide ascii\n\n\t\t$badness1 = \"PowerShell\"\t\t\t\tnocase wide ascii\n\t\t$badness2 = \"-enc\"\t\t\t\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and ( all of ($badness*) or $clsid )\n}\n\nrule PE_MZ_Sec_Spec_Char\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with special characters in the PE names section\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with another payload, likely a stage 1 dropper\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\tstrings:\n\t\t$reloc = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (0..1024)\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand pe.number_of_sections > 2\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tpe.sections[i].name contains \"!\"\n\t\t\tor pe.sections[i].name contains \"@\"\n\t\t\t//or pe.sections[i].name contains \"#\"\n\t\t\tor pe.sections[i].name contains \"$\"\n\t\t\tor pe.sections[i].name contains \"%\"\n\t\t\tor pe.sections[i].name contains \"^\"\n\t\t\tor pe.sections[i].name contains \"&\"\n\t\t\tor pe.sections[i].name contains \"*\"\n\t\t\tor pe.sections[i].name contains \"(\"\n\t\t\tor pe.sections[i].name contains \")\"\n\t\t\tor pe.sections[i].name contains \"{\"\n\t\t\tor pe.sections[i].name contains \"}\"\n\t\t\tor pe.sections[i].name contains \"|\"\n\t\t\tor pe.sections[i].name contains \";\"\n\t\t\tor pe.sections[i].name contains \":\"\n\t\t\tor pe.sections[i].name contains \"'\"\n\t\t\tor pe.sections[i].name contains \"<\"\n\t\t\tor pe.sections[i].name contains \">\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\t//or pe.sections[i].name contains \"?\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\tor pe.sections[i].name contains \"\\\\\"\n\t\t\tor pe.sections[i].name contains \"+\"\n\t\t\t//or pe.sections[i].name contains \"=\"\n\t\t)\n}\n\nrule PE_Large_B64_Like_Strings\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-07-17\"\n        description   = \"PE with large b64-like strings\"\n        analyst_notes = \"Not a lot of science, but it works.  B64 strings\"\n        analyst_notes = \"seem to have entropy values between 5 and 6 but \"\n        analyst_notes = \"when you push the length out, the gap closes to \"\n        analyst_notes = \"near 5.99.  This may be luck, but seems to work.\"\n        samples       = \"203b4a86dbb01bed35825e7429b20674\"\n        samples       = \"215ed19e4adb725b79b2134926c66287\"\n        samples       = \"1753fd377399233b77344c1a19bd4c60\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 50 i in(0..filesize\\4096):\n            (math.entropy(i*4096,4096) > 5.98\n            and math.entropy(i*4096,4096) < 6)\n}\n\nrule PE_MZ_NextHook_Reloc\n:malexe\n{\n        meta:\n             \tauthor = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with suspicious API calls and PE .reloc\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with additional payload\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"CallNextHookEx\"\n                $ = \"GetModuleFileNameEx\"\n                $ = \"RpcServerRegister\"\n                $ = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n}\n\nrule PE_MZ_NET_Double_Wrap\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n                description = \".NET PE MZ with VS_VERSION_INFO, SkipVerification, and more than one call to WrapNonExceptionThrows\"\n                analyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed with another .NET archive, this is likely a stage-1 dropper\"\n                reference = \"\"\n                samples = \"d08f9c6fd2fafd6383c79d9f6967ecc6\"\n                tlp = \"AMBER\"\n\n        strings:\n                $wrap = \"WrapN\"\n\n                $ = \"VS_VERSION_INFO\" wide\n                $ = \"SkipVerification\"\n                $ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #wrap >= 2\n}\n\nrule MZ_PE_NET_HeadSpace\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-15\"\n                description = \"A .NET/Mono MZ/PE with too much byte code ahead of the actual .NET nonsense stuffs\"\n                reference = \"\"\n                samples = \"036bdbd3d2bac71c2fa46587832398fc\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$n1 = \"WrapNonExceptionThrows\"\n\n\t\t//Six byte Assembly entity spacing\n\t\t$n2 = { 6974 793e 0d0a 2020 2020 2020 3c72 6571 }\n\t\t$n3 = { 6d3a 6173 6d2e 7633 223e 0d0a 2020 2020 2020 2020 3c72 6571 7565 7374 6564 4578 }\n\n\t\t$wordler = /[A-Z][a-z]+[A-Z]/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 512KB\n\t\tand all of ($n*)\n\t\tand for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)\t//64 bytes to NUL EOF\n\t\tand not $wordler in (512..128000)\n}\n\nrule MZ_PE_Kernel_BO_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-07-11\"\n                description = \"MZ PE with 2048 bytes of NUL to EOF and specific byte ordering\"\n                reference = \"/wiki/lokibot, /wiki/pony\"\n                samples = \"1b76734447ec104a4fc399c430dd007a\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//00ccea0: 0000 0000 1000 0404 0900 0000 6b65 726e  ............kern\n\t\t//00cceb0: 656c 3332 0000 0000 0e00 0000 5274 6c4d  el32........RtlM\n\t\t//00ccec0: 6f76 654d 656d 6f72 7900 0000 acce 4c00  oveMemory.....L.\n\t\t$ = { 6b65 726e 656c 3332 [8] 5274 6c4d 6f76 654d 656d 6f72 7900 0000 }\n\t\t$ = \"IsValidURL\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand for all i in(1..512): (uint32(filesize-(i*4)) == 0x00000000)\n}\n\nrule PE_MZ_NET_LONG_WIDE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a trip down stupidland using a large amount of wide words with no breaks\"\n\t\tanalyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed\"\n                reference = \"/wiki/agenttesla\"\n                samples = \"c73b5ff9c01f042ee76b37e527bedc01\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n\n\t\t//Big words, no breaks.\n\t\t$sw = /([A-Za-z0-9]\\x00){128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\t\tand #sw > 128\n}\n\nrule PE_MZ_NET_HTTP_PAD\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a wide HTTP URL\"\n                reference = \"\"\n                samples = \"0f32d7f8a79e0e09cbb309f7cbcfa61b\"\n                tlp = \"AMBER\"\n\n        strings:\n                //byte jump for HTTP and HTTPS\n                $ = { 6800 7400 7400 7000 [0-2] 3a00 2f00 2f00 }\n                $ = \"WrapNonExceptionThrows\"\n                $ = \"XXPADDING\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule RAR_SFX_Terse_EXE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-08\"\n                description = \"RAR SFX file with singular embedded executable and multiple terse files for archive stuffing, likely malicious and used to encapsulate the hostile archive\"\n                reference = \"/wiki/smokeloader\"\n                samples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$RAR = \"RAR SFX\"\t\t\t\t\t\t\tnocase ascii\n\n                $Dropper \t= /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x0a/\tnocase ascii\n                $Srt_Extensions = /\\x00[^\\n][\\x20-\\x7e]{3,6}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\t\t$Lng_Extensions = /\\x00[^\\n][\\x20-\\x7e]{7,256}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $RAR\n                and #Dropper >= 1\n                and #Srt_Extensions >= 16\n\t\tand #Lng_Extensions <= 4\n}\n\nrule Office_Script_XLST\n:maldoc\n{\n    meta:\n\t\tdescription = \"Macro enabled document that contains an XLS/XLST file with JScript, VBScript, CScript, or WScript\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2019-07-08\"\n\t\ttlp         = \"GREEN\"\n\t\treference   = \"meows://isc.sans.edu/forums/diary/A+Stream+O+Maldoc/25096/, meows://isc.sans.edu/forums/diary/Malicious+XSL+Files/25098/\"\n\n    strings:\n\t\t$bad1\t= \"<script\"\t\t\t\t\t\t\t\tnocase wide ascii\n\t\t$bad2\t= /language=[^\\n]?[vbwjc]{1,2}script/\tnocase wide ascii\n\t\t$bad3\t= \"<?xml\"\t\t\t\t\t\t\t\tnocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand filesize < 20MB\n\t\tand all of them\n}\n\nrule CAB_Encapsulation\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tdescription = \"CAB file with singular embedded executable, likely malicious and used to encapsulate the hostile archive\"\n\t\treference = \"\"\n\t\tsamples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\n\tstrings:\n\t\t$Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x00/\tnocase ascii\n\t\t$Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}\\x00/\t\t\tnocase ascii\n\n\tcondition:\n\t\tuint32(0) == 0x4643534d\n\t\tand #Dropper <= 2\n\t\tand #Extensions <= 2\n}\n\nrule RTF_Office_hexascii_API\n{\n        meta:\n                description = \"RTF/Office hex-ascii suspicious API calls or native API calls\"\n                author = \"Nathan Fowler\"\n                attribution = \"Created based on work from Justin Borland Oct 01 2018\"\n                thanks = \"Didier Stevens, sysopfb, Per Morten Sandstad\"\n                risk = \"high\"\n                date = \"2018-10-18\"\n                modified = \"2019-07-03\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $lib1 = \"LoadLibrary\" nocase ascii\n                $lib2 = /[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[46]c([03]0)?[46]9([03]0)?[46]2([03]0)?[57]2([03]0)?[46]1([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib3 = \"GetProcAddress\" nocase ascii\n                $lib4 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]1([03]0)?[46]4([03]0)?[46]4([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib5 = \"ExpandEnvironmentString\" nocase ascii\n                $lib6 = /[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]5([03]0)?[46]e([03]0)?[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[46]f([03]0)?[46]e([03]0)?[46]d([03]0)?[46]5([03]0)?[46]e([03]0)?[57]4([03]0)?[57]3([03]0)?[57]4([03]0)?[57]2([03]0)?[46]9([03]0)?[46]e([03]0)?[46]7([03]0)?[57]3/i\n\n                $lib7 = \"URLDownloadToFile\" nocase ascii\n                $lib8 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[46]e([03]0)?[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[57]4([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                //$lib9 = \"%UserProfile%\" nocase ascii\n                $lib10 = /25([03]0)?[57]5([03]0)?[57]3([03]0)?[46]5([03]0)?[57]2([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?25/i\n\n                $lib11 = \"ExitProcess\" nocase ascii\n                $lib12 = /[46]5([03]0)?[57]8([03]0)?[46]9([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib13 = \"kernel32\" nocase ascii\n                $lib14 = /[46]5([03]0)?[57]2([03]0)?[46]e([03]0)?[46]5([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib15 = \"shell32\" nocase ascii\n                $lib16 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib17 = \"WinExec\" nocase ascii\n                $lib18 = /[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3/i\n\n                $lib19 = \"UrlMon\" nocase ascii\n                $lib20 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]d([03]0)?[46]f([03]0)?[46]e/i\n\n                $lib22 = \"ShellExecute\" nocase ascii\n                $lib23 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3([03]0)?[57]5([03]0)?[57]4([03]0)?[46]5/i\n\n                $lib24 = \"CreateFile\" nocase ascii\n                $lib25 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib26 = \"VirtualAlloc\" nocase ascii\n                $lib27 = /[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[57]4([03]0)?[57]5([03]0)?[46]1([03]0)?[46]c([03]0)?[46]1([03]0)?[46]c([03]0)?[46]c([03]0)?[46]f([03]0)?[46]3/i\n\n                $lib28 = \"WriteFile\" nocase ascii\n                $lib29 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib30 = \"ReadFile\" nocase ascii\n                $lib31 = /[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib32 = \"CloseHandle\" nocase ascii\n                $lib33 = /[46]3([03]0)?[46]c([03]0)?[46]f([03]0)?[57]3([03]0)?[46]5([03]0)?[46]8([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib34 = \"SetFilePointer\" nocase ascii\n                $lib35 = /[57]3([03]0)?[46]5([03]0)?[57]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?[57]0([03]0)?[46]f([03]0)?[46]9([03]0)?[46]e([03]0)?[57]4([03]0)?[46]5([03]0)?[57]2/i\n\n                $lib36 = \"GetSystemDirectory\" nocase ascii\n                $lib37 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]3([03]0)?[57]9([03]0)?[57]3([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib38 = \"GetWindowsDirectory\" nocase ascii\n                $lib40 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[57]3([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib41 = \"GetTempPath\" nocase ascii\n                $lib42 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[57]0([03]0)?[57]0([03]0)?[46]1([03]0)?[57]4([03]0)?[46]8/i\n\n                $lib43 = \"PADDINGXXPADDINGXXPADDINGXXPADDINGXX\" nocase ascii\n                $lib44 = /(50([03]0)?41([03]0)?44([03]0)?44([03]0)?49([03]0)?4[Ee]([03]0)?47([03]0)?58([03]0)?58([03]0)?){4}/\n\n                $lib45 = \"BITXOR\" nocase ascii\n                $lib46 = /[46]2([03]0)?[46]9([03]0)?[57]4([03]0)?[57]8([03]0)?[46]f([03]0)?[57]2/i\n\n                $lib47 = \"SHLWAPI\" nocase ascii\n                $lib48 = /[57]3([03]0)?[46]8([03]0)?[46]c([03]0)?[57]7([03]0)?[46]1([03]0)?[57]0([03]0)?[46]9/i\n\n                $lib49 = \"CreateThread\" nocase ascii\n                $lib50 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[57]4([03]0)?[46]8([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4/i\n\n                $lib51 = \"WriteProcessMemory\" nocase ascii\n                $lib52 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]d([03]0)?[46]5([03]0)?[46]d([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n\t\t//https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.interaction.shell?view=netframework-4.7.2\n\t\t$lib53 = /Interaction[^\\w]{0,16}Shell/ ascii\n\n\t\t//Exclusions\n\t\t//SMA Trading\n\t\t$exclude1 = { 00 4a3a 5c53 4d41 204f 7065 7261 7469 6f6e 735c 5769 6e53 4350 5c77 696e 7363 702e 6578 6520 2f63 6f6e 736f 6c65 202f 636f 6d6d }\n\n        condition:\n                ($rtf at 0 or $office at 0) and any of ($lib*) and not any of ($exclude*)\n}\n\nrule SCT_Excel_By_GUID\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Justin Borland (Snort)/Nathan Fowler (Yara)\"\n\t\tdate = \"2019-07-02\"\n\t\tdescription = \"SCT invoking Excel by GUID, likely hostile activity\"\n\t\treference = \"\"\n\t\ttlp = \"RED\"\n\t\tsamples = \"\"\n\t\tanalyst_notes = \"Not sure what to do with this just yet, but it's likely a targeted double-secret APT\"\n\n\tstrings:\n\t\t$ = \"script language=\\\"vbscript\\\"\"\t\tnocase\n\t\t$ = \"new:00024500-0000-0000-C000-000000000046\"\tnocase\n\t\t$ = \".Workbooks.Add(\"\t\t\t\tnocase\n\t\t$ = \".VBProject.VBComponents.Add(\"\t\tnocase\n\n\t\t$xml = { 3c3f 786d 6c }\n\n\tcondition:\n\t\tuint32(0) == 0x6d783f3c and $xml at 0\n\t\tand all of them\n}\n\nrule MZ_PE_Signed_Not_Signed_Bare\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler/Peter Misurek\"\n                date = \"2019-07-01\"\n                description = \"MZ PE with PE certificate signature data yet the PE/MZ is not explicitly signed\"\n                reference = \"/wiki/hancitor\"\n                samples = \"9a69378f63c39e0f3a148dd3767fa807\"\n                analyst_notes = \"This is highly abnormal and suggests a PE wrapper for a signed PE executable embed.  This could be a loader/dropper of some kind.\"\n\n        strings:\n                //Signing (Internet1.0 where 0x2e is 0x17)\n                $={ 496e 7465 726e 6574 3117 30 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and pe.number_of_signatures == 0\n}\n\nrule PE_njRAT\n:malexe\n{\n    meta:\n        description = \"Potential njRAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-26\"\n        sample      = \"3ea78365488b21f5529b3180494e7c23\"\n        sample      = \"417ec3fda20121b4bec2423e9f9fd54b\"\n        sample      = \"47b2883cd6b6da7478d8104422cd98a3\"\n        tlp         = \"AMBER\"\n\n    strings:\n        $cmd01      = \"etsh firewall add allowedprogram\"  wide ascii nocase\n        $cmd02      = \"md.exe /c\"                         wide ascii nocase\n        $cmd03      = \"ping\"                              wide ascii nocase\n        $cmd04      = \"del\"                               wide ascii nocase\n\n        $mask       = \"NOZONECHECKS\"                      wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_RevengeRAT\n:malexe\n{\n    meta:\n        description = \"Potential Revenge RAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-25\"\n\tmodified    = \"2019-06-26\"\n        sample      = \"0b0798c2657bb23770c8927adff3a272\"\n        sample      = \"e2aff6ddac67c1e12d771ce52beb76d3\"\n        sample      = \"01d70d0a41405eb1e3515c3be2ad0df0\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/revenge\"\n\n    strings:\n        $reflect01  = \"ToBase64String\"                     wide ascii\n        $reflect02  = \"FromBase64String\"                   wide ascii\n        $reflect03  = \"System.Reflection\"                  wide ascii\n        $reflect04  = \"Assembly\"                           wide ascii\n\n        $recon01    = \"select \\x2a from win32_processor\"    wide ascii nocase\n        $recon02    = \"select \\x2a from firewallproduct\"    wide ascii nocase\n        $recon03    = \"select \\x2a from antivirusproduct\"   wide ascii nocase\n\n        $really01   = \"Nuclear Explosion\"                  wide ascii\n\t$asciiart   = { 2a00 2d00 5d00 4e00 4b00 5b00 2d00 2a }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule MZ_PE_Double_Kernel_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-25\"\n                reference = \"/wiki/azorult\"\n                description = \"PE/MZ with interesting API calls for VM checking and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"7545388a6d2d84ce50400a795f4209af\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t$api1 = \"IsDebuggerPresent\"\n\t\t$api2 = \"IsProcessorFeaturePresent\"\n\t\t$api3 = \"Sleep\"\n\t\t$api4 = \"GetActiveWindow\"\n\t\t$api5 = \"GetLastActivePopup\"\n\t\t$api6 = \"GetConsoleMode\"\n\t\t$api7 = \"GetEnvironmentStrings\"\n\t\t$api8 = \"GetTickCount\"\n\t\t$api9 = \"GlobalMemoryStatus\"\n\t\t$api10 = \"SetUnhandledExceptionFilter\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern > 1\n\t\tand all of ($api*)\n}\n\nrule MZ_PE_VI_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n\t\tmodified = \"2019-06-24\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with Assembly after VS_VERSION_INFO\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malformed .NET PE\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n       strings:\n               $byte_order = { 5600 5300 5f00 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [128-1024] 3c61 7373 656d 626c 7920 }        //VERSION_INFO -> Assembly\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)    //64 bytes of nul to EOF\n                and $byte_order in (filesize-8192..filesize)\n}\n\nrule PE_LetsEncrypt\n:malexe\n{\n    meta:\n        description = \"Let's Encrypt does not offer code signing certificates.\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-22\"\n        sample      = \"263d1d61374508250dc16249205df9b1\"\n        sample      = \"6670d53be021319ba3f01076c3e63adb\"\n        sample      = \"b9db97e8c832e5c6703b3e802d3751e5\"\n        tlp         = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=Let\\x27s Encrypt/\n}\n\nrule MZ_PE_Double_Kernel\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-21\"\n                reference = \"/wiki/formbook, /wiki/netwire\"\n                description = \"PE/MZ with an excessive amount of null terminating to EOF and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"bb0c1fd7495aa3261a51615a1b79ceb2, 5367522264386a52e8a8f90f9f7f17c9\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t//Chrome false positive\n\t\t//0003d70: 0100 0000 6d69 6e69 5f69 6e73 7461 6c6c  ....mini_install\n\t\t//0003d80: 6572 2e65 7865 2e70 6462 0000 1000 0030  er.exe.pdb.....0\n\t\t//0003d90: 1000 0050 1700 0060 1700 0080 1700 00c0  ...P...`........\n\t\t$pdb = { 0000 6d69 6e69 5f69 6e73 7461 6c6c 6572 2e65 7865 2e70 6462 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n                //uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 proces$\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n                and #kern > 1\n\t\tand not $pdb\n}\n\nrule Office_Macro_Msiexec_URL\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to msiexec\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-20\"\n                tlp = \"GREEN\"\n\t\tsample = \"987bd2361c0ed6e05400b027c113be44\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//msiexec nocase wide ascii with byte jump to a URL\n\t\t$badness1 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 20 [1-64] 3a2f 2f }\n\t\t$badness2 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 2e (45|65) (58|78)(45|65) 20 [1-64] 3a2f 2f }\n\t\t$badness3 = { (4d|6d)00 (53|73)00 (49|69)00 (45|65)00 (58|78)00 (45|65)00 (43|63)00 2e00 (45|65)00 (58|78)00 (45|65)00 2000 [1-128] 3a00 2f00 2f00 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand any of ($badness*)\n}\n\nrule PE_1010_2020_API_WW_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-14\"\n\t\tmodified = \"2019-06-17\"\n                reference = \"/wiki/ursnif, /wiki/sodinokibi, /wiki/icedid\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices with a wide-word jumble\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.\"\n                samples = \"077cf52855fe85aa60097d6e52cb4ea3, d8b3370d1b4901caccc9c22125171e21\"\n\n       strings:\n\t\t//Odd Stuffs\n                $bytes1 = { 1010 1010 1010 1010 1010 1010 1010 1010 [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$bytes2 = { \t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t1000 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t1000 0201 0201 0201 0201 0201 0201 0201\n\t\t}\n\n\t\t$bytes3 = { \t1000 1000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 0?00\n\t\t}\n\n\t\t//API calls\n                $api1 = \"Sleep\"\n                $api2 = \"EncodePointer\"\n                $api3 = \"DecodePointer\"\n                //$api4 = \"Dinkumware\"\n                $api5 = \"TlsAlloc\"\n                //$api6 = \"GetAsyncKeyState\"\n                $api7 = \"IsProcessorFeaturePresent\"\n                $api8 = \"IsDebuggerPresent\"\n                $api9 = \"GetTickCount\"\n                $api10 = \"RaiseException\"\n                //$api11 = \"GetSystemInfo\"\n\n\t\t//Word jumble, wide and non-wide\n\t\t$wordjumble = /(\\x20\\x00([A-Za-z0-9]\\x00)+){16}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000)\t\t//16 bytes of NUL to EOF\n                and any of ($bytes*)\n\t\tand all of ($api*)\n\t\tand $wordjumble\n}\n\nrule Office_HeadSpace\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc with too much headspace in the first 16-4096 bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-25\"\n\t\tmodified = \"2019-06-17\"\n                hash = \"7ec4e7742de077fde05b0b83bb8a1cee, e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/revenge\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $headspace1 = { 2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020\n\t\t}\n\n                $headspace2 = {\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $headspace1 in (1024..4096)\n                and $headspace2 in (16..1024)\n}\n\nrule Office_Macro_AutoBehavior_Image\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a lure image of type JPEG or PNG.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                modified = \"2019-06-17\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $image1 = { ffd8 ffe? }\n                $image2 = { 8950 4e47 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n\n                $ap1 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"\t\tnocase wide ascii\n                $vb2 = \"VBA\"\t\tnocase wide ascii\n                $vb4 = \"OLE\"\t\tnocase wide ascii\n                $vb5 = \"stdole\"\t\tnocase wide ascii\n                $vb6 = \"macro\"\t\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n                uint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand (\n\t\t\t(\n\t\t\t\t( (#image1 == 1 and #image2 == 0) or (#image1 == 0 and #image2 == 1) )\n\t\t\t\tand any of ($vb*) and any of ($ao*)\n\t\t\t\tand not any of ($exclude*)\n\t\t\t)\n\t\t\tor ($ap1 and #image1 > 0 and #image1 < 3 and #image2 > 0 and #image2 < 3)\n\t\t)\n}\n\nrule Office_Shell_StrConv\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc calling StrConv with byte hiding shuffle capability and ShellV\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-17\"\n                samples = \"e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/strconv-function\n\t\t$api1 = \"ShellV\"\tnocase wide ascii\n\t\t$api2 = \"StrConv\"\tnocase wide ascii\n\n\t\t$uapi1 = \"vbUnicode\"\tnocase wide ascii\n\t\t$uapi2 = \"vbFromUnicode\"\tnocase wide ascii\n\t\t$uapi3 = \"vbWide\"\tnocase wide ascii\n\t\t$uapi4 = \"vbNormal\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n\t\tand all of ($api*)\n\t\tand any of ($uapi*)\n}\n\n\nrule MZ_PE_NET_PDB\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-17\"\n                description = \".NET binary with an alpha PDB, however, there is no path to the PDB\"\n                reference = \"/wiki/bladabindi\"\n                samples = \"0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n\t\t$ = /\\x00[A-Za-z]+\\.pdb\\x00/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_PaddyWhacks_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-11\"\n                reference = \"/wiki/lokibot\"\n                description = \"PE/MZ with 0x0? padding to EOF that is not 0x00\"\n                analyst_notes = \"This is a PE binary with intentional and unusual EOF padding, potentially to evade hash based detections\"\n                samples = \"f905ef29af2a3dfae4ec04f9ddc837f4\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand (\n\t\t\t   for all i in(1..32): (uint32(filesize-(i*4)) == 0x01010101)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x02020202)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x03030303)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x04040404)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x05050505)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x06060606)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x07070707)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x08080808)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x09090909)    //128 bytes of nul to EOF\n\t\t)\n}\n\nrule Potential_Obfuscated_Java_Archive\n{\n        meta:\n                description = \"Pack-200 Zip (or Java Archive) containing abnormal directory structure via 1IL obfuscation likely Armadillo\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-17\"\n\t\tmodified = \"2019-06-04\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$dir = /(\\x2f[1LiI]+){2,5}/\n\t\t$manifest = \"META-INF\"\tnocase wide ascii\n\n        condition:\n\t\tuint16(0) == 0x4b50 and (#dir > 3) and $manifest\n}\n\nrule MZ_PE_UPX_NUL_EOF_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-04\"\n                reference = \"/wiki/remcos\"\n                description = \"PE/MZ which is UPX packed with an excessive amount of null terminating to EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE\"\n                samples = \"fc9cb2d2060b0847a440322b8823c977\"\n\n\tstrings:\n\t\t$ = \"UPX0\"\n\t\t$ = \"UPX1\"\n\t\t$ = \"</assembly>\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n\t\t//uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 processed in 16 byte chunks not 4 byte chunks.\n\t\tand for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand all of them\n}\n\nrule MZ_PE_NET_Crypt_B64\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-03\"\n                reference = \"\"\n                description = \"Potential MZ PE .NET with VS_VERSION_INFO, WrapNonExceptionThrows, suspect API calls, and NUL EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE using Base64 and crypto\"\n                samples = \"227673dc393a3f31a1183e71f7ea6fba\"\n\n\tstrings:\n \t\t$ = \"VS_VERSION_INFO\"\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = \"FromBase64String\"\n\t\t$ = \"ToBase64String\"\n\t\t$ = \"base64Binary\"\n\t\t$ = \"RijndaelManaged\"\n\t\t$ = \"Rfc2898DeriveBytes\"\n\t\t$ = \"Sleep\"\n\t\t$ = \"KillOnExit\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_1010_2020_API_Dink_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-31\"\n                reference = \"/wiki/ursnif\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.  The file also uses Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017\"\n\n       strings:\n\t\t$ = {\t1010 1010 1010 1010 1010 1010 1010 1010\t[1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$ = \"Sleep\"\n\t\t$ = \"EncodePointer\"\n\t\t$ = \"DecodePointer\"\n\t\t$ = \"Dinkumware\"\n\t\t$ = \"TlsAlloc\"\n\t\t$ = \"GetAsyncKeyState\"\n\t\t$ = \"IsProcessorFeaturePresent\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"GetSystemInfo\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\nrule CreateObject_Shell\n{\n\tmeta:\n\t\tdescription = \"Office document using CreateObject to create a shell object and execute a file\"\n\t\tauthor = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n\t\trisk = \"medium\"\n\t\tdate = \"??\"\n\t\tmodified = \"2019-05-29\"\n\n\tstrings:\n\t\t$string1 = /createobject\\([\\x20\\x09]*[\\x22\\x27][a-z]script\\.shell/ nocase\n\t\t$string2 = /\\.(exe|vbs|bat|ps[0-9]+)/ nocase\n\t\t$string3 = \".run\" nocase\n\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\tcondition:\n\tuint16(0) == 0xcfd0 and $office at 0 and all of them\n}\n\nrule MZ_PE_NS_COMMENTS_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with VERSION_INFO comments pounding of the keyboard 1-32 characters lowercase.\"\n\t\tanalyst_notes = \"Someone took the lazy approach and just pounded the keyboard with lowercase characters for the Comments section of this file.  If it is gibberish, it is likely bad\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n\tstrings:\n\t\t$ = \"<assembly\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,32}$/\n\t\tand all of them\n}\n\nrule Office_WMI\n:maldoc\n{\n        meta:\n                description = \"Office Document containing VBA and WMI and Short Path VBE DLL or a URL\"\n\t\tanalyst_notes = \"This is likely a type of maldoc dropper using winmgmts to deliver payload\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-05-23\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\twide ascii\n                $vb2 = \"VBA\"\twide ascii\n                $vb3 = \"OLE\"\twide ascii\n                $vb4 = \"stdole\"\twide ascii\n\n                $wmi1 = \"Win32_Process\"\twide ascii\n                $wmi2 = \"winmgmts:\\\\\\\\\"\twide ascii\n\n\t\t$url1 = \"://\"\twide ascii\n\t\t$url2 = \"//:\"\twide ascii\n\n        condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n                and ( any of ($dll*) or any of ($url*) )\n\t\tand any of ($vb*)\n\t\tand any of ($wmi*)\n}\n\nrule retefe_crypt2\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tmeta_author = \"Nathan Fowler\"\n\t\tsample = \"68ba5f9d5dd775c72711bc86e2c5d9384d7ab4efd6c24805304253e51365d816, 008a9b3ce958689aadc5eb16d557f8f2\"\n\t\tdate = \"2018-11-15\"\n\t\tanalyst_notes = \"This is likely a crypted sample of Retefe embedded in an OLE stream.  This means there is a MZ/PE here.\"\n\t\timplementation_date = \"2019-05-22\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//0x27a8\n\t\t$decode1 = {c1 e0 03 [0-1] b6 c? 8b}\n\t\t//0x280e\n\t\t$decode2 = {b6 0? 11 33 c? 8b}\n\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\t$ActiveScriptParseiid_64 = {58 76 ef c7 ee e1 0e 48 97 ea d5 2c b4 d7 6d 17}\n\t\t$ActiveScriptParseiid_32 = {e2 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\n\tcondition:\n\t\tall of ($decode*) and $iid and any of ($ActiveScriptParseiid_*)\n}\n\nrule PE_MZ_VERSION_NUL\n:malexe\n{\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-05-22\"\n\t\ttlp             = \"AMBER\"\n\t\tdescription     = \"MZ/PE with VERSION_INFO defined that is a explicit NULL value with NULL to EOF\"\n\t\tanalyst_notes\t= \"This is likely some type of malware that may be using a packer similar to Nanocore.  This is highly abnormal to have VERSION_INFO defined yet nothing but NUL\"\n\t\tsample          = \"0b13f3bd55238c71fd8993b658ce0484\"\n\t\treference       = \"/wiki/nanocore\"\n\n\tstrings:\n\t\t//NULL VERSION_INFO\n\t\t$ = {   5600 4500 5200 5300 4900 4f00 4e00 5f00\n\t\t\t4900 4e00 4600 4f00 [8]\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_Reloc_NUL\n:malexe\n{\n        meta:\n                description = \"PZ MZ with any VM-check API calls and .reloc NUL in 1-64 bytes\"\n\t\tanalyst_notes = \"It is likely that this PE/MZ is FlawedAmmy Loader\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"9629772e9ff369dc24dd47ca948fda6c\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$api1 = \"Sleep\"\n\t\t$api2 = \"Interlocked\"\n\t\t$api3 = \"GetStartupInfo\"\n\t\t$api4 = \"SetUnhandledExceptionFilter\"\n\t\t$api5 = \"IsDebuggerPresent\"\n\t\t$api6 = \"QueryPerformanceCounter\"\n\t\t$api7 = \"TerminateProcess\"\n\t\t$api8 = \"GetOEMCP\"\n\t\t$api9 = \"RegisterClass\"\n\n\t\t$spice1 = \"Any use of this Certificate\"\t\twide\n\t\t$spice2 = \"__wgetmain\"\t\t\t\tascii\n\t\t$spice3 = \"STATUS_ABIOS_LID_ALREADY_OWNED\"\tascii\n\t\t$spice4 = \"EV_MMAC_HAP_SHORT_MSG_RECEIVED\"\tascii\n\n\t\t//PE .reloc to NULL\n\t\t$reloc = {   2e72 656c 6f63 [1-64]\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (512..4096)\n\t\tand any of ($spice*)\n\t\tand any of ($api*)\n}\n\nrule PE_API_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with VM-check API calls and multiple long 256-16384 base64 encoded ascii strings\"\n\t\tanalyst_notes = \"Potential Trickbot binary\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"e6dbe5e47dab3b586a10f9b2bfd4312a\"\n\t\treference = \"/wiki/trickbot\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"Sleep\"\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetStartupInfo\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"TerminateProcess\"\n\n\t\t//Assembly -> Null\n\t\t//$ = { 6173 7365 6d62 6c79 3e00 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t\t//Base64\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f]){256,16384}([A-Za-z0-9\\x2b\\x2f]{2}==|[A-Za-z0-9\\x2b\\x2f]{3}=)?\\x00/\tascii\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #b64 > 64\n}\n\nrule PE_UPX_Ass_AutoIT\n:malexe\n{\n    meta:\n        description = \"UPX packed PE/MZ with AutoIT and assembly\"\n\t\tanalyst_notes = \"This is a highly abnormal AutoIT UPX packed binary that is a second stage or first stage dropper payload\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-03\"\n\t\tmodified = \"2019-05-20 (pushed)\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/hawkeye, /wiki/nanocore\"\n\n    strings:\n\t\t$upx = \"UPX\"\n\n        $spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n        $spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\t\t$autoit = { 4100 7500 7400 6f00 4900 7400 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $upx in (0..1024)\n        and any of ($spicyspice*)\n\t\tand $autoit\n}\n\nrule PE_MZ_NBS\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-17\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with NUL to EOF and nothing but whitespace in a singular VERSION_INFO field\"\n\tanalyst_notes\t= \"This PE is very strange in that the VERSION_INFO field values are nothing but 4 chr or more whitespace.  This likely is a malicious file and the miscreant is lazy\"\n        sample          = \"b98fa6c4e71634faa02fff7ed3c43474\"\n        reference       = \"/wiki/formbook\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand (\n\t\t   pe.version_info[\"Comments\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t)\n}\n\nrule MZ_PE_OutOfOrder_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-05-08\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ with PE, API out of order after VERSION_INFO, PADDING, and trailing NUL\"\n\n\tstrings:\n\t\t$ = \"PADDING\"\n\n\t\t//VERSION_INFO -> .dll byte-jump ordering\n\t\t$ = { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [2048-8192] 2e64 6c6c }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\n\nrule PE_WOW_CryptHook_NUL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, CryptStringToBinaryA, and Wow64EnableWow64FsRedirection with NUL EOF\"\n        samples = \"5230d6352f3200d502ea2dcef55989ef\"\n\n    strings:\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"Wow64EnableWow64FsRedirection\"\n\n        //PE but no VERSION_INFO\n        $ver = \"VERSION_INFO\"    wide\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of ($API*)\n        and not $ver\n}\n\nrule PE_Nanocore_Winsock_GetAce\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-13\"\n        description = \"Potential Nanocore MZ with WSOCK32, GetAce, IcmpSendEcho with NUL EOF\"\n        samples = \"d1903c90c8720ca5c4a4efd34b15dff9, 7e88682c452b779ca187e5cf7cc615a1, 907923733bb1a5df6c0732b8303e7bc8, f43c463885fe1963175d454903dc5105\"\n\n    strings:\n\t$ = \"OLEAUT32.dll\"\n\t$ = \"WSOCK32.dll\"\n\t$ = \"GetAce\"\n\t$ = \"IcmpSendEcho\"\n\t$ = \"FtpOpenFileW\"\n\t$ = \"timeGetTime\"\n\t$ = \"IsThemeActive\"\n\n\t$upx = \"UPX\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand $upx in (512..2048)\n\tand all of them\n}\n\nrule UDF_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-04\"\n\tmodified = \"2019-05-09\"\n        reference = \"\"\n        description = \"Single executable file embedded in UDF Image\"\n        sample = \"c0a1a387ae325b83f48cdc210027f160\"\n\n    strings:\n\t\t$udf1 = { 5500 4400 4600 }\n\t\t$udf2 = \"BEA01\"\t\tascii\n\t\t$udf3 = \"TEA01\"\t\tascii\n\n\t\t//Bad file extensions\n\t\t$bad_ext1 = \".exe;\"\tnocase ascii\n\t\t$bad_ext2 = \".scr;\"\tnocase ascii\n\t\t$bad_ext3 = \".bat;\"\tnocase ascii\n\t\t$bad_ext4 = \".cmd;\"\tnocase ascii\n\t\t$bad_ext5 = \".js;\"\tnocase ascii\n\t\t$bad_ext6 = \".vbs;\"\tnocase ascii\n\n\t\t//2019-05-09 Noticed that some UDF images do not adhere to the above and instead use WIDE formatting\n\t\t$bad_ext7  = { 2e00 (45|65)00 (58|78)00 (45|65)00 }\t//.exe\n\t\t$bad_ext8  = { 2e00 (53|73)00 (43|63)00 (52|72)00 }\t//.scr\n\t\t$bad_ext9  = { 2e00 (42|62)00 (41|61)00 (54|74)00 }\t//.bat\n\t\t$bad_ext10 = { 2e00 (43|63)00 (4d|6d)00 (44|64)00 }\t//.cmd\n\t\t$bad_ext11 = { 2e00 (4a|6a)00 (53|73)00 }\t\t//.js\n\t\t$bad_ext12 = { 2e00 (56|76)00 (42|62)00 (53|73)00 }\t//.vbs\n\n\n\t\t//Anchor pattern\n\t\t$anchor = /\\.[a-zA-Z]{3};[0-9]/\n\n    condition:\n        uint16(0) == 0x0000\n        and uint16(2) == 0x0000\n\tand uint16(filesize-2) == 0x0000\n\tand any of ($udf*)\n\tand #anchor == 1\n\tand (\n\t\t   #bad_ext1  == 1\n\t\tor #bad_ext2  == 1\n\t\tor #bad_ext3  == 1\n\t\tor #bad_ext4  == 1\n\t\tor #bad_ext5  == 1\n\t\tor #bad_ext6  == 1\n\t\tor #bad_ext7  == 1\n\t\tor #bad_ext8  == 1\n\t\tor #bad_ext9  == 1\n\t\tor #bad_ext10 == 1\n\t\tor #bad_ext11 == 1\n\t\tor #bad_ext12 == 1\n\t)\n}\n\nrule Susp_MS_Lnk\n:malfile\n{\n        meta:\n                description = \"Suspicious MS Lnk File\"\n                author      = \"Peter Misurek\"\n                risk        = \"high\"\n                date        = \"2019-05-06\"\n                sample      = \"cec1fdf5adb00b9844832d355ef877ab\"\n                sample      = \"6623f573ab668b7da9068a714968e8e9\"\n                sample      = \"fef3a77d195da8a049d583b259e161dd\"\n                tlp         = \"AMBER\"\n\n        strings:\n                $mshta          = \"mshta.exe\" nocase wide ascii\n                $url            = /https?\\x3a\\x2f\\x2f/ nocase wide ascii\n\n                $cmd1           = \"cmd.exe\" nocase wide ascii\n                $cmd2           = \"powershell.exe\" nocase wide ascii\n\n                $surfer         = { 2e 00 2e 00 5c 00 2e 00 2e }\n\n                $attrib         = \"attrib\" nocase wide ascii\n                $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                                    69 10 a2 d8 08 00 2b 30 }\n\n        condition:\n                uint16(0) == 0x4c\n                and uint16(0x3c) == 0x7         // start minimized\n                and filesize < 20KB\n                and $bytes at 0x50\n                and (($mshta and $url)\n                or any of ($cmd*))\n                and ($surfer or $attrib)\n}\n\nrule ZIP_Dropper_ManifestDestiny\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        modified = \"2019-05-06\"\n        reference = \"/wiki/emotet, /wiki/hawkeye\"\n        description = \"Potential dropper encapsulated in a ZIP archive\"\n        sample = \"8f7c62dc6edd6adb31d1dacaf583d7a4\"\n\n    strings:\n        $Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)[^A-Z]/  nocase ascii\n        $Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}[^A-Z\\x2e]/                 nocase ascii\n\n    condition:\n        uint16(0) == 0x4b50\n        and $Dropper in (0..256)\n        and #Dropper <= 2\n        and #Extensions <= 2\n}\n\nrule PE_PADPAD_Wrap_Nul\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-01\"\n        description = \"Potential Hawkeye keylogger with WrapNonExceptionThrows, PADPAD, and assembly to EOF NUL\"\n        sample = \"acb54dd5b48a1e39f3e8bec5fa2d3645\"\n\t\treference = \"/wiki/hawkeye\"\n\n    strings:\n\t$ = { 0d 0a3c 2f61 7373 656d 626c 793e 0000 0000 }\t//</assembly> with no CRLF to NUL\n\t$ = { 50 4144 50 4144 }\t\t\t\t\t// PADPAD\n\t$ = \"WrapNonExceptionThrows\"\t\t\t\t// Wiggity, wiggity, whack, wtf is this crap?\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_MZ_Nymaim_KernelSanders\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-03\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with wide and non-wide kernel32.dll\"\n        sample          = \"fcceb04631384fe845a176a5fc95d51a, 2107473834a847fa4677f72f1e5310f2a\"\n        reference\t= \"/wiki/nymaim\"\n\n   strings:\n\t//kernel32.dll wide and non-wide in the same PE/MZ\n        $= { 6b65 726e 656c 3332 2e64 6c6c 0000 }\n        $= { 6b00 6500 7200 6e00 6500 6c00 3300 3200 2e00 6400 6c00 6c00 0000 }\n\n   condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-48) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-80) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-112) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of them\n}\n\nrule PE_TeeBall_Cert_API\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Signed PE MZ with suspect API calls\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-05-02\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t$utn = \"UTN-USERFirst-Object\"\n\n\t\t//SNR isn't tasty, needs more spices\n\t\t$api1 = \"GetOEMCP\"\n\t\t$api2 = \"WideCharToMultiByte\"\n\t\t$api3 = \"EnterCriticalSection\"\n\t\t$api4 = \"GetACP\"\n\t\t$api5 = \"GetCPInfo\"\n\t\t$api6 = \"GetStartupInfo\"\n\t\t$api7 = \"IsDebuggerPresent\"\n\t\t$api8 = \"Interlocked\"\n\t\t$api9 = \"GetStartupInfo\"\n\t\t$api10 = \"MultiByteToWideChar\"\n\t\t$api11 = \"CriticalSection\"\n\n\t\t$spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\t\t$spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.number_of_signatures >= 1\n\t\tand pe.number_of_signatures <= 3\n\t\tand pe.DEBUG_STRIPPED == 512\n\t\tand pe.RELOCS_STRIPPED == 1\n\t\tand pe.LOCAL_SYMS_STRIPPED == 8\n\t\tand pe.LINE_NUMS_STRIPPED == 4\n\t\tand pe.dll_characteristics == 32768\n\t\tand pe.number_of_imports >= 7\n\t\tand $utn in (filesize-4096..filesize)\n\t\tand any of ($spicyspice*)\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_NUL_GZIP\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with NUL to EOF and gzip-base64 embed\"\n        sample \t\t= \"4e0bfe42fdd08bba60711352e1183f8a\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $gzip1 = { 4834 7349 4141 }\n        $gzip2 = { 4800 3400 7300 4900 4100 41 }\n\n\t$api = \"WrapNonExceptionThrows\"\n\n\t$anchor = /H4sIA[A-Za-z0-9\\x2b\\x2f_-]{1024}/\twide ascii\n\n\t//016cd50: 0100 0000 433a 5c78 616d 7070 5c68 7464  ....C:\\xampp\\htd\n\t//016cd60: 6f63 735c 4173 7069 7265 5c66 696c 6573  ocs\\Aspire\\files\n\t//016cd70: 5c70 7269 6e63 6532 3437 5f61 7545 5552  \\prince247_auEUR\n\t//016cd80: 597a 4944 515a 5678 4f64 6f5c 6175 4555  YzIDQZVxOdo\\auEU\n\t//016cd90: 5259 7a49 4451 5a56 784f 646f 6d61 2e70  RYzIDQZVxOdoma.p\n\t//016cda0: 6462 0000 cceb 1600 0000 0000 0000 0000  db..............\n\t$pdb = { 2e70 6462 }\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand any of ($gzip*)\n\tand $api\n\tand $anchor\n\tand $pdb\n}\n\nrule PE_MZ_keyencryption\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with keyencryption\"\n        sample \t\t= \"e58df1b9d3abe4a296ae03b70c6c2033\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n\t$ke = \"keyencryption\"\tnocase ascii\n\n\t$ = \"</assembly>\"\n\t$ = \"anonymous namespace\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #ke > 32\n\tand all of them\n}\n\nrule Office_OLE_Macro_CMD_Rev\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using string reverse full path to cmd.exe with OLE/Macros, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-01\"\n        hash = \"dba69369133b00caf73be2e071cfc2a0\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/icedid\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t$vb1 = \"VBE\"            nocase wide ascii\n\t$vb2 = \"VBA\"            nocase wide ascii\n\t$vb4 = \"OLE\"            nocase wide ascii\n\t$vb5 = \"stdole\"         nocase wide ascii\n\t$vb6 = \"macro\"          nocase wide ascii\n\n\t//String reversed 'c:\\\\\\windows\\\\\\system32\\\\\\cmd'\n\t$cmd = { \t(44|64)[1-6] (4d|6d)[1-6] (63|43)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (52|32)[1-6]\n\t\t \t(53|33)[1-6] (4d|6d)[1-6] (45|65)[1-6] (54|74)[1-6] (53|73)[1-6] (59|79)[1-6]\n\t\t\t(53|73)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (53|73)[1-6] (57|77)[1-6] (4f|6f)[1-6]\n\t\t\t(44|64)[1-6] (4e|6e)[1-6] (49|69)[1-6] (57|77)[1-6] 5c[1-6] 5c[1-6] 5c[1-6]\n\t\t\t3a[1-6] (43|63)\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n\tand any of ($ao*)\n\tand any of ($vb*)\n\tand $cmd\n}\n\nrule PE_MZ_Ursnif_Eyes\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-30\"\n        description = \"Potential Ursnif PE/MZ with spices that make me think it is bad\"\n        sample = \"3ef2de77f4b4f655a689fdf1bf78b6f5\"\n\n    strings:\n\t$version\t= { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 }\n\t$assembly\t= { 3c2f 6173 7365 6d62 6c79 3e0d 0a }\n\t$chrgen\t\t= {\t2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n\t\t\t\t3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n\t\t\t\t4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n\t\t\t\t6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n\t\t\t\t8081 8283 8485 8687 8889 8a8b 8c8d 8e8f\n\t\t\t\t9091 9293 9495 9697 9899 9a9b 9c9d 9e9f\n\t\t\t  }\n\n\t$api1 = \"GetDoubleClickTime\"\n\t$api2 = \"Sleep\"\n\t$api3 = \"QueryPerformance\"\n\t$api4 = \"IsProcessorFeaturePresent\"\n\t$api5 = \"UnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand $version in (4096..filesize-65535)\n\tand $assembly in (4096..filesize-65535)\n\tand $chrgen\n\tand all of ($api*)\n}\n\nrule PE_Packed_Emotet\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential packed emotet/kryptik PE/MZ\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-29\"\n\t\tsample = \"ea155404e407fe8754a4bd938a87e082\"\n\t\tsample = \"84199eebef97df9e51c9ddc6eb245182\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t// outsd odd port i/o\n\t\t$outsd = { 6F5F 655F 5F4D 656D 6F72 79 }\n\n\t\t$ = \"SHEmptyRecycleBinA\"\n\t\t$ = \"FindExecutableW\"\n\t\t$ = \"CryptSignHashA\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand $outsd\n\t\tand any of them\n}\n\nrule PE_Emotet_BO_CryptSignHashA\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-29\"\n        description = \"Potential Emotet PE/MZ using CryptSignHashA with specific byte ordering\"\n        sample = \"ea155404e407fe8754a4bd938a87e082\"\n\treference = \"/wiki/emotet\"\n\n    strings:\n\n\t$ = \"CryptSignHashA\"\n\n\t//0003c60: 656c 3332 2e64 6c6c 0075 6f61 644c 6962  el32.dll.uoadLib\n\t//0003c70: 7261 7279 4578 5700 0000 0000 0000 0000  raryExW.........\n\t$ = { 656c 3332 2e64 6c6c [1-4] 6f61 644c 6962 7261 7279 4578 5700 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_IPv4_CryptHook\n:malexe\n{\n    meta:\n        author = \"Peter Misurek/Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, embedded IPv4 and CryptStringToBinaryA and SetWindowsHookEx\"\n        sample = \"f50cd8516b988d396505bb340899c6f2\"\n        sample = \"87a95561f405678080472d472c33ceba\"\n        sample = \"4e175051935c7c82232dd0c293ac42ef\"\n\n    strings:\n        //Hardcoded IPv4\n        $IP0 = { 302e3?[0-2]2e3?[0-2]2e3? }\n        $IP1 = { 312e3?[0-2]2e3?[0-2]2e3? }\n        $IP2 = { 322e3?[0-2]2e3?[0-2]2e3? }\n        $IP3 = { 332e3?[0-2]2e3?[0-2]2e3? }\n        $IP4 = { 342e3?[0-2]2e3?[0-2]2e3? }\n        $IP5 = { 352e3?[0-2]2e3?[0-2]2e3? }\n        $IP6 = { 362e3?[0-2]2e3?[0-2]2e3? }\n        $IP7 = { 372e3?[0-2]2e3?[0-2]2e3? }\n        $IP8 = { 382e3?[0-2]2e3?[0-2]2e3? }\n        $IP9 = { 392e3?[0-2]2e3?[0-2]2e3? }\n        $IP10 = { 30002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP11 = { 31002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP12 = { 32002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP13 = { 33002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP14 = { 34002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP15 = { 35002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP16 = { 36002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP17 = { 37002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP18 = { 38002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP19 = { 39002e003?00[0-4]002e003?00[0-4]002e003? }\n\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"SetWindowsHookEx\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($IP*)\n        and all of ($API*)\n}\n\nrule MZ_PE_Osiris_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-26\"\n                reference = \"/wiki/osiris\"\n                description = \"Potential Osiris MZ loader byte order and custom PE section\"\n                samples = \"47a4121b54b59a6914afc2e5607aecd1\"\n\n\tstrings:\n\t\t//00012270: 6541 0000 5001 4765 7453 7461 7274 7570  eA..P.GetStartup\n\t\t//00012280: 496e 666f 4100 4b45 524e 454c 3332 2e64  InfoA.KERNEL32.d\n\t\t//00012290: 6c6c 0000 fd00 4765 7444 4300 0302 5265  ll....GetDC...Re\n\t\t$ = { 4765 7453 7461 7274 7570 496e 666f 41[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000\n\t\tand pe.number_of_sections \t>= 5\n\t\tand pe.number_of_imports\t<= 7\n\t\tand pe.DEBUG_STRIPPED \t\t== 512\n\t\tand pe.MACHINE_32BIT \t\t== 256\n\t\tand pe.LOCAL_SYMS_STRIPPED \t== 8\n\t\tand pe.LINE_NUMS_STRIPPED \t== 4\n\t\tand pe.EXECUTABLE_IMAGE \t== 2\n\t\tand pe.RELOCS_STRIPPED \t\t== 1\n\t\tand pe.BYTES_REVERSED_HI \t== 32768\n\t\tand pe.UP_SYSTEM_ONLY \t\t== 16384\n\t\tand pe.DLL \t\t\t== 8192\n\t\tand pe.SYSTEM \t\t\t== 4096\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tnot pe.sections[i].name matches /^\\.[a-z]+(data|text)$/\n\t\t\tand pe.sections[i].name matches /^\\.[a-z]+$/\n\t\t\tand pe.sections[i].raw_data_size == 4096\n\t\t\tand pe.sections[i].virtual_size % 1024 >> 0\n\t\t)\n\t\tand all of them\n}\n\nrule PE_DungCert_Serial\n:malexe\n{\n\n    meta:\n        author   = \"Peter Misurek\"\n        date     = \"2019-04-23\"\n\tmodified = \"2019-04-26\"\n        tlp      = \"AMBER\"\n        description = \"Bad signing certificate serial number with terse one-word Company Name\"\n        samples  = \"914656e842d407c3e90be6d60592fc55\"\n\n    condition:\n        filesize < 1024KB and uint16(0) == 0x5a4d\n        and not pe.signatures[pe.number_of_signatures - 1].serial matches /^([A-Fa-f0-9]{2}\\x3a?){2,}$/\n        and (\n\t\t   pe.version_info[\"CompanyName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t)\n\n}\n\nrule MZ_PE_Pounders_NC\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-25\"\n                reference = \"/wiki/formbook\"\n                description = \"Potential MZ with PE version information pounding of the keyboard.\"\n                samples = \"7d745da50ef4aca016b759f5387fff1b\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"CompanyName\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"ProductName\"] matches /^[a-z]{1,128}$/\n}\n\nrule API_Amadey\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Amadey Binary API\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"fbe6d341c1b69975be74616d01c6d273\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/amadey\"\n\n\tstrings:\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"CreateEventW\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"GetVersionExW\"\n\t\t$ = \"GetOEMCP\"\n\t\t$ = \"GetEnvironmentStringsW\"\n\t\t$ = \"RegisterClassW\"\n\t\t$ = \"UnregisterClassA\"\n\t\t$ = \"PostMessageW\"\n\t\t$ = \"WinVerifyTrust\"\n\t\t$ = \"GetStartupInfoW\"\n\t\t$ = \"LCMapStringW\"\n\n\t\t$byte_order = { 4b45 524e 454c 3332 2e64 6c6c [1-512] 5553 4552 3332 2e64 6c6c [1-32] 434f 4d43 544c 3332 2e64 6c6c [1-256] 5749 4e54 5255 5354 2e64 6c6c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n\t\tand pe.RELOCS_STRIPPED == 1\n\n}\n\nrule Office_40_URL_Embed\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using legacy Word/Excel 4.0 format and a URL present with a PK embed, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        hash = \"d33fd4d91e78f4e4cda03703159bc37e\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/amadey\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $legacy1 = \"Excel 4.0\"\n        $legacy2 = \"Word 4.0\"\n\n        $bad1 = \"http://\"\n        $bad2 = \"https://\"\n\n        $embed = { 504b 0304 }    //PK\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($legacy*)\n        and any of ($bad*)\n        and $embed in (4096 .. filesize)\n}\n\nrule API_Azorult\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Azorult Binary API with ForceRemove and CRC checking\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"4a0fbf8718587af3ebe26d9a86c5e81f\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/azorult\"\n\t\tfeelz = \"https://www.youtube.com/watch?v=Y-Tjgur2DTM&t=8\"\n\n\tstrings:\n\t\t$ = \"GetACP\"\n\t\t$ = \"GetLocaleInfoA\"\n\t\t$ = \"GetVersionExA\"\n\t\t$ = \"GetSystemTimeAsFileTime\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"MultiByteToWideChar\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"HeapDestroy\"\n\t\t$ = \"HeapCreate\"\n\t\t$ = \"HeapReAlloc\"\n\t\t$ = \"TerminateProcess\"\n\t\t$ = \"GetEnvironmentStrings\"\n\t\t$ = \"FreeEnvironmentStrings\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"EnumSystemLocales\"\n\t\t$ = \"IsValid\"\n\t\t$ = \"GetOEMCP\"\n\n\t\t//Interesting spices\n\t\t$ = \"GetProcessWindowStation\"\n\t\t$ = \"ForceRemove\"\n\t\t//$ = \"CRC Checker,\"\n\t\t//$ = \"Microsoft Visual C++\"\n\t\t$ = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n\t\t$ = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 5553 4552 3332 2e64 6c6c 00 }        //KERNEL32.dll USER32.dll\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule Office_Active_AO_Winmgm_Reverse\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using StrReverse, Auto Open behavior, ActiveDocument, and Winmgmts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-22\"\n\t\thash = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/avemaria\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$bad1 = \"Winmgmts\"\t\tnocase ascii\n\t\t$bad2 = \"StrReverse\"\t\tascii\n\t\t$bad3 = \"ActiveDocument\"\tascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($bad*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_LongInt\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using a long integer in XML\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        sample = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/avemaria\"\n\n    strings:\n        $schema = \"xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"\"\n        $long_int = /=\\x22[0-9]{512,8096}\\x22/\n\n    condition:\n        uint16(0) == 0x3f3c\n        and uint16(2) == 0x6d78\n        and uint16(4) == 0x206c\n        and all of them\n}\n\nrule PE_Avemaria_CHAD\n:malexe\n{\n        meta:\n                description = \"Potential AveMaria Binary CHAD HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-22\"\n                sample = \"f5026299891e9351167633f655c9a682, 56ff38d5a61f29004c1ee68ffd4f29d1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/avemaria\"\n\n        strings:\n                //Nonsense\n\t        $chad1 = { 0d0a 486f 7374 3a20 [1-4] 0d0a 4163 6365 7074 3a20 2a2f 2a0d 0a43 6f6e 6e65 6374 696f 6e3a 2063 6c6f 7365 0d0a 0d0a }\n\t\t$chad2 = { 48 5454 502f 312e 310d 0a55 7365 722d 4167 656e 743a 20 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\n\n\nrule MZ_PE_PEPE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-10\"\n\t\tmodified = \"2019-06-17\"\n                description = \"Interesting fluffy byte code potentially associated with njrat or .NET Bladabindi\"\n                reference = \"/wiki/njrat, /wiki/bladabindi\"\n                samples = \"a075d07dffdf125e20a57048deaa8abc, 0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n                $pepe1 = { 8000 0000 0000 0000 0000 0000 0000 0001 }\n                $pepe2 = { f0f0 f0ff f0f0 f0ff f0f0 f0ff f0f0 f0ff }\n\t\t$pepe3 = { e0e9 e9ff e0e9 e9ff e0e9 e9ff e0e9 e9ff }\n\t\t$pepe4 = { 7805 7805 7805 7805 7805 7805 7805 7805 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                           #pepe1 > 128\n                        or #pepe2 > 128\n                        or #pepe3 > 128\n                        or #pepe4 > 128\n                )\n}\n\nrule PE_CHAD_API_Raccoon\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Raccoon Binary API, null bytes to EOF, No .Net Assembly, Dinkumware libraries, and CHAD HTTP Headers\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-19\"\n\t\tsample = \"4895e1c807a9bb9d2359d4510283fc8a\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/raccoon\"\n\n\tstrings:\n\t\t$api1 = \"HttpOpenRequestA\"\n\t\t$api2 = \"InternetReadFile\"\n\t\t$api3 = \"HttpSendRequestA\"\n\n\t\t//Nonsense\n\t\t$chad1 = { 636f 6e74 656e 742d 6469 7370 6f73 6974 696f 6e3a 2066 6f72 6d2d 6461 7461 3b20 6e61 6d65 3d22 }\n\t\t$chad2 = { 22 0d0a 436f 6e74 656e 742d 5479 7065 3a20 6170 706c 6963 6174 696f 6e2f 6f63 7465 742d 7374 7265 616d 0d0a 0d0a }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Dink_Ass_TPDB_W\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API, null bytes to EOF, .Net Assembly, Dinkumware libraries, and a terse path PDB\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n        date = \"2019-04-18\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17, 1e9a562ecf7a96dd7173d24c438ff8f9, 1e9a562ecf7a96dd7173d24c438ff8f9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n            //$api1 = \"AVVirtualProcessorRoot\"\n            $api2 = \"CreateSymbolicLinkW\"\n            $api3 = \"DecodePointer\"\n            $api4 = \"EncodePointer\"\n            $api5 = \"FlsGetValue\"\n            $api6 = \"FlsSetValue\"\n            $api7 = \"FreeEnvironmentStringsW\"\n            $api8 = \"GetACP\"\n            //$api9 = \"GetAsyncKeyState\"\n            $api10 = \"GetCommandLineA\"\n            //$api11 = \"GetCommandLineW\"\n            $api12 = \"GetConsoleCP\"\n            $api13 = \"GetConsoleMode\"\n            $api14 = \"GetCPInfo\"\n            $api15 = \"GetCurrentProcessorNumber\"\n            //$api16 = \"GetCurrentProcessorNumberEx\"\n            //$api17 = \"GetDC\"\n            $api18 = \"GetEnvironmentStringsW\"\n            $api19 = \"GetFileInformationByHandleEx\"\n            $api20 = \"GetLocaleInfoEx\"\n            $api21 = \"GetLocaleInfoW\"\n            $api22 = \"GetLogicalProcessorInformation\"\n            //$api23 = \"GetLogicalProcessorInformationEx\"\n            //$api24 = \"GetNumaHighestNodeNumber\"\n            $api25 = \"GetOEMCP\"\n            $api26 = \"GetProcAddress\"\n            //$api27 = \"GetProcessAffinityMask\"\n            $api28 = \"GetStartupInfoW\"\n            $api29 = \"GetSystemTimeAsFileTime\"\n            //$api30 = \"GetSystemTimePreciseAsFileTime\"\n            $api31 = \"GetTickCount64\"\n            //$api32 = \"GetTraceEnableFlags\"\n            //$api33 = \"GetTraceEnableLevel\"\n            //$api34 = \"GetTraceLoggerHandle\"\n            $api35 = \"GetUserDefaultLCID\"\n            $api36 = \"GetUserDefaultLocaleName\"\n            //$api37 = \"GetVersionExW\"\n            //$api38 = \"InterlockedFlushSList\"\n            $api39 = \"IsDebuggerPresent\"\n            $api40 = \"IsProcessorFeaturePresent\"\n            $api41 = \"IsValidCodePage\"\n            $api42 = \"IsValidLocale\"\n            $api43 = \"IsValidLocaleName\"\n            //$api44 = \"LocaleNameToLCID\"\n            $api45 = \"MultiByteToWideChar\"\n            $api46 = \"QueryPerformanceCounter\"\n            //$api47 = \"RegCreateKeyA\"\n            //$api48 = \"SchedulerKind\"\n            //$api49 = \"SetThreadAffinityMask\"\n            //$api50 = \"SleepConditionVariableCS\"\n            //$api51 = \"SleepConditionVariableSRW\"\n            //$api52 = \"SystemFunction036\"\n            //$api53 = \"TargetOversubscriptionFactor\"\n            $api54 = \"TlsAlloc\"\n            $api55 = \"TlsFree\"\n            $api56 = \"TlsGetValue\"\n            $api57 = \"TlsSetValue\"\n            //$api58 = \"TryAcquireSRWLockExclusive\"\n            //$api59 = \"TryEnterCriticalSection\"\n            $api60 = \"UnhandledExceptionFilter\"\n            //$api61 = \"UTF-16LEUNICODE\"\n            //$api62 = \"VirtualProtectEx\"\n            $api63 = \"WideCharToMultiByte\"\n\n            //Now, some random spice!\n            $spice1 = \"Dinkumware\"\n            $spice2 = \"assembly>\"\n            $spice3 = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n            $spice4 = \"Sleep\"\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint32(filesize-32) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule PE_gozi_ursnif\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Gozi/Ursnif\"\n        risk = \"high\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n        tlp = \"GREEN\"\n\n    strings:\n        $pdb = /\\x3A\\x5c([A-Za-z-]{2,8}\\\\){1,4}(([A-Za-z]{1,12}\\.pdb){1})/\n\n        $ = \"Sleep\"\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"GetOEMCP\"\n        $ = \"HeapFree\"\n        $ = \"HeapSize\"\n        $ = \"TlsAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"HeapAlloc\"\n        $ = \"RtlUnwind\"\n        $ = \"WriteFile\"\n        $ = \"CloseHandle\"\n        $ = \"ExitProcess\"\n        $ = \"GetFileType\"\n        $ = \"HeapReAlloc\"\n        $ = \"TlsGetValue\"\n        $ = \"TlsSetValue\"\n        $ = \"GetConsoleCP\"\n        $ = \"GetLastError\"\n        $ = \"GetStdHandle\"\n        $ = \"LCMapStringW\"\n        $ = \"SetLastError\"\n        $ = \"SetStdHandle\"\n        $ = \"WriteConsoleW\"\n        $ = \"GetConsoleMode\"\n        $ = \"GetProcAddress\"\n        $ = \"GetStringTypeW\"\n        $ = \"RaiseException\"\n        $ = \"GetStartupInfoW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"GetModuleHandleW\"\n        $ = \"TerminateProcess\"\n        $ = \"GetCurrentProcess\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"EnterCriticalSection\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"SetUnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $pdb\n        and pe.version_info[\"LegalCopyright\"] matches /Copyright\\x20?\\xa9\\x2020[0-2][0-9]\\x2e?\\x2d?(20[0-2][0-9])?/\n        and 40 of them\n}\n\nrule API_Emotet_Dinkumware_eFeelz\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API with pdb on E:\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-17\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //Debugger/VM/system inventory\n                $api1 = \"GetLocaleInfoW\"\n                $api2 = \"IsValidLocale\"\n                $api3 = \"GetUserDefaultLCID\"\n                $api4 = \"EnumSystemLocalesW\"\n                $api5 = \"IsDebuggerPresent\"\n                $api6 = \"AreFileApisANSI\"\n                $api7 = \"IsValidCodePage\"\n                $api8 = \"GetTimeZoneInformation\"\n                $api9 = \"GetOEMCP\"\n                $api10 = \"GetACP\"\n                $api11 = \"QueryPerformanceCounter\"\n                $api12 = \"GetCPInfo\"\n                $api13 = \"IsProcessorFeaturePresent\"\n\t\t$api14 = \"GetConsoleCP\"\n\t\t$api15 = \"GetConsoleMode\"\n\n\t\t//Random API feelz\n\t\t$api20 = \"GetCommandLineA\"\n\t\t$api21 = \"GetCommandLineW\"\n\t\t$api22 = \"Sleep\"\n\n                //Now, some random spice!\n                $spice1 = \"Dinkumware\"\n                $spice2 = \"<assembly\"\n\t\t//0065f00: b794 0556 767d 0d3a 0100 0000 653a 5c42  ...Vv}.:....e:\\B\n\t\t//0065f10: 7572 6e5c 7365 6e64 5c68 6f75 7365 5c45  urn\\send\\house\\E\n\t\t//0065f20: 7861 6d70 6c65 436c 6173 732e 7064 6200  xampleClass.pdb.\n\n        \t$spice3 = {(65|45)3a 5c42 [8-64] 2e 7064 6200 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint16(filesize-2) == 0x0000\n                and all of them\n}\n\nrule PE_Ryuk\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Ryuk\"\n        risk = \"high\"\n        sample = \"1bd7d1b87c5091a9653fe8005892b784\"\n        sample = \"4bb18d5e27f9e75b211f8053a1e0fb4f\"\n        tlp = \"GREEN\"\n\t\treference = \"/wiki/ryuk\"\n\n    strings:\n        // No system is safe\n        $str02  = { 4E6F 2073 7973 7465 6D20 6973 2073 6166 }\n\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"TlsAlloc\"\n        $ = \"HeapSize\"\n        $ = \"HeapFree\"\n        $ = \"GetOEMCP\"\n        $ = \"WriteFile\"\n        $ = \"RtlUnwind\"\n        $ = \"HeapAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"FindClose\"\n        $ = \"TlsSetValue\"\n        $ = \"TlsGetValue\"\n        $ = \"HeapReAlloc\"\n        $ = \"GetFileType\"\n        $ = \"FreeLibrary\"\n        $ = \"ExitProcess\"\n        $ = \"CreateFileW\"\n        $ = \"CloseHandle\"\n        $ = \"SetStdHandle\"\n        $ = \"SetLastError\"\n        $ = \"LCMapStringW\"\n        $ = \"GetStdHandle\"\n        $ = \"GetLastError\"\n        $ = \"GetConsoleCP\"\n        $ = \"WriteConsoleW\"\n        $ = \"DecodePointer\"\n        $ = \"RaiseException\"\n        $ = \"LoadLibraryExW\"\n        $ = \"GetStringTypeW\"\n        $ = \"GetProcessHeap\"\n        $ = \"GetProcAddress\"\n        $ = \"GetConsoleMode\"\n        $ = \"IsValidCodePage\"\n        $ = \"GetStartupInfoW\"\n        $ = \"GetCommandLineW\"\n        $ = \"GetCommandLineA\"\n        $ = \"TerminateProcess\"\n        $ = \"SetFilePointerEx\"\n        $ = \"GetModuleHandleW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"SystemFunction036\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentProcess\"\n        $ = \"GetModuleHandleExW\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"InitializeSListHead\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"EnterCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"IsProcessorFeaturePresent\"\n        $ = \"SetUnhandledExceptionFilter\"\n        $ = \"InitializeCriticalSectionAndSpinCount\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $str02\n        and 20 of them\n}\n\nrule API_BO_BlackMoon\n:malexe\n{\n        meta:\n                description = \"Potential BlackMoon/KRBanker Binary API byte order\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"8f6a31b8eaa70217d80cc419f10285274cf3ec4c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/blackmoon\"\n\n        strings:\n\t\t//00016610: 4c6f 6164 4c69 6272 6172 7941 0000 5669  LoadLibraryA..Vi\n\t\t//00016620: 7274 7561 6c50 726f 7465 6374 0000 5261  rtualProtect..Ra\n\t\t//00016630: 7348 616e 6755 7041 0000 5348 4765 7453  sHangUpA..SHGetS\n\t\t//00016640: 7065 6369 616c 466f 6c64 6572 5061 7468  pecialFolderPath\n\n\t\t$byte_order =  { 4c6f 6164 4c69 6272 6172 7941 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 5261 7348 616e 6755 7041 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Keys\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API using Hot Keys\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"ba9e7159bb92c1525de87f4edd9f5af9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n\t\t$api1 = \"GetProcAddress\"\n\n\t\t//Debugger/VM/system inventory\n\t\t$api2 = \"GetLocaleInfoW\"\n\t\t$api3 = \"IsValidLocale\"\n\t\t$api4 = \"GetUserDefaultLCID\"\n\t\t$api5 = \"EnumSystemLocalesW\"\n\t\t$api6 = \"IsDebuggerPresent\"\n\t\t$api7 = \"AreFileApisANSI\"\n\t\t$api8 = \"IsValidCodePage\"\n\t\t$api9 = \"GetTimeZoneInformation\"\n\t\t$api10 = \"GetOEMCP\"\n\t\t$api11 = \"GetACP\"\n\t\t$api12 = \"QueryPerformanceCounter\"\n\t\t$api13 = \"FreeEnvironmentStringsW\"\n\t\t$api14 = \"OutputDebugStringW\"\n\t\t$api15 = \"GetCPInfo\"\n\t\t$api16 = \"IsProcessorFeaturePresent\"\n\n\t\t//Feelz bad\n\t\t$api20 = \"GetSystemTimeAsFileTime\"\n\t\t$api21 = \"WideCharToMultiByte\"\n\t\t$api22 = \"UnhandledExceptionFilter\"\n\t\t$api23 = \"Sleep\"\n\t\t$api24 = \"GetAsyncKeyState\"\n\t\t$api25 = \"UnregisterHotKey\"\n\t\t$api26 = \"TlsAlloc\"\n\t\t$api27 = \"EncodePointer\"\n\t\t$api28 = \"GetCurrentProcessorNumber\"\n\t\t$api29 = \"GetTickCount64\"\n\t\t$api30 = \"SetFileInformationByHandleW\"\n\t\t$api31 = \"CreateSymbolicLinkW\"\n\n\t\t//Now, some random spice!\n\t\t$spice1 = \"Dinkumware\"\n\t\t$spice2 = \"<assembly\"\n\n\t\t//Tracking threats on whitespace usage!  NextGenHacker101 style skills.\n\t\t//$h4x0r = { 55 2020 2020 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint16(filesize-2) == 0x0000\n\t\tand all of them\n}\n\nrule PE_gozi_ursnif2\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-08\"\n        description = \"Gozi/Ursnif\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n\n    strings:\n        $api01 = \"GetProcAddress\"\n        $api02 = \"TerminateProcess\"\n        $api03 = \"GetCurrentProcess\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and\n        (pe.entry_point == 0x5e8 or pe.entry_point == 0x2abe7\n        or pe.entry_point == 0x2b95d or pe.entry_point == 0x2c3f8\n        or pe.entry_point == 0x2cf18 or pe.entry_point == 0x2ee78\n        or pe.entry_point == 0x308a2 or pe.entry_point == 0x31c2f\n        or pe.entry_point == 0x9d17f2 or pe.entry_point == 0x1281D1\n        or pe.entry_point == 0x1567 or pe.entry_point == 0x6B9D\n        or pe.entry_point == 0x1839F)\n}\n\nrule PE_DungCert_CN\n:malexe\n{\n    meta:\n    author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-04-01\"\n\tmodified = \"2019-04-12\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/emotet\"\n        description = \"Signed PE/MZ with a garbage CN value, reminds me of SSLValidator.pl logic\"\n        samples = \"25f63a7402048eea0955b7468e9ef2c3\"\n\n    condition:\n    uint16(0) == 0x5a4d\n        and (\n               pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[^aAeEiIoOuU]+$/\n            or pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[A-Z]{8,32}$/\n        )\n}\n\nrule PE_DungCert_HackingTooMuchTime\n:malexe\n{\n    meta:\n        author   = \"Nathan Fowler/Peter Misurek\"\n        thanks   = \"The Distinguished Order of the Miscreant Punchers, RHMP\"\n        date     = \"2019-04-02\"\n\tmodified = \"2019-04-12\"\n        tlp      = \"AMBER\"\n        reference   = \"/wiki/emotet\"\n        description = \"Self-Signed PE/MZ with a not_after value so large they are simply hacking too much time.\"\n        samples  = \"25f63a7402048eea0955b7468e9ef2c3\"\n        feelz    = \"https://www.youtube.com/watch?v=fQGbXmkSArs\"\n\n    condition:\n        //MZ and PE\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n        //Null at the end, seen this quite a few times with Emotet\n        and uint16(filesize-2) == 0x0000\n\n        //Certificate expires in 10 years or more and appears to be self-signed\n        and pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + (315569520 * 1.1)\n        and pe.signatures[pe.number_of_signatures -1].version    == 3\n        and pe.signatures[pe.number_of_signatures -1].algorithm  == \"sha1WithRSA\"\n        and pe.signatures[pe.number_of_signatures -1].issuer     == pe.signatures[pe.number_of_signatures -1].subject\n        and pe.signatures[pe.number_of_signatures -1].subject matches /^\\/CN=[^\\x2e]+$/\n\n        //LOL, literally no idea what I'm doing here, but PE isn't PEPE without spices.\n        and pe.NO_BIND           == 2048\n        and pe.NO_SEH            == 1024\n        and pe.NO_ISOLATION      == 512\n        and pe.NX_COMPAT         == 256\n        and pe.DEBUG_STRIPPED    == 512\n        and pe.MACHINE_32BIT     == 256\n        and pe.FORCE_INTEGRITY   == 128\n\n        //Maybe a good idea, https://www.sans.org/reading-room/whitepapers/malicious/attributes-malicious-files-33979 says so.  I grabbed some of these at random feelz.\n        and pe.SUBSYSTEM_WINDOWS_CUI     == 3\n        and pe.SUBSYSTEM_WINDOWS_GUI     == 2\n        and pe.SUBSYSTEM_NATIVE          == 1\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.LINE_NUMS_STRIPPED        == 4\n        and pe.EXECUTABLE_IMAGE          == 2\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n\n}\n\nrule API_Emotet_PE_PEPE\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary using too many feelz\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-12\"\n                sample = \"1e57b56a1e40a89d326ca55ee1df2996\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n                $pepe1 = { 3a00 0000 ffff 8?00 }\n                $pepe2 = { 3b00 0000 ffff 8?00 }\n                $pepe3 = { 3c00 0000 ffff 8?00 }\n                $pepe4 = { 3d00 0000 ffff 8?00 }\n                $pepe5 = { 3e00 0000 ffff 8?00 }\n                $pepe6 = { 3f00 0000 ffff 8?00 }\n                $pepe7 = { 3000 0000 ffff 8?00 }\n                $pepe8 = { 3100 0000 ffff 8?00 }\n                $pepe9 = { 3200 0000 ffff 8?00 }\n                $pepe10 = { 3300 0000 ffff 8?00 }\n                $pepe11 = { 3400 0000 ffff 8?00 }\n                $pepe12 = { 3500 0000 ffff 8?00 }\n                $pepe13 = { 3600 0000 ffff 8?00 }\n                $pepe14 = { 3700 0000 ffff 8?00 }\n                $pepe15 = { 3800 0000 ffff 8?00 }\n                $pepe16 = { 3900 0000 ffff 8?00 }\n\n        condition:\n                uint16(0) == 0x5a4d\n        and $lib\n        and ( #pepe1 + #pepe2 + #pepe3 + #pepe4 + #pepe5 + #pepe6 + #pepe7 + #pepe8 + #pepe9 + #pepe10 + #pepe11 + #pepe12 + #pepe13 + #pepe14 + #pepe15 + #pepe16 >= 10 )\n}\n\nrule API_Trickbot_Voltron\n:malexe\n{\n        meta:\n            description = \"Potential Trickbot binary\"\n            author = \"Nathan Fowler\"\n            risk = \"high\"\n            date = \"2019-04-10\"\n            sample = \"f4cc6daa274bdc484cadd4745ff7a975\"\n            tlp = \"GREEN\"\n            reference = \"/wiki/trickbot\"\n            feelz = \"https://youtu.be/tZZv5Z2Iz_s?t=2\"\n\n        strings:\n            //0025820: c002 496e 7465 726c 6f63 6b65 6449 6e63  ..InterlockedInc\n            //0025830: 7265 6d65 6e74 0000 bc02 496e 7465 726c  rement....Interl\n            //0025840: 6f63 6b65 6444 6563 7265 6d65 6e74 0000  ockedDecrement..\n            //0025850: 2104 536c 6565 7000 bd02 496e 7465 726c  !.Sleep...Interl\n            //0025860: 6f63 6b65 6445 7863 6861 6e67 6500 b402  ockedExchange...\n            //$byte_order = { bc02 496e 7465 726c 6f63 6b65 6444 6563 7265 6d65 6e74 [1-4] 536c 6565 70[1-4] 496e 7465 726c 6f63 6b65 64 }\n\n            //C library\n            $lib = \"Dinkumware\"               wide ascii\n\n            //Crypt stuffs\n            $api1 = \"CryptEncrypt\"            wide ascii\n            $api2 = \"CryptImportKey\"          wide ascii\n            $api3 = \"CryptAcquireContextA\"    wide ascii\n            $api4 = \"InterlockedIncrement\"    wide ascii\n            $api5 = \"InterlockedDecrement\"    wide ascii\n            $api6 = \"InterlockedExchange\"     wide ascii\n            $api7 = \"Sleep\"                   wide ascii\n\n        condition:\n            uint16(0) == 0x5a4d\n            and all of them\n}\n\nrule Baldrs_hate_MZ\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-09\"\n                reference = \"/wiki/baldr\"\n                description = \"Potential Baldr stealer/locker\"\n                samples = \"d673af1e4ca06225f287677943a214fd\"\n\n        strings:\n\t\t$api1 = \"BinaryReader\"\t\t\t\tascii wide\n\t\t$api2 = \"CryptoServiceProvider\"\t\t\tascii wide\n\t\t$api3 = \"TripleDESCryptoServiceProvider\"\tascii wide\n\t\t$api4 = \"SHA1CryptoServiceProvider\"\t\tascii wide\n\t\t$api5 = \"CryptoTransform\"\t\t\tascii wide\n\t\t$api6 = \"TransformFinalBlock\"\t\t\tascii wide\n\t\t$api7 = \"BinaryOperation\"\t\t\tascii wide\n\t\t$api8 = \"BigEndianUnicode\"\t\t\tascii wide\n\t\t$api9 = \"SymmetricAlgorithm\"\t\t\tascii wide\n\t\t$api10 = \"CryptUnprotectData\"\t\t\tascii wide\t//Srsly?\n\t\t$api11 = \"FromBase64String\"\t\t\tascii wide\n\n\t\t//.NET hatred\n\t\t$net1 = \"SkipVerification\"\t\t\tascii wide\n\t\t$net2 = \"WrapNonExceptionThrows\"\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule MZ_Emotet_Debug_Peek\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-09\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ with network mapping events\"\n        samples = \"096ba46194cefe593d39d4a07bb297db\"\n\n    strings:\n\n        //00150c0: 1a03 4d75 6c74 6942 7974 6554 6f57 6964  ..MultiByteToWid\n        //00150d0: 6543 6861 7200 2703 4f70 656e 4576 656e  eChar.'.OpenEven\n        //00150e0: 7441 0000 2b03 4f70 656e 4669 6c65 4d61  tA..+.OpenFileMa\n        //00150f0: 7070 696e 6741 0000 3303 4f70 656e 5072  ppingA..3.OpenPr\n        //0015100: 6f63 6573 7300 3a03 4f75 7470 7574 4465  ocess.:.OutputDe\n        //0015110: 6275 6753 7472 696e 6741 0000 3b03 4f75  bugStringA..;.Ou\n        //0015120: 7470 7574 4465 6275 6753 7472 696e 6757  tputDebugStringW\n        //0015130: 0000 3e03 5065 656b 4e61 6d65 6450 6970  ..>.PeekNamedPip\n        //0015140: 6500 4403 5072 6f63 6573 7333 3246 6972  e.D.Process32Fir\n        $byte_order = { 75 7470 7574 4465 6275 6753 7472 696e 6741 [1-8] 4f75 7470 7574 4465 6275 6753 7472 696e 6757 [1-8] 65 656b 4e61 6d65 6450 6970 65 }\n        $api1 = \"OpenFileMappingA\"    ascii\n        $api2 = \"MultiByteToWideChar\"    ascii\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n}\n\nrule MZ_Emotet_Space_Payload_NN\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-22\"\n\t\tmodified = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential Emotet MZ with oddly indented .NET stuffs or something also seen with Gandcrab\"\n\t\tsamples = \"e38024cae55c8f75236fbfbd0ba8bcda, c734c80b8b1b11417a9358e01b5567ac, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t//I keep coming back to this quad-spaced CRLF stuff.\n\t\t//I think this is an oddity... feelz.\n\t\t//002ae20: 7374 5665 7273 696f 6e3d 2231 2e30 223e  stVersion=\"1.0\">\n\t\t//002ae30: 0d0a 0d0a 2020 2020 3c61 7373 656d 626c  ....    <assembl\n\t\t//002ae40: 7949 6465 6e74 6974 790d 0a20 2020 2020  yIdentity..\n\t\t//002ae50: 2020 7479 7065 3d22 7769 6e33 3222 0d0a    type=\"win32\"..\n\t\t//002ae60: 2020 2020 2020 206e 616d 653d 2244 6973         name=\"Dis\n\t\t//002ae70: 6d2e 3122 0d0a 2020 2020 2020 2070 726f  m.1\"..       pro\n\t\t//002ae80: 6365 7373 6f72 4172 6368 6974 6563 7475  cessorArchitectu\n\t\t//002ae90: 7265 3d22 7838 3622 0d0a 2020 2020 2020  re=\"x86\"..\n\t\t//002aea0: 2076 6572 7369 6f6e 3d22 352e 312e 302e   version=\"5.1.0.\n\t\t//002aeb0: 3022 202f 3e0d 0a20 2020 2020 2020 0d0a  0\" />..       ..\n\t\t//002aec0: 2020 2020 3c64 6573 6372 6970 7469 6f6e      <description\n\t\t//002aed0: 3e57 696e 646f 7773 2064 6570 6c6f 796d  >Windows deploym\n\t\t//002aee0: 656e 7420 696d 6167 6520 7365 7276 6963  ent image servic\n\t\t//002aef0: 696e 6720 616e 6420 6d61 6e61 6765 6d65  ing and manageme\n\t\t//002af00: 6e74 2074 6f6f 6c3c 2f64 6573 6372 6970  nt tool</descrip\n\t\t//002af10: 7469 6f6e 3e0d 0a0d 0a20 2020 203c 6669  tion>....    <fi\n\n\t\t//Oddly spaced indentions\n\t\t$feelz111 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020202020202020 76657273696f6e3d22 }\n\t\t$feelz112 = { 2f3e0d0a \t\t\t\t\t\t\t 2020202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz91 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020202020202020 76657273696f6e3d22 }\n\t\t$feelz92 = { 2f3e0d0a \t\t\t\t\t\t\t202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz71 = { 70726f636573736f724172636869746563747572653d22783836220d0a 20202020202020 76657273696f6e3d22 }\n\t\t$feelz72 = { 2f3e0d0a \t\t\t\t\t\t\t20202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz51 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020 76657273696f6e3d22 }\n\t\t$feelz52 = { 2f3e0d0a \t\t\t\t\t\t\t2020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz31 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020 76657273696f6e3d22 }\n\t\t$feelz32 = { 2f3e0d0a \t\t\t\t\t\t\t202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t//Oddly spaced indentions seen in Gandcrab 2019-04-09\n\t\t$feelz_he_11 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020202020\t3c }\n\t\t$feelz_he_9 = { 3c6170706c69636174696f6e3e200d0a\t202020202020202020\t3c }\n\t\t$feelz_he_7 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020\t\t3c }\n\t\t$feelz_he_5 = { 3c6170706c69636174696f6e3e200d0a\t2020202020\t\t3c }\n\t\t$feelz_he_3 = { 3c6170706c69636174696f6e3e200d0a\t202020\t\t\t3c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t   all of ($feelz11*)\n\t\t\tor all of ($feelz9*)\n\t\t\tor all of ($feelz7*)\n\t\t\tor all of ($feelz5*)\n\t\t\tor all of ($feelz3*)\n\t\t\tor $feelz_he_11\n\t\t\tor $feelz_he_9\n\t\t\tor $feelz_he_7\n\t\t\tor $feelz_he_5\n\t\t\tor $feelz_he_3\n\n\t\t)\n}\n\nrule MZ_ButtPadding\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential MZ with PADDINGXX at EOF or null EOF with PADDINGXX in 1024 bytes to EOF\"\n\t\tsamples = \"d05b9bf3e5093ad39ab60289ba952723, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t$padding = \"PADDINGXX\"\tascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t$padding in (filesize-64..filesize)\n\t\t\tor (\n\t\t\t\t    uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\t\t\tand $padding in (filesize-1024..filesize)\n\t\t\t)\n\t\t)\n}\n\nrule PE_Lots_Of_Evasion\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE with lots of evasive maneuvers\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule Hawkeye_PE_Assembly_Null\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-08\"\n\t\tdescription = \"Potential Hawkeye MZ Payload with .net assembly and null termination EOF\"\n\t\tsample = \"15961181f40ec5ca7c54f0c74dc2dce8\"\n\t\treference = \"/wiki/hawkeye\"\n\n\tstrings:\n\t\t$net = { 3e0d 0a3c 2f61 7373 656d 626c 793e 0d0a 0000 0000 0000 0000 0000 }\n\t\t$pkt = { 5075 626c 6963 4b65 7954 6f6b 656e 3d6e 756c 6c }\n\t\t$pdb = { 2e70 6462 }\n\n\t\t//16 byte value pairs, kind of like PEPE's brother.\n\t\t$byte = { 00\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t00 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand $net in (filesize-1024..filesize)\n\t\tand $pdb in (filesize-4096..filesize)\n\t\tand $pkt in (1024..8192)\n\t\tand #byte > 64\n}\n\nrule Office_Base64_BreakCatchWide\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential Emotet maldoc using base64 wide encoded break->catch\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-21\"\n\t\tmodified = \"2019-04-08\"\n\t\thash = \"534ab5d85e4e439449e3ad11708afcae\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t// UTF8 and UTF16-LE string wide base64 encoded\n\t\t$encstring_1 = \"IAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHs\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_2 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_3 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB\"       ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_4 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB7AH\"      ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_5 = \"HIAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHsAfQ\"     ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_6 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB9AH\"    ascii wide // Null-spaced wide format of break;}}catch{}}\n\n\t\t$encstring_7 = \"MAYQB0AGMAaAB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_8 = \"YwBhAHQAYwBoAHs\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_9 = \"BjAGEAdABjAGgAewB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_10 = \"GMAYQB0AGMAaAB7AH\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_11 = \"YwBhAHQAYwBoAHsAfQ\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_12 = \"BjAGEAdABjAGgAewB9AH\" ascii wide // Null-spaced wide format of }catch{}}\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($encstring_*)\n}\n\nrule MZ_API_PDB_Dropper\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ dropper\"\n        sample = \"5849bacfb97dadc213b48011577b89e2\"\n\n    strings:\n        //Require a PDB\n        $pdb = { 2e70 6462 0000 }\n\n        //API calls (VM/Debugger checking and encoded pointers)\n        $api1 = \"SetUnhandledExceptionFilter\"    wide ascii\n        $api2 = \"IsDebuggerPresent\"        wide ascii\n        $api3 = \"IsProcessorFeaturePresent\"    wide ascii\n        $api4 = \"EncodePointer\"            wide ascii\n        $api5 = \"DecodePointer\"            wide ascii\n        $api6 = \"Sleep\"                wide ascii\n        $api7 = \"GetWindowsDirectoryA\"        wide ascii\n        $api8 = \"GetSystemTimeAsFileTime\"    wide ascii\n        $api9 = \"VirtualProtect\"        wide ascii\n        $api10 = \"GetTempPathA\"            wide ascii\n        $api11 = \"FlsAlloc\"            wide ascii\n\n        //Other stuffs?\n        $stuffs1 = \"AVbad_alloc@std@@\"        wide ascii\n        $stuffs2 = \"AVexception@std@@\"        wide ascii\n        $stuffs3 = \"AVlogic_error@std@@\"    wide ascii\n\n        //.NET stuffs\n        //00035830: 7365 223e 3c2f 7265 7175 6573 7465 6445  se\"></requestedE\n        //00035840: 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a  xecutionLevel>..\n        //00035850: 2020 2020 2020 3c2f 7265 7175 6573 7465        </requeste\n        //00035860: 6450 7269 7669 6c65 6765 733e 0d0a 2020  dPrivileges>..\n        //00035870: 2020 3c2f 7365 6375 7269 7479 3e0d 0a20    </security>..\n\n        $net1 = { 3c2f 7265 7175 6573 7465 6445 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a 2020 2020 2020 3c2f 7265 7175 6573 7465 6450 7269 7669 6c65 6765 733e 0d0a 2020 2020 3c }\n        $net2 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n}\n\nrule Office_Var_512\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a large volume of var definitions or array element index one value references\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-01\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/cobint\"\n\t\tsample = \"4517ceb504a23350ec22508b854e9415\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Var\n\t\t$var1 = \"var \"\t\tnocase wide ascii\n\t\t$var2 = \"[1]\"\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand ( #var1 > 512 or #var2 > 512 )\n}\n\nrule Hawkeye_Keylogger_MZ\n:malexe\n{\n\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-03-22\"\n        description = \"Potential Hawkeye Keylogger based on API byte ordering\"\n        samples = \"7b29c3f38cab047488f259d6cfb29948, 969305f9f01a46e8eee82885d9bde2bd\"\n        reference = \"/wiki/hawkeye\"\n\n    strings:\n        //011ff00: 6900 0000 8d49 4200 5669 7274 7561 6c41  i....IB.VirtualA\n        //011ff10: 6c6c 6f63 0000 0000 6b65 726e 656c 3332  lloc....kernel32\n\n        //008ef00: 4765 744e 6174 6976 6553 7973 7465 6d49  GetNativeSystemI\n        //008ef10: 6e66 6f00 6b65 726e 656c 3332 2e64 6c6c  nfo.kernel32.dll\n\n        $byte_order1 = { 4765 744e 6174 6976 6553 7973 7465 6d49 6e66 6f[1-4] 6b65 726e 656c 3332 2e64 6c6c }\n        $byte_order2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and any of ($byte_order*)\n}\n\nrule Random_Hunt_20190321\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt for VM-check/debugger potentially smokeloader or similar\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-21\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/smokeloader\"\n\t\tsample = \"986e45dd8ddc32d45b2c00dd6f0619ac\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"IsDebuggerPresent\"          wide ascii\n                $badapi2 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi3 = \"UnhandledExceptionFilter\"   wide ascii\n\t\t$badapi4 = \"Sleep\"\t\t\twide ascii\n\t\t$badapi5 = \"GetTimeZone\"\t\twide ascii\n\t\t$badapi6 = \"GetOEMCP\"\t\t\twide ascii\n\t\t$badapi7 = \"GetACP\"\t\t\twide ascii\n\t\t$badapi8 = \"GetCPInfo\"\t\t\twide ascii\n\t\t$badapi9 = \"VirtualProtect\"\t\twide ascii\n\t\t$badapi10 = \"QueryPerformance\"\t\twide ascii\n\t\t$badapi11 = \"GetProcessWindow\"\t\twide ascii\n\t\t$badapi12 = \"GetUserObjectInfo\"\t\twide ascii\n\t\t$badapi13 = \"GetLastActive\"\t\twide ascii\n\t\t$badapi14 = \"PeekMessageW\"\t\twide ascii\n\t\t$badapi15 = \"SetWindowsHook\"\t\twide ascii\n\n\t\t$padding = \"PADDINGXXPADDING\"\t\tascii\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-96) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000000000000000\n                and all of them\n}\n\nrule Win32_XXPADDING_NULL\n:malexe\n{\n    meta:\n        description = \"Potential dropper/stealer 32bit PE with 32byte EOF PADDINGXXPADDING to NULL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-03-21\"\n        hash = \"dd408e70b13d29b37d03b390deed85a8\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/pony, /wiki/lokibot\"\n\n    strings:\n        //This program must be run under Win32\\r\\n\n        $win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n        //PADDINGXXPADDING\n        $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $win32 in (0..256)\n        and $byte_padding in (filesize-1024..filesize)\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and uint32(filesize-256) == 0x00000000000000000000000000000000\n}\n\nrule Troldesh_API_Byte_Order\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                modified        = \"2019-03-21\"\n                description     = \"Potential Troldesh payload\"\n                reference       = \"/wiki/troldesh\"\n                sample          = \"588c44f7d45328df605aaa90902f51b4, e3b60927db92de73e80813fa24a7c61b, d0b32bcb0d2d3c809dd829d0b4f5e36f, 7f9d970c685f7f33aa8a961f2a10173d\"\n\n        strings:\n                $this_program   = {     4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 4000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n        //VirtualAlloc kernel32\n        $api1 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 0000 }\n\n        //VirtualAlloc GetModuleHandle KERNEL32.dll }\n        $api2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4] 4b45 524e 454c 3332 2e64 6c6c }\n\n        //Kernel32.dll ActiveKeyboardLayout\n        $api3 = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 4163 7469 7661 7465 4b65 7962 6f61 7264 4c61 796f 7574 00 }\n\n        //Sleep TerminateProcess TlsAlloc\n        $api4 = { 2104 536c 6565 70[1-4] 2d04 5465 726d 696e 6174 6550 726f 6365 7373 [1-4] 546c 7341 6c6c 6f63 00 }\n\n        //Rich PE\n        $rich = { 5269 6368 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and any of ($api*) and $rich in (0..256)\n}\n\nrule Random_Hunt_20190320\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"SetFileTime\"                wide ascii\n                $badapi2 = \"IsDebuggerPresent\"          wide ascii\n                $badapi3 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi4 = \"IsValidLocale\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Azorult_API_Pad\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Azorult binary based on API ordering and Padding.  May match other families.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                sample = \"56d26fa38657f89c9a7800c9217443c1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/azorult, /wiki/pony, /wiki/lokibot\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //API ordering\n                //006cd10: da10 0700 ee10 0700 0000 0000 6b65 726e  ............kern\n                //006cd20: 656c 3332 2e64 6c6c 0000 0000 4465 6c65  el32.dll....Dele\n                //006cd30: 7465 4372 6974 6963 616c 5365 6374 696f  teCriticalSectio\n                //006cd40: 6e00 0000 4c65 6176 6543 7269 7469 6361  n...LeaveCritica\n                //006cd50: 6c53 6563 7469 6f6e 0000 0000 456e 7465  lSection....Ente\n                //006cd60: 7243 7269 7469 6361 6c53 6563 7469 6f6e  rCriticalSection\n                $byte_order1 = { 6b65 726e 656c 3332 2e64 6c6c [1-4] 4465 6c65 7465 4372 6974 6963 616c 5365 6374 696f 6e00 }\n\n                //006ce10: 7274 7561 6c51 7565 7279 0000 0000 5769  rtualQuery....Wi\n                //006ce20: 6465 4368 6172 546f 4d75 6c74 6942 7974  deCharToMultiByt\n                //006ce30: 6500 0000 4d75 6c74 6942 7974 6554 6f57  e...MultiByteToW\n                //006ce40: 6964 6543 6861 7200 0000 6c73 7472 6c65  ideChar...lstrle\n                //006ce50: 6e41 0000 0000 6c73 7472 6370 796e 4100  nA....lstrcpynA.\n                $byte_order2 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 65[1-4] 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 72[1-4] 6c73 7472 6c65 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n                and $byte_padding in (filesize-48 .. filesize)\n}\n\nrule maldoc_b64_cmd_x20\n:maldoc\n{\n    meta:\n        author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-03-19\"\n        tlp = \"AMBER\"\n        sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n        reference = \"/wiki/ursnif\"\n        description = \"Potential Maldoc Dropper using cmd with trailing spaces and wide base64 encoding\"\n\n    strings:\n        //VBA and OLE embedding\n        $vb1 = \"VBE\" nocase wide ascii\n        $vb2 = \"VBA\" nocase wide ascii\n        $vb4 = \"OLE\" nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n        //AutoExecute Macro Behavior\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        //Base64 encoded camel-case version of 'cmd  ' or 'cmd.  ' in WIDE format\n        $b1 = \"0ARAA\"        wide ascii\n        $b2 = \"0AZAA\"        wide ascii\n        $b3 = \"BNAEQ\"        wide ascii\n        $b4 = \"BNAGQ\"        wide ascii\n        $b5 = \"bQBEAC\"       wide ascii\n        $b6 = \"bQBkAC\"       wide ascii\n        $b7 = \"BtAEQ\"        wide ascii\n        $b8 = \"BtAGQ\"        wide ascii\n        $b9 = \"E0ARAAgAC\"    wide ascii\n        $b10 = \"E0ARAAuAC\"   wide ascii\n        $b11 = \"E0AZAAgAC\"   wide ascii\n        $b12 = \"E0AZAAuAC\"   wide ascii\n        $b13 = \"G0ARAAgAC\"   wide ascii\n        $b14 = \"G0ARAAuAC\"   wide ascii\n        $b15 = \"G0AZAAgAC\"   wide ascii\n        $b16 = \"G0AZAAuAC\"   wide ascii\n        $b17 = \"TQBEAC\"      wide ascii\n        $b18 = \"TQBkAC\"      wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and any of ($vb*)\n        and any of ($ao*)\n        and any of ($b*)\n}\n\nrule ursnif_maldoc_dropper_128byte\n:maldoc\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2019-03-19\"\n                tlp = \"AMBER\"\n                sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n                reference = \"/wiki/ursnif\"\n                description = \"Potential Maldoc Dropper\"\n\n        strings:\n                //128 contigious bytes with no whitespace is odd.\n                $base64 = /[A-Z0-9\\x3b\\x3d_-]{128}/     nocase ascii\n\n                //Office 15 Long Path\n                $office15 = {   433a 5c50 726f 6772 616d 2046 696c 6573\n                                5c43 6f6d 6d6f 6e20 4669 6c65 735c 4d69\n                                6372 6f73 6f66 7420 5368 6172 6564 5c4f\n                                4646 4943 4531 355c 4d53 4f2e 444c 4c\n                        }\n\n                //Win16 compatibility\n                $win16 = \"Win16\"        wide ascii\n\n                //VBA and OLE embedding\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n                //AutoExecute Macro Behavior\n                $ao1 = \"AutoExec\"        nocase wide ascii\n                $ao2 = \"AutoOpen\"        nocase wide ascii\n                $ao3 = \"Workbook_Open\"   nocase wide ascii\n                $ao4 = \"Document_Open\"   nocase wide ascii\n                $ao5 = \"_Eval\"           nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office15 and $win16\n                and any of ($vb*)\n                and any of ($ao*)\n                and $base64\n}\n\nrule Formbook_PE_Packed_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Formbook packed binary, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/formbook\"\n\n        strings:\n\t\t$packed1 = \"aspack\"\tascii\n\t\t$packed2 = \"adata\"\tascii\n\n\n\t\t//00719c0: f9ef 1100 0000 0000 6b65 726e 656c 3332  ........kernel32\n\t\t//00719d0: 2e64 6c6c 0000 0047 6574 5072 6f63 4164  .dll...GetProcAd\n\t\t//00719e0: 6472 6573 7300 0000 4765 744d 6f64 756c  dress...GetModul\n\t\t//00719f0: 6548 616e 646c 6541 0000 004c 6f61 644c  eHandleA...LoadL\n\t\t//0071a00: 6962 7261 7279 4100 0000 0000 0000 0000  ibraryA.........\n\n\t\t$byte_order = { 6b65 726e 656c 3332 2e64 6c6c [1-4]47 6574 5072 6f63 4164 6472 6573 73[1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4]4c 6f61 644c 6962 7261 7279 4100 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule Ursnif_CHRGEN_API_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential ursnif binary with CHRGEN, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/ursnif\"\n\n        strings:\n\n                //Chrgen\n                $chrgen1 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n                                6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n                        }\n                $chrgen2 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a5b 5c5d 5e5f\n                                6041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a7b 7c7d 7e7f\n                        }\n\n                //API Byte Ordering\n\t\t$byte_order = { 536c 6565 70[1-4] 4765 744d 6f64 756c 6546 696c 654e 616d 6557 }\n\n\t\t//.NET Spices\n\t\t$spice = /\\/security>[\\x20\\x0d\\x0a]+</\tascii\n\n\t\t//API calls (VM/Debugger checking and encoded pointers)\n\t\t$api1 = \"SetUnhandledExceptionFilter\"\twide ascii\n\t\t$api2 = \"IsDebuggerPresent\"\t\twide ascii\n\t\t$api3 = \"IsProcessorFeaturePresent\"\twide ascii\n\t\t$api4 = \"EncodePointer\"\t\t\twide ascii\n\t\t$api5 = \"DecodePointer\"\t\t\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule VM_Detect_BadAPI_MZ_Pad\n:malexe\n{\n        meta:\n                 description = \"Potential dropper/stealer\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/pony, /wiki/lokibot, /wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule API_Detect_Crypto_Pad_Think\n:malexe\n{\n        meta:\n                 description = \"Potential miner, malware, or ransomware with VM/Hardware detection and crypto functions w/padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n                $badapi10 = \"GetACP\"                    wide ascii\n                $badapi11 = \"GetOEMCP\"                  wide ascii\n                $badapi12 = \"SetUnhandledExceptionFilter\" wide ascii\n                $badapi13 = \"GetStartupInfoW\"           wide ascii\n                $badapi14 = \"GetLocaleInfoEx\"           wide ascii\n\n                //Ransomware Stuffs\n                $badapi20 = \"AreFileApisANSI\"           wide ascii\n                $badapi21 = \"SystemFunction036\"         wide ascii\n                $badapi22 = \"TlsAlloc\"                  wide ascii\n\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Qakbot_SMB_Feelz2\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-13\"\n                description     = \"Potential Qakbot, API call ordering and potentially SMB Feelz to smb.microsoft.com\"\n                reference       = \"/wiki/qakbot\"\n                sample          = \"61d36e1e058d996b28ae0f8a89fbdc46\"\n\n        strings:\n                $this_program = {       4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 ??00 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n                //Random PEPEs\n                //000789f0: 3e90 2029 0100 0000 5c5c 736d 622e 6d69  >. )....\\\\smb.mi\n                //00078a00: 6372 6f73 6f66 742e 636f 6d5c 7368 6172  crosoft.com\\shar\n                //00078a10: 655c 6465 762e 7064 6200 0000 0000 0000  e\\dev.pdb.......\n\n                //$pepe = { 5c5c 736d 622e 6d69 6372 6f73 6f66 742e 636f 6d5c }\n\n                //Maybe throw some spices in here too just for Spicy Spice (the missing Spice girl)\n                //00078d90: 322e 646c 6c00 d001 4973 4875 6e67 4170  2.dll...IsHungAp\n                //00078da0: 7057 696e 646f 7700 5553 4552 3332 2e64  pWindow.USER32.d\n                //00078db0: 6c6c 0000 2702 5175 6572 7953 6572 7669  ll..'.QueryServi\n                //00078dc0: 6365 4f62 6a65 6374 5365 6375 7269 7479  ceObjectSecurity\n                //00078dd0: 0000 4144 5641 5049 3332 2e64 6c6c 0000  ..ADVAPI32.dll..\n                $spice = {  4973 4875 6e67 4170 7057 696e 646f 77[1-4] 5553 4552 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and $spice\n}\n\nrule njRAT_AutoIT_API\n{\n\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-03-14\"\n                reference = \"/wiki/bladabindi\"\n                description = \"Potential njrat binary or other RAT/stealer\"\n                sample = \"1e1df9886159e73bdf87c1c7ee5b8704\"\n\n        strings:\n\n                //0013bdb0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                //0013bdc0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //0008ebc0: 6900 7400 0000 0000 2f00 4100 7500 7400  i.t...../.A.u.t.\n                //0008ebd0: 6f00 4900 7400 3300 4500 7800 6500 6300  o.I.t.3.E.x.e.c.\n                //0008ebe0: 7500 7400 6500 5300 6300 7200 6900 7000  u.t.e.S.c.r.i.p.\n                //0008ebf0: 7400 0000 2f00 4100 7500 7400 6f00 4900  t.../.A.u.t.o.I.\n                //0008ec00: 7400 3300 4500 7800 6500 6300 7500 7400  t.3.E.x.e.c.u.t.\n                $autoit = { 2f00 4100 7500 7400 6f00 4900 7400 }\n\n                //These are \"bad\" API functions\n                $api1 = \"WNetAddConnection2W\"           nocase wide ascii\n                $api2 = \"WNetUseConnection\"             nocase wide ascii\n                $api3 = \"WNetCancelConnection2W\"        nocase wide ascii\n                $api4 = \"WNetGetConnectionW\"            nocase wide ascii\n                $api5 = \"InternetCloseHandle\"           nocase wide ascii\n                $api6 = \"InternetOpenW\"                 nocase wide ascii\n                $api7 = \"InternetSetOptionW\"            nocase wide ascii\n                $api8 = \"InternetCrackUrlW\"             nocase wide ascii\n                $api9 = \"HttpQueryInfoW\"                nocase wide ascii\n                $api10 = \"InternetQueryOptionW\"         nocase wide ascii\n                $api11 = \"InternetConnectW\"             nocase wide ascii\n                $api12 = \"HttpOpenRequestW\"             nocase wide ascii\n                $api13 = \"HttpSendRequestW\"             nocase wide ascii\n                $api14 = \"FtpOpenFileW\"                 nocase wide ascii\n                $api15 = \"FtpGetFileSize\"               nocase wide ascii\n                $api16 = \"InternetOpenUrlW\"             nocase wide ascii\n                $api17 = \"InternetReadFile\"             nocase wide ascii\n                $api18 = \"InternetQueryDataAvailable\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and $autoit and #byte_padding > 4 and any of ($api*)\n}\n\nrule Formbook_EventSink\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-12\"\n                description     = \"Potential Formbook payload using EVENT_SINK\"\n                reference       = \"/wiki/formbook\"\n                sample          = \"7729ec6cb4d2cd4f30360431f6674471, 2b1e178b9c8e6f84403431a99ba09db3\"\n\n        strings:\n\t\t$this_program = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 ??00 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t//Random PEPEs\n\t\t//0000240: 4d53 5642 564d 3630 2e44 4c4c 0000 0000  MSVBVM60.DLL....\n\t\t//0001380: 0700 0000 5823 4000 5642 3521 3626 2a00  ....X#@.VB5!6&*.\n\t\t//00c9310: 5f61 646a 5f66 7061 7461 6e00 1500 4556  _adj_fpatan...EV\n\t\t//00c9320: 454e 545f 5349 4e4b 5f52 656c 6561 7365  ENT_SINK_Release\n\t\t//00c9330: 0000 5700 5f43 4973 7172 7400 1400 4556  ..W._CIsqrt...EV\n\t\t//00c9340: 454e 545f 5349 4e4b 5f51 7565 7279 496e  ENT_SINK_QueryIn\n\t\t$pepe1 = { 4d53 5642 564d 3630 2e44 4c4c 00 }\n\t\t$pepe2 = { 5642 3521 36 }\n\t\t$pepe3 = { 4556 454e 545f 5349 4e4b }\n\n\t\t//API Byte Ordering\n\t\t//0002330: 6b65 726e 656c 3332 0000 0000 0000 0000  kernel32........\n\t\t//0002340: 1300 0000 4765 7443 7572 7265 6e74 5468  ....GetCurrentTh\n\t\t//0002350: 7265 6164 4964 0000 3023 4000 4423 4000  readId..0#@.D#@.\n\t\t//$byte_order = { 6b65 726e 656c 3332 [1-12] 4765 7443 7572 7265 6e74 5468 7265 6164 4964 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and all of ($pepe*)\n}\n\nrule Stiff_Ursnif_API\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                description     = \"Potential Ursnif/Gozi payload\"\n                reference       = \"/wiki/ursnif\"\n                sample          = \"dceb35aa2bedcb5c04045ebefec86135, 1380815f49012496cf30b7557f10495f\"\n\n        strings:\n                $this_program1   = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 7468\n\t\t\t\t\t6973 2069 7320 6120 5769 6e64 6f77 7320\n\t\t\t\t\t4e54 2028 6f77 6e20 5254 4c29 2064 796e\n\t\t\t\t\t616d 6963 206c 696e 6b20 6c69 6272 6172\n\t\t\t\t\t790d 0a24 0000 0000 0000 0000 0000 0000\n                                }\n\n\t\t$this_program2 = {\t4d5a 5000 0200 0000 0400 0f00 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 ??00 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 00?? 0000\n\t\t\t\t\tba10 000e 1fb4 09cd 21b8 014c cd21 9090\n\t\t\t\t\t5468 6973 2070 726f 6772 616d 206d 7573\n\t\t\t\t\t7420 6265 2072 756e 2075 6e64 6572 2057\n\t\t\t\t\t696e 3332 0d0a 2437 0000 0000 0000 0000\n\t\t\t\t}\n\n\t\t\t\t//00330c0: 0000 0000 5800 456e 756d 4d6f 6e69 746f  ....X.EnumMonito\n\t\t\t\t//00330d0: 7273 5700 5749 4e53 504f 4f4c 2e44 5256  rsW.WINSPOOL.DRV\n\t\t\t\t//00330e0: 0000 1802 4765 744d 6f64 756c 6548 616e  ....GetModuleHan\n\t\t\t\t//00330f0: 646c 6557 0000 ef01 4765 7446 696c 654d  dleW....GetFileM\n\t\t\t\t//0033100: 5549 5061 7468 0000 f301 4765 7446 696c  UIPath....GetFil\n\t\t\t\t//0033110: 6554 7970 6500 5301 466c 7346 7265 6500  eType.S.FlsFree.\n\t\t\t\t//0033120: a303 5175 6572 7949 646c 6550 726f 6365  ..QueryIdleProce\n\t\t\t\t//0033130: 7373 6f72 4379 636c 6554 696d 6500 4b45  ssorCycleTime.KE\n\t\t\t\t//0033140: 524e 454c 3332 2e64 6c6c 0000 9a02 5365  RNEL32.dll....Se\n\t\t\t\t//0033150: 7450 616c 6574 7465 456e 7472 6965 7300  tPaletteEntries.\n\t\t\t\t//0033160: 4744 4933 322e 646c 6c00 ba01 5270 6353  GDI32.dll...RpcS\n\t\t\t\t//0033170: 6572 7665 724c 6973 7465 6e00 5250 4352  erverListen.RPCR\n\t\t\t\t//0033180: 5434 2e64 6c6c 0000 0000 0000 0000 0000  T4.dll..........\n\t\t$api1\t\t= { 5175 6572 7949 646c 6550 726f 6365 7373 6f72 4379 636c 6554 696d 65[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n\t\t\t\t//0065800: 0000 0000 5eab 1200 0000 0000 4b45 524e  ....^.......KERN\n\t\t\t\t//0065810: 454c 3332 2e44 4c4c 0061 6476 6170 6933  EL32.DLL.advapi3\n\t\t\t\t//0065820: 322e 646c 6c00 636f 6d63 746c 3332 2e64  2.dll.comctl32.d\n\t\t\t\t//0065830: 6c6c 0067 6469 3332 2e64 6c6c 0069 7068  ll.gdi32.dll.iph\n\t\t\t\t//0065840: 6c70 6170 692e 646c 6c00 6f6c 6533 322e  lpapi.dll.ole32.\n\t\t\t\t//0065850: 646c 6c00 6f6c 6561 7574 3332 2e64 6c6c  dll.oleaut32.dll\n\t\t\t\t//0065860: 0073 6865 6c6c 3332 2e64 6c6c 0075 7365  .shell32.dll.use\n\t\t\t\t//0065870: 7233 322e 646c 6c00 7665 7273 696f 6e2e  r32.dll.version.\n\t\t\t\t//0065880: 646c 6c00 7769 6e73 706f 6f6c 2e64 7276  dll.winspool.drv\n\t\t\t\t//0065890: 0077 736f 636b 3332 2e64 6c6c 0000 4c6f  .wsock32.dll..Lo\n\t\t\t\t//00658a0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n\t\t\t\t//00658b0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n\t\t\t\t//00658c0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n\t\t\t\t//00658d0: 5072 6f63 6573 7300 0000 5265 6746 6c75  Process...RegFlu\n\t\t\t\t//00658e0: 7368 4b65 7900 0000 496d 6167 654c 6973  shKey...ImageLis\n\t\t\t\t//00658f0: 745f 4164 6400 0000 5361 7665 4443 0000  t_Add...SaveDC..\n\t\t\t\t//0065900: 4765 7441 6461 7074 6572 7349 6e66 6f00  GetAdaptersInfo.\n\t\t\t\t//0065910: 0000 4f6c 6544 7261 7700 0000 5661 7269  ..OleDraw...Vari\n\t\t\t\t//0065920: 616e 7443 6f70 7900 0000 5368 656c 6c45  antCopy...ShellE\n\t\t\t\t//0065930: 7865 6375 7465 4100 0000 4765 7444 4300  xecuteA...GetDC.\n\t\t\t\t//0065940: 0000 5665 7251 7565 7279 5661 6c75 6541  ..VerQueryValueA\n\t\t\t\t//0065950: 0000 4f70 656e 5072 696e 7465 7241 0000  ..OpenPrinterA..\n\t\t\t\t//0065960: 696e 6574 5f6e 746f 6100 0000 0000 0000  inet_ntoa.......\n\t\t$api2\t\t= { 4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[256-328] 696e 6574 5f6e 746f 6100 }\n\n        condition:\n                uint16(0) == 0x5a4d and ($this_program1 at 0 or $this_program2 at 0) and any of ($api*)\n}\n\nrule Office_Link_cmd_powershell\n{\n        meta:\n                description = \"Office Document containing a macro or a lnk with a call to console execution and/or some form of Powershell being called or console string manipulation being used\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-05\"\n                modified = \"2019-03-06\"\n                tlp = \"GREEN\"\n\t\tthanks = \"jwade, cocaman\"\n\t\treference = \"/wiki/ursnif, /wiki/Emotet-Evolutions\"\n\t\tsample = \"926d5f7cf14e3a85e55f5358e14eb2cb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $link = { 4c00 0000 0114 }\n                $rtf = { 7B 5C 72 }\n\n                //Console execution in plain text and hex ascii\n                $stupidland1 = /(start|cmd|comspec\\x25?)(\\.exe)?[\\x20\\x09]+\\/[a-z]/ nocase wide ascii\n                $stupidland2 = /([57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4|[46]3([03]0)?[46]d([03]0)?[46]4|[46]3([03]0)?[46]f([03]0)?[46]d([03]0)?[57]3([03]0)?[57]0([03]0)?[46]5([03]0)?[46]3([03]0)?(25)?)(([03]0)?2e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5)?(20|09|00|30)+2f/ nocase ascii\n\n                $powershellz0 = /p[^\\n]?o[^\\n]?w[^\\n]?e[^\\n]?r[^\\n]?s[^\\n]?h[^\\n]?e[^\\n]?l[^\\n]?l/      nocase wide ascii //Delimited Powershell\n                $powershellz1 = /l[^\\n]?l[^\\n]?e[^\\n]?h[^\\n]?s[^\\n]?r[^\\n]?e[^\\n]?w[^\\n]?o[^\\n]?p/      nocase wide ascii //Delimited Powershell Reversed\n                $powershellz2 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\][\\x20\\x09]*){2}/i      //PowerShell-based functions\n                $powershellz3 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\]\\x3a\\x3a)/i            //PowerShell-based functions\n                $powershellz4 = \"new-\" nocase wide ascii\n                $powershellz5 = \"-wen\" nocase wide ascii\n                $powershellz6 = \"invoke-\" nocase wide ascii\n                $powershellz7 = \"-ekovni\" nocase wide ascii\n                $powershellz8 = \"start-\" nocase wide ascii\n                $powershellz9 = \"-trats\" nocase wide ascii\n                $powershellz10 = \"get-\" nocase wide ascii\n                $powershellz11 = \"-teg\" nocase wide ascii\n                $powershellz12 = /\\x25[A-Za-z0-9_-]+\\x3a/ wide ascii            //See https://ss64.com/nt/syntax.html\n                $powershellz13 = /[57]0([03]0)?[46]f([03]0)?[57]7([03]0)?[46]5([03]0)?[57]2([03]0)?[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c/ nocase ascii      //Powershell in hex-ascii\n                $powershellz14 = /[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[46]8([03]0)?[57]3([03]0)?[57]2([03]0)?[46]5([03]0)?[57]7([03]0)?[46]f([03]0)?[57]0/ nocase ascii      //Powershell in hex-ascii reversed\n\t\t$powershellz15 = /e[^\\n]?n[^\\n]?c[^\\n]?o[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?c[^\\n]?o[^\\n]?m[^\\n]?m[^\\n]?a[^\\n]?n[^\\n]?d/\tnocase wide ascii\n\t\t$powershellz16 = /d[^\\n]?n[^\\n]?a[^\\n]?m[^\\n]?m[^\\n]?o[^\\n]?c[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?o[^\\n]?c[^\\n]?e[^\\n]?n/\tnocase wide ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                    ( $office at 0 and any of ($stupidland*) and any of ($powershellz*) and any of ($vb*))\n                 or ( ( $link at 0 or $rtf at 0 ) and ( any of ($powershellz*) or any of ($stupidland*) ) )\n}\n\nrule xml_office_doc_total_time_0 {\n    meta:\n        author = \"Sam Scholten\"\n        modified = \"2019-03-05\"\n        hashes = \"[42c4f6fadbf09bf7d9da9607a56d1879]\"\n    strings:\n        $xml = { 3c3f 786d 6c }\n\n        $progid_EXCEL = \"mso-application progid=\\\"Excel.Sheet\" nocase ascii\n        $progid_PPT = \"mso-application progid=\\\"PowerPoint.Show\" nocase ascii\n        $progid_WORD = \"mso-application progid=\\\"Word.Document\" nocase ascii\n\n        $macro_enabled_1 = \"application/vnd.ms-word.document.macroEnabled\"\n        $macro_enabled_2 = \"macrosPresent=\\\"yes\\\"\" nocase wide ascii\n\n        $c_0_total_time  = /<(o:)?TotalTime>0<\\/(o:)?TotalTime>/\n\n     condition:\n               $xml at 0 and\n        (\n            $progid_EXCEL in (0..100) or\n            $progid_PPT in (0..100) or\n            $progid_WORD in (0..100)\n               ) and (any of ($macro_enabled_*)) and $c_0_total_time\n}\n\nrule Obfuscated_This_Program\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-03-05\"\n\t\tdescription\t= \"Obfuscated/replaced 'This program cannot be run in DOS mode.' executable\"\n\t\treference\t= \"/wiki/dridex\"\n\t\tsample\t\t= \"1acc8ff2531d3a3feef29e6c06e21d3f\"\n\n\tstrings:\n\t\t$this_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t$dis_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 [38]\n\t\t\t\t\t2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $dis_program at 0 and not $this_program at 0\n}\n\nrule Delphi_Win32_XXPADDING\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential dropper/stealer (Loki/Fareit/Pony/Graftor) 32 bit Delphi PE with 32byte EOF PADDINGXXPADDING\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-05\"\n\t\thash = \"ce86df7e2f57155fc785169f75250dca\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/pony, /wiki/lokibot\"\n\n\tstrings:\n\t\t//00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n\t\t$mz = { 4d5a 5000 }\n\n\t\t//This program must be run under Win32\\r\\n\n\t\t$win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n\t\t$delphi = \"Delphi\"\tnocase wide ascii\n\n\t\t//PADDINGXXPADDING\n\t\t$byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n\t\t//Sprinkle in a little PEPE\n\t\t$pepe_spice = { 508b 45?? 508b 45 }\n\n\t\t//Some byte ordering API calls\n\t\t//0004a90: 656c 3332 2e64 6c6c 0000 0000 4765 744c  el32.dll....GetL\n\t\t//0004aa0: 6f6e 6750 6174 684e 616d 6541 0000 0000  ongPathNameA....\n\t\t$byte_order_API = { 656c 3332 2e64 6c6c [1-6] 4765 744c 6f6e 6750 6174 684e 616d 6541 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand $mz at 0\n\t\tand $win32\n\t\tand $delphi\n\t\tand $byte_padding in (filesize-32..filesize)\n\t\tand $pepe_spice\n\t\tand $byte_order_API\n}\n\nrule OpenXML_Too_Much_Trailing_Space\n{\n    meta:\n        description = \"OpenXML document contains too many trailing bytes of 0x20 (128+)\"\n        risk = \"high\"\n        author = \"Nathan Fowler\"\n        modified = \"2019-03-04\"\n\treference = \"/wiki/Emotet-Evolutions\"\n\n    strings:\n\t$xml\t= { 3c3f 786d 6c }\n\t$space\t= { 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 }\n\t$office = \"//schemas.microsoft.com/\" ascii\n\n    condition:\n        uint32(0) == 0x6d783f3c and $xml at 0\n        and $space in (filesize-128..filesize)\n\tand $office\n}\n\nrule Formbook_Executable_BittyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-01\"\n\t\ttlp = \"GREEN\"\n\t\tdescription = \"Potential Formbook payload 12 byte filename base64 byte offset\"\n\t\thashes = \"f2a94f9130c59e24d8976362fffa1b6a, f1e9add7c5b9ce7a4155f090a5a7263b, 692999bdd3569dad203d17fed1cf92c5\"\n\n\tstrings:\n\t\t$magic = { 4d5a 9000 0300 0000 0400 }\n\n\t\t// Not sure what I'm doing here but it seems like a good idea\n\t\t// 005fc20: ad09 0000 0062 6a55 5442 6e63 6967 676f  .....bjUTBnciggo\n\t\t// 005fc30: 3d2e 6578 6500 5468 6d51 572f 4673 4366  =.exe.ThmQW/FsCf\n\t\t//\n\t\t// 005e050: 0000 7700 720c 7600 5009 0000 0061 386d  ..w.r.v.P....a8m\n\t\t// 005e060: 4e65 6557 5652 4246 452e 6578 6500 6862  NeeWVRBFE.exe.hb\n\t\t// 005e070: 7850 702b 4746 677a 5046 6f59 4775 4f4e  xPp+GFgzPFoYGuON\n\t\t//\n\t\t// 0064340: 450c 7600 8406 0000 0038 3857 3679 2f2f  E.v......88W6y//\n\t\t// 0064350: 6b72 3950 4f2e 6578 6500 6351 632f 464b  kr9PO.exe.cQc/FK\n\t\t// 0064360: 646a 426d 666d 4476 6268 6a6c 664a 4564  djBmfmDvbhjlfJEd\n\n\t\t$pepe1 = { (01|02|03|04|05|06|07|08|09)00 0000 [12]2e 6578 6500 [1-8] (2f|2b) }\n\t\t$pepe2 = /[\\x01-\\x09]\\x00{3}[^\\x00\\r\\n]{12}\\.exe\\x00[A-Za-z0-9\\x2b\\x2f\\x3d_-}{1,8}[\\x2f\\x2b]/\n\n\t\t$dot_net = \"Assembly\"\tascii\n\n\t\t$exclude = \"InstallShield\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $magic at 0 and all of ($pepe*) and $dot_net and not $exclude\n}\n\nrule Executable_Unknown_Dropper\n:maldoc\n{\n        meta:\n                description = \"Executable unknown dropper used with Warzone RAT\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-02-26\"\n                hash = \"2cb663a749b8f07054e8ffc29564f78e\"\n                tlp = \"GREEN\"\n\n        strings:\n                //00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n                $exe = { 4d5a 5000 }\n\n                //Packers\n                $upx0 = \"UPX0\"  ascii\n                $upx1 = \"UPX1\"  ascii\n\n                //API-DLL call ordering\n                //000a8120: 667c 1b00 0000 0000 4b45 524e 454c 3332  f|......KERNEL32\n                //000a8130: 2e44 4c4c 0061 6476 6170 6933 322e 646c  .DLL.advapi32.dl\n                //000a8140: 6c00 636f 6d63 746c 3332 2e64 6c6c 0063  l.comctl32.dll.c\n                //000a8150: 6f6d 646c 6733 322e 646c 6c00 6764 6933  omdlg32.dll.gdi3\n                //000a8160: 322e 646c 6c00 6f6c 6533 322e 646c 6c00  2.dll.ole32.dll.\n                //000a8170: 6f6c 6561 7574 3332 2e64 6c6c 0073 6865  oleaut32.dll.she\n                //000a8180: 6c6c 3332 2e64 6c6c 0073 6866 6f6c 6465  ll32.dll.shfolde\n                //000a8190: 722e 646c 6c00 7573 6572 3332 2e64 6c6c  r.dll.user32.dll\n                //000a81a0: 0076 6572 7369 6f6e 2e64 6c6c 0000 4c6f  .version.dll..Lo\n                //000a81b0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n                //000a81c0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n                //000a81d0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n                //000a81e0: 5072 6f63 6573 7300 0000 5265 674f 7065  Process...RegOpe\n                //000a81f0: 6e4b 6579 4100 0000 496d 6167 654c 6973  nKeyA...ImageLis\n                //000a8200: 745f 4164 6400 0000 4765 7453 6176 6546  t_Add...GetSaveF\n                //000a8210: 696c 654e 616d 6541 0000 5361 7665 4443  ileNameA..SaveDC\n                //000a8220: 0000 436f 496e 6974 6961 6c69 7a65 0000  ..CoInitialize..\n                //000a8230: 5661 7269 616e 7443 6f70 7900 0000 5368  VariantCopy...Sh\n                //000a8240: 656c 6c45 7865 6375 7465 4100 0000 5348  ellExecuteA...SH\n                //000a8250: 4765 7446 6f6c 6465 7250 6174 6841 0000  GetFolderPathA..\n                //000a8260: 4765 7444 4300 0000 5665 7251 7565 7279  GetDC...VerQuery\n                //000a8270: 5661 6c75 6541 0000 0000 0000 0000 0000  ValueA..........\n                $byte_order = {4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[1-4] 636f 6d63 746c 3332 2e64 6c6c [1-4]63 6f6d 646c 6733 322e 646c 6c[1-4] 6764 6933 322e 646c 6c[1-4] 6f6c 6533 322e 646c 6c[1-4] 6f6c 6561 7574 3332 2e64 6c6c [1-4]73 6865 6c6c 3332 2e64 6c6c [1-4]73 6866 6f6c 6465 722e 646c 6c[1-4] 7573 6572 3332 2e64 6c6c [1-4]76 6572 7369 6f6e 2e64 6c6c [1-4] 4c6f 6164 4c69 6272 6172 7941 [1-4] 4765 7450 726f 6341 6464 7265 7373 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 4578 6974 5072 6f63 6573 73[1-4] 5265 674f 7065 6e4b 6579 41[1-4] 496d 6167 654c 6973 745f 4164 64[1-4] 4765 7453 6176 6546 696c 654e 616d 6541 [1-4] 5361 7665 4443 [1-4] 436f 496e 6974 6961 6c69 7a65 [1-4] 5661 7269 616e 7443 6f70 79[1-4] 5368 656c 6c45 7865 6375 7465 41[1-4] 5348 4765 7446 6f6c 6465 7250 6174 6841 [1-4] 4765 7444 43[1-4] 5665 7251 7565 7279 5661 6c75 6541 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and $exe at 0\n                and all of ($upx*)\n                and $byte_order\n}\n\nrule Empire_PEPE\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing magical 0xfd 0xf3 byte ordering\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\t\tfeelz = \"meows://www.youtube.com/watch?v=QsDDXSmGJZA&t=57\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$PEPE = { fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00fd }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office\n\t\tand $PEPE\n\t\tand any of ($vb*)\n}\n\nrule Office_Ink_Automation\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing Ink Automation, OLE, VBE/VBA, and Decode functions\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-07-02\"\n\t\tmodified = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$rtf \t= { 7b5c 72 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$ink1 = \"msinkaut\"\t\tnocase wide ascii\n\t\t$ink2 = \"InkEd.InkEdit\"\tnocase wide ascii\n\n\t\t$decode1 = \"decode\"\tnocase wide ascii\n\t\t$decode2 = \"eval\"\tnocase wide ascii\n\t\t$decode3 = \"base64\"\tnocase wide ascii\n\t\t$decode4 = \"426173653634\"\tnocase wide ascii\n\t\t$decode5 = \"Chr(\"\tnocase wide ascii\n\n\tcondition:\n\t\t(uint16(0) == 0xcfd0 or uint16(0) == 0x7b5c)\n\t\tand ($office at 0 or $rtf at 0)\n\t\tand any of ($ink*)\n\t\tand any of ($decode*)\n\t\tand any of ($vb*)\n}\n\nrule Office_Int_Profile_ShortPath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing a integrer MS-DOS shortpath profile to TEMP\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-19\"\n\t\ttlp = \"AMBER\"\n\t\tsample = \"4b4d15b28d184c0deb43b1632d540731\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t//MS-DOS Short-path C:/DOCUMENT~1/[1-8 DIGITS]~1/LOCALS~1/Temp/VBE/.{1,8}.exd\n\t\t$feelz1 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz2 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz3 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz4 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz5 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 \t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz6 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 \t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz7 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz8 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 \t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\n\t\t//AutoExecute Macro Behavior\n\t\t$ao1 = \"AutoExec\"        nocase wide ascii\n\t\t$ao2 = \"AutoOpen\"        nocase wide ascii\n\t\t$ao3 = \"Workbook_Open\"   nocase wide ascii\n\t\t$ao4 = \"Document_Open\"   nocase wide ascii\n\t\t$ao5 = \"_Eval\"           nocase wide ascii\n\n\t\t//VBA/OLE embedding\n\t\t$vb1 = \"VBE\"    nocase wide ascii\n\t\t$vb2 = \"VBA\"    nocase wide ascii\n\t\t$vb4 = \"OLE\"    nocase wide ascii\n\t\t$vb5 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and any of ($feelz*)\n}\n\nrule Office_Incompetent_Hackerz_rU\n:maldoc\n{\n    meta:\n        description = \"Office Document containing 'Office god' bytecode and CNormalrU\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-02-18\"\n        tlp = \"AMBER\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $feelz1 = { 214f 6666 6963 8467 4f44 00 }    //'Office god'\n        $feelz2 = { 0000 2a5c 434e 6f72 6d61 6c72 5500 0100 0080 0000 }        //CNormalrU\n\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        $vb1 = \"VBE\"    nocase wide ascii\n        $vb2 = \"VBA\"    nocase wide ascii\n        $vb4 = \"OLE\"    nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and all of ($feelz*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_directory_surfing\n:maldoc\n{\n        meta:\n                description = \"Office Document containing a macro and prefix-based Windows directory surfing via slash-dot-dot-slash\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                created = \"2018-11-26\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n                thanks = \"Peter Misurek\"\n                tlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$surfer1 = /\\x5c\\x2e\\x2e\\x5cwindows[\\x5c\\x2e]*system/i\tascii\n\t\t$surfer2 = /[a-zA-Z0-9](\\x5c\\x2e\\x2e)+\\x5c[a-zA-Z0-9]/\tascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb3 = \"OLE\"\tnocase wide ascii\n                $vb4 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($surfer*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_int_array\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, shell and int array\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2016-06-22\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$shell = \"shell\"\tnocase wide ascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$int_array = /([0-9]+[\\x20\\x09\\r\\n]*,[\\x20\\x09\\r\\n]*){50}/\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and $shell and any of ($ao*) and any of ($vb*) and $int_array\n}\n\nrule Office_Mult_Cmdline_Switches_bool\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, multiple terse command line switches and boolean operators\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$switches = /(\\x2f[a-zA-Z]{1,2}[^\\x20\\x09\\x2f]{0,6}[\\x20\\x09]*){2}/\n\n\t\t$boolean1 = \" && \"\tascii\n\t\t$boolean2 = \" || \"\tascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and (#boolean1 >= 2 or #boolean2 >= 2) and $switches\n}\n\nrule Office_Macro_vba_WinHttpReq\n{\n     meta:\n         description = \"Office document containing VBA with Web API calls and .exe\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\t date = \"unknown\"\n\t modified = \"2019-02-01\"\n\n     strings:\n\t $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t $string1 = { 56 00 42 00 41 00 }\n\t $string2 = \"://\"\n\t $string3 = \".exe\" nocase\n\t $http1 = \"WinHttp\" nocase\n\t $http2 = \"URLDownload\" nocase\n\t $http3 = \"urlmon\" nocase\n\t $http4 = \"xmlhttp\" nocase\n\t $http5 = \"internetdownload\" nocase\n\t $http6 = \".responsebody\" nocase\n\t $http7 = \".send\" nocase\n\n\t $exclude1 = \"SunGard.IO\" nocase wide ascii\n\t $exclude2 = \"http://www.investonesupport.com\" nocase wide\n\n     condition:\n         uint16(0) == 0xcfd0 and $office at 0 and all of ($string*) and any of ($http*) and not any of ($exclude*)\n}\n\nrule Env_Var_SubStr\n{\n\tmeta:\n                description = \"NT Environment Variable Substring Manipulation\"\n                author = \"Nathan Fowler\"\n                reference = \"https://ss64.com/nt/syntax.html\"\n                risk = \"high\"\n                date = \"2018-12-31\"\n\t\tmodified = \"2019-01-31\"\n\n\tstrings:\n\t\t//Very terse match with no file magic anchoring, lets assume if we see this style notation anywhere that's it's so uncommon that it is\n\t\t//a malicious indicator.  For more information on this syntax see https://ss64.com/nt/syntax.html\n\n\t\t$substr1 = /([46][0-9A-F]|[57][0-9A])([03]0)?3a([03]0)?7e([03]0)?3[0-9]/\tnocase ascii\t\t//Hex-Ascii version of the substring notation with optional wide format\n\t\t$substr2 = /\\x25[^\\x25]{1,16}\\x3a\\x7e[0-9]+(\\x2c[0-9]+)?\\x25/\t\t\tnocase wide ascii\t//Ascii version of the substring notation\n\n\tcondition:\n\t\t(#substr1 > 2) or (#substr2 > 2)\n}\n\nrule Office_Macro_Chrmap_Wild: maldoc\n{\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-30\"\n        tlp     = \"GREEN\"\n        description = \"Macro-enabled Office document which contains VBA String functions and a character map incrementing by one starting from 0x00.\"\n        sample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"       nocase wide ascii\n\n\t//Charater mapping, incrementing by one\n\t$pepe = { 00[1] 0000 01[1] 0000 02[1] 0000 03[1] 0000 04[1] 0000 05[1] 0000 06[1] 0000 07[1] 0000 08[1] 0000 09[1] 0000 0a[1] 0000 0b[1] 0000 0c[1] 0000 0d[1] 0000 0e[1] 0000 0f[1] 0000 10[1] 0000 11[1] 0000 12[1] 0000 13[1] 0000 14[1] 0000 15[1] 0000 16[1] 0000 17[1] 0000 18[1] 0000 19[1] 0000 1a[1] 0000 1b[1] 0000 1c[1] 0000 1d[1] 0000 1e[1] 0000 1f[1] 0000 20[1] 0000 21[1] 0000 22[1] 0000 23[1] 0000 24[1] 0000 25[1] 0000 26[1] 0000 27[1] 0000 28[1] 0000 29[1] 0000 2a[1] 0000 2b[1] 0000 2c[1] 0000 2d[1] 0000 2e[1] 0000 2f[1] 0000 30[1] 0000 31[1] 0000 32[1] 0000 33[1] 0000 34[1] 0000 35[1] 0000 36[1] 0000 37[1] 0000 38[1] 0000 39[1] 0000 3a[1] 0000 3b[1] 0000 3c[1] 0000 3d[1] 0000 3e[1] 0000 3f[1] 0000 40[1] 0000 41[1] 0000 42[1] 0000 43[1] 0000 44[1] 0000 45[1] 0000 46[1] 0000 47[1] 0000 48[1] 0000 49[1] 0000 4a[1] 0000 4b[1] 0000 4c[1] 0000 4d[1] 0000 4e[1] 0000 4f[1] 0000 50[1] 0000 51[1] 0000 52[1] 0000 53[1] 0000 54[1] 0000 55[1] 0000 56[1] 0000 57[1] 0000 58[1] 0000 59[1] 0000 5a[1] 0000 5b[1] 0000 5c[1] 0000 5d[1] 0000 5e[1] 0000 5f[1] 0000 60[1] 0000 61[1] 0000 62[1] 0000 63[1] 0000 64[1] 0000 65[1] 0000 66[1] 0000 67[1] 0000 68[1] 0000 69[1] 0000 6a[1] 0000 6b[1] 0000 6c[1] 0000 6d[1] 0000 6e[1] 0000 6f[1] 0000 70[1] 0000 71[1] 0000 72[1] 0000 73[1] 0000 74[1] 0000 75[1] 0000 76[1] 0000 77[1] 0000 78[1] 0000 79[1] 0000 7a[1] 0000 7c[1] 0000 fdff ffff 7d[1] 0000 7e[1] 0000 7f[1] 0000 80[1] 0000 }\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and $pepe and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_OLE_Stream_Base64_GZip: maldoc {\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-28\"\n        tlp     = \"GREEN\"\n        description = \"Office document which contains base64 encoded gzip header\"\n        thanks = \"Jason Killam\"\n        sample_hash = \"e1f780c1c25ef948418abc97695c7b9a\"\n        feelz   = \"https://youtu.be/l-O5IHVhWj0?t=85\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //H4sIAAAAAAAA/3SP227CMAxAf\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $feelz1 = { 4834 7349 41 }\n        $feelz2 = /[^A-Za-z0-9\\x2b\\x2f]H4sIA[A-Za-z0-9\\x2b\\x2f\\x3d]{128}/       ascii\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"        nocase wide ascii\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and all of ($feelz*) and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_VB_RegEdit\n{\n        meta:\n                description = \"Office document containing RegEdit functions\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-24\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n\t\t$reg1 = { 07 00 52 00 45 00 47 00 49 00 4e 00 53 00 54 00 }\n\t\t$reg2 = \"\\\\shell\\\\open\\\\command\"\n\t\t$reg3 = \"\\\\run\"\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($reg*)\n}\n\nrule GetCursorPos\n{\n\tmeta:\n\t\tdescription = \"Office Document containing GetCursorPos API call\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-25\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$api = \"GetCursorPos\" nocase wide ascii\n\n\t\t$vb1 = \"VBE\"\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and $api and any of ($vb*)\n}\n\nrule EXE_NameSpace\n{\n        meta:\n                description = \"Executable with a XML namespace defined to a URI object which we do not like\"\n                author = \"Nathan Fowler\"\n                date = \"2019-01-24\"\n                risk = \"high\"\n                tlp = \"GREEN\"\n\n        strings:\n                $magic1 = { 4d5a }       //MZ\n\t\t$magic2 = \"This program \"\tascii\n\n\t\t//https://stackoverflow.com/questions/180985/what-is-tempuri-org\n\t\t$namespace1 = \"://upclick.com/\"\tascii\n\t\t$namespace2 = \"://tempuri.org/\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and $magic1 at 0 and $magic2 and any of ($namespace*)\n}\n\nrule XML_B64_Autoopen\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Wide Encoded AutoOpen\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-22\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t// Null-spaced wide format of 'autoopen' and 'AUTOOPEN'\n\t\t$encstring_1 = \"dQB0AG8AbwB\"\t\tascii\n\t\t$encstring_2 = \"UAdABvAG8AcAB\"\t\tascii\n\t\t$encstring_3 = \"B1AHQAbwBvAHA\"\t\tascii\n\t\t$encstring_4 = \"dQB0AG8AbwBwAG\"\tascii\n\t\t$encstring_5 = \"B1AHQAbwBvAHAAZQ\"\tascii\n\t\t$encstring_6 = \"HUAdABvAG8AcABlAG\"\tascii\n\t\t$encstring_7 = \"VQBUAE8ATwB\"\t\tascii\n\t\t$encstring_8 = \"BVAFQATwBPAFA\"\t\tascii\n\t\t$encstring_9 = \"UAVABPAE8AUAB\"\t\tascii\n\t\t$encstring_10 = \"VQBUAE8ATwBQAE\"\tascii\n\t\t$encstring_11 = \"BVAFQATwBPAFAARQ\"\tascii\n\t\t$encstring_12 = \"FUAVABPAE8AUABFAE\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($encstring_*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule XML_B64_ActiveMime\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Encoded ActiveMime and numeric embedded image\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-17\"\n\t\tmodified = \"2019-01-23\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\t\tthanks = \"Harold Ogden, you rock\"\n\n\tstrings:\n\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t//ActiveMime Base64 Encoded (accounting for leading or trailing characters)\n\t\t$b1 = \"N0aXZ\"\t\tascii\n\t\t$b2 = \"RpdmV\"\t\tascii\n\t\t$b3 = \"dGl2ZU1\"\t\tascii\n\t\t$b4 = \"N0aXZlTW\"\tascii\n\t\t$b5 = \"3RpdmVNaW\"\tascii\n\t\t$b6 = \"dGl2ZU1pbW\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($b*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule Ultimate_PEPE_Silvia\n{\n\tmeta:\n\t\tdescription = \"Office Document containing excessive number of variable assembly or terse variables\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-01-23\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\" nocase wide ascii\n\t\t$vb2 = \"VBA\" nocase wide ascii\n\n\t\t$ole1 = \"OLE\" nocase wide ascii\n\t\t$ole2 = \"stdole\" nocase wide ascii\n\n\t\t//Byte code analysis of the documents indicate the varible assembly patterns for arithmetic operations are these byte pattens below.\n\t\t//Breaking these out into the 160 possible combinations results in elimination of the YARA performance warnings regarding Aho Corsick atoms for\n\t\t//hex wildcard matching.  Plus it totally looks like I have some idea of what I'm doing too!\n\t\t$pepe1= { 80 0000 ff03 030? }\n\t\t$pepe2= { 80 0100 ff03 030? }\n\t\t$pepe3= { 80 0200 ff03 030? }\n\t\t$pepe4= { 80 0300 ff03 030? }\n\t\t$pepe5= { 80 0400 ff03 030? }\n\t\t$pepe6= { 80 0500 ff03 030? }\n\t\t$pepe7= { 80 0600 ff03 030? }\n\t\t$pepe8= { 80 0700 ff03 030? }\n\t\t$pepe9= { 80 0800 ff03 030? }\n\t\t$pepe10= { 80 0900 ff03 030? }\n\t\t$pepe11= { 80 0a00 ff03 030? }\n\t\t$pepe12= { 80 0b00 ff03 030? }\n\t\t$pepe13= { 80 0c00 ff03 030? }\n\t\t$pepe14= { 80 0d00 ff03 030? }\n\t\t$pepe15= { 80 0e00 ff03 030? }\n\t\t$pepe16= { 80 0f00 ff03 030? }\n\t\t$pepe17= { 81 0000 ff03 030? }\n\t\t$pepe18= { 81 0100 ff03 030? }\n\t\t$pepe19= { 81 0200 ff03 030? }\n\t\t$pepe20= { 81 0300 ff03 030? }\n\t\t$pepe21= { 81 0400 ff03 030? }\n\t\t$pepe22= { 81 0500 ff03 030? }\n\t\t$pepe23= { 81 0600 ff03 030? }\n\t\t$pepe24= { 81 0700 ff03 030? }\n\t\t$pepe25= { 81 0800 ff03 030? }\n\t\t$pepe26= { 81 0900 ff03 030? }\n\t\t$pepe27= { 81 0a00 ff03 030? }\n\t\t$pepe28= { 81 0b00 ff03 030? }\n\t\t$pepe29= { 81 0c00 ff03 030? }\n\t\t$pepe30= { 81 0d00 ff03 030? }\n\t\t$pepe31= { 81 0e00 ff03 030? }\n\t\t$pepe32= { 81 0f00 ff03 030? }\n\t\t$pepe33= { 82 0000 ff03 030? }\n\t\t$pepe34= { 82 0100 ff03 030? }\n\t\t$pepe35= { 82 0200 ff03 030? }\n\t\t$pepe36= { 82 0300 ff03 030? }\n\t\t$pepe37= { 82 0400 ff03 030? }\n\t\t$pepe38= { 82 0500 ff03 030? }\n\t\t$pepe39= { 82 0600 ff03 030? }\n\t\t$pepe40= { 82 0700 ff03 030? }\n\t\t$pepe41= { 82 0800 ff03 030? }\n\t\t$pepe42= { 82 0900 ff03 030? }\n\t\t$pepe43= { 82 0a00 ff03 030? }\n\t\t$pepe44= { 82 0b00 ff03 030? }\n\t\t$pepe45= { 82 0c00 ff03 030? }\n\t\t$pepe46= { 82 0d00 ff03 030? }\n\t\t$pepe47= { 82 0e00 ff03 030? }\n\t\t$pepe48= { 82 0f00 ff03 030? }\n\t\t$pepe49= { 83 0000 ff03 030? }\n\t\t$pepe50= { 83 0100 ff03 030? }\n\t\t$pepe51= { 83 0200 ff03 030? }\n\t\t$pepe52= { 83 0300 ff03 030? }\n\t\t$pepe53= { 83 0400 ff03 030? }\n\t\t$pepe54= { 83 0500 ff03 030? }\n\t\t$pepe55= { 83 0600 ff03 030? }\n\t\t$pepe56= { 83 0700 ff03 030? }\n\t\t$pepe57= { 83 0800 ff03 030? }\n\t\t$pepe58= { 83 0900 ff03 030? }\n\t\t$pepe59= { 83 0a00 ff03 030? }\n\t\t$pepe60= { 83 0b00 ff03 030? }\n\t\t$pepe61= { 83 0c00 ff03 030? }\n\t\t$pepe62= { 83 0d00 ff03 030? }\n\t\t$pepe63= { 83 0e00 ff03 030? }\n\t\t$pepe64= { 83 0f00 ff03 030? }\n\t\t$pepe65= { 84 0000 ff03 030? }\n\t\t$pepe66= { 84 0100 ff03 030? }\n\t\t$pepe67= { 84 0200 ff03 030? }\n\t\t$pepe68= { 84 0300 ff03 030? }\n\t\t$pepe69= { 84 0400 ff03 030? }\n\t\t$pepe70= { 84 0500 ff03 030? }\n\t\t$pepe71= { 84 0600 ff03 030? }\n\t\t$pepe72= { 84 0700 ff03 030? }\n\t\t$pepe73= { 84 0800 ff03 030? }\n\t\t$pepe74= { 84 0900 ff03 030? }\n\t\t$pepe75= { 84 0a00 ff03 030? }\n\t\t$pepe76= { 84 0b00 ff03 030? }\n\t\t$pepe77= { 84 0c00 ff03 030? }\n\t\t$pepe78= { 84 0d00 ff03 030? }\n\t\t$pepe79= { 84 0e00 ff03 030? }\n\t\t$pepe80= { 84 0f00 ff03 030? }\n\t\t$pepe81= { 85 0000 ff03 030? }\n\t\t$pepe82= { 85 0100 ff03 030? }\n\t\t$pepe83= { 85 0200 ff03 030? }\n\t\t$pepe84= { 85 0300 ff03 030? }\n\t\t$pepe85= { 85 0400 ff03 030? }\n\t\t$pepe86= { 85 0500 ff03 030? }\n\t\t$pepe87= { 85 0600 ff03 030? }\n\t\t$pepe88= { 85 0700 ff03 030? }\n\t\t$pepe89= { 85 0800 ff03 030? }\n\t\t$pepe90= { 85 0900 ff03 030? }\n\t\t$pepe91= { 85 0a00 ff03 030? }\n\t\t$pepe92= { 85 0b00 ff03 030? }\n\t\t$pepe93= { 85 0c00 ff03 030? }\n\t\t$pepe94= { 85 0d00 ff03 030? }\n\t\t$pepe95= { 85 0e00 ff03 030? }\n\t\t$pepe96= { 85 0f00 ff03 030? }\n\t\t$pepe97= { 86 0000 ff03 030? }\n\t\t$pepe98= { 86 0100 ff03 030? }\n\t\t$pepe99= { 86 0200 ff03 030? }\n\t\t$pepe100= { 86 0300 ff03 030? }\n\t\t$pepe101= { 86 0400 ff03 030? }\n\t\t$pepe102= { 86 0500 ff03 030? }\n\t\t$pepe103= { 86 0600 ff03 030? }\n\t\t$pepe104= { 86 0700 ff03 030? }\n\t\t$pepe105= { 86 0800 ff03 030? }\n\t\t$pepe106= { 86 0900 ff03 030? }\n\t\t$pepe107= { 86 0a00 ff03 030? }\n\t\t$pepe108= { 86 0b00 ff03 030? }\n\t\t$pepe109= { 86 0c00 ff03 030? }\n\t\t$pepe110= { 86 0d00 ff03 030? }\n\t\t$pepe111= { 86 0e00 ff03 030? }\n\t\t$pepe112= { 86 0f00 ff03 030? }\n\t\t$pepe113= { 87 0000 ff03 030? }\n\t\t$pepe114= { 87 0100 ff03 030? }\n\t\t$pepe115= { 87 0200 ff03 030? }\n\t\t$pepe116= { 87 0300 ff03 030? }\n\t\t$pepe117= { 87 0400 ff03 030? }\n\t\t$pepe118= { 87 0500 ff03 030? }\n\t\t$pepe119= { 87 0600 ff03 030? }\n\t\t$pepe120= { 87 0700 ff03 030? }\n\t\t$pepe121= { 87 0800 ff03 030? }\n\t\t$pepe122= { 87 0900 ff03 030? }\n\t\t$pepe123= { 87 0a00 ff03 030? }\n\t\t$pepe124= { 87 0b00 ff03 030? }\n\t\t$pepe125= { 87 0c00 ff03 030? }\n\t\t$pepe126= { 87 0d00 ff03 030? }\n\t\t$pepe127= { 87 0e00 ff03 030? }\n\t\t$pepe128= { 87 0f00 ff03 030? }\n\t\t$pepe129= { 88 0000 ff03 030? }\n\t\t$pepe130= { 88 0100 ff03 030? }\n\t\t$pepe131= { 88 0200 ff03 030? }\n\t\t$pepe132= { 88 0300 ff03 030? }\n\t\t$pepe133= { 88 0400 ff03 030? }\n\t\t$pepe134= { 88 0500 ff03 030? }\n\t\t$pepe135= { 88 0600 ff03 030? }\n\t\t$pepe136= { 88 0700 ff03 030? }\n\t\t$pepe137= { 88 0800 ff03 030? }\n\t\t$pepe138= { 88 0900 ff03 030? }\n\t\t$pepe139= { 88 0a00 ff03 030? }\n\t\t$pepe140= { 88 0b00 ff03 030? }\n\t\t$pepe141= { 88 0c00 ff03 030? }\n\t\t$pepe142= { 88 0d00 ff03 030? }\n\t\t$pepe143= { 88 0e00 ff03 030? }\n\t\t$pepe144= { 88 0f00 ff03 030? }\n\t\t$pepe145= { 89 0000 ff03 030? }\n\t\t$pepe146= { 89 0100 ff03 030? }\n\t\t$pepe147= { 89 0200 ff03 030? }\n\t\t$pepe148= { 89 0300 ff03 030? }\n\t\t$pepe149= { 89 0400 ff03 030? }\n\t\t$pepe150= { 89 0500 ff03 030? }\n\t\t$pepe151= { 89 0600 ff03 030? }\n\t\t$pepe152= { 89 0700 ff03 030? }\n\t\t$pepe153= { 89 0800 ff03 030? }\n\t\t$pepe154= { 89 0900 ff03 030? }\n\t\t$pepe155= { 89 0a00 ff03 030? }\n\t\t$pepe156= { 89 0b00 ff03 030? }\n\t\t$pepe157= { 89 0c00 ff03 030? }\n\t\t$pepe158= { 89 0d00 ff03 030? }\n\t\t$pepe159= { 89 0e00 ff03 030? }\n\t\t$pepe160= { 89 0f00 ff03 030? }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($ole*)\n\t\tand (\n\t\t\t   (#pepe1) > 32 or (#pepe2) > 32 or (#pepe3) > 32 or (#pepe4) > 32 or (#pepe5) > 32 or (#pepe6) > 32\n\t\t\tor (#pepe7) > 32 or (#pepe8) > 32 or (#pepe9) > 32 or (#pepe10) > 32 or (#pepe11) > 32 or (#pepe12) > 32\n\t\t\tor (#pepe13) > 32 or (#pepe14) > 32 or (#pepe15) > 32 or (#pepe16) > 32 or (#pepe17) > 32 or (#pepe18) > 32\n\t\t\tor (#pepe19) > 32 or (#pepe20) > 32 or (#pepe21) > 32 or (#pepe22) > 32 or (#pepe23) > 32 or (#pepe24) > 32\n\t\t\tor (#pepe25) > 32 or (#pepe26) > 32 or (#pepe27) > 32 or (#pepe28) > 32 or (#pepe29) > 32 or (#pepe30) > 32\n\t\t\tor (#pepe31) > 32 or (#pepe32) > 32 or (#pepe33) > 32 or (#pepe34) > 32 or (#pepe35) > 32 or (#pepe36) > 32\n\t\t\tor (#pepe37) > 32 or (#pepe38) > 32 or (#pepe39) > 32 or (#pepe40) > 32 or (#pepe41) > 32 or (#pepe42) > 32\n\t\t\tor (#pepe43) > 32 or (#pepe44) > 32 or (#pepe45) > 32 or (#pepe46) > 32 or (#pepe47) > 32 or (#pepe48) > 32\n\t\t\tor (#pepe49) > 32 or (#pepe50) > 32 or (#pepe51) > 32 or (#pepe52) > 32 or (#pepe53) > 32 or (#pepe54) > 32\n\t\t\tor (#pepe55) > 32 or (#pepe56) > 32 or (#pepe57) > 32 or (#pepe58) > 32 or (#pepe59) > 32 or (#pepe60) > 32\n\t\t\tor (#pepe61) > 32 or (#pepe62) > 32 or (#pepe63) > 32 or (#pepe64) > 32 or (#pepe65) > 32 or (#pepe66) > 32\n\t\t\tor (#pepe67) > 32 or (#pepe68) > 32 or (#pepe69) > 32 or (#pepe70) > 32 or (#pepe71) > 32 or (#pepe72) > 32\n\t\t\tor (#pepe73) > 32 or (#pepe74) > 32 or (#pepe75) > 32 or (#pepe76) > 32 or (#pepe77) > 32 or (#pepe78) > 32\n\t\t\tor (#pepe79) > 32 or (#pepe80) > 32 or (#pepe81) > 32 or (#pepe82) > 32 or (#pepe83) > 32 or (#pepe84) > 32\n\t\t\tor (#pepe85) > 32 or (#pepe86) > 32 or (#pepe87) > 32 or (#pepe88) > 32 or (#pepe89) > 32 or (#pepe90) > 32\n\t\t\tor (#pepe91) > 32 or (#pepe92) > 32 or (#pepe93) > 32 or (#pepe94) > 32 or (#pepe95) > 32 or (#pepe96) > 32\n\t\t\tor (#pepe97) > 32 or (#pepe98) > 32 or (#pepe99) > 32 or (#pepe100) > 32 or (#pepe101) > 32 or (#pepe102) > 32\n\t\t\tor (#pepe103) > 32 or (#pepe104) > 32 or (#pepe105) > 32 or (#pepe106) > 32 or (#pepe107) > 32 or (#pepe108) > 32\n\t\t\tor (#pepe109) > 32 or (#pepe110) > 32 or (#pepe111) > 32 or (#pepe112) > 32 or (#pepe113) > 32 or (#pepe114) > 32\n\t\t\tor (#pepe115) > 32 or (#pepe116) > 32 or (#pepe117) > 32 or (#pepe118) > 32 or (#pepe119) > 32 or (#pepe120) > 32\n\t\t\tor (#pepe121) > 32 or (#pepe122) > 32 or (#pepe123) > 32 or (#pepe124) > 32 or (#pepe125) > 32 or (#pepe126) > 32\n\t\t\tor (#pepe127) > 32 or (#pepe128) > 32 or (#pepe129) > 32 or (#pepe130) > 32 or (#pepe131) > 32 or (#pepe132) > 32\n\t\t\tor (#pepe133) > 32 or (#pepe134) > 32 or (#pepe135) > 32 or (#pepe136) > 32 or (#pepe137) > 32 or (#pepe138) > 32\n\t\t\tor (#pepe139) > 32 or (#pepe140) > 32 or (#pepe141) > 32 or (#pepe142) > 32 or (#pepe143) > 32 or (#pepe144) > 32\n\t\t\tor (#pepe145) > 32 or (#pepe146) > 32 or (#pepe147) > 32 or (#pepe148) > 32 or (#pepe149) > 32 or (#pepe150) > 32\n\t\t\tor (#pepe151) > 32 or (#pepe152) > 32 or (#pepe153) > 32 or (#pepe154) > 32 or (#pepe155) > 32 or (#pepe156) > 32\n\t\t\tor (#pepe157) > 32 or (#pepe158) > 32 or (#pepe159) > 32 or (#pepe160) > 32\n\t\t)\n}\n\nrule PEPE_Silvia_v2_Extreme_Edition\n{\n        meta:\n                description = \"Office Document containing excessive number of variable assembly or terse variables\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n                modified = \"2019-01-22\"\n                tlp = \"GREEN\"\n                thanks = \"sysopfb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $pepe1 = { 80 0000 ff03 030? }\n                $pepe2 = { 84 0800 ff03 030? }  //Seen on 2019-01-22, reported by Justin Borland\n                $pepe3 = { b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and ( #pepe1 > 32 or #pepe2 > 32 or #pepe3 > 32 )\n}\n\nrule Office_AC_Slater\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-22\"\n                risk = \"high\"\n                comments = \"Office document with macro using terse variable assembly similar to PEPE Silvia\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Variable stuffs\n\t\t$ac_slater = { ac00??00240046020100ac00??0?2b003e02010000000000 }\n\n                $vb1 = \"VBE\"    nocase wide ascii\n                $vb2 = \"VBA\"    nocase wide ascii\n                $vb4 = \"OLE\"    nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office and (#ac_slater > 64) and any of ($vb*)\n}\n\nrule RTF_Excel40_Macro_HexASCII\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-15\"\n\t\trisk = \"high\"\n\t\tcomments = \"Office document with an Excel 4.0 macro embedded in an RTF as Hex-Ascii\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$rtf = { 7B 5C 72 }\n\t\t$macro = \"0000457863656c20342e30204d6163726f7300\" nocase ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5c7b and $rtf at 0 and $macro\n}\n\nrule RTF_Large_HexAscii_Embeded\n{\n        meta:\n                description = \"Large RTF Document containing 64, 128, or 256 byte offset hex-ascii encoding with embedded document\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-01-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $em1 = \"5b436f6e74656e745f54797065735d\"         nocase ascii    //[Content_Types]\n                $em2 = \"2e6f70656e786d6c666f726d6174732e\"       nocase ascii    //.openxmlformats.\n                $em3 = \"d0cf11e0a1b11ae1\"                       nocase ascii    //Office File Magic\n\n                $hexascii = /[\\r\\n]([0-9A-Fa-f]{64}|[0-9A-Fa-f]{128}|[0-9A-Fa-f]{256})[\\r\\n]/\n\n        condition:\n                uint16(0) == 0x5c7b and $rtf at 0 and filesize > 1024KB and any of ($em*) and (#hexascii > 1024)\n}\n\nrule Office_qwerty_whoami\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-07\"\n                risk = \"high\"\n                comments = \"Potential macro using naming conventions or paths seen with Nymaim and Icedid\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $odd1 = { 5c 7177 6572 7479 }   // \\qwerty\n                $odd2 = { 5c77 686f 616d 695c } // \\whoami\\\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($odd*) and any of ($vb*)\n}\n\nrule Macro_RTFDocument\n{\n    meta:\n        description = \"RTF document contains an office macro\"\n\tauthor = \"Nathan Fowler\"\n\tdate = \"2019-01-02\"\n\tthanks = \"@Techhelplistcom\"\n\n    strings:\n\n\t$rtf = { 7B 5C 72 }\n\t$macro = \"MacroEnabled.\"\n\n    condition:\n        $rtf at 0 and $macro\n}\n\nrule Generic_Bad_XML_or_RTF\n{\n        meta:\n                description = \"Generic indicators of badness in an RTF, likely hex-ascii functions or excessive padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n\t\tmodified = \"2018-12-31\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7b5c 72 }\n                $xml = { 3c3f 786d 6c }\n\n                //Padding after the RTF header\n                $bad_start1 = { 7b5c 72 [3] (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) }\n\n                //Msxml2.SAXXML\n                $bad1 = /[46]d([03]0)?[57]3([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c([03]0)?32([03]0)?2e([03]0)?[57]3([03]0)?[46]1([03]0)?[57]8([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c/i\n\n                //.openxmlformat as hex-ascii\n                $bad2 = \"6f70656e786d6c666f726d6174\" wide ascii\n\n                //Office file magic as hex-ascii\n                $bad3 = \"d0cf11e0a1b\" nocase wide ascii\n\n                //Office file magic hatefully obfuscated\n                $bad4 = /d[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad5 = /d0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?cf[^\\}]+?\\}[\\x20\\x09\\r\\n]*?11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad6 = /d0c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1b/i\n\n\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\t\t$negate2 = \"534158584d4c5265616465722e362e30\"\tascii\t\t//SAXXMLReader.6.0\n\n        condition:\n                ( $rtf at 0 or $xml at 0 ) and ( any of ($bad*) or $bad_start1 at 0 ) and not any of ($negate*)\n}\n\nrule Office_Admin_Temp_Path_Wide\n{\n        meta:\n                description = \"Office document with wide hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-20\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"      nocase wide\n                $path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"         nocase wide\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\nrule Office_Admin_Temp_Path\n{\n        meta:\n                description = \"Office document with hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"\tnocase ascii\n\t\t$path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"\t\tnocase ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\nrule Office_Weird_ChrGen_Possible_XLM_Macro\n{\n        meta:\n                description = \"Office document with weird chrgen stuffs possibly an XLM macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-13\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$weird = { 0000000000010f0008021000??0?0?0005002c01 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and (#weird > 1024) and not any of ($vb*)\n}\n\nrule Suspected_PDF_Link_Image_Phish_Many_URIs\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to a high volume of URIs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-12\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n                $uri1 = \"/URI(http\"\n                $uri2 = \"/URI (http\"\n\n                $distance_anchor = /\\x2fURI[\\x20\\x09]*\\(http[^\\)]+.{0,40}\\x2fURI[\\x20\\x09]*\\(http/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n        condition:\n                (filesize < 300KB) and ($pdf at 0) and (#uri1 > 6 or #uri2 > 6) and $distance_anchor and (not $title1 or $title2)\n}\n\nrule Office_Potential_CVE_2018_15982\n{\n        meta:\n                description = \"Office Document suspected of being Adobe Flash CVE2018-15982\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-07\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n\t\t$wtf = { c0deabcdef }\n\n\t\t$beef1 = \">application/x-shockwave-flash<\" nocase wide ascii\n\t\t$beef2 = \"isDebugger\" nocase wide ascii\n\t\t$beef3 = \"com.adobe.tvsdk.\" nocase wide ascii\n\n        condition:\n\t\t($office at 0 or $rtf at 0 or $xml at 0) and ( $wtf or all of ($beef*) )\n}\n\nrule Office_HTML_Export_Links_Phish\n{\n        meta:\n                description = \"Office HTML Wide Document Export with 2 or less HREFs, suspected phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-03\"\n                tlp = \"GREEN\"\n\n                strings:\n\t\t\t$ms_derpffice_magic = {fffe 3c00 6800 7400 6d00 6c00 2000 7800}\n\n\t\t\t$ms_derpffice1 = \"<html xmlns:o=\\\"urn:schemas-microsoft-com:office:office\" wide\n\t\t\t$ms_derpffice2 = \"<meta http-equiv=Content-Type content=\\\"text/html; charset=unicode\\\">\" wide\n\t\t\t$ms_derpffice3 = \"<meta name=ProgId content=\" wide\n\t\t\t$ms_derpffice4 = \"href=\\\"http\" wide\n\n                condition:\n                        $ms_derpffice_magic at 0 and all of ($ms_derpffice*) and (#ms_derpffice4 < 3)\n}\n\nrule Office_URL_Reversed\n{\n        meta:\n                description = \"Office document with a string reversed URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $rev1 = \"//:sptth\"\n                $rev2 = \"//:ptth\"\n                $rev3 = \"//:ptf\"\n\n\n        condition:\n                ($office at 0 or $rtf at 0 or $xml at 0) and any of ($rev*)\n}\n\nrule RTF_Too_Much_Hex\n{\n        meta:\n\t\tdescription = \"RTF with a whole bunch of hex-ascii\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $rtf = { 7B5C72 }\n\n                        $entity1 = { 095c 6? }\n                        $entity2 = { 205c 6? }\n                        $entity3 = { 7b5c 6? }\n\n                        $hex = /([A-Fa-f0-9]{2}){128}/i\n\n\t\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\n                condition:\n                        $rtf at 0 and not $negate1 and (#entity1 > 6 or #entity2 > 6 or #entity3 > 6) and #hex > 16\n}\n\nrule Office_Document_Phishing\n{\n        meta:\n                description = \"Suspected Office Document Phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$link1 = \"://\" nocase wide ascii\n\t\t$link2 = \"HYPERLINK \\\"http\"\n\t\t$link3 = { 0000 5f50 4944 5f48 4c49 4e4b 5300 0200 }\n\n\t\t$phish1 = \"this document is protected by\" nocase ascii\n\t\t$phish2 = \"click here to unlock\" nocase ascii\n\t\t$phish3 = \"click here to reset\" nocase ascii\n\t\t$phish4 = \"sign in to\" nocase ascii\n\n                $macro1 = \"VBE\" nocase wide ascii\n                $macro2 = \"VBA\" nocase wide ascii\n                $macro3 = \"OLE\" nocase wide ascii\n                $macro4 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\t($rtf at 0 or $office at 0) and all of ($link*) and any of ($phish*) and not any of ($macro*)\n}\n\nrule rtf_obfuscated_equation_in_pars\n{\n        meta:\n                description = \"RTF file with Equation hidden in pars\"\n                author = \"Justin Borland & Greg Olmstead\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n\t\tmodified = \"2018-11-20\"\n                sha1_v1 = \"0f535507d02371ebab86fb318c55479d4b11ec7e\"\n        strings:\n                $rtf = { 7b 5c 72 }\n                $equation1 = /4\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 710\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 075\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ff]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 020\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 004\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 760\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 065/s\n                $equation2 = /45\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 750\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ff]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 200\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 04[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 600\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 65/s\n                $equation3 = /450\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 071\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ff]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 002\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 000\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 4[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 076\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 5/s\n        condition:\n                $rtf at 0 and any of ($equation*)\n}\n\nrule Powershell_Obfuscation_Cmd\n{\n        meta:\n                description = \"Office Document suspected of containing Powershell obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-16\"\n\t\tmodified = \"2018-11-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $xml = { 3c3f 786d 6c }\n                $rtf = { 7b5c 72 }\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n                $for1 = \"f^or\" nocase ascii\n                $for2 = \"fo^r\" nocase ascii\n                $for3 = \"f^o^r\" nocase ascii\n\n                $cmd = \"cmd\" nocase ascii\n\n                $rabbits1 = /[a-zA-Z]\\x5e[a-zA-Z]\\x5e/\n\n\t\t$exclude = \"TickersSold\" ascii\n\n        condition:\n                ($xml at 0 or $office at 0 or $rtf at 0)\n                and (\n                        ( #rabbits1 > 64 and not $exclude )\n                        or (\n                                $cmd\n                                and (\n                                           any of ($for*)\n                                        or any of ($set*)\n                                )\n                        )\n                )\n}\n\nrule Thusla_Doom_Set\n{\n        meta:\n                description = \"Office Document containing excessive set obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-15\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and (#set1 > 8 or #set2 > 8 or #set3 > 8)\n}\n\nrule Office_SecurityCryptography\n{\n        meta:\n\t\tdescription = \"Office document using System.Security.Cryptography\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Kirk Sayre\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t$crypt = \"System.Security.Cryptography.\" nocase wide ascii\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $crypt\n}\n\nrule Office_hexascii_binary_copy\n{\n        meta:\n\t\tdescription = \"Office document using binary copy in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//copy /b\n\t\t\t$hexascii = /[46]3([03]0)?[46]f([03]0)?[57]0([03]0)?[57]9([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_Nullsoft_Install\n{\n        meta:\n\t\tdescription = \"Office document with Nullsoft Installer encoded in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//Nullsoft Ins\n\t\t\t$hexascii = /[46]e([03]0)?[57]5([03]0)?[46]c([03]0)?[46]c([03]0)?[57]3([03]0)?[46]f([03]0)?[46]6([03]0)?[57]4([03]0)?20([03]0)?[46]9([03]0)?[46]e([03]0)?[57]3/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_echo_off_and_bad\n{\n        meta:\n\t\tdescription = \"Office document with ECHO OFF and other badness\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n\t\tmodified = \"2018-11-13\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//ECHO OFF\n\t\t\t$bad1 = /[46]5([03]0)?[46]3([03]0)?[46]8([03]0)?[46]f([03]0)?20([03]0)?[46]f([03]0)?[46]6([03]0)?[46]6/i\n\n\t\t\t//TIMEOUT\n\t\t\t$bad2 = /[57]4([03]0)?[46]9([03]0)?[46]d([03]0)?[46]5([03]0)?[46]f([03]0)?[57]5([03]0)?[57]4([03]0)?20/i\n\n\t\t\t//REG DELETE or QUERY\n\t\t\t$bad3 = /[57]2([03]0)?[46]5([03]0)?[46]7([03]0)?20([03]0)?([46]4([03]0)?[46]5([03]0)?[46]c([03]0)?[46]5([03]0)?[57]4([03]0)?[46]5|[57]1([03]0)?[57]5([03]0)?[46]5([03]0)?[57]2([03]0)?[57]9)([03]0)?20/i\n\n\t\t\t//for /f\n\t\t\t$bad4 = /[46]6([03]0)?[46]f([03]0)?[57]2([03]0)?20([03]0)?2f([03]0)?[46]6([03]0)?20/i\n\n\t\t\t//START /b\n\t\t\t$bad5 = /[57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n\t\t\t//Invoke-Expression\n\t\t\t$bad6 = /[46]9([03]0)?[46]e([03]0)?[57]6([03]0)?[46]f([03]0)?[46]b([03]0)?[46]5([03]0)?2d([03]0)?[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]9([03]0)?[46]f([03]0)?[46]e/\n\n                condition:\n                        ($office at 0 or $rtf at 0) and any of ($bad*)\n}\n\nrule Office_VBA_OLE_qwerty\n{\n        meta:\n                description = \"Office document using Microsoft Forms, Embedded Object, VBA, OLE, and literal qwerty\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-24\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\n                        $bad1 = \"qwerty\"\n                        $bad2 = \"Microsoft Forms\"\n                        $bad3 = \"Embedded Object\"\n                        $bad4 = \"VBA\" wide ascii\n                        $bad5 = \"stdole\" wide ascii nocase\n\n                condition:\n                        $office at 0 and all of ($bad*)\n}\n\nrule RTF_Embedded_Office_Doc_OLE\n{\n        meta:\n\t\tdescription = \"RTF document with OLE-enabled embedded Office document.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-22\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $office1 = \"D0CF11E0A1B11AE1\" nocase\n                $office2 = \"D000CF001100E000A100B1001A00E1\" nocase\n\n                $ole = /[46]F([03]0)?[46]C([03]0)?[46]5/i\n\n        condition:\n                ($rtf at 0) and any of ($office*) and $ole\n}\n\nrule Office_ChrGen_Eval_Reverse\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, Reverse, and ChrGen\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n\t\tmodified = \"2018-11-01\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n\n                $bad1 = \"Evaluate\"\n                $bad2 = \"Reverse\"\n\n\t\t$exclude1 = { 5265 7665 7273 6520 582d 4469 7669 6465 }\t\t//Reverse X-Divide\n\t\t$exclude2 = /Reverse[A-Za-z]/\t\t\t\t\t//Handle ReverseOrder\n\t\t$exclude3 = \"_Evaluate\"\t\t\t\t\t\t//Handle Evaluate\n\n                $chrgen1 = { 0000 2f01 0000 3001 0000 3101 0000 3201 0000 3301 0000 3401 0000 3501 0000 3601 0000 3701 0000 3801 0000 3901 0000 3a01 0000 3b01 0000 3c01 0000 3d01 0000 3e01 0000 3f01 0000 4001 0000 4101 0000 4201 0000 4301 0000 4401 0000 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and all of ($bad*) and $chrgen1 and not any of ($exclude*)\n}\n\nrule doc_with_applicationRun_vba_autoopen\n{\n        meta:\n                description = \"DOC + Application.Run +VBA + Macro\"\n                author = \"Ryan Moon & Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $autoopen = /A\\x00?u\\x00?t\\x00?o\\x00?O\\x00?p\\x00?e\\x00n/\n                $vba = \"_VBA_PROJECT\" wide nocase\n                $run = /A\\x00?p\\x00?p\\x00?l\\x00?i\\x00?c\\x00?a\\x00t\\x00?i\\x00?o\\x00?n\\x00?.\\x00?R\\x00?u\\x00?n\\x00?\\x20?\\x00?\\x22/\n        condition:\n               $office at 0 and $autoopen and $vba and $run\n}\n\n\nrule xls_w_autoopen_eval_vba\n{\n        meta:\n                description = \"Generic rule looking for autoOpen and _Evaluate within xls\"\n                author = \"Ryan Moon & Justin Borland & Nathan Fowler also ran\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n        strings:\n                $document_header = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $happy_trees1 = \"VBAProject\"\n                $happy_trees2 = \"_Evaluate\"\n                $happy_trees3 = \"Document_Open\"\n\n                $vba_to_eval_to_document_open = /VBAProject.{1,128}_Evaluate.{1,128}Document_Open/\n\n        condition:\n                $document_header at 0 and all of ($happy_trees*) and $vba_to_eval_to_document_open\n}\n\nrule Office_CharacterDict\n{\n        meta:\n                description = \"Office Document containing a numeric character dictionary and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-10-02\"\n\t\ttlp = \"GREEN\"\n        strings:\n\t        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$stupidland1 = {3132 3334 3536 3738 3930 00}\n\t\t$stupidland2 = {3031 3233 3435 3637 3839 00}\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule doc_with_encoded_cmd_and_vbs\n{\n        meta:\n                description = \"Office document with 'cmd.exe /c' and 'LANGUAGE=VBScript>' in base64\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $cmd = \"Y21kLmV4ZSAvYyAg\" // 'cmd.exe /c  ' in base64\n                $vbscript = \"IExBTkdVQUdFPSJWQlNjcmlwdCI+\"  // ' LANGUAGE=\"VBScript\">' in base64\n        condition:\n                $office at 0 and $cmd and $vbscript\n}\n\nrule rtf_cve_2017_8570\n{\n        meta:\n                description = \"RTF with embedded classid used in CVE-2017-8570\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-24\"\n\n        strings:\n                $rtf =  { 7b5c 7274 66 }\n                $classid = { 37 6233 3233 3033 3433 3733 3733 3434 3334 3632 6434 3433 3233 3533 3132 6433 3434 3633 3033 3232 6433 3833 3533 3534 3232 6433 3234 3234 3533 3733 3033 3533 3833 3533 3133 3833 3434 3237 64 }// Actual Hex in the Ascii -> 7b32303437373443462d443235312d344630322d383535422d3242453730353835313834427d which is actually -> {204774CF-D251-4F02-855B-2BE70585184B}  - ref https://github.com/rxwx/CVE-2017-8570/blob/master/calc.sct\n                $cdata = { 33 6332 3135 6234 3334 3434 3135 3434 3135 62 } // Actual Hex in Ascii -> 3c215b43444154415b -> <![CDATA[\n        condition:\n                $rtf at 0 and $classid and $cdata\n}\n\nrule Office_6_pif_hta_exe\n{\n        meta:\n                description = \"Office Document containing a macro, .exe, .hta, and 6.pif filename in base64.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"XDYucGlm\" wide ascii\n\t\t$stupidland2 = \".hta\" wide ascii\n\t\t$stupidland3 = \".exe\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_jpeg_recompress\n{\n        meta:\n                description = \"Office Document containing a macro and an image from jpeg-recompress.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"UNICODE\" wide ascii\n\t\t$stupidland2 = \"by jpeg-recompress\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_KeyString\n{\n        meta:\n                description = \"Office Document containing ExeName32, mid, right, and KeyString macro commands.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"KeyString\" wide ascii\n\t\t$stupidland2 = \"Mid\" wide ascii\n\t\t$stupidland3 = \"Right\" wide ascii\n\t\t$stupidland4 = \"ExeName32\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_PING\n{\n        meta:\n                description = \"Office Document containing command instruction to run the PING command and stdole/VBE/VBA.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"cmd.exe /c  ping\"\n\t\t$stupidland2 = \"Y21kLmV4ZSAvYyAgcGluZyBsb2NhbGhvc3QgLW4\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_stdole_CallByName_ActiveDocument\n{\n        meta:\n                description = \"Office Document containing ole, CreateObject, ActiveDocument, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-18\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"CallByName\" nocase wide ascii\n\t\t$stupidland2 = \"CreateObject\" nocase wide ascii\n\t\t$stupidland3 = \"ActiveDocument\" nocase wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\n\n\nrule RTF_CVE_11882_suspect_3030\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882 with excessive 0x30 byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-09-12\"\n\t\ttlp = \"GREEN\"\n\t\tmodified = \"2018-09-28\"\n\t\trevision = \"4\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 72 }\n\n\t\t$stuffs = { 3030 3030 3030 3030 3030 3030 3030 3030 }\n\n\t\t$magical_cocaman1 = /[46]500[57]100[57]500[46]100[57]400[46]900[46][Ff]00[46][Ee]00(2000[46][Ee]00[46]1|2[Ee]0033)/\n\t\t$magical_cocaman2 = /[46]5[57]1[57]5[46]1[57]4[46]9[46][Ff][46][Ee](20[46][Ee][46]1|2[Ee]33)/\n\n\tcondition:\n\t\t$rtf at 0 and $stuffs and any of ($magical_cocaman*)\n}\n\nrule RTF_x27_spaced_out\n{\n        meta:\n                description = \"RTF Document containing x27 weird stuffs and lots of space padding, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-04\"\n\n        strings:\n\t\t$badrtf1 = { 7b 5c 72 74 ?? ?? ?? ?? 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                $badrtf1 at 0 and $quote1\n}\n\nrule rtf_rtv0_obfuscated_http {\n  meta:\n    description = \"Yara rule to detect obfuscated download URLs in RTF file\"\n    urlhaus = \"https://urlhaus.abuse.ch/browse/tag/rtfkit/\"\n    author = \"Corsin Camichel, @cocaman\"\n    version = \"2018-09-04\"\n    version = \"1.3 Modified 2018-09-19\"\n    in_the_wild = true\n    payload = \"Formbook, AZOrult, Loki, RemcosRAT, AgentTesla\"\n    tlp = \"green\"\n\n  strings:\n    $magic = /{\\\\rt./     // most headers are rtv0, I have seen others too\n    $nop_1 = \"\\\\'9X\"      // different NOP strings seen over time\n    $nop_2 = \"\\\\90\"\n    $nop_3 = \"\\\\'7S\"\n    $nop_4 = /\\\\'../      // this seems like a bad idea and could generate FP (so good so far)\n    $http = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..3A\\\\'..2F\\\\'..2F/           // start of http://\n    $https = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..73\\\\'..3A\\\\'..2F\\\\'..2F/   // start of https://\n    $null = /\\'..00/      // null bytes, sometimes in URL\n    $slash = /\\\\'..2F/\n\n  condition:\n    $magic at 0\n      and (#nop_1 > 50 or #nop_2 > 50 or #nop_3 > 50 or #nop_4 > 15)\n      and ($http or $https or $null or $slash)\n}\n\nrule RTF_par_par_party\n{\n        meta:\n                description = \"Tiny RTF 0a0d par par par Party and 0d 0a was not invited, potentially Emotet RTF.\"\n                author = \"Nathan Fowler/Ryan C. Moon\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$party = { 5c 7061 720a 0d5c 7061 720a 0d }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $party and filesize < 10KB\n}\n\nrule RTF_SpacedLink_Emotet\n{\n        meta:\n                description = \"Tiny RTF Document containing spaced-out (woooo space) link, potentially Emotet RTF.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$link1 = { 0a0d 5c70 6172 0a0d 6874 7470 3a2f 2f }\n\t\t$link2 = { 0a0d 5c70 6172 0a0d 6874 7470 733a 2f2f }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and any of ($link*) and filesize < 10KB\n}\n\nrule RTF_x27_ampersand\n{\n        meta:\n                description = \"RTF Document containing x27 and ampersand weird stuffs, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-19\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$amp1 = { 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $amp1 and $quote1\n}\n\nrule RTF_CVE_11882_8570_suspect\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882/8570 with excessive byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-05-21\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 7274 6631 5c }\n\t\t$stuffs1 = { 3031 3035 3030 3030 3032 3030 3030 3030 3038 3030 3030 3030 }\n\t\t$stuffs2 = { 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 }\n\t\t//$stuffs3 = { 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 }\n\n\tcondition:\n\t\t$rtf at 0 and all of ($stuffs*)\n}\n\n\n\n\nrule VBE_Padding_MZ\n{\n        meta:\n                description = \"Office Document containing VBE and A and MZ padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n                $padding2 = { 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d }\n\n\t\t$slashyslashes1 = { 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f }\n\n        condition:\n                all of ($office*) and any of ($vb*) and all of ($padding*) and any of ($slashyslashes*)\n}\n\nrule ZIP_HTA\n{\n        meta:\n                description = \"Zip archive containing a .hta file\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $hta1 = \".hta\" nocase\n\n        condition:\n                $zip1 at 0 and ($hta1 in (filesize-100..filesize))\n}\n\nrule PDF_PowerShell\n{\n        meta:\n                description = \"PDF Document containing Powershell Hidden/Encoded\"\n                author = \"Nathan Fowler/Michelle Ticer\"\n                risk = \"high\"\n\n        strings:\n                $pdf1 = \"%PDF-\"\n\n                $ps1 = \"powershell.exe\" nocase\n                $ps2 = \"-EncodedCommand\" nocase\n                $ps3 = \" hidden\"\n\n        condition:\n                $pdf1 at 0 and all of ($ps*)\n}\n\nrule Office_WordPress_Evaluate\n{\n        meta:\n                description = \"Office Document containing VBA, Evaluation, and TurdPress URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$eval1 = \"Eval\"\n\n\t\t$turdpress1 = \"/wp-\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($eval*) and any of ($turdpress*)\n}\n\nrule Office_VBE_ByVal_CharGen\n{\n        meta:\n                description = \"Office Document containing VBA, Short Path VBE DLL, ByVal, and Chargen CHRs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$byval1 = \"ByVal\"\n\t\t$byval2 = \"CallBy\"\n\n\t\t$chargen1 = { 16 1718 191a 2526 2728 292a 3435 3637 3839 3a43 4445 4647 4849 4a53 5455 5657 5859 5a63 6465 6667 6869 6a73 7475 7677 7879 7a }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($byval*) and all of ($chargen*)\n}\n\nrule VBE_Autofit_Padding\n{\n        meta:\n                description = \"Office Document containing VBE, FileSystemObject, and autofit with 'A' or 'B' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n\t\t$fso1 = \"emObject\"\n\n\t\t$fit1 = \"Autofit\" nocase\n\n        condition:\n                all of ($office*) and any of ($fso*) and any of ($vb*) and any of ($padding*) and any of ($fit*)\n}\n\n\nrule DirectVBE6DLL_Padding\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE6.DLL or VBE7.dll with 'A' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($padding*)\n}\n\nrule JS_in_a_Rar\n{\n        meta:\n                description = \"Detects a js inside a rar file.\"\n                author = \"Ryan C. Moon\"\n                risk = \"high\"\n\n        strings:\n                $rar_header = { 52 61 72 21 }\n                $js_extension = { 2e 6a 73 00 }\n\n        condition:\n                $rar_header at 0 and $js_extension\n}\n\nrule MiscreantPunch_PiratedOfficeVersionWMacrosXBAG\n{\n        meta:\n                description = \"Office Document containing cracked Office miscreant fingerprint\"\n                author = \"Will Metcalf/Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $cracked1 = \"RePack by Diakov\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                all of ($office*) and all of ($cracked*) and any of ($vb*)\n}\n\nrule ZIP_JS\n{\n        meta:\n                description = \"Zip archive containing a .js file potentially locky\"\n                author = \"Nathan Fowler / P.Burbage\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $js1 = \".js\" nocase\n\t\t$js2 = \".jse\" nocase\n\n        condition:\n                $zip1 at 0 and ( ($js1 in (filesize-100..filesize)) or ($js2 in (filesize-100..filesize)) )\n}\n\nrule Office_CacheControl\n{\n        meta:\n                description = \"Office document containing Cache-Control HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$cc1 = \"Cache-Control\"\n\t\t$cc2 = \"no-cache\"\n\t\t$cc3 = \"no-store\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($cc*)\n}\n\nrule Office_RTF_Sandworm\n{\n        meta:\n                description = \"Office RTF Document containing Sandworm\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { 7b5c 7274 6631 205c 6164 6566 6c61 6e67 }\n\t\t$office2 = \"generator Msftedit \"\n\n\t\t$bad1 = \" Sandworm \"\n\t\t$bad2 = \"abcdefghijk\"\n\t\t$bad3 = \"ABCDEFGHIJK\"\n\n        condition:\n                all of ($office*) and all of ($bad*)\n}\n\nrule jsocket_v2_6 {\n    meta:\n        description = \"JSocket v2.6\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-19\"\n        reference = \"34f5bfeee44b545554c3112a68461282\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"javas/MaIn.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\n\nrule jsocket_v2_5 {\n    meta:\n        description = \"JSocket v2.5\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-08\"\n        reference = \"0249b3cbeb6742fafb946ae3a916b054\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_4 {\n    meta:\n        description = \"JSocket v2.4\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-01\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"windows/windows.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_3 {\n    meta:\n        description = \"JSocket v2.3\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-17\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2_a {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-07\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.pl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2 {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.perl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_1 {\n\tmeta:\n    \tdescription = \"JSocket v2.1\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-09\"\n        reference = \"2c7cb88dc26d1b5cb0edd62d79f66ee7\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/resource.xsx\"\n        $misc_2 = \"java/textito.text\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v2_a {\n\tmeta:\n    \tdescription = \"JSocket v2.0(?)a\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-10-29\"\n        reference = \"25197708fb1fa081efa21822a62358d6\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/stubcito.opp\"\n        $misc_2 = \"java/textito.isn\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v1_2_dropper {\n\tmeta:\n    \tdescription = \"JSocket v1.2 dropper\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-07-22\"\n        reference_md5 = \"020e6397cdf1ba26470295fc32175de2\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = { 00 61 2e 74 78 74 50 4b } // \"a.txtPK\"\n        $misc_2 = { 00 62 2e 74 78 74 50 4b } // \"b.txtPK\"\n        $misc_3 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule java_rc5_6_class {\n\tmeta:\n    \tdescription = \"Java RC5 Key Expansion constants\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n    \t$magic = { CA FE BA BE }\n        $const_1 = { 3f f9 e3 77 9b 97 f0 51 }\n        $const_2 = { 40 05 bf 0a 8b 14 57 69 }\n        $const_3 = { b7 e1 51 63 }\n        $const_4 = { 9e 37 79 b9 }\n\tcondition:\n    \t$magic at 0 and\n        all of ($const_*)\n}\n\n\nrule Java_Malware_Allatori_Obfuscated\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"com/java/Manifest.mf\"\n        $cls1 = \"com/java/Main.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_QRat\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"e-data\"\n        $data2 = \"data\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"Qrypt.class\"\n        $cls3 = \"ReplacedInputStream.class\"\n        $do = \"_Do.class\"\n\n    condition:\n        $mf and any of ($data*) and (all of ($cls*) or $do)\n}\n\nrule Java_Malware_AlienSpy\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config.ini\"\n        $data2 = \"password.ini\"\n        $cls1 = \"plugins/Server.class\"\n        $cls2 = \"DecryptStub.class\"\n        $cls3 = \"LoadPassword.class\"\n        $cls4 = \"LoadStub.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_A\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"a.txt\"\n        $data2 = \"b.txt\"\n        $cls1 = \"Main.class\"\n\n    condition:\n        $mf and all of ($data*) and any of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_B\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"MANIFEST.MF\"\n        $data2 = \"ID\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"plugins/Server.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_JSocket_C\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"resource/password.txt\"\n        $data2 = \"resource/server.dll\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_D\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/stubcito.opp\"\n        $data2 = \"java/textito.isn\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/textito.text\"\n        $data2 = \"java/resource.xsx\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E2\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"amarillo/asdasd.asd\"\n        $data2 = \"amarillo/adqwdqwd.asdwf\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_F\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.perl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_G\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.pl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $cls1 = \"org/jsocket/\"\n        $cls2 = \"org.jsocket.\"\n\n    condition:\n        $mf and all of ($cls*)\n}\n\nrule Office_Calibri_VBA\n{\n        meta:\n                description = \"Office document containing VBA, excessive Calibri declarations, and HTTP Response.Body with OLE Automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$office2 = { 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 0068 0101 0038 00bc }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $http1 = \"eBody\" nocase\n\t\t$http2 = \"HTTPRequest\" nocase\n\t\t$http3 = \"XMLH\" nocase\n\n                $script1 = \"Env\" nocase\n                $script2 = \"Script\" nocase\n\n                $ole1 = \"00020819-0000-0000-C000-000000000046\"\n                $ole2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($script*)\n}\n\nrule Access_Hidden_Tables_HTTP\n{\n        meta:\n                description = \"Office document containing VBA, Access linked databases, and HTTP Requests with OLE automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n\t\t$http1 = \"HTTPRequest\" nocase\n\t\t$http2 = \"XMLH\" nocase\n\t\t$http3 = \"ResponseBody\" nocase\n\n\t\t$ole1 = \"OLE\"\n\t\t$ole2 = { 23 00 4f 00 4c 00 45 00 }\n\t\t$ole3 = { 73 00 74 00 64 00 6f 00 6c 00 65 00 }\n\n\t\t$access1 = \"LinkedDatabase\" nocase\n\t\t$access2 = \"MSysObject\" nocase\n\t\t$access3 = \"DATABASE=\" nocase\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($access*)\n}\n\nrule Word2007_Interop_Assy_Excessive_Space\n{\n        meta:\n                description = \"Office document containing Word 2007 Interop Assemblies, excessive space (heap spray?), and VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $string1 = \"00020905-0000-0000-C000-000000000046\"\n                $string2 = { 7b 00 30 00 30 00 30 00 32 00 30 00 39 00 30 00 35 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $subclass1 = \"ByVal\" nocase\n\t\t$subclass2 = \"Private Declare Function\" nocase\n\t\t$subclass3 = \"Alias \" nocase\n\t\t$subclass4 = \" Alias\" nocase\n\n                $bad1 = { 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\n        condition:\n                any of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*) and any of ($subclass*)\n}\n\nrule Outlook_Automation_Cyrillic\n{\n\tmeta:\n\t\tdescription = \"Office document containing Outlook automation and VBA with Cyrillic fonts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$string1 = \"00020819-0000-0000-C000-000000000046\"\n\t\t$string2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\t\t$vb1 = { 56 00 42 00 41 00 }\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = \"VBE\"\n\n\t\t$bad1 = { 00 43 00 79 00 72 00 31 00 }\n\n\tcondition:\n\t\tany of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*)\n}\n\nrule OLE_Embedded_Jar\n{\n     meta:\n         description = \"Office document containing OLE embedded java archive\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n\t $string1 = { 4f 00 6c 00 65 00 }\n\t $string2 = { 01 00 43 00 6f 00 6d 00 70 00 4f 00 62 00 6a 00 }\n\t $java1 = \".jar\" nocase\n\t $java2 = \"META-INF/MANIFEST.MF\" nocase\n\n     condition:\n         all of ($string*) and any of ($java*)\n}\n\nrule OLEFormCipher\n{\n     meta:\n        description = \"Office document using form data reference AJAX, XML, or Java with Cipher and form submission\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $string1 = \"Content-Disposition: form-data\" nocase\n        $string2 = \"MULTIPART_BOUNDARY\" nocase\n\t$app1 = \"AJAX\" nocase\n\t$app2 = \"JAVA\" nocase\n\t$app3 = \"XML\" nocase\n\t$action1 = \"Submit\"\n\t$cipher1 = \"Cipher\" nocase\n\n     condition:\n\tany of ($office*) and any of ($string*) and any of ($app*) and all of ($action*) and all of ($cipher*)\n}\n\nrule rtf_includepicture\n{\n\tmeta:\n\t\tdescription = \"Detects rtf docs with includepicture, possibly MWI\"\n\t\tdate = \"2015-04-30\"\n\t\tauthor = \"culina@gmail.com\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$magic = \"{\\\\rt\"\n\t\t$string1 = \"INCLUDEPICTURE\"\n\t\t$string2 = \"http://\"\n\t\t$string3 = /\\.php\\?id=\\d/\n\n\tcondition:\n\t\t$magic at 0 and all of ($string*)\n}\n\nrule OLEHeapSpray\n{\n     meta:\n        description = \"Office document usin 0a heap spray with OLE\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = \"objemb\" nocase\n        $string2 = \"objdata\" nocase\n        $string3 = \"0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0\"\n\n     condition:\n        all of them\n}\n\nrule Subclassed_API\n{\n     meta:\n        description = \"Office document using obfuscated API subclassing to call DLL libraries using VBA that perform shell or Internet functions\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = /Private Declare [^\\x20\\x09]+ Function/ nocase\n        $url1 = \"download\" nocase\n        $url2 = \"shell32\" nocase\n        $url3 = \"urlmon\" nocase\n        $url4 = \"inet\" nocase\n        $url5 = \"urlopen\" nocase\n        $url6 = \"createurl\" nocase\n        $url7 = \"internetopen\" nocase\n        $url8 = \"wininet\" nocase\n        $url9 = \"internetget\" nocase\n\n     condition:\n        all of ($string*) and any of ($url*)\n}\n\nrule Macro_HTTPCall\n{\n    meta:\n        description = \"Office document contains code for HTTP communications\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $http1 = \".open\" nocase\n        $http2 = \".send\" nocase\n        $http3 = \"HTTP.Status\" nocase\n        $http4 = \"User-Agent\" nocase\n        $http5 = \"Mozilla/\"\n        $http6 = \"200 Then\"\n\n    condition:\n        any of ($office*) and 3 of ($http*)\n}\n\nrule Macro_PayloadDownload\n{\n    meta:\n        description = \"Office document contains macro code indicating payload download capabilities\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $payload_1 = \"URLDownloadToFile\"\n        $payload_2 = \"Msxml2.XMLHTTP\"\n        $payload_3 = \"Microsoft.XMLHTTP\"\n\n    condition:\n        any of ($office*) and any of ($payload*)\n}\n\nrule Macro_ExecutesEXE\n{\n    meta:\n        description = \"Office document contains code that executes an executable file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $execute1_1 = /c\\:\\\\/\n        $execute1_2 = /\\.exe/\n        $execute1_3 = \"del \"\n\n    condition:\n        any of ($office*) and all of ($execute*)\n}\n\nrule Macro_CreateFile\n{\n    meta:\n        description = \"Office document macro contains code to create a file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $create1 = \"CreateTextFile\"\n        $create2 = \"ADODB.Stream\"\n        $create3 = \"WriteText\"\n        $create4 = \"SaveToFile\"\n\n    condition:\n        any of ($office*) and any of ($create*)\n}\n\nrule ObfuscatedURL\n{\n    meta:\n        description = \"Office document contains an obfuscated URL string\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $url1 = \"687474703A2F2F\"\n        $url2 = \"Chr(68), Chr(74), Chr(74), Chr(70), Chr(3A), Chr(2F), Chr(2F)\"\n\n    condition:\n        any of ($office*) and any of ($url*)\n}\n\nrule Macro_XMLDocument\n{\n    meta:\n        description = \"XML document contains an office macro\"\n        reference = \"isc.sans.edu/diary/XML%3A+A+New+Vector+For+An+Old+Trick/19423\"\n        reference = \"www.trustwave.com/Resources/SpiderLabs-Blog/Attackers-concealing-malicious-macros-in-XML-files/?page=1&year=0&month=0\"\n\n    strings:\n\n        $xmlmacro1 = \"<?xml\"\n        $xmlmacro2 = \"<?mso-application progid=\\\"Word.Document\\\"?>\"\n        $xmlmacro3 = \"w:macrosPresent=\\\"yes\\\"\"\n\n    condition:\n        all of them\n}\n\n\n\nrule Office_VBA_OLE_Eval_Open\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, and Document_Open\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-09-06\"\n        strings:\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n                $eval1 = \"Evaluate\"\n                $open1 = \"Document_Open\"\n        condition:\n                any of ($vb*) and any of ($ole*) and any of ($eval*) and any of ($open*)\n}\n\nrule formbook_ace_archive\n{\n    meta:\n        description = \"Finds ace archives, not typically used for today's business but enjoyed by formbook malware\"\n        author = \"Sean Dalnodar\"\n        contact = \"sdalnodar@seic.com\"\n        date = \"2021-10-22\"\n        samples = \"fe8141ad1869a8ac34a4c258ce4c62d09ede71e1ea9f819c22e954aee473df4d\"\n\tsamples = \"76e745479aa92ba3a9d7aa6448aab35758ab2ef7ece2a66d4988bd0cde207771\"\n        tlp = \"green\"\n        prod = \"true\"\n    strings:\n        $a = {2a 2a 41 43 45 2a 2a} // **ACE**\n\t$b = {55 4e 52 45 47 49 53 54 45 52 45 44 20 56 45 52 53 49 4f 4e} // UNREGISTERED VERSION\n    condition:\n\t$a and $b\n\tand filesize < 1MB\n}\n\nrule AMSBypass {\n  meta:\n    description = \"Looks for powershell AntiMalwareSystem bypass method calls\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-10\"\n    samples = \"b9bf4200f9ca08904344c468e6848af7af740b8db8521184aafcbfce878fad24\"\n    samples = \"35f7add57f5349448f9db9f6d2ae22bac227d4ed398d21c9110407c6e7e7eb4d\"\n    tlp = \"green\"\n    prod = \"true\"\n    AMSI_bypass_Info = \"https://pentestlaboratories.com/2021/05/17/amsi-bypass-methods/\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {47 65 74 2D 4D 70 43 6F 6D 70 75 74 65 72 53 74 61 74 75 73} // Get-MpComputerStatus\n    $b = {41 4D 53 65 72 76 69 63 65 45 6E 61 62 6C 65 64} // AMServiceEnabled\n    $c = {52 65 66 6C 65 63 74 69 6F 6E 2E 41 73 73 65 6D 62 6C 79} // Reflection.Assembly\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule icedID_doc_20211109 {\n  meta:\n    description = \"Looks for VBA methods found in IcedID sample on 9Nov21\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-09\"\n    samples = \"4d1ba7c3d9cf95d861266734c00defbb10d3aae10aae1380029976a340a9e270\"\n    tlp = \"green\"\n    prod = \"true\"\n    twinwaveAnalysis = \"https://app.twinwave.io/shared/b2c47010-4473-446b-ae8a-debcefe50e60/3cd850201781c94e53272f83612fa46716db55eb36029d1d26c2cdb2dc7b2b89\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 77 73 63 72 69 70 74 2e 73 68 65 6c 6c 22 29 0a} // CreateObject(\"wscript.shell\")\n  condition:\n    $a and filesize <1MB\n}\nrule EFILock\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-06-08\"\n    last_update = \t\"\"\n    sample = \t\t\"c4c1e7a26c5ec2bd72d611afbe27d4a8dd88892bc0c5d7b0c1c08bff2eb04f6c\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"EFI related functions and DLL names called/exported via the exe/dll export table.  Noted in EFILock bootkits and other ransomeware/rootkit samples.\"\n    process = \t\t\"Submit the suspect file to Twinwave. Once it is complete, review the ClamAV output - if this is malicious it will have 'ClamAV detected: Win.Ransomware.Efilock'and VirusTotal will also have AV signature hits.  At this point, communicate with the end user and validate it was not openned. Also, check in Crowdstrike to ensure no boot files were modified (bootx64.efi for example).  If this is a client, attempt to purge the email via Firefly Email Remediation.  I haven't seen any IoC's associated with these EFILock samples when I've ran them through Twinwave, but you can check through Normalized Forensics > Network Connections and see... if there are any suspect websites being called drop them into an Intel ticket.\"\n    reference = \t\"https://www.bleepingcomputer.com/news/security/new-uefi-bootkit-used-to-backdoor-windows-devices-since-2012/\"\n    reference = \t\"https://eclypsium.com/2020/07/23/detecting-ransomware-and-other-threats-from-malicious-bootloaders/\"\n    reference = \t\"https://www.bleepingcomputer.com/news/security/finfisher-malware-hijacks-windows-boot-manager-with-uefi-bootkit/\"\n    reference = \t\"https://docs.microsoft.com/en-us/cpp/build/exporting-from-a-dll?view=msvc-170\"\n\n  strings:\n    $s0 = \"bootx64.efi\" // Exported DLL name\n    $s1 = \"AdapterDebugProtocol\" // Function Call exported via export table\n    $s2 = \"AppendDevicePathNode\" // Function Call exported via export table\n\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\nrule SleepyJava\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-11\"\n        description     = \"Javascript using sleep and encodeURIcomponent to encode and delay the execution of the script\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n      $string1 = \"encodeURIComponent(\"  wide ascii\n      $a1 = \"WScript\" wide ascii\n      $a2 = \"Sleep\" wide ascii\n\n    condition:\n        all of them\n}\nrule Javascript_Hatefulness_3\n{\n        meta:\n                description = \"Suspected JavaScript loader, locky\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $js1 = \"var \"\n                $js2 = \"fromCharCode(\"\n                $js3 = \"catch (\"\n                $js4 = \"\\\\u00\"\n\n\t\t$js_wordlist = /\\((\\x22[a-z]{4,32}\\x22\\x20?,\\x20?){4}/\n\n        condition:\n                all of them\n}\n\n\nrule calling_cards_socgholish : socgholish {\n  meta:\n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-21\"\n    last_updated    = \"\"\n    samples         = \"\"\n    prod            = \"true\"\n    family          = \"SocGholish\"\n    description     = \"Identifies Socgholish samples based on calling card double-base64 pattern. High probability detection.\"\n    process         = \"Analyze web and process history in EDR to determine where this file ran, what context, and check network history to determine possible secondary download locations.\"\n  strings:\n    $ = \"T2k4dktGdGVMMTByS1M4PQ==\"\n  condition:\n    any of them\n}\n\nrule runParensRun : Dridex\n{\n  meta:\n    author          = \"SEI Non-professional Reverse Engineer Team\"\n    creation_date   = \"2022-07-21\"\n    last_updated    = \"\"\n    samples         = \"e68fcd845683be392885de766f158a1c6b00cea57bdd68b5ff44d54e62400e1f\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"false\"\n    family          = \"Dridex\"\n    description     = \"This rule identifies a malicious vba script associated with the Dridex Banking Trojan designed to steal information.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - validate the file was downloaded to the user's end point and if so - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/986675\"\n    reference       = \"https://bazaar.abuse.ch/sample/e68fcd845683be392885de766f158a1c6b00cea57bdd68b5ff44d54e62400e1f/\"\n    reference       = \"https://app.twinwave.io/shared/43d63e24-25b9-47ce-90d9-b83cb2537332/b488b44245da975225c52aafe857ad0b622808216b46df5593612bcd7287a8c3\"\n  strings:\n    // ((((((((((Run((((((((((\"O\" & \"4\" & \"\"))))))))))))))))))))\n    $s0 = {28 28 28 28 28 28 28 28 28 28 52 75 6e 28 28 28 28 28 28 28 28 28 28 22 4f 22 20 26 20 22 34 22 20 26 20 22 22 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29}\n  condition:\n    all of them\n}\n\nrule doubleShortcutID : Trojan\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-18\"\n    last_updated    = \"\"\n    samples         = \"256f80e5ee14bc79da7d4598288056e90dcace8eee223fe59309e3cb79dd63db\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"gerneric trojan\"\n    description     = \"This script looks for double padded shortcut identifiers for %SystemRoot%% - a practice noted in several trojan varients.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc). Check in Crowdstrike and validate the files existance/execution and remediate as required - escalate if necessary, even if the file was deleted validate it wasn't executed because it may have modified various system variables/settings.\"\n    reference       = \"https://a1000.reversinglabs.com/92be346f83688797720bf94a9429ee997be5e726/source/20462106/\"\n    reference       = \"https://app.twinwave.io/shared/d11ee86c-0fdd-44ae-8899-cfafa8b8a56a/0514b0b2394ee2691684b67e8b97e0a8871049b4a6b57f83f70ea90613239c3b\"\n  strings:\n    $header = {4D 5A}\n    // %SystemRoot%%\n    $s0 = {25 53 79 73 74 65 6D 52 6F 6F 74 25 25  } \n  condition:\n    $header at 0 and\n    all of them\n}\n\n\nrule packOfAs : Dridex malware\n{\n  meta:\n    author          = \"SEI Yara Crew\"\n    creation_date   = \"2022-07-14\"\n    last_updated    = \"\"\n    samples         = \"447cc6b9bd16b32034490e6c85e1b8110bb23eed\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Dridex\"\n    description     = \"This rule identifies the use of ASPack, an advanced EXE packer created to compress Win32 executable files and protect them from non-professional reverse engineering\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"http://www.aspack.com\"\n    reference       = \"https://app.twinwave.io/shared/460c3732-d5cf-4914-956a-0b5accbc85d3/6fd10466618ab0669487997c7f6e1e11816562d05f73dabf4cccdc48b23dece1\"\n  strings:\n    $s0 = \"aspack\"\n  condition:\n    $s0\n}\n\nrule Sodinokibi_Ransomware : sodinokibi revil\n{\n  meta:\n    author =         \"Sean Dalnodar\"\n    creation_date =  \"2022-07-11\"\n    last_update =    \"\"\n    sample =         \"16a2903bcbae7f735f078192d5a4082e7f7225bcf4f50ee3fa6a54a51f4a2e92\"\n    greetz =         \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod =           \"true\"\n    description =    \"This rule identifies a trojan/ransomware called revil, Sodinokibi or Skeeyah - It targets Microsoft Operating Systems.  At the time of this rule's creation It is detected by Microsoft Defender and can be verified through Twinwave.\"\n    process = \"Run the file through Twinwave - if it is a valid hit you should see confirmation through the Virus Total output engine 'Win32:Sodinokibi-C Ransom'. Depending how the file was delivered check and see if it was successful or blocked.  If the delivery was successful, check Crowdstrike to validate download, installation, execution.  Once validated, escalate and/or reach out to the end user to start the remediation process.\"\n    reference =      \"https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Ransom.Win32.SODINOKIBI.A/\"\n\n  strings:\n    $s0 = { A2 42 57 E7 }\n\n  condition:\n    $s0\n}\n\n\nrule binaryObfuscation\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-05-27\"\n    last_update = \t\"\"\n    sample = \t\t\"c1b594b4e47d437a5f73891c1a7112452dfbd9243ac3e77fdb72871af430b19e\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"Remocos uses multiple layers of obfuscation.  The first layer of this obfuscation is to convert the powershell (in this sample) to binary.  The second layer of obfuscation of the powershell script is to separate the method calls.  An example of this is something like this: ('Ne' + 'w-Obj' + 'ect Syst' + 'em.IO.Mem' + 'oryS' + 'tream').  If you are working an alert you should submit the file to Twinwave to analyze.  You can also manually review the file and paste any binary code you find into CyberChef and select 'from binary' as your recipe.  The result will be the actual script/powershell - look for http calls to IoCs, or additional obfuscation as described in the above sample. If Twinwave comes back clean, and you dont find anything suspicious in your manual review you can mark this as a potential false positive and leave the ticket as monitoring.\"\n\n  strings:\n    $re0 = /=\\([0-1,]{512}/\n\n  condition:\n    all of them\n}\n\n\nrule VBStrRevURI20220506\n{\n    meta:\n        author = \t\t\"sdalnodar@seic.com\"\n        date =\t\t\t\"20220506\"\n        description =\t\t\"IoC/URL Obfuscation seen in Nanocore and Valyria VB scripts\"\n        NanocoreSample = \t\"ad727ff3937bd2292c7561969868e971be6ff623bef51b5dbb38207593114d76\"\n        ValyriaSample = \t\"f462d744360cb35ccc07c1e48aa98d6c39f7a2356bc93d04cc92c0c6c508c386\"\n        greetz = \t\t\"Thanks a1000 Reversing Labs Crew for the research assist\"\n\n    strings:\n        $s0= \"StrReverse(\" nocase\n        $re1= /\\/\\/:s?ptth/ nocase\n\n    condition:\n        all of them\n}\n\n\n\nrule remcos20220504\n{\n    meta:\n        author = \"sdalnodar@seic.com and rmoon@seic.com\"\n        date = \"2022-05-03\"\n        description =  \"Obfuscation techniques seen in remcos VB scripts\"\n        sample = \"81a08b163648f4a09fbba230dc34b1b2c7e7e979fedc23c6bf89af0f39f32cff\"\n        greetz = \"Thanks a1000 Reversing Labs Crew for the research assist\"\n\n    strings:\n        $s0=  { 49 6E 53 74 72 52 65 76 28 57 53 63 72 69 70 74 2E 53 63 72 69 70 74 46 75 6C 6C 4E 61 6D 65 } // InStrRev(WScript.ScriptFullName\n        $http = /(68|48)(74|54){2}(70|50)(73|53)?3[Aa]2[Ff]2[Ff]/\n\n    condition:\n        all of them\n}\n\nrule ramnitWriteData\n{\n    meta:\n        author = \"sdalnodar@seic.com\"\n        date = \"2022-05-03\"\n        description = \"encoded WriteData in Ramnit/WScript samples\"\n        sample = \"ba85d46860fe2c3175c15d72dae0424f483095fd7493fc4f4737c68a695b3d7d\"\n        greetz = \"Thanks a1000 Reversing Labs Crew for the research assist\"\n    strings:\n        $re1=  /\\x57\\x72\\x69\\x74\\x65\\x44\\x61\\x74\\x61\\x20\\x3D\\x20\\x22[A-F0-9]{2000,}/ // WriteData = \"Encoded Data\"\n\n    condition:\n        $re1\n}\n\n\nrule VBS_CallsAndFunctions : emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-26\"\n        modified        = \"2022-05-02\"\n        description     = \"VBS file using some calls and functions which could indicate a possible malicious activity like multiple obfuscated chr concatnations, a call function used to call a DLL by Excel 4.0 macros, ExpandEnvironmentStrings function, adodb stream and shellpath\"\n        md5sum          = \"e759c57fef989e9230cf121b31e077ec\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $string1 = \"cAll\" nocase wide ascii\n        $string2 = /&chr\\([a-z0-9\\+\\-\\/]{2,20}\\)/\n        $string3 = /&CHAR\\([a-z0-9\\+\\-\\/]{2,20}\\)/\n        $string4 = \"EXpAnDEnvironmentStRIngS\"    nocase ascii wide\n        $string5 = \"ADODB.Stream\" nocase wide ascii\n        $string6 = \"shellPath\" nocase wide ascii\n    condition:\n        2 of them\n}\n\n\n\nrule form_post_phish\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-19\"\n        last_modified   = \"2022-07-19\"\n        description     = \"HTML file containing a form action, form method and base64 encoded background picture url - this likely indicates a phish lure document\"\n        attachment      = \"Swift Remittance (MT-103)-USD-717_pdf.htm\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n        $background_url_b64 =/background(-image)?: url\\('(\\x20)?data:image\\/(png|jpeg);base64/\n        $form_post1 = /<form action=\"http(s)?:\\/\\/[^\\n]{3,100}(\\.php)?\" method=\"post\">/\tnocase\n        $form_post2 = /<form method=\"post\" action=\"http(s)?:\\/\\/[^\\n]{3,100}\\.php\">/\n        $form_post3 = \"<form action=\\\"\\\" method=\\\"post\\\" id=\\\"login_form\\\" name=\\\"login_form\\\">\"\n    condition:\n        $background_url_b64 and any of ($form_post*)\n}\n\n\n\n\nrule O365_phishing_email_body : O365\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-01\"\n        description     = \"Microsoft low memory themed phishing emails that have an embedded url in it\"\n        prod            = \"true\"\n    strings:\n        $string1 = \"Quarantine Portal\" nocase ascii\n        $string2 =  \"Low memory alert\"\tnocase ascii\n   condition:\n       all of them\n}\n\n\nrule apt_nobelium_hta_reg_dropper {\n    meta:\n        id = \"9f6a2154-c33a-4c38-9667-7479bf49c310\"\n        description = \"Matches HTA dropper file used by NOBELIUM and ISO files containing it\"\n        hash = \"054940ba8908b9e11f57ee081d1140cb\"\n        hash = \"b7ca8c46dc1bfc1d9cb9ce04a4928153\"\n        version = \"1.0\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $w = \"RegWrite(\" nocase\n        $x = { 2b 3d 20 64 6f 63 75 6d 65 6e 74 2e 67 65 74 45 6c 65 6d 65 6e 74 42 79 49 64 28 22 [0-4] 22 29 2e 69 6e 6e 65 72 48 54 4d 4c }\n        $y = \"<body onload=\" nocase\n        $z = \"hidden\" nocase\n    condition:\n        $y and\n       (3 < #z) and\n       (3 < #x) and\n       (1 < #w)\n}\n\n\n\nrule ContiCrypter {\n  meta:\n    author = \"James Quinn, Binary Defense\"\n    description = \"Signature for a crypter associated with Conti\"\n    date = \"2021-03-17\"\n    tlp = \"white\"\n    prod = \"true\"\n    addor = \"moon\"\n  strings:\n    $handoff1 = {4C 8D 05 ?? ?? ?? ?? 48 C7 44 24 28 00 00 00 00 C7 44 24 20 00 00 00 00 e8}\n    $handoff2 = {C7 ?? 24 ?? 00 00 00 00 89 44 24 ?? C7 ?? 24 ?? ?? ?? ?? ?? C7 ?? 24 ?? 00 00 00 00 }\n    $garbageLoad1 = {53 48 83 EC 20 89 CB 48 8D 0D ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 01 D8 48 83 C4 20 5B C3}\n    $garbageLoad2 = {55 89 E5 83 EC 18 C7 ?? 24 ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 03 45 08 52 C9 C3}\n  condition:\n    1 of ($handoff*) and 1 of ($garbageLoad*)\n}\n\n\nrule SUSP_Base64_Encoded_Exploit_Indicators_Dec21 {\nmeta:\n  description = \"Detects base64 encoded strings found in payloads of exploits against log4j CVE-2021-44228\"\n  author = \"Florian Roth\"\n  reference = \"https://twitter.com/Reelix/status/1469327487243071493\"\n  date = \"2021-12-10\"\n  modified = \"2021-12-13\"\n  prod = \"yes\"\nstrings:\n  /* curl -s  */\n  $sa1 = \"Y3VybCAtcy\"\n  $sa2 = \"N1cmwgLXMg\"\n  $sa3 = \"jdXJsIC1zI\"\n  /* |wget -q -O-  */\n  $sb1 = \"fHdnZXQgLXEgLU8tI\"\n  $sb2 = \"x3Z2V0IC1xIC1PLS\"\n  $sb3 = \"8d2dldCAtcSAtTy0g\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($sa*) and 1 of ($sb*)\n  and not 1 of ($fp*)\n}\n\n\n\n\n\n\nrule vbs_adwind_20211104 {\n  meta:\n    description = \"Finds adwind wshrat vbs artifacts dumping double encoded base64 payloads to tmp using CreateObject()\"\n    author = \"SEI Hunting and Afternoon HammerTime Bowling League\"\n    date = \"2021-11-04\"\n    samples = \"70239e53107a5fa493792a633c08af405e0b95baf1cacafc8ca035ad3b7c65bd\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = \"Const\"\n    $create_object = { 43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 }\n    $charset = { 2e 43 68 61 72 53 65 74 20 3d 20 22 75 73 2d 61 73 63 69 69 22 }\n  condition:\n    all of them\n}\n\n\n\n\n\nrule AnyFile_Regsvr32_Wide\n{\n    meta:\n        author = \"Nathan Fowler/Nilanjana Saha\"\n        date = \"2021-05-17\"\n        last_modified = \"2022-07-04\"\n        description = \"Regsvr32 expressed as a 0x00 separated wide or unusual expression of regsvr32 (last 3 strings); possible malicious content.\"\n\treference = \"/wiki/ursnif\"\n    strings:\n        $ = \"regsvr32\"    nocase wide\n        $ = \"%r1%vr32\"\n        $ = \"%r1%r32\"\n        $ = \"%r1%32\"\n    condition:\n        any of them\n}\n\n\n\n\nrule AnyFile_Reverse_ScriptLanguage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-29\"\n\t\tdescription = \"An ascii reversal of '<script language=' or a base64 encoding of 'ActiveXObject' which is an extreme indicator of potential obfuscation for the intent of malicious behavior\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = \"=egaugnal tpircs<\"\tnocase ascii\n\n\t\t$ = \"RpdmVYT2J\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmp\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9iam\" ascii wide // ActiveXObject\n\t\t$ = \"3RpdmVYT2JqZW\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmplY3\" ascii wide // ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAdABpAHYAZQBYAE8AYgBqAGU\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagBlAG\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAdABpAHYAZQBYAE8AYgBqAGUAYw\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQBjAH\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAZQBqAGIATwBYAGUAdgBpAHQ\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdAB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB0AG\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAZQBqAGIATwBYAGUAdgBpAHQAYw\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdABjAE\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"NlamJPWGV\" ascii wide // tcejbOXevitcA\n\t\t$ = \"VqYk9YZXZ\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml\" ascii wide // tcejbOXevitcA\n\t\t$ = \"NlamJPWGV2aX\" ascii wide // tcejbOXevitcA\n\t\t$ = \"2VqYk9YZXZpdG\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml0Y0\" ascii wide // tcejbOXevitcA\n\t\t// hex encoded string - format present in embedded RTF objects\n\t\t$ = \"416374697665584f626a656374\" ascii wide nocase // ActiveXObject\n\t\t// string reversed hex encoded string - format present in embedded RTF objects\n\t\t$ = \"7463656a624f58657669746341\" ascii wide nocase // tcejbOXevitcA\n\t\t// reversed string - frequently used obfuscation to evade tight static signatures\n\t\t$ = \"tcejbOXevitcA\" ascii wide nocase // tcejbOXevitcA\n\tcondition:\n\t\tany of them\n}\n\n\nrule HexAscii_Bad_Functions\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-05\"\n\t\tdescription = \"Malicious functions that have been encoded as hex-ascii inside of a document for the intent of obfuscation and hiding\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$ = \"4e65742e576562436c69656e74\"\tnocase ascii\t//Net.WebClient; PowerShell\n\t\t$ = \"225662736372697074\"\t\tnocase ascii\t//\"Vbscript\"\n\t\t$ = \"45786563757465476c6f62616c28\"\tnocase ascii\t//ExecuteGlobal(\n\t\t$ = \"43003a005c00660061006b006500\"\tnocase ascii\t//C:\\fake WIDE\n\n\tcondition:\n\t\t(\n\t\t\t   uint16(0) == 0x5c7b          //rtf\n\t\t\tor uint32(0) == 0x6d783f3c      //xml\n\t\t\tor uint16(0) == 0x0a0d          //asc\n\t\t\tor uint16(0) == 0x0a0a          //asc\n\t\t\tor uint16(0) == 0x2020          //asc\n\t\t\tor uint16(0) == 0x0909          //asc\n\t\t\tor uint16(0) == 0x213c          //html\n\t\t\tor uint16(0) == 0xcfd0          //office\n\t\t)\n\t\tand any of them\n}\n\n\nrule Powershell_DownloadFile\n{\n        meta:\n                description = \"Hidden Powershell download command, suspected StupidAmateurLocker\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-06-21\"\n\t\tmodified = \"2020-10-29\"\n\n        strings:\n\n                $ps1 = \"powershell\"\t\t\tnocase wide ascii\n                $ps2 = \"-ExecutionPolicy\"\t\tnocase wide ascii\n                $ps3 = \"-windowstyle\"\t\t\tnocase wide ascii\n\n                $web1 = \"System.Net.WebClient\"\t\tnocase wide ascii\n                $web2 = \"DownloadFile\"\t\t\tnocase wide ascii\n                $web3 = \"://\"\t\t\t\twide ascii //You thought I'd put a nocase here didn't you? LOL\n\n        condition:\n                all of ($ps*) and any of ($web*)\n}\n\nrule Kernel32_Skipping_n_Tripping\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2020-10-16\"\n                description = \"Potential Qakbot maldoc using Kernel32 instancing\"\n                reference = \"/wiki/qakbot\"\n        strings:\n                //0000100: 0200 0000 0800 0000 4b00 6500 7200 6e00  ........K.e.r.n.\n                //0000110: 6500 6c00 3300 3200 0000 3000 0000 1701  e.l.3.2...0.....\n                //0000120: 004b 0017 0100 6500 0817 0100 7200 0817  .K....e.....r...\n                //0000130: 0100 6e00 0817 0100 6500 0817 0100 6c00  ..n.....e.....l.\n                //0000140: 0817 0100 3300 0817 0100 3200 0815 0000  ....3.....2.....\n                $ = \"Kernel32\" nocase ascii wide\n                $ = { 4b[2-8] 65[2-8] 72[2-8] 6e[2-8] 65[2-8] 6c[2-8] 33[2-8] 32 }\n        condition:\n                all of them\n}\n\nrule Anyfile_DoubleEncoded_MZ\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Double-base64 encoded MZ, likely extremely malicious and intentionally obfuscated\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\t\t$ = \"UFBQUFBQUFBQUFBQ\"\tascii wide\n\t\t$ = \"VFZxUU\"\t\tascii wide\n\tcondition:\n\t\tall of them\n}\n\n\nrule lazarus_group_password_string {\n  meta:\n    author = \"jim at wm\"\n    date = \"2020-02-14\"\n    weight = 100\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $strings1 = \"!Q@W#E$R%T^Y&U*I(O)P\" wide ascii\n    // UTF8 and UTF16-LE string base64 encoded\n    $encstring_1 = \"hUUBXI0UkUiVUXlkmVSpJKE8\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_2 = \"FRQFcjRSRSJVReWSZVKkkoTyl\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_3 = \"IVFAVyNFJFIlVF5ZJlUqSShPKVB\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_4 = \"ACEAUQBAAFcAIwBFACQAUgAlAFQAXgBZACYAVQAqAEkAKABPACkA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_5 = \"IQBRAEAAVwAjAEUAJABSACUAVABeAFkAJgBVACoASQAoAE8AKQBQ\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_6 = \"AhAFEAQABXACMARQAkAFIAJQBUAF4AWQAmAFUAKgBJACgATwApAFAA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed UTF8 and UTF16-LE string base64 encoded\n    $encstring_7 = \"QKU8oSSpVJlleVCVSJEUjV0B\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_8 = \"ApTyhJKlUmWV5UJVIkRSNXQFE\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_9 = \"UClPKEkqVSZZXlQlUiRFI1dAUSF\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_10 = \"AFAAKQBPACgASQAqAFUAJgBZAF4AVAAlAFIAJABFACMAVwBAAFEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_11 = \"UAApAE8AKABJACoAVQAmAFkAXgBUACUAUgAkAEUAIwBXAEAAUQAh\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_12 = \"BQACkATwAoAEkAKgBVACYAWQBeAFQAJQBSACQARQAjAFcAQABRACEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    // hex encoded string - format present in embedded RTF objects\n    $encstring_13 = \"215140572345245225545e5926552a49284f2950\" ascii wide nocase // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed hex encoded string - format present in embedded RTF objects\n    $encstring_14 = \"50294f28492a5526595e54255224452357405121\" ascii wide nocase // P)O(I*U&Y^T%R$E#W@Q!\n    // base64 encoded, then hex encoded\n    $encstring_15 = \"68555542584930556b55695655586c6b6d5653704a4b4538\" ascii wide nocase // hUUBXI0UkUiVUXlkmVSpJKE8\n    $encstring_16 = \"46525146636a525352534a56526557535a564b6b6b6f54796c\" ascii wide nocase // FRQFcjRSRSJVReWSZVKkkoTyl\n    $encstring_17 = \"4956464156794e464a46496c5646355a4a6c5571535368504b5642\" ascii wide nocase // IVFAVyNFJFIlVF5ZJlUqSShPKVB\n  condition:\n    $strings1 or any of ($encstring_*)\n}\n\n//rule PDF_Encrypted_NC\n//:malpdf\n//{\n//    meta:\n//        author = \"Nathan Fowler\"\n//        date = \"2019-09-10\"\n//        description = \"256KB or less PDF with an Encrypt declaration in the last 128 bytes of the PDF object without a numeric creation date, potentially malicious PDF\"\n//        sample = \"7c1da5d57701743c6d4ad3ab46ba93b4\"\n//\n//    strings:\n//        //00000000: 2550 4446 2d31 2e35 0a25 e2e3 cfd3 0a31  %PDF-1.5.%.....1\n//        //00035c90: 3120 3020 522f 456e 6372 7970 7420 3136  1 0 R/Encrypt 16\n//        //00035d10: 2545 4f46 0a                             %EOF.\n//\n//        $enc = \"/Encrypt \"    ascii\n//\n//        //CreationDate() contains no date object, so no repeating two digits\n//        $create1 = \"CreationDate(\"\n//        $create2 = /CreationDate\\x28[^\\x29]{0,32}[0-9]{2}[^\\x29]{0,32}\\x29/\n//\n//    condition:\n//        filesize < 256KB\n//        and uint32(0) == 0x46445025\n//        and uint32(filesize-4) == 0x0a464f45\n//        and $enc in (filesize-128..filesize)\n//        and $create1 in (16..128)\n//        and not $create2 in (16..128)\n//}\n\n//rule Office_hidden_macro_40\n//{\n//        meta:\n//                description = \"Office document with hidden or very hidden macro 4.0 sheet.\"\n//                author = \"Nathan Fowler\"\n//                risk = \"high\"\n//                date = \"2018-12-14\"\n//                tlp = \"AMBER\"\n//               thanks = \"Didier Stevens\"\n//\n//        strings:\n//                $office = { d0cf 11e0 a1b1 1ae1 }\n//                $macro4 = { 8500 ?? ?? ?? ?? ?? ?? [01 - 02] 01 ?? ?? }\n//\n//        condition:\n//\t\t$office at 0 and for any i in (1..#macro4): (uint16(@macro4[i] + 2) - uint16(@macro4[i] + 10) == 8)\n//}\n\nrule hostile_vbs_lokibot {\n\tmeta:\n\t\tauthor = \"Ryan C. Moon\"\n\t\tdate = \"2018-10-01\"\n\t\tdescription = \"Identifies hostile vbs files used by lokibot malspam\"\n\t\tweight = 100\n\n\tstrings:\n\t\t// script calls with external resources\n\t\t$header = \"strLinhaComandoAddRegistro\" ascii\n\t\t$username_as_file = \"=%USERNAME%.vbs\" ascii\n\t\t$set_nothing = \" = Nothing\" ascii\n\n\tcondition:\n\t\t$header and $username_as_file and #set_nothing > 3\n}\nrule retefe_crypt1\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tsample = \"f4081aced73a37fdb4fa589925ac31f86fec83b9aed6b12d3ad06880bb880401\"\n\t\tstrings:\n\t\t\t$decode1 = {8b d? d3 ea 83 c1 08 [0-1] 88 1? [0-1] 4? [0-3] 83 f9 20 72}\n\t\t\t$decode2 = {8b c? [0-3] 83 e0 03 [0-2] 8a 04 1? 30 0? [0-3]  4? 3b}\n\t\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\tcondition:\n\t\t\tall of them\n}\n\nrule PowerShell_Dropper\n{\n\tmeta:\n\t\tdescription = \"Base64 encoded PowerShell commands used in droppers\"\n\t\tauthor = \"Nathan Fowler / Justin Borland / Ryan Moon\"\n\t\trisk = \"high\"\n\t\tdate = \"2017-10-19\"\n\n\tstrings:\n\t\t$b1 = \"IABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0\"\n\t\t$b2 = \"RABvAHcAbgBsAG8AYQBkAEYAaQBsAGUA\"\n\t\t$b3 = \"AFMAdABhAHIAdAAtAFAAcgBvAGMAZQBzAHMA\"\n\n\tcondition:\n\t\tall of them\n}\n\n\nrule Office_Powershell\n{\n        meta:\n                description = \"Office Document containing Powershell hidden/process injection\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n\t\t$ps1 = \"powershell.exe\" nocase\n\t\t$ps2 = \"-NoP\"\n\t\t$ps3 = \"-NonI\"\n\t\t$ps4 = \"Hidden\"\n\t\t$ps5 = \"-Enc\"\n\n        condition:\n                all of ($ps*)\n}\n\nrule PowerShell\n{\n     meta:\n         description = \"Office document using PowerShell to execute a file hidden with bypass policy\"\n         author = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"powershell\" nocase\n\t $string2 = /[\\x22\\x27]powershell/ nocase\n\t $string3 = /-ExecutionPolicy[\\x20\\x09]+Bypass/ nocase\n\t $string4 = /-WindowStyle[\\x20\\x09]+hidden/ nocase\n\n     condition:\n         all of them\n}\n\nrule URL_Concat\n{\n     meta:\n         description = \"Office document using string building/concatenation for URLs\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"'ht'+'tp://'\" nocase\n         $string2 = \"'ht' + 'tp://'\" nocase\n\n     condition:\n         any of them\n}\n\nrule Office_Macro_ActiveMime\n{\n     meta:\n         description = \"M$ Office document containing macro with ActiveMime \"\n         author = \"Roberto Martinez\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"Content-Location: file:///\"\n         $string2 = \"Content-Transfer-Encoding: base64\"\n         $string3 = \"Content-Type: application/x-mso\"\n         $string4 = \"QWN0aXZlTWltZQAA\"\n\n     condition:\n         all of them\n}",
        "custom": true,
        "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "updatedBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "createdAt": "2023-10-04T10:19:56.682Z",
        "updatedAt": "2023-10-04T10:19:56.683Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "d00eb71a-35a5-4957-9302-3f6ce5834f53",
          "yaraGroupRuleId": "cdfcf454-0598-4586-a460-fb6edada3de8"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/d00eb71a-35a5-4957-9302-3f6ce5834f53"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "fa14a41d-f8a4-448d-a276-c983ff0ef863",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "23529449-cc9b-46f7-88ca-efe904aafb36",
    "name": "ad_exclude",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/etc/ad_fim/%%",
      "/tmp/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [
      "/etc/ad_fim/exclude/%%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "67fd7824-22c9-4d6e-b877-427c9d18edac",
    "updatedBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "createdAt": "2019-10-20T16:07:17.404Z",
    "updatedAt": "2021-05-13T18:36:37.489Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "b05802b2-686c-4d74-ba00-28654d5e3c08",
        "seedId": "f9131274-4e42-11eb-80eb-02f45a5bcdec",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "test",
        "description": "test1",
        "rules": "rule fim_yara { strings: $a = \"hello\" condition: all of them }",
        "custom": true,
        "createdBy": "ec247039-6b51-4a5f-9cc3-6664f3d469f5",
        "updatedBy": "ec247039-6b51-4a5f-9cc3-6664f3d469f5",
        "createdAt": "2020-10-12T12:41:00.946Z",
        "updatedAt": "2020-10-12T12:41:00.946Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "fa14a41d-f8a4-448d-a276-c983ff0ef863",
          "yaraGroupRuleId": "b05802b2-686c-4d74-ba00-28654d5e3c08"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/fa14a41d-f8a4-448d-a276-c983ff0ef863"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "15e2bddc-5747-465a-877e-e81e8b4781ec",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "277d6632-ee5f-42c3-99b8-6922ce9681bf",
    "name": "diskscan1408",
    "description": "Monitors sensitives paths on filesystem",
    "grouping": null,
    "includePaths": [
      "/usr/share/applications/%.desktop",
      "/etc/nginx/%%",
      "/usr/local/nginx/%%",
      "/usr/local/etc/nginx/%%",
      "/etc/%",
      "/proc/sys/kernel/core_pattern",
      "/home/spiderman/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "createdAt": "2024-08-14T09:15:44.774Z",
    "updatedAt": "2024-08-21T05:22:29.038Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "9a084ef3-826d-44e1-aef9-963086dfcb45",
        "seedId": "e06efd1f-ea6f-4971-9ea2-d59c24949fbc",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "Disk Scan Test",
        "description": "Disk Scan Test",
        "rules": "rule uptycs_detected\n      {\n          strings:\n              $a = \"spiderman\"\n   condition:\n              all of them\n      }\n",
        "custom": true,
        "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "createdAt": "2024-08-14T08:53:58.347Z",
        "updatedAt": "2024-08-14T11:47:55.740Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "15e2bddc-5747-465a-877e-e81e8b4781ec",
          "yaraGroupRuleId": "9a084ef3-826d-44e1-aef9-963086dfcb45"
        }
      },
      {
        "id": "793db7bc-e414-4150-86e1-fb868121b7e8",
        "seedId": "c4df0f15-6c12-4a16-ac28-695730d86be4",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "malware_test",
        "description": "malware _test",
        "rules": "rule MalwareDetectionExample\n{\n    meta:\n        description = \"Detects files containing the suspicious string 'malicious_function_call'\"\n        author = \"Somnath\"\n        date = \"2024-08-21\"\n        version = \"1.0\"\n\n    strings:\n        $suspicious_string1 = \"malicious_function_call\"\n        $suspicious_string2 = { 4D 5A }\n\n    condition:\n        $suspicious_string1 or $suspicious_string2\n}\n\n",
        "custom": true,
        "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
        "createdAt": "2024-08-20T18:48:41.780Z",
        "updatedAt": "2024-08-21T07:06:05.879Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "15e2bddc-5747-465a-877e-e81e8b4781ec",
          "yaraGroupRuleId": "793db7bc-e414-4150-86e1-fb868121b7e8"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/15e2bddc-5747-465a-877e-e81e8b4781ec"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "c6f807b4-c138-45c8-882e-814c4ab174be",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "879b44ec-6254-4686-8bcb-18a331d67de2",
    "name": "dono_test",
    "description": "Test profile for FIM",
    "grouping": null,
    "includePaths": [
      "/etc/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [
      "/etc/fim/%%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "b303ff47-4d40-4093-a2ae-8a7b77a6177b",
    "updatedBy": "b303ff47-4d40-4093-a2ae-8a7b77a6177b",
    "createdAt": "2023-10-28T11:27:10.795Z",
    "updatedAt": "2023-10-28T12:45:24.899Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/c6f807b4-c138-45c8-882e-814c4ab174be"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "3a5f97db-7e62-41b5-b2a3-e91cdb5d841b",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "5b1d6ecd-40b4-4e01-a1df-e5714a5b57ac",
    "name": "ebpf_test_fim",
    "description": "Test FIM to test ebpf_file_events",
    "grouping": null,
    "includePaths": [
      "/etc/%%",
      "/tmp/%%",
      "/tmp/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "ad3f6416-9d9b-4bb5-aab8-e270ca9437b8",
    "updatedBy": "4fc46170-0b16-49b4-86d6-62f4e8e3af37",
    "createdAt": "2020-05-10T21:40:05.638Z",
    "updatedAt": "2023-01-30T18:08:50.129Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/3a5f97db-7e62-41b5-b2a3-e91cdb5d841b"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "5ec2d2b1-28c1-4fc6-936b-647d59a6cfc8",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "777ea0eb-e992-4c5e-9e50-1deada2b2efb",
    "name": "etc",
    "description": null,
    "grouping": null,
    "includePaths": [
      "/etc/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:56.421Z",
    "updatedAt": "2020-02-25T16:19:21.758Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/5ec2d2b1-28c1-4fc6-936b-647d59a6cfc8"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "74723bd9-2174-4fe1-ac17-627c6e6c334e",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "1efd16d2-393b-4ef3-aeed-21bbf82a2000",
    "name": "etc2",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/etc/localtime",
      "/etc/group",
      "/etc/passwd",
      "/etc/gshadow",
      "/etc/shadow",
      "/etc/security/opasswd",
      "/etc/hosts",
      "/etc/network/%%",
      "/etc/selinux",
      "/etc/sudoers",
      "/etc/sudoers.d/%%",
      "/etc/apt/sources.list",
      "/etc/apt/sources.list.d/%%",
      "/etc/pam.d/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "9f2cd3a0-5790-4325-99db-d602b7110f9f",
    "updatedBy": "9f2cd3a0-5790-4325-99db-d602b7110f9f",
    "createdAt": "2020-05-08T12:54:29.508Z",
    "updatedAt": "2020-05-08T12:54:29.508Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/74723bd9-2174-4fe1-ac17-627c6e6c334e"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "5af432a4-3ad3-4bcc-9e18-7a5f01316be1",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "0a799e55-8e42-40e8-8e5d-5d7ff6c11a67",
    "name": "fim_123",
    "description": "SAmple descr",
    "grouping": null,
    "includePaths": [
      "C://"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "updatedBy": "d79872f2-2682-42b9-bab3-0201d8657792",
    "createdAt": "2023-01-17T10:56:19.891Z",
    "updatedAt": "2023-01-17T10:56:35.613Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "9170fe06-a15d-4014-8390-8a055b6512bf",
        "seedId": "caa7f17c-d7a8-4332-a984-c1bcf8bf71bc",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "AmazonAccessKeyId",
        "description": "amazon access key id",
        "rules": "rule AwsAccessKeyIdRule : AWS\n{\n    meta:\n        name = \"AWS Access Key ID\"\n        author = \"github.com/pseudo-security\"\n        date = \"2020-01-01\"\n\n        /* Test Cases */\n        test_match_1 = \"AKIA00TESTAWSIDKEY00\"\n\n    strings:\n        $ = /(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}/ fullword\n\n    condition:\n        any of them\n}",
        "custom": false,
        "createdBy": "00000000-0000-0000-0000-000000000000",
        "updatedBy": "00000000-0000-0000-0000-000000000000",
        "createdAt": "2022-01-17T10:18:01.523Z",
        "updatedAt": "2022-04-09T08:14:33.357Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "5af432a4-3ad3-4bcc-9e18-7a5f01316be1",
          "yaraGroupRuleId": "9170fe06-a15d-4014-8390-8a055b6512bf"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/5af432a4-3ad3-4bcc-9e18-7a5f01316be1"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "d454533b-0e65-4a85-9fe9-0a9b6cdc95a1",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "baae2835-3853-4ebf-916f-b6e1c0b67960",
    "name": "fim_95",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2021-12-13T06:48:39.780Z",
    "updatedAt": "2021-12-13T07:32:07.847Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/d454533b-0e65-4a85-9fe9-0a9b6cdc95a1"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "d1e968f8-cbfc-4bb8-a6dd-3268864955e4",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "f8e54284-802e-4cd1-864d-2aa03c9d4676",
    "name": "fimwin",
    "description": "",
    "grouping": null,
    "includePaths": [
      "C:\\tmp\\fim"
    ],
    "includePathExtensions": null,
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "bc1d3a6b-e5cb-43b4-aa9a-077501bcc4d6",
    "updatedBy": "bc1d3a6b-e5cb-43b4-aa9a-077501bcc4d6",
    "createdAt": "2019-12-06T06:34:27.183Z",
    "updatedAt": "2019-12-06T06:34:27.183Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/d1e968f8-cbfc-4bb8-a6dd-3268864955e4"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "4efd919b-8001-4b3d-8003-27e4202162d0",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "b7011d40-0f80-476b-ae9d-082592478c6d",
    "name": "gcs",
    "description": "gcs",
    "grouping": null,
    "includePaths": [
      "gcs"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "251389ea-523f-4bc3-9944-a57798f66443",
    "updatedBy": "251389ea-523f-4bc3-9944-a57798f66443",
    "createdAt": "2024-06-04T11:54:02.989Z",
    "updatedAt": "2024-06-04T11:54:02.989Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/4efd919b-8001-4b3d-8003-27e4202162d0"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "b199bcf5-4490-4115-87fb-ec7a98ba5fbc",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a503c7fa-4f0d-423a-bc59-22cf232c3b97",
    "name": "mulesoft_all",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/usr/lib/pam/%%",
      "/bin/%%",
      "/sbin/%%",
      "/boot/%%",
      "/opt/%%",
      "/usr/%%",
      "/lib/%%",
      "/lib64/%%",
      "/root/%%",
      "/etc/passwd",
      "/etc/shadow",
      "/etc/ssh/ssh_config",
      "/etc/ssh/sshd_config",
      "/etc/rsyslog.conf",
      "/etc/rsyslog.d/%%",
      "/etc/pam.d/%%",
      "/etc/stunnel",
      "/etc/vsftpd.ftpusers",
      "/etc/vsftpd",
      "/etc/issue",
      "/etc/issue.net",
      "/etc/cups",
      "/etc/exports/%%",
      "/etc/fstab/%%",
      "/etc/group/%%",
      "/etc/gshadow/%%",
      "/etc/krb5.conf/%%",
      "/etc/krb5.keytab/%%",
      "/etc/security/%%",
      "/etc/aliases",
      "/etc/postfix",
      "/etc/hosts",
      "/etc/hosts.allow",
      "/etc/hosts.deny",
      "/etc/sysconfig",
      "/etc/sudoers",
      "/etc/skel",
      "/etc/logrotate.d",
      "/etc/resolv.conf",
      "/etc/nscd.conf",
      "/etc/securetty",
      "/etc/profile",
      "/etc/bashrc",
      "/etc/bash_completion.d",
      "/etc/login.defs",
      "/etc/zprofile",
      "/etc/zshrc",
      "/etc/zlogin",
      "/etc/zlogout",
      "/etc/profile.d",
      "/etc/X11/%%",
      "/etc/yum.conf",
      "/etc/yumex.conf",
      "/etc/yumex.profiles.conf",
      "/etc/yum/%%",
      "/etc/yum.repos.d/%%",
      "/etc/audit/%%",
      "/etc/libaudit.conf",
      "/etc/at.allow",
      "/etc/at.deny",
      "/etc/cron.allow",
      "/etc/cron.deny",
      "/etc/cron.d/%%",
      "/etc/cron.daily/%%",
      "/etc/cron.hourly/%%",
      "/etc/cron.monthly/%%",
      "/etc/cron.weekly/%%",
      "/etc/crontab",
      "/etc/inittab",
      "/etc/grub/%%",
      "/etc/rc.d",
      "/etc/ld.so.conf",
      "/etc/localtime",
      "/etc/sysctl.conf",
      "/etc/modprobe.conf",
      "/lib/x86_64-linux-gnu/libpam%",
      "/lib/x86_64-linux-gnu/security/%%",
      "/lib/security/%%",
      "/lib32/security/%%",
      "/home/%/.ssh/authorized_keys",
      "/root/.ssh/authorized_keys",
      "/var/spool/cron/crontabs/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "c157e68f-065e-45b6-b275-54c3c79fee5b",
    "updatedBy": "c157e68f-065e-45b6-b275-54c3c79fee5b",
    "createdAt": "2020-03-21T04:12:03.942Z",
    "updatedAt": "2020-03-21T04:12:03.942Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/b199bcf5-4490-4115-87fb-ec7a98ba5fbc"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "4320dd4f-9b32-4e18-8173-f7a62bb0d227",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "9651168a-670d-40a6-9f9a-ebbe876e24ad",
    "name": "new_fim_with_yara",
    "description": "new_fim_with_yara",
    "grouping": null,
    "includePaths": [
      "c:\\tmp\\%%",
      "C:\\test\\%%",
      "%SystemDrive%\\Users\\%\\Downloads\\%",
      "C:\\Users\\Somnath\\Downloads\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "bc1d3a6b-e5cb-43b4-aa9a-077501bcc4d6",
    "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "createdAt": "2023-12-01T11:28:25.953Z",
    "updatedAt": "2023-12-06T13:23:07.962Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "dc7700d8-63ed-4d3d-b7c5-33926b6a6d9a",
        "seedId": "14d57e62-5574-4311-a9f2-00eabea2e562",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "new_yara",
        "description": null,
        "rules": "rule uptycs_detected\n      {\n          strings:\n              $a = \"test_yara_single_fim_new_fim_with_yaranewnewnew\"\n   condition:\n              all of them\n      }",
        "custom": true,
        "createdBy": "bc1d3a6b-e5cb-43b4-aa9a-077501bcc4d6",
        "updatedBy": "bc1d3a6b-e5cb-43b4-aa9a-077501bcc4d6",
        "createdAt": "2023-12-01T11:43:21.690Z",
        "updatedAt": "2023-12-06T14:24:23.213Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "4320dd4f-9b32-4e18-8173-f7a62bb0d227",
          "yaraGroupRuleId": "dc7700d8-63ed-4d3d-b7c5-33926b6a6d9a"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/4320dd4f-9b32-4e18-8173-f7a62bb0d227"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "246c52e3-d188-427d-bd55-bbba98a85c10",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "e16e2edc-9b15-48c0-97bc-48086935680b",
    "name": "nijintest",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/Downloads/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "updatedBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "createdAt": "2022-03-14T06:53:58.820Z",
    "updatedAt": "2022-03-14T06:53:58.820Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/246c52e3-d188-427d-bd55-bbba98a85c10"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "d6ef41bd-5465-47a9-9312-1e076d879ab4",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "ca4c46b8-c950-4d4b-ab85-d1cda71a71e5",
    "name": "nijtest",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "updatedBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "createdAt": "2021-03-19T09:36:14.740Z",
    "updatedAt": "2021-09-06T07:35:55.395Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/d6ef41bd-5465-47a9-9312-1e076d879ab4"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "fe184e1c-c34d-443b-8272-aca4098f0988",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "8844ebf7-b2f3-4b5d-b821-558128854627",
    "name": "ntest",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "updatedBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "createdAt": "2022-01-31T13:39:18.953Z",
    "updatedAt": "2022-01-31T13:39:18.953Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/fe184e1c-c34d-443b-8272-aca4098f0988"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "938ea57f-e218-4036-9373-7813792e8172",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "402f2ad2-856c-4d76-95e1-66d0a49e40bc",
    "name": "osquery conf flags test",
    "description": "Test Modification in Osquery Flags,Configs",
    "grouping": null,
    "includePaths": [
      "/etc/osquery/osquery.conf",
      "/etc/osquery/osquery.flags"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "updatedBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "createdAt": "2024-01-17T12:49:48.126Z",
    "updatedAt": "2024-01-17T12:49:48.126Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/938ea57f-e218-4036-9373-7813792e8172"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "a693a0dc-0f77-4a39-b8c7-255f659c51a6",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "b7de06e5-4821-4462-8663-5e07379229ec",
    "name": "pats_fim_config",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/test/test.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
    "updatedBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
    "createdAt": "2023-07-12T15:01:24.102Z",
    "updatedAt": "2023-07-12T15:01:24.102Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/a693a0dc-0f77-4a39-b8c7-255f659c51a6"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "8479e749-b892-4fbf-bbeb-e6f4216a7b32",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "dd85a619-ab41-4577-9765-835a59de6943",
    "name": "pbloom-Test",
    "description": "",
    "grouping": null,
    "includePaths": [
      "C:\\paypaltest\\%%",
      "C:\\pptest2.txt"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
    "updatedBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
    "createdAt": "2023-03-16T12:52:16.841Z",
    "updatedAt": "2023-03-16T18:47:03.785Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "fe8963d0-f794-4cb5-b20f-659208624a88",
        "seedId": "305ed6ce-ad5b-43bb-8c04-45790dceb41d",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "pbloom-TestYaraProfile",
        "description": "03-16-2023",
        "rules": "rule Uptycs_Pdump\n{\n\tmeta:\n\t\tmalware_name = \"Pdump\"\n\t\tdescription = \"Pdump is a fake binary that does nothing, please ignore it. This is a YARA test.\"\n\t\tauthor = \"Patrick Inc\"\n\t\tversion = \"1\"\n\n\tstrings:\n\t\t$Pdump0 = \"pdump [options]\" ascii wide\n\n\tcondition:\n\t\tall of ($Pdump*)\n}",
        "custom": true,
        "createdBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
        "updatedBy": "a97f596b-49ee-49ee-b63f-fa8cee7080fc",
        "createdAt": "2023-03-16T18:46:00.098Z",
        "updatedAt": "2023-03-16T19:14:15.698Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "8479e749-b892-4fbf-bbeb-e6f4216a7b32",
          "yaraGroupRuleId": "fe8963d0-f794-4cb5-b20f-659208624a88"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/8479e749-b892-4fbf-bbeb-e6f4216a7b32"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "fd5f6ae4-da5e-40a4-b04a-8cfee3aa3208",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "d995b3e0-4f2e-4de3-8d9f-9acefdceceba",
    "name": "rm_fim_87",
    "description": "",
    "grouping": null,
    "includePaths": [
      "~/"
    ],
    "includePathExtensions": [],
    "excludePaths": [
      "/tmp/%%"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "a2451788-a439-4512-be77-3e1697b470f4",
    "updatedBy": "a2451788-a439-4512-be77-3e1697b470f4",
    "createdAt": "2021-08-06T15:27:44.859Z",
    "updatedAt": "2021-08-06T15:27:44.859Z",
    "signatures": [
      {
        "id": "de3e1006-036b-4e9a-ad4d-53aa9202ddef",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "seedId": "ad5b4ebd-992e-450f-9cfe-a775b06a1bf2",
        "name": "rule1",
        "description": "free software",
        "paths": [
          "/home/vagrant/gitlocal/osquery/yara/rule1.yar"
        ],
        "createdBy": "99a34322-3a0f-4abb-b016-117f476fab71",
        "updatedBy": "99a34322-3a0f-4abb-b016-117f476fab71",
        "createdAt": "2020-06-29T13:55:23.918Z",
        "updatedAt": "2020-06-29T13:55:23.918Z",
        "FilePathGroupSignature": {
          "filePathGroupId": "fd5f6ae4-da5e-40a4-b04a-8cfee3aa3208",
          "signatureId": "de3e1006-036b-4e9a-ad4d-53aa9202ddef"
        }
      }
    ],
    "yaraGroupRules": [
      {
        "id": "b05802b2-686c-4d74-ba00-28654d5e3c08",
        "seedId": "f9131274-4e42-11eb-80eb-02f45a5bcdec",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "test",
        "description": "test1",
        "rules": "rule fim_yara { strings: $a = \"hello\" condition: all of them }",
        "custom": true,
        "createdBy": "ec247039-6b51-4a5f-9cc3-6664f3d469f5",
        "updatedBy": "ec247039-6b51-4a5f-9cc3-6664f3d469f5",
        "createdAt": "2020-10-12T12:41:00.946Z",
        "updatedAt": "2020-10-12T12:41:00.946Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "fd5f6ae4-da5e-40a4-b04a-8cfee3aa3208",
          "yaraGroupRuleId": "b05802b2-686c-4d74-ba00-28654d5e3c08"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/fd5f6ae4-da5e-40a4-b04a-8cfee3aa3208"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "df58374b-6430-48f8-b1cb-34d962fac4b9",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "714296e8-851f-4917-bcee-40f3687463ca",
    "name": "sai_qa_test",
    "description": "test",
    "grouping": null,
    "includePaths": [
      "/home/abacus/fimcast/%%",
      "/tmp/filecreations/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "a4a71a45-b197-4e15-8420-d69d4eb44d09",
    "updatedBy": "a4a71a45-b197-4e15-8420-d69d4eb44d09",
    "createdAt": "2022-02-03T08:28:50.343Z",
    "updatedAt": "2022-02-03T08:28:50.343Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/df58374b-6430-48f8-b1cb-34d962fac4b9"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "e129f69c-d38c-4052-811c-68a85e46c20b",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "7704a1ee-9ed1-42db-a0c7-01575831d4c8",
    "name": "serge_test_fim",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/etc/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "4fc46170-0b16-49b4-86d6-62f4e8e3af37",
    "updatedBy": "4fc46170-0b16-49b4-86d6-62f4e8e3af37",
    "createdAt": "2020-06-18T16:28:05.255Z",
    "updatedAt": "2020-06-18T16:28:05.255Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/e129f69c-d38c-4052-811c-68a85e46c20b"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "05cf40c2-a545-459e-8764-0fff64bd66c9",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "c643f99a-3a5a-4379-829c-a425bd24ee1c",
    "name": "ssh-authorized-users",
    "description": null,
    "grouping": null,
    "includePaths": [
      "/root/.ssh/%%",
      "/home/%/.ssh/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:55.611Z",
    "updatedAt": "2020-02-25T16:19:21.791Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/05cf40c2-a545-459e-8764-0fff64bd66c9"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "e3385241-7ff7-4dba-b9b8-1fe27906573c",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "91ea46b7-f319-49f1-a480-071065fe6c00",
    "name": "system-binaries",
    "description": null,
    "grouping": null,
    "includePaths": [
      "/bin/%%",
      "/sbin/%%",
      "/boot/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:57.138Z",
    "updatedAt": "2020-02-25T16:19:21.797Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/e3385241-7ff7-4dba-b9b8-1fe27906573c"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "b7ce3408-ced8-45bc-b197-4a5c4b255e34",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "57d80754-1d7a-41ee-bb80-d420c9083013",
    "name": "test",
    "description": "",
    "grouping": null,
    "includePaths": [
      "%SystemDrive%\\Users\\%\\Downloads\\%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "47d96c15-0ec9-4cb4-8bb8-90a13fd16854",
    "updatedBy": "eaf2c1b5-6fe8-4682-aa60-e3dd1702ccd7",
    "createdAt": "2023-04-28T08:10:50.275Z",
    "updatedAt": "2023-11-30T09:26:07.796Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "aa4e433a-e9f3-4295-88d8-44977a7c9a03",
        "seedId": "af2aee5d-b9c1-4d21-8581-a7be7276f2ee",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "test99",
        "description": "test",
        "rules": "rule Uptycs_coinminer_v50\n{\n\tmeta:\n\t\tmalware_name = \"coinminer\"\n\t\tdescription = \"coinminer\"\n\t\tauthor = \"Uptycs Inc\"\n\t\tversion = \"1\"\n\n\n\tstrings:\n\t\t$coinminer_0 = \"abc\"  ascii wide\n\t\n\tcondition:\n\t\tall of ($coinminer*)\n}",
        "custom": true,
        "createdBy": "eaf2c1b5-6fe8-4682-aa60-e3dd1702ccd7",
        "updatedBy": "eaf2c1b5-6fe8-4682-aa60-e3dd1702ccd7",
        "createdAt": "2023-11-30T09:25:15.427Z",
        "updatedAt": "2023-11-30T09:25:15.428Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "b7ce3408-ced8-45bc-b197-4a5c4b255e34",
          "yaraGroupRuleId": "aa4e433a-e9f3-4295-88d8-44977a7c9a03"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/b7ce3408-ced8-45bc-b197-4a5c4b255e34"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "c290cd14-fd81-4fee-a4a1-6edb58643c21",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "d0379ec8-da9e-4079-a740-0ac29a30ce6a",
    "name": "test_description_issue",
    "description": "Yara group - SEIC",
    "grouping": null,
    "includePaths": [
      "/home/abacus/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "b0e329de-ce93-4321-908f-8574816baa44",
    "updatedBy": "b0e329de-ce93-4321-908f-8574816baa44",
    "createdAt": "2021-10-07T22:43:53.094Z",
    "updatedAt": "2021-10-07T22:46:24.758Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/c290cd14-fd81-4fee-a4a1-6edb58643c21"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "bf2722f1-5edb-460b-aae5-aac701a3850b",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "2212c038-d93c-4f39-884a-8d9d4ab6cc9e",
    "name": "test_file_policy",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/tmp/fim/%%",
      "/tmp/fim1/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": true,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "bf13de00-6e2a-43af-ac81-8ab692159ea7",
    "updatedBy": "bf13de00-6e2a-43af-ac81-8ab692159ea7",
    "createdAt": "2022-02-01T12:40:13.470Z",
    "updatedAt": "2022-02-01T13:38:14.347Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/bf2722f1-5edb-460b-aae5-aac701a3850b"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "2286757d-8284-4341-8a65-a00afb2aef78",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "77d3afee-e8f0-4af6-9a8b-b96b6a87eb10",
    "name": "testfim",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/etc/nijin/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "updatedBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "createdAt": "2021-10-28T11:06:39.794Z",
    "updatedAt": "2021-10-28T11:06:39.794Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/2286757d-8284-4341-8a65-a00afb2aef78"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "81fac26b-7867-47ab-9c06-9ca0a353bffe",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "e9a097f9-1943-409d-bee4-bc38732e7fe5",
    "name": "testnijinfim",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/abacus/quality2/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "updatedBy": "5f7fb1ee-9687-46b0-9269-a80eb375ad9d",
    "createdAt": "2024-02-10T13:10:15.461Z",
    "updatedAt": "2024-02-10T13:10:15.461Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/81fac26b-7867-47ab-9c06-9ca0a353bffe"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "9212dac5-1699-4c42-b84f-4184e3ae7ef7",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "51421272-2199-482e-9fe7-010c102f7caa",
    "name": "upt_linux_common_binary_paths_copy",
    "description": "Common path where executable programs are installed",
    "grouping": null,
    "includePaths": [
      "/usr/local/sbin/%",
      "/usr/local/bin/%",
      "/sbin/%",
      "/bin/%",
      "/usr/games/%",
      "/snap/bin/%",
      "%%/Downloads/%%",
      "/etc/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "updatedBy": "efadea69-44cd-45d0-a9fc-1844fd81e45e",
    "createdAt": "2024-10-25T17:47:33.749Z",
    "updatedAt": "2024-10-25T17:47:33.749Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/9212dac5-1699-4c42-b84f-4184e3ae7ef7"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "589cdee4-c64b-4d73-8916-f1de18c318a1",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "72ce8d42-8187-4f13-b099-a55ce98d2543",
    "name": "upt_windows_critical_file_paths_copy",
    "description": "FIM profile to monitor critical file paths for new file creation or modification",
    "grouping": null,
    "includePaths": [
      "%SystemDrive%\\%",
      "%SystemDrive%\\Windows\\%%",
      "%SystemDrive%\\Program Files\\%",
      "%SystemDrive%\\Program Files (x86)\\%",
      "%SystemDrive%\\ProgramData\\%%",
      "%SystemDrive%\\MOVEit Transfer\\wwwroot\\%",
      "C:\\%\\cfusion\\wwwroot\\%%"
    ],
    "includePathExtensions": [
      ".exe",
      ".dll",
      ".pif",
      ".application",
      ".gadget",
      ".msi",
      ".msp",
      ".com",
      ".scr",
      ".hta",
      ".cpl",
      ".msc",
      ".jar",
      ".reg",
      ".sys",
      ".bat",
      ".cmd",
      ".vb",
      ".vbs",
      ".vbe",
      ".js",
      ".jse",
      ".ws",
      ".wsf",
      ".wsc",
      ".wsh",
      ".ps1",
      ".ps1xml",
      ".ps2",
      ".ps2xml",
      ".psc1",
      ".psc2",
      ".zip",
      ".z",
      ".tar",
      ".tgz",
      ".rar",
      ".gz",
      ".bz",
      ".kirbi",
      ".tkt",
      ".7z",
      ".7zip",
      ".aspx",
      ".cfm",
      ".pcap",
      ".pcapng",
      ".cap",
      ".vpol",
      ".vcrd",
      ".go",
      ".dotm",
      ".docx",
      ".doc",
      ".html",
      ".htm",
      ".odt",
      ".pdf",
      ".xls",
      ".xlsx",
      ".ods",
      ".ppt",
      ".pptx",
      ".one",
      ".psd1",
      ".tk",
      ".chm",
      ".cab",
      ".img",
      ".pki",
      ".str",
      ".c4log",
      ".c4",
      ".list",
      ".rtf",
      ".jpeg",
      ".jpg",
      ".bmp",
      ".png",
      ".pneg",
      ".pngf",
      ".ost",
      ".pst",
      ".job",
      ".bin",
      ".tlb",
      ".pdb",
      ".tnl",
      ".py",
      ".cpp",
      ".java",
      ".ruby",
      ".vba",
      ".vbe",
      ".tlp",
      ".sdb",
      ".temp",
      ".tmp",
      ".iso",
      ".sh",
      ".elf",
      ".rb"
    ],
    "excludePaths": [
      "C:\\windows\\logs\\cbs\\**",
      "C:\\programdata\\microsoft\\diagnosis\\**"
    ],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "updatedBy": "cc39e1b5-7b17-48c7-895c-87443cb9ef30",
    "createdAt": "2024-02-29T10:37:56.756Z",
    "updatedAt": "2024-02-29T10:37:56.756Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/589cdee4-c64b-4d73-8916-f1de18c318a1"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "203c2ee0-6935-4e66-a7df-bfda6b3cbc87",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "7a097778-34c4-45e6-9885-aac74e1ef812",
    "name": "user-binaries",
    "description": null,
    "grouping": null,
    "includePaths": [
      "/usr/bin/%%",
      "/usr/sbin/%%"
    ],
    "includePathExtensions": null,
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": null,
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "00000000-0000-0000-0000-000000000000",
    "updatedBy": "00000000-0000-0000-0000-000000000000",
    "createdAt": "2019-09-23T02:27:57.915Z",
    "updatedAt": "2020-02-25T16:19:21.810Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/203c2ee0-6935-4e66-a7df-bfda6b3cbc87"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "d8c7e9e5-6243-4396-b2aa-16959edc9b8f",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "46d9fe1a-2b6b-469f-99f6-3d2c5863b0e4",
    "name": "vamshitest",
    "description": "",
    "grouping": null,
    "includePaths": [
      "/home/vamshi/qulaity/%%"
    ],
    "includePathExtensions": [],
    "excludePaths": [],
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "d211d4f8-963c-4db2-869f-cd79464838b7",
    "updatedBy": "d211d4f8-963c-4db2-869f-cd79464838b7",
    "createdAt": "2022-09-09T06:53:29.990Z",
    "updatedAt": "2022-09-09T06:53:29.990Z",
    "signatures": [],
    "yaraGroupRules": [],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/d8c7e9e5-6243-4396-b2aa-16959edc9b8f"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  },
  {
    "id": "0c2c898f-72ff-442d-b83c-a22baef42a06",
    "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
    "seedId": "a85ea618-63f9-4897-9ed0-5291aa46c632",
    "name": "yarafimtest2",
    "description": "D drive yara fim test ",
    "grouping": null,
    "includePaths": [
      "D:\\fimtest2\\dummy2\\%%"
    ],
    "includePathExtensions": [],
    "excludePaths": null,
    "custom": true,
    "checkSignature": false,
    "fileAccesses": false,
    "excludeProcessPaths": {},
    "excludeProcessNames": null,
    "priorityPaths": null,
    "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
    "updatedBy": "e6268492-1373-4726-80f7-f516fc047ac0",
    "createdAt": "2023-10-13T10:31:17.333Z",
    "updatedAt": "2023-11-01T14:06:35.745Z",
    "signatures": [],
    "yaraGroupRules": [
      {
        "id": "cdfcf454-0598-4586-a460-fb6edada3de8",
        "seedId": "20007c8f-8458-48ac-9106-089a6e599f91",
        "customerId": "049dad7d-94fc-4d78-9740-f55d81e0adfe",
        "name": "SEIFilesYara",
        "description": "SEIFilesYara",
        "rules": "import \"hash\"\t//Enabled 2018-10-15\nimport \"pe\"\t//Enabled 2019-04-01\nimport \"time\"\t//Enabled 2019-04-02\nimport \"math\"\t//Enabled 2019-04-08\n\nrule evilElf : mirai\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-08-01\"\n    last_updated    = \"\"\n    samples         = \"aba4658ecad61d6143d1cc3e1b67ff0504dc9c1ad2563ef2f41ae2ca8dbeb77c\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"mirai\"\n    description     = \"This rule identifies files packed with UPX packer as observed in Mirai .elf executables.\"\n    process         = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"https://bazaar.abuse.ch/sample/aba4658ecad61d6143d1cc3e1b67ff0504dc9c1ad2563ef2f41ae2ca8dbeb77c/\"\n    reference       = \"https://app.twinwave.io/shared/82b4b3d0-d516-4582-ab59-58c632132f24/14e2a6a9f3b9784121eba425601d1532c3e4b9649006f2b0c1cd3508fbfed25a\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1581231\"\n    reference       = \"https://upx.github.io/\"\n  strings:\n    $header = {7F 45 4C 46}\n    \n    $s0 = \"This file is packed with the UPX executable packer\"\n    \n  condition:\n    $header at 0\n    and $s0\n    and filesize < 1MB\n}\n\nrule HTML_got_big_butt_and_it_cannot_lie_base64_iso_smuggling {\n  meta: \n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-28\"\n    last_updated    = \"\"\n    samples         = \"c3eee8226f01caf0633842be4ccac4bd4a4ee76d0a5b6f7e27268b0160fbdf94, 5bb4b1dc071bd9ad34eb1edbc053d89624de0b8afcf70cbb8307ca545b32deb1, 037e7329d78491a7b000b5770d7cf4da9eadc7f38ee19fb198cfb45cd7f2add2, d45b5ce7475291c5e59a7033cc13e1e48f10c2637959deb3bfae4369db0cfdaf, 9c77c4295a6bbe390fafb801d38e21615a684dd62cbbe276076c1a1c71dedcbe, 55f4d7297800a4a4142be065e1674229cb1b120e8ade7b4ff7938affcfdb85c6\"\n    prod            = \"true\"\n    family          = \"qakbot, asyncrat\"\n    description     = \"Identifies javascript/html samples attempting to smuggle base64 encoded ISO's as contents.\"\n    process         = \"Analyze web and process history in EDR to determine where this file ran, what context, and check network history to determine possible secondary download locations. EDR should have a process tree children including powershell or wscript if successful.\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    greetz          = \"Thanks to Corsin for the Yara Scan Service go brrr..\"\n    reference       = \"https://riskmitigation.ch/yara-scan/results/e1d5c670c45b7f47282dd8f2bb62ab4cd7c31dd7f92b3ab9c7e44ebacdb7af73/\"\n  strings:\n    $var = \"var \" ascii\n    $s = \"= 'AAAAAAAAAAAAAAAAAAAAAAA\" ascii\n  condition:\n    $var and\n    uint16(@s + 4) == 0x4141 and\n    math.entropy(@s + 4,1024) == 0\n}\n\nrule vbePadding :brushloader\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-25\"\n    last_updated    = \"\"\n    samples         = \"8263e5c2644c7df40051f9acf218fcd8d744883ae68aebfccf6748ff7d1e7f40\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Brushloader\"\n    description     = \"This rule identifies excessive padding found in the referenced Brushloader and other generic trojan samples.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user and clean file off end point, open intel on any IoC's identified by TW, etc).\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1283481\"\n    reference       = \"https://app.twinwave.io/shared/f72ab6f4-f235-4d3d-a3a5-7c9d716cb7ba/d6511dc3df7e86ec2e393337fe838992458d46d28a96b1d5718c457d77b08efc\"\n  strings:\n    $padding = {3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A 3A}\n  condition:\n    #padding > 20 and\n    filesize < 1MB\n}\n\nrule js_substitution_builder : socgholish {\n  meta:\n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-19\"\n    last_updated    = \"\"\n    samples         = \"ce7e61f237d62642605249e7643d884ae911d858b2c88688ce70906cb5a3ff7f, 675058608b563ee965b594ed7d1d3f77dc7e3c7a95e09de655fec2103172816a, 132581a4352f13abea4512d496874cdcdf9e518d2bd2f789bd20a07c4ff03c3c\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    greetz          = \"Thanks to Corsin for the Yara Scan Service go brrr..\"\n    prod            = \"true\"\n    family          = \"SocGholish\"\n    description     = \"Identifies Socgholish javascript fetcher scripts using the substitution strategy to avoid detection.\"\n    process         = \"Analyze web and process history in EDR to determine where this script ran, what context, and check network history to determine possible secondary download locations.\"\n    reference       = \"https://bazaar.abuse.ch/sample/132581a4352f13abea4512d496874cdcdf9e518d2bd2f789bd20a07c4ff03c3c/#intel\"\n    reference       = \"https://riskmitigation.ch/yara-scan/results/f2d1b41df0d28faf79cf76fe290a599c9f4ca8585fc37be62abbbfaca27be387/\"\n  strings:\n    $function = \"function(\"\n    $substitution_initialization = /var [A-Za-z]{1,2}\\s?=\\s?'[A-Za-z]{1,2}';/\n    $new_this_builder = /this\\[(:?[\\x27]?[A-Za-z]{1,15}[\\x27]?\\s?\\+\\s?){1,5}[\\x27]?[A-Za-z]{1,15}[\\x27]?\\]/\n  condition:\n    filesize < 1MB and\n    #function > 5 and\n    $substitution_initialization and \n    #new_this_builder > 1\n\n}\n\nrule botnetDownloader : Mirai botnet\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-15\"\n    last_updated    = \"\"\n    samples         = \"dba43046cb5382991cf1ce3015f589843a9516252103732e27135e618545c1af\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Mirai\"\n    description     = \"This rule looks for Linux/iOS based scripts that connect to hardcoded IoCs to download a payload via curl and changes the file to an executable.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - Remediate as required (e.g. block, contact end user, open intel, etc). Check in Crowdstrike for the existence of the script and associated network calls, downloads, etc.  If found, host based remediation should be conducted - escalate.\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/1548860\"\n    reference       = \"https://app.twinwave.io/shared/10c068fb-7104-4122-b161-e7e9e89345f7/06b8e939d9c6219fb754180bd857acad20a1ad9c2f4dec8534acdd4ecc4077a8\"\n  \n  strings:\n    $header = {23 21 2F 62 69 6E 2F 62 61 73 68} // #!/bin/bash \n    $cd     = {63 64 20 2F 6D 6E 74 20 7C 7C 20 63 64 20 2F 72 6F 6F 74} // cd /mnt || cd /root\n    $curl   = {63 75 72 6C 20 2D 4F 20 68 74 74 70} // curl -O http\n    \n  condition:\n    $header at 0 and\n    all of them and\n    filesize < 10KB\n}\n\nrule biff_auto_open_label : maldoc {\n    meta:\n        description     = \"Identifies Office documents with biff8 or biff12 binary streams that contain a label with auto_open condition, common in malicious documents.\"\n\t    author          = \"Ryan C. Moon\"\n        creation_date   = \"2022-07-06\"\n\t    last_modified   = \"\"\n        greetz          = \"Thanks to the A1000 gang\"\n        greetz          = \"Thanks to Corsin for YASS\"\n        prod            = \"false\"\n        family          = \"emotet, zloader, qakbot, cobaltstrike\"\n        process         = \"Alert should be attached to an email ticket with an office document attachment or a download of an office document, load the document into Twinwave and validate maliciousness. Identify possible secondary communications urls and validate if they have been fetched by the host/user/process that generated this alert.\"\n        reference       = \"https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/d148e898-4504-4841-a793-ee85f3ea9eef\"\n    strings:\n        // label has code 0x01 , AUTO_OPEN\n        $auto_open_label_01 = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 01 }\n        // label has \"A\" like \".A.U.T.O..\"\n        $auto_open_label_A = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 41 }\n        // label has \"a\" like \".a.u.t...\"\n        $auto_open_label_a = { 18 00 1? 00 20 00 00 0? 07 00 00 00 00 00 00 00 00 00 00 61 }\n    condition:\n        any of ($auto_open_label_*)\n}\n\nrule zip_smuggling : qakbot\n{\n    meta:\n        description     = \"Catches html or js files smuggling zips in them. This is seen in Qakbot where execution of the html leads to download of a zip file.\"\n\tauthor          = \"Nilanjana Saha\"\n        creation_date   = \"2022-06-30\"\n\tlast_modified   = \"2022-08-01\"\n        updated_by      = \"\"\n        greetz          = \"Thanks to Ryan C. Moon,  Nathan Fowler, Peter Misurek for their insightful tip.\"\n        prod            = \"true\"\n        process         = \"These files would usually be caught by the JavaScript_functions filter but in case it makes it past the filter and triggers this rule, upload the html in TW. The infection flow would be html --> zip --> lnk. Grab the IOCs, add blocks to them, notify the user to delete the email (if applicable) and add them to intel.\"\n        reference       = \"https://twitter.com/ankit_anubhav/status/1541834898784194561\"\n    strings:\n\t$string = \"msSaveOrOpenBlob\"\n\t$string_hex = \"\\x6d\\x73\\x53\\x61\\x76\\x65\\x4f\\x72\\x4f\\x70\\x65\\x6e\\x42\\x6c\\x6f\\x62\"\t//hex encoded msSaveOrOpenBlob\n        $string1 = \"msSaveBlob\"\n        $b64_PK = \"UEsDB\"\t//Base64'd zip magic byte 'PK'\n        $b64_coversion = \"b64toBlob\"\t//decodes the base64'd zip\n    condition:\n        (  uint16(0) == 0x0a0d\n        or uint16(0) == 0x0a0a\n        or uint16(0) == 0x2020\n        or uint16(0) == 0x0909\n        or uint16(0) == 0x213c\n        )\n        and (any of ($string*) or all of ($b64*))\n        and filesize < 2MB\n}\n\nrule ObfuscatedJS : Ramnit rat\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-05-29\"\n    last_update = \t\"2022-07-12\"\n    sample = \t\t\"5eaf3f61484206b61e9fd32ec9e72daf55474196055c0e9e999461fac154ac32\"\n    sample =           \"422238f5634232c39d91f2989df2e56c1a4e0c0c107598db46bbc90c10175461\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"This rule identifies javascript files that are heavily obfuscated.  May indicate Ramnit or other similar banking trojan.\" \n    process =          \"Submit this .js file to Twinwave and review the results.  Enter any IoCs in an Intel ticket and add them to the Blocked by Infosec FF list.  Notify the user as necessary.  Review events in Crowdstrike and look for any DNS calls to the IoCs you identified during your Twinwave analysis, any powershell that was executed, or any external binaries that may have been loaded during the time of the incident.\"\n    reference = \t\"https://app.twinwave.io/job/1eb9dfb7-2ef8-428f-a3e9-9ea70a341c81\"\n    reference = \t\"https://bazaar.abuse.ch/sample/5eaf3f61484206b61e9fd32ec9e72daf55474196055c0e9e999461fac154ac32\"\n    reference = \t\"https://malpedia.caad.fkie.fraunhofer.de/details/ps1.sload\"\n\n  strings:\n    $re0 = /0x[0-9a-zA-Z:,]{4,8}/\n    $re1 = /'[A-Za-z0-9+\\/]{9,12}',/\n    $re2 = /\\(function\\(_0x[0-9a-zA-Z]{6}/\n    $re3 = /_0x[0-9A-Z]{5},/\n    \n    $js1 = \"var\"\n    $js2 = \"function\"\n    $js3 = \"return\"\n    $js4 = \"parseInt\"\n   \n  condition:\n    ($re2 at 0 and\n    #re0 and #re1 > 80 and\n    all of ($js*)) or \n    ($js1 at 0 and #re3 > 30)\n    and filesize < 1MB\n}\n\nrule atob_phishing_html : phishing\n{\n    meta:\n        description     = \"Potential HTML phishing using atob( with base64 encoded phishing url. If this rule triggers, there's a very high chance that the html file is a phishing lure\"\n        author          = \"Nilanjana Saha\"\n        creation_date   = \"2022-06-16\"\n        last_updated    = \"2022-07-01\"\n        greetz          = \"Thanks to A1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n        process         = \"Upload the attachment to TW. Check for extracted strings starting with 'atob(' followed by a base64 encoded value. Decode it and that would be your phishing url. In case the base64 string decodes to a benign domain like 'cdn.bootjs.org', look further for any other url or escalate the ticket to be looked upon by an IR analyst.  Phish should be able to be decoded with recipe atob_phishing_html.md\"\n        reference       = \"Dropped emails by 'Repetitive_Subject_Attachment_Quarantine' filter, Firefly ticket#202294\"\n    strings:\n        $atob1 = /var data = atob\\(\"[a-zA-Z0-9\\/+=]{3,200}\"\\)/\n\t$atob2 = \"var data = atob(\\\"\"\n        $scr = \"</script>\"\n    condition:\n        ($atob1 and $scr and filesize < 5KB)\n\tor\n\t($atob2 and $scr and filesize > 5KB and filesize < 10KB)\n}\n\nrule Blowphish_phishing_lure : phishing\n{\n    meta:\n        description     = \"Finds decimal encoded phish lures that use Blowfish values, terse lures\"\n\tauthor          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-06-27\"\n        last_updated    = \"2022-06-28\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n        process         = \"Upload the attachment to TW, identify if file contains click lure or forwards. Phish should be able to be decoded with recipe Blowphish_phishing_lure.md\"\n        reference       = \"Firefly ticket#203980\"\n        samples         = \"091e303b973591ff3ba073ed61f5ae1a97f88afb, 0bdf56465ee15c3651b808a5430c25ec5a13f2fa, 0c2b11bf2ff5fc473f18531774385a1b915d9bf8, 0f048502b7cd48d4407958c40d9f8f497a665132, 1393729787279534201b77a9cd90487865e19bbe, 2848b018efa8ea00753f4233a502162238ce5dfe, 30c04c814db94a1406fd3fcc04f732f4aecbf9ab, 346530ffd6a0929cbb4f150174b4b9b9dd5e32b1, 36f536e0d11af448eb4f2ba39dec88128213a880, 3f1dbceda06cbbf4d1dbfaca1cf5227e3ffd01df, 4e5c4f643bf52d7546113b4d49e11b64dce5d0eb, 4f9d3df22550ffe2b32cdf70a62b2cc95e83ed10, 5c684bd032a57f1b50524ae0fef7046907756b61, 6607eb0a77e8e2f0dfdbede97427a55adce87194, 72dd4d232a9726c388f407ee4e52dd5675ce42dc, 75cf077ed761a0779e498d2086439282cea1d629, 76d3e9a1c978760666e4ab3a9f95fe80598380e4, 98770e3783912cbf574700bdd41c5553baaf434e, 9f48c82cd755097704750f5441ad5099a41050af, aedd0732a030e297456def6c4c7162d5699fe98c, bef626de8451ddded348517ccdc0e004b3191a93, c0488ab46209bb2a5cb8ebba860bfa0f1c1a42c4, c4e3ae01b4c7c93f07f9abaa6a54a5d532fe259c, d8f464628705f0fdea898223706a58a483459058, dd3cada19b1c85297fac2ca14263e11ec0fb47a5, e04fc07653a8f28b594798cd642103ce75cf8059, e3bcfa3a9ce572771e5b8a7306a728f2e1a48758, e481d7fe302d47ccdbbfdf4df01ebc6279b68113, eeddad60222c67c9aa7ae8d6c4eefc8042823399, f73fc2ba1d870f4c8c4ff11da41ed718704fc39a\"\n    strings:\n\t$string1 = \"const emails\"\n\t$string2 = \"const key\"\n\t$script = \"</script\"\n\t$script_https_preamble = \"https://\"\n\t$script_http_preamble = \"http://\"\n\t$script_blowphish = \"$2y$10$\"\n    condition:\n        any of ($string*)\n\tand $script\n\tand any of ($script_*)\n\tand filesize < 1MB\n}\n\nrule pdf_rectangle_links : solarmarker {\n  meta:\n    description = \"Detects link rectangles in Solarmarker pdf lures that are commonly used as secondary malware download urls.\" \n    author          = \"SEI Powerful Princesses\"\n    creation_date   = \"2022-06-23\"\n    last_updated    = \"\"\n    samples         = \"fede7c3405b1ab38f1f4ee89b1d0410696520d9c742d95fe7b7d5d9c77d79c3a, e12a377ffaf8461775abe8be783c400eedbe00a24677afb32326c972c7b8ed9a, 09e94521062d445609cb5657634f79461ca6d63018b62b310199d76958456d2b, eb968ccab7c3e5a3deb97c85c4ca78a665a28ba8cfd3b749960a5080e0b49e4e, f3b2ea7e50ee63b8b1593e861b8375a6e5ffffe00826bf63710a73a61b6eb4e6, 7c851fba6f5ae64faa8581d52821de3defe9c43e5ef806b93927aa4cf5e6c144, 37a729d39cfb7b1d0fd6f7515e15b0287d89e9bcb92b998013e10d1c344c1d64, bcc3fc569d47ff50fdc4da25b8926447266c0196e4937d5b47f2287fbc7d9a75, 2bc6a1608de388d6e5f533205c91de031145d92d516fd018c2155246045c40cd, 6e9d8010bd141e3e3816be1cdcfec0cfce78fc5449ffcae1dd31c63e0ea935ba, 0ff32997b7c807110be229414c7b6c7bd4bc2d47beef0db097fee8ba867d63fd\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    process         = \"Expect to find a url with a google url as the referer. The pdf will contain links and buttons to the next download in the chain, as well as additional nonsense text (cut and paste from an unrelated document in most cases). See pcre: \"\n    reference       = \"Firefly Ticket #202841\"\n  strings:\n    //%PDF\n    $pdf_file_magic = { 25 50 44 46 }\n    $type = \"[<</Type\"\n    $link = \"/Link\"\n    $rectangle = \"/Rect\"\n    $uri = \"/URI (http\"\n    $attribute_seperator = \">>>><<\"\n  condition:\n    filesize > 10KB and filesize < 200KB and\n    $pdf_file_magic at 0 and\n    all of them\n}\n\nrule VBShenanigans\n{\n  meta:\n    description = \"Virtual Basic script openning up with execute method, found in multiple generic malware, trojan and Ursnif samples.  Typically followed by obfuscation.\"\n    author = \"Sean Dalnodar\"\n    date = \"20220523\"\n    sample = \"0a32b76a81539d7c1e0c822755c8c138651238a227bab3df7bf2c29090337866\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $s0 = \"execute(\"\n  condition:\n    filesize < 1MB\n    and $s0 at 0\n}\n\nrule Malicious_LinkFiles : Qakbot\n{   \n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-23\"\n        description     = \"MS link files calling out cmd and/or powershell to run a ps1 script or rundll32 to execute a DLL file. The link file would probably be dropped from a zip, img or iso file and should be a fairly good indicator of a malicious activity.\"\n\tsha256          = \"952cf03dc158d89e7d7b211f8155d3f70f40554f0351dac67b371e14bd96f12c\"\n\tnotes           = \"This rule covers the link files dropped from recent Bumblebee, emotet campaigns as well.\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\t\n        $header = {4c00 0000 0114}\n\t$pow = /powershell(\\.exe)?/\tnocase wide ascii\n\t$api1 = \"rundll32.exe\"\tnocase wide ascii\n        $api2 = \"shell32.dll\"\tnocase wide ascii\n\t$cmd = \"cmd.exe\"\tnocase wide ascii\n\t$string1 = \"regsvr32.exe\"\tnocase wide ascii\n\t$string2 = \"Base64Decode\"\tnocase wide ascii\n     condition:\n        $header at 0\n\tand ($pow or (any of ($api*)) or $cmd or all of ($string*))\n}\n\nrule ObfuscationMyAz\n{\n  meta:\n    description = \"IoC http:// Obfuscation identified in multiple file types\"\n    author = \"Sean Dalnodar\"\n    date = \"20220519\"\n    sample = \"b2da4f266238a82e4f2484642d8d2d0f9c65e1abf9c3d22d2a4fb5559a94022b\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $PDF = { 25 50 44 46 }\n    $http0 = /(68|48)\\W(74|54)\\W(74|54)\\W(70|50)\\W3A\\W2F\\W2F/\n    $http1 = /2F\\W2F\\W3A\\W(70|50)\\W(74|54)\\W(74|54)\\W(68|48)/\n    $http2 = /(68|48)(74|54)(74|54)(70|50)3A2F2F/\n    $http3 = /2F2F3A(70|50)(74|54)(74|54)(68|48)/\n    $false1 = \"us-ascii?Q?687474703A2F2F\"\n  condition:\n    filesize < 1MB\n    and not $PDF at 0\n    and not $false1\n    and any of ($http*)\n}\n\nrule Malicious_CHM_HTML_file\n{   \n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-17\"\n        description     = \"This indicates of maliciously compiled HTML file stemming from a CHM file (Microsoft’s HTML help file format). If this rule trips on a html file dropped/decompiled from a chm file, it should possibly be malware.\"\n\tmd5             = \"9eee040175e2ed57a3b9cb8409753c36\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\t\n        $string1 = \"style=\\\"visibility:hidden\\\"\"\tnocase wide ascii\n\t$string3 = \"powershell\"\tnocase ascii wide\n    condition:\n        all of them\n}\n\nrule revil_reviles_evil_wiles_spec1 : revil {\n  meta:\n      author          = \"Ryan C. Moon\"\n      date            = \"2022-05-12\"\n      description     = \"Revil cross-sectional null space indicator for pe32\"\n      spider_spec     = 1\n      prod            = \"true\"\n  strings:\n    $s0 = { 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 00 }\n    $s1 = { 00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00 00 }\n  condition:\n    uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n    and filesize > 100KB and filesize < 200KB\n    and $s0 at 902 and $s1 at 942\n}\n\nrule Reversed_PE : Formbook\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-05-06\"\n        description     = \"A reversed PE file\"\n        sha256          = \"ca557fb77212bd0b155aa1a5fb04227fff434480c31df43d8a8360c0e4cc9621\"\n        greetz          = \"Thanks to Brad Duncan for the sample and thanks to the A1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $string = \"edom SOD ni nur eb tonnac margorp sihT\" wide ascii\n        $api = \"lld.23lenrek\"\tnocase wide ascii\n     condition:\n        uint16(0) == 0x0000\n        and uint16be(filesize-2) == 0x5a4d\n        and $string\n        and $api\n}\n\nrule Customized_Executable : Hancitor\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-05-01\"\n        modified        = \"2022-05-04\"\n        description     = \"Hancitor using non-standard DOS header with customised DOS stub, zero header entropy before 0x3C and a ton of customised PE section names. If this rule triggeres, it's likely malicious.\"\n        sha256          = \"82fb76661e1ece9a665744d7864ef0c7f87822d7e2e1ae03cbf23050751d037f\"\n        greetz          = \"Thanks to Ryan Moon for the help with PE sections and thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n       $header = \"This program cannot be run in DOS mode\" wide ascii\n    condition:\n        uint16be(0) == 0x4d5a\n    and\n        (not $header in (0..128)\n         or math.entropy(17,42) == 0\n         or for any i in (0..pe.number_of_sections) :\n          (\n           (pe.sections[i].name != \".bss\")\n            and (pe.sections[i].name != \".cormeta\")\n            and (pe.sections[i].name != \".data\")\n            and (pe.sections[i].name != \".debug$F\")\n            and (pe.sections[i].name != \".debug$P\")\n            and (pe.sections[i].name != \".debug$S\")\n            and (pe.sections[i].name != \".debug$T\")\n            and (pe.sections[i].name != \".drective\")\n            and (pe.sections[i].name != \".edata\")\n            and (pe.sections[i].name != \".idata\")\n            and (pe.sections[i].name != \".idlsym\")\n            and (pe.sections[i].name != \".pdata\")\n            and (pe.sections[i].name != \".rdata\")\n            and (pe.sections[i].name != \".reloc\")\n            and (pe.sections[i].name != \".rsrc\")\n            and (pe.sections[i].name != \".sbss\")\n            and (pe.sections[i].name != \".sdata\")\n            and (pe.sections[i].name != \".srdata\")\n            and (pe.sections[i].name != \".sxdata\")\n            and (pe.sections[i].name != \".text\")\n            and (pe.sections[i].name != \".tls\")\n            and (pe.sections[i].name != \".tls$\")\n            and (pe.sections[i].name != \".vsdata\")\n            and (pe.sections[i].name != \".xdata\")\n           )\n         )\n}\n\n\nrule Powershell_Calls : Asyncrat\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-04-25\"\n        description     = \"VBS calling Powershell to download the next stage of malware\"\n        md5             = \"d2bf5c573f52b268c4e4d8aeb8d0a95d\"\n        greetz          = \"Thanks to Corsin's YAS\"\n        prod            = \"true\"\n\n    strings:\n        $string1 = {4e [0-1] 65 [0-1] 77 [0-1] 2d [0-1] 4f [0-1] 62 [0-1] 6a [0-1] 65 [0-1] 63 [0-1] 74 }\t//New-Object\n        $string2 = \"ExecutionPolicy Bypass\"\tnocase ascii wide\n        $string3 = \"PowerShell\"\tnocase ascii wide\n        $string4 = \"Sleep\"    nocase ascii wide\n\t$string5 = {57 [0-6] (73|53) [0-4] 63 [0-6] 72 [0-6] 69 [0-6] 70 [0-6] 74 [0-6] 2e}\t//W(S|s)cript.\n\n    condition:\n        2 of ($string*)\n        and filesize < 1MB\n}\n\n\nrule PE_ZeroHeaderEntropy\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Looks for no stuff (nulls) where there usually is, likely a maldoc as per a1000 results\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) == 0\n        and not pe.is_dll()\n}\n\nrule Anti_analysis_checks : EnigmaStub\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Malware using API calls used to detect analysis environment.\"\n        md5             = \"06a83ea5044358ae862a6ecc09043362\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n        $string1 = \"IsDebuggerPresent\"    ascii wide\n        $string2 = \"GetMenuBarInfo\"    ascii wide\n        $string3 = \"InitializeCriticalSectionAndSpinCount\"    nocase ascii\n        $string4 = \"CoCreateGuid\"    ascii wide\n        $string5 = \"PlaySoundA\"    ascii wide\n        $string6 = \"WNetEnumResourceA\"    ascii wide\n    condition:\n        uint16be(0) == 0x4d5a\n        and not pe.is_dll()\n        and pe.number_of_sections <=2\n        and for any i in (0..pe.number_of_sections) : ( pe.sections[0].name != \".text\" )\n        and any of them\n        and filesize <=5MB\n}\n\nrule pe_sections_irregularity : EnigmaStub\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-20\"\n        description     = \"Looks for executables where the first section is not .text which is weird because this section contains code from where execution starts and pointers to the import table.\"\n        md5             = \"06a83ea5044358ae862a6ecc09043362\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and for any i in (0..pe.number_of_sections) : ( pe.sections[0].name != \".text\" )\n}\n\nrule VBSDecrypt\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-04-01\"\n        modified        = \"2022-04-06\"\n        description     = \"This yara matches the olevba output of an xls file\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n      $string1 = \"Decrypt(\"    nocase\n      $string2 = \"vbNewLine\"    nocase\n      $string5 = \"VBA\"\n\n    condition:\n      all of ($string*)\n      and math.max(@string1,@string2) - math.min(@string1,@string2) <= 512\n}\n\nrule FakeDoc_RootEntry : Avemaria\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-04\"\n        modified        = \"2022-04-06\"\n        description     = \"Detects non office originated document through non standard stream directory entries, root entry\"\n        md5             = \"0c2d08b08915485c5dd491dd8b4ef910\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n       $string1 = {52 00 6f 00 6f 00 74 00 20 00 45 00 6e 00 74 00 72 00 79 00}\t//R.o.o.t. .E.n.t.r.y.\n       $a1 = \"Root Entry\" nocase ascii wide\n\n    condition:\n       uint16be(0) == 0xd0cf\n       and $a1 at 1024\n       and not $string1 at 1024\n}\n\nrule Malstuff_embedded_ISO : malISO\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-22\"\n        modified        = \"2022-07-28\"\n        description     = \"ISO files with very specific byte sequencing embedding MZ files, vbs scripts making http callouts or ps1 scripts. This is a highly abused technique used to deliver malware by various TAs.\"\n        samples         = \"b8ff4c51c55d882d48dfab019ff3c767, b25b99717cba92fae8493d82126a612a, 2d8c74f6c5dab9f9101e7c45435c1de5, 95b04d57695be395ed56f730104451df, 6eece9180d9b3b220f448a30863c8968, 5efea55d30cb4cb25047dba774392fb8\"\n        reference       = \"https://riskmitigation.ch/yara-scan/results/ccdca4d59a88a30a15ba4e8c6c7357a12c4ec7c410a5f3645c6fb4edb351cec2\"\n        prod            = \"true\"\n    strings:\n        $string1 = {(00|01) [3] 30 (31|33)} //.CD001 or .BEA01\n        $string2 = {(00|02) [3] 30 (31|32|33)} //.CD001 or .NSR02 or .NSR03\n        $string3 = {(00|ff) [3] 30 (31|33)} //.CD001 or .TEA01\n        $a1 = \"MZ\" wide ascii\n        $a2 = \"This program cannot be run in DOS mode\" wide ascii\n        $http = /https?:\\/\\//    nocase ascii wide\n        $pow = \"powershell.exe\"  ascii wide nocase\n     condition:\n        uint16be(0) == 0x0000\n        and math.entropy(0,117) == 0\n        and (($string1 at 32768) or ($string2 at 34816) or ($string3 at 36864))\n        and ((all of ($a*)) or $http or $pow)\n}\n\nrule ExeWithSpecificByteSequencing : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-29\"\n        description     = \"Executable with specific byte sequencing and unusual sections in pe header\"\n        sha256          = \"fc664da216f1fbdf57cff4bdb02d8f6bff8a34272964b93fd72fc53d7c1029ec\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    condition:\n        uint16be(0) == 0x4d5a\n        and uint16(1024) == 0x0000\n        and uint16(4096) != 0x0000\n        and math.entropy(1024,193) == 0\n        and pe.number_of_sections >= 5\n}\n\nrule RansomCryptoCallELF\n{\n  meta:\n    description = \"Cryptopp crypto library and file/directory access function calls found in avosLockerSamples\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-21\"\n    sample = \"d7112a1e1c68c366c05bbede9dbe782bb434231f84e5a72a724cc8345d8d9d13\"\n    sample = \"10ab76cd6d6b50d26fde5fe54e8d80fceeb744de8dbafddff470939fac6a98c4\"\n    sample = \"0cd7b6ea8857ce827180342a1c955e79c3336a6cf2000244e5cfd4279c5fc1b6\"\n    sample = \"7c935dcd672c4854495f41008120288e8e1c144089f1f06a23bd0a0f52a544b1\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $header = {45 4C 46} // ELF\n    $s0 = \"CryptoPP\" // CryptoPP C++ library\n    $s1 = \"AllocatorBase\" // cryptopp call\n    $s2 = \"ArraySink\" // cryptopp call\n    $s3 = \"BufferedTransformation\" // cryptopp call\n    $s4 = \"NameValuePairs\" // cryptopp call\n    $s5 = \"fopen\" //file access\n    $s6 = \"opendir\" //directory access\n      condition:\n    filesize < 2MB\n    and $header at 01\n    and all of ($s*)\n}\n\nrule htmlPhish\n{\n  meta:\n    description = \"HTML phishing attachment\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-17\"\n    samples = \"f8b9a985566c0bff5adcbd12ff977b826353133776f187f433201ed0fca4f1a5\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $header = \"<html\"\n    $loginButton = {24 28 27 23 73 75 62 6d 69 74 2d 62 74 6e 27 29 2e 68 74 6d} // $('#submit-btn').htm\n    $redirect = {20 77 69 6e 64 6f 77 2e 6c 6f 63 61 74 69 6f 6e 2e 72 65 70 6c 61 63 65 28 22 68 74 74 70 73} // window.location.replace(\"https\n  condition:\n    all of them\n}\n\nrule VBshell\n{\n  meta:\n    description = \"VisualBasic call to create an object and gain access to Operating System level shell. e.g. Run a cmd command from VBS\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-17\"\n    samples = \"bbe7d1a995d054268058b71454f7dba16271536217bcbc8320b31c6724bf534b\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $s1 = \"CreateObject(\\\"Wscript.Shell\\\")\" nocase ascii\n  condition:\n    filesize < 1MB\n    and $s1\n}\n\nrule pe32_binge_and_purge_entropy : wiper {\n  meta:\n    author          = \"Ryan C. Moon\"\n    date            = \"2022-03-15\"\n    description     = \"Very terse PE32 with specific 1024-byte start of execution offset. Possible Caddywiper.\"\n    samples         = \"a294620543334a721a2ae8eaaf9680a0786f4b9a216d75b55cfd28f39e9430ea\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"false\"\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n    and uint16(1024) != 0x0000\n    and uint16(0x0c) == 0xFFFF\n    and filesize < 10KB\n    and not pe.is_dll()\n    and math.entropy(576,448) == 0\n}\nrule Malicious_Javascript : Strrat\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-14\"\n        description     = \"Javascript using some commonly abused functions - a possible indicator of nefarious behaviour\"\n\tmd5             = \"810657575491c355b44256d40b5af16a\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $a1 = \"\\\\0x61\\\\0x64\\\\0x6F\\\\0x64\\\\0x62\\\\0x2E\"     //adodb.\n        $a2 = \"\\\\0x43\\\\0x68\\\\0x61\\\\0x72\\\\0x53\\\\0x65\\\\0x74\"     //ChaSet\n        $b1 = \"adodb.\" ascii nocase wide\n        $b2 = \"CharSet\" ascii nocase wide\n        $string1 =  \"join\"      nocase wide ascii\n        $string2 = \"eval\"    ascii nocase wide\n        $string3 = \"CreateObject\"    ascii nocase wide\n\n      //exclusion\n        $benign = \"res.cisco.com\"\n    condition:\n        5 of them\n        and not $benign\n}\n\nrule MZCryptoCalls\n{\n  meta:\n    description = \"MZ Executable with AEScrypter included and .Net System.Security.Cryptography Namespace function calls noted in multiple Ransomwave variations Samples\"\n    author = \"Sean Dalnodar\"\n    sample = \"979f9d1e019d9172af73428a1b3cbdff8aec8fdbe0f67cba48971a36f5001da9\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    namespace_info = \"https://docs.microsoft.com/en-us/dotnet/api/system.security.cryptography?view=net-6.0\"\n    prod = \"true\"\n  strings:\n    $a0 = \"AesCrypter\" // AEScryptor is a tool to decrypt and encrypt files created with aescrypt (see aescrypt.com).\n    $b0 = \"CryptoStreamMode\" // Specifies the mode of a cryptographic stream\n    $b1 = \"CipherMode\" // Block cipher algorithms encrypt data in block units, rather than a single byte at a time.\n    $b2 = \"ICryptoTransform\" // Defines the basic operations of cryptographic transformations.\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule MZwithSystemInfoCalls\n{\n  meta:\n    description = \"sysinfoapi.h functions that retrieve information about the current system to an application running under WOW64\"\n    author = \"sdalnodar@seic.com\"\n    sample = \"e6ba3c99d03a90b56195da9740446321c66edacfb8f1b04743bbab6a5d99d316\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod = \"true\"\n  strings:\n    $GetComputerName = {47 65 74 43 6F 6D 70 75 74 65 72 4E 61 6D 65}\n    $GetNativeSystemInfo = {47 65 74 4E 61 74 69 76 65 53 79 73 74 65 6D 49 6E 66 6F}\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule Win32InternetMethodCalls20220311\n{\n  meta:\n    description = \"DLL System Proxy and Internet Callback Method Calls.\"\n    author = \"Sean Dalnodar\"\n    sample = \"d6270e3130fb58e770cd61ea5fdeaa13f0a0205294d074a4503356977bf8aedf\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod = \"true\"\n  strings:\n    $CoSetProxyBlanket = {43 6F 53 65 74 50 72 6F 78 79 42 6C 61 6E 6B 65 74 }\n    $InternetSetStatusCallback = {49 6E 74 65 72 6E 65 74 53 65 74 53 74 61 74 75 73 43 61 6C 6C 62 61 63 6B}\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\nrule feodoTrojan20220310\n{\n  meta: description = \"Generic Trojan Sample (possibly Feodo) - System Uptime Check inside windows executable.\"\n    author = \"Sean Dalnodar\"\n    date   = \"2022-03-10\"\n    sample = \"b1be5ea484bcd2312fafb7fef39c3ad0a04baecbe0fc3be6a7233377b19fae8d\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for all the help\"\n    prod   = \"true\"\n  strings:\n    $s0 = {47 65 74 54 69 63 6B 43 6F 75 6E 74 00 00 4B 45 52 4E 45 4C 33 32 2E 64 6C 6C } // GetTickCount..KERNEL32.dll\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\n\nrule MZ_w_Hardcoded_AV_Errors\n{\n  meta:\n    description = \"Hardcoded AVerrors found in Conti and other various ransomeware samples\"\n    author = \"Sean Dalnodar\"\n    date = \"2022-03-08\"\n    samples = \"980cc58338038f70184403a98f1166b17938ebe362f373f4f366be1aaeecc923\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $ = \"alloc@std\"\n    $ = \"error@std\"\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\n\nrule Executable_with_multiple_dos_stubs : Wiper\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-14\"\n        modified        = \"2022-02-25\"\n        description     = \"Executable with multiple dos stubs which is not normal because an this means the executable has another executable embedded in it\"\n        md5             = \"382fc1a3c5225fceb672eea13f572a38\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n\t$string = {(74|54) [0-1] (68|48) [0-1] (69|49) [0-1] (73|53) [0-1] 20 [0-1] (70|50) [0-1] (72|52) [0-1] (6f|4f) [0-1] (67|47) [0-1] (72|52) [0-1] (61|41) [0-1] (6d|4d) [0-1] 20 [0-1] (63|43) [0-1] (61|41) [0-1] (6e|4e) [0-1] (6e|4e) [0-1] (6f|4f) [0-1] (74|54) [0-1] 20 [0-1] (62|42) [0-1] (65|45) [0-1] 20 [0-1] (72|52) [0-1] (75|55) [0-1] (6e|4e) [0-1] 20 [0-1] (69|49) [0-1] 20 [0-1] 44 [0-1] 4f [0-1] 53 [0-1] 20 [0-1] (6d|4d) [0-1] (6f|4f) [0-1] (64|44) [0-1] (65|45) } //This program cannot be run in DOS mode\n        $mz_header = {4d 5a}\n\n   condition:\n        uint16be(0) == 0x4d5a\n        and #mz_header > 1\n        and #string  > 1\n}\n\nrule Embedded_bat_vbs_script_in_Excel : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-03\"\n\tmodified        = \"2022-02-23\"\n        description     = \"Looks for an obfuscated excel file with either a .bat or .vbs script or both embedded in it and calls out cmd and wscript to run the script\"\n        md5             = \"57a257fac9627354ec9984974a21f5d9\"\n        sha256          = \"9fbfe65437dca5ab88f8e395f9f89941aba67776e53e441188edfdc522aad884\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $bat = \".bat\"\n\t$string1 = {(73|53) [0-6] (74|54) [0-6] (61|41) [0-6] (72|52) [0-6] (74|54) [0-6] 2f [0-6] (62|42)} //start /B\n        $string2 = \"/WAIT\"\n        $string3 = \"echo\"\n        $string4 = { (77|57) [0-4] (73|53) [0-4] (63|43) [0-4] (72|52) [0-4] (69|49) [0-4] (70|50) [0-4] (74|54) [0-4] 2e [0-4] (63|43) [0-4] (72|52) [0-4] (65|45) [0-4] (61|41) [0-4] (74|54) [0-4] (65|45) [0-4] (6f|4f) [0-4] (62|42) [0-4] (6a|4a) [0-4] (65|45) [0-4] (63|43) [0-4] (74|54) }    //wscript.createobject\n        $vbs = \".vbs\"\n        $string5 = {63 [0-6] 6d [0-6] 64[0-6] 20 [0-6] 2f [0-6] 63}    //cmd /c\n   condition:\n         uint16be(0) == 0xd0cf\n         and ($bat or $vbs)\n         and 3 of ($string*)\n}\n\n\nrule Executable_with_embedded_jpg : nanocore\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-02-16\"\n        description     = \"Executable with an embedded url to download a jpg file\"\n        md5             = \"6afd56eba5faff1a98ab0f3af510774e\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $jpg = \".jpg\"   nocase wide ascii\n        $https = \"https://\" nocase wide ascii\n        $http = \"http://\"       nocase wide ascii\n        $string = \"encoding=\\\"UTF-8\\\"\"\tnocase\n\n\n   condition:\n        uint16be(0) == 0x4d5a\n        and $jpg\n        and ($https or $http)\n        and $string\n}\n\nrule xlcall32_baza\n{\n    meta:\n\tdescription = \"XLCall32 - XLL Dropper used by BazaLoader\"\n\tauthor = \"HP Threat Research @HP_Security\"\n\tfiletype = \"XLL\"\n\tmaltype = \"Loader\"\n\tdate = \"2022-02-03\"\n\n    strings:\n\t$xlcall = \"XLCall32\"\n\t$mzheader1 = { \tC6 44 24 ?? 4D\n\t\t\tC6 44 24 ?? 5A\n\t\t\tC6 44 24 ?? 90\n\t\t\tC6 44 24 ?? 00 }\n\n\t$mzheader2 = { \tC6 84 24 ?? 00 00 00 4D\n\t\t\tC6 84 24 ?? 00 00 00 5A\n\t\t\tC6 84 24 ?? 00 00 00 90\n\t\t\tC6 84 24 ?? 00 00 00 00 }\n\n\t$dosmode1 = { \tC6 44 24 ?? 44\n\t\t\tC6 44 24 ?? 4f\n\t\t\tC6 44 24 ?? 53\n\t\t\tC6 44 24 ?? 20\n\t\t\tC6 44 24 ?? 6d\n\t\t\tC6 44 24 ?? 6f\n\t\t\tC6 44 24 ?? 64\n\t\t\tC6 44 24 ?? 65 }\n\n\t$dosmode2 = { \tC6 84 24 ?? 00 00 00 44\n\t\t\tC6 84 24 ?? 00 00 00 4f\n\t\t\tC6 84 24 ?? 00 00 00 53\n\t\t\tC6 84 24 ?? 00 00 00 20\n\t\t\tC6 84 24 ?? 00 00 00 6d\n\t\t\tC6 84 24 ?? 00 00 00 6f\n\t\t\tC6 84 24 ?? 00 00 00 64\n\t\t\tC6 84 24 ?? 00 00 00 65 }\n\n    condition:\n\tany of ($mzheader*) and any of ($dosmode*) and $xlcall\n}\n\nrule maldoc_cmd_mshta_http : Emotet\n{\n    meta:\n        author          = \"Nilanjana Saha/Ryan C. Moon\"\n        date            = \"2022-01-19\"\n        description     = \"Emotet excel spreadsheet calling cmd or mshta for stage 2 download\"\n        sample          = \"0c890caa5574298838e2463f2a9eec1f\"\n        prod            = \"true\"\n    strings:\n        $cmd_mshta_hex = {6d [0-1] 73 [0-1] 68 [0-1] 74 [0-1] 61 }\n        $cmd_hex = { 63 [0-1] 6d [0-1] 64 [0-1] 20 [0-1] 2f [0-1] 63}\n        $cmd = \"cmd /c\"\n\n   condition:\n        uint16be(0) == 0xd0cf\n        and any of ($cmd*)\n}\n\nrule adwind_202201013_xmldom : adwind\n{\n    meta:\n        author = \"SEI Competitive Bagel Bites Eating Crew\"\n        contact = \"infosec-ir@seic.com\"\n        description = \"Adwind2 abusing anonymous functions to decode encoded scripts to call eval on reconstructed vbs\"\n        sample = \"e58a24b433a523b44e80a23d1993113b965850e9260970f3fed211a3e641503c\"\n        date = \"2022-01-13\"\n        greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod = \"true\"\n        tlp = \"green\"\n    strings:\n        // microsoft.xmldom\n        $s0 = { 6d 69 63 72 6f 73 6f 66 74 2e 78 6d 6c 64 6f 6d }\n        // microsoft.xmldom but hex\n        $s1 = \"\\\\x6d\\\\x69\\\\x63\\\\x72\\\\x6f\\\\x73\\\\x6f\\\\x66\\\\x74\\\\x2e\\\\x78\\\\x6d\\\\x6c\\\\x64\\\\x6f\\\\x6d\" nocase\n        $s2 = \"function(\" ascii nocase\n        $eval = \"eval(\" ascii nocase\n\n    condition:\n        $eval and 2 of ($s*)\n}\n\nrule apt_nobelium_powsershell_reg_loader_decoded {\n    meta:\n        id = \"c8ee9c40-fa28-4b9a-98e8-88ccc4a16091\"\n        description = \"Matches the decoded version of the Powershell loader stored in the registry\"\n        version = \"1.0\"\n        creation_date = \"2021-12-07\"\n        modification_date = \"2021-12-07\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $x = \"FromBase64String((gp HKCU:\\\\\\\\SOFTWARE\\\\\\\\\"\n        $y = \"Remove-ItemProperty HKCU:\\\\\\\\SOFTWARE\\\\\\\\\"\n        $z = \"Invoke([IntPtr]::Zero)\"\n   condition:\n        filesize < 3KB and\n        $x and #y == 2 and\n        $z at (filesize-22)\n}\n\nrule apt_nobelium_html_smuggling_iso {\n    meta:\n        id = \"9bd5b626-8ea3-4607-a858-58deff18396c\"\n        version = \"1.0\"\n        description = \"Detect HTML smuggling with ISO\"\n        hash = \"b87073c34a910f20a83c04c8efbd4f43\"\n        hash = \"3d18bc4bfe1ec7b6b73a3fb39d490b64\"\n        source = \"SEKOIA\"\n        classification = \"TLP:WHITE\"\n    strings:\n        $ = \"new Blob\"\n        $ = \".click();\"\n        $ = { 28 [1-20] 2c 22 [1-20]\n                 2e 69 73 6f 22 2c 22 61\n                 70 70 6c 69 63 61 74 69\n                 6f 6e 2f 78 2d 63 64 2d\n                 69 6d 61 67 65 22 29 }\n    condition:\n        filesize > 1MB and filesize < 2MB and all of them\n\n}\n\nrule apt_nobelium_hta_in_iso {\n     meta:\n         id = \"874ab41b-5c60-4303-8776-e1c10313a401\"\n        description = \"Matches ISO file embedding HTA\"\n        hash = \"d4fdf63d88da2d59569bb621b18bf5e4\"\n        hash = \"cc08a6df151b8879a4969b2e99086b48\"\n        version = \"1.0\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $ = \"ImgBurn v2\"\n        $ = \"<hta:application\"\n    condition:\n        all of them and\n        filesize > 1MB and\n        filesize < 3MB\n\n}\n\nrule apt_nobelium_cs_loader_obfuscation {\n    meta:\n        id = \"5f21b031-3dc1-4dad-b775-6099bfcb0472\"\n        version = \"1.0\"\n        description = \"Detect obfuscated CobaltStrike loaders used by NOBELIUM\"\n        hash = \"41dd8cee47c036e7e9e92c395c5d1feb\"\n        hash = \"4365057ef0c5a9518d95d53eab5995a8\"\n        source = \"SEKOIA\"\n        classification = \"TLP:WHITE\"\n    strings:\n        $j1 = { DD 05 ?? ?? ?? ?? DD 9D }\n        $j2 = { C7 85 ?? ?? ?? ?? ?? ?? ?? ?? C7 85 }\n        $c1 = { 81 7D ?? FF 00 00 00 0F 8E ?? ?? FF FF }\n    condition:\n        pe.characteristics & pe.DLL and\n        pe.number_of_exports > 20 and\n        filesize > 300KB and filesize < 400KB and\n        #j1 > 50 and #j2 > 50 and #c1 == 2\n\n}\n\nrule remcos_SpaceInvaders_20220106 {\n  meta:\n    description = \"Profiles remcos space-separated shell exec function calls in vba scripts\"\n    author = \"SEI Assassin Squad\"\n    contact = \"infosec-ir@seic.com\"\n    date = \"2022-01-06\"\n    samples = \"b1df072eba923c472e461200b35823fde7f8e640bfb468ff5ac707369a2fa35e\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n  strings:\n    $h1 = { 68 ?? 65 ?? 6c ?? 6c ?? 45 }\n  condition:\n    uint16(0) == 0xcfd0 and any of them\n}\nrule EXPL_JNDI_Exploit_Patterns_Dec21_1 {\nmeta:\n  description = \"Detects JNDI Exploit Kit patterns in files\"\n  author = \"Florian Roth\"\n  reference = \"https://github.com/pimps/JNDI-Exploit-Kit\"\n  date = \"2021-12-12\"\n  prod = \"yes\"\nstrings:\n  $x01 = \"/Basic/Command/Base64/\"\n  $x02 = \"/Basic/ReverseShell/\"\n  $x03 = \"/Basic/TomcatMemshell\"\n  $x04 = \"/Basic/JettyMemshell\"\n  $x05 = \"/Basic/WeblogicMemshell\"\n  $x06 = \"/Basic/JBossMemshell\"\n  $x07 = \"/Basic/WebsphereMemshell\"\n  $x08 = \"/Basic/SpringMemshell\"\n  $x09 = \"/Deserialization/URLDNS/\"\n  $x10 = \"/Deserialization/CommonsCollections1/Dnslog/\"\n  $x11 = \"/Deserialization/CommonsCollections2/Command/Base64/\"\n  $x12 = \"/Deserialization/CommonsBeanutils1/ReverseShell/\"\n  $x13 = \"/Deserialization/Jre8u20/TomcatMemshell\"\n  $x14 = \"/TomcatBypass/Dnslog/\"\n  $x15 = \"/TomcatBypass/Command/\"\n  $x16 = \"/TomcatBypass/ReverseShell/\"\n  $x17 = \"/TomcatBypass/TomcatMemshell\"\n  $x18 = \"/TomcatBypass/SpringMemshell\"\n  $x19 = \"/GroovyBypass/Command/\"\n  $x20 = \"/WebsphereBypass/Upload/\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($x*) and not 1 of ($fp*)\n  and filesize < 1MB\n}\n\nrule icedIDGolfBalls {\nmeta:\n  description = \"looks for common variable/method names and padding identified in icedID samples\"\n  author = \"SEI Assassin Squad\"\n  contact = \"sdalnodar@seic.com\"\n  date = \"2021-12-16\"\n  samples = \"d9db19ea9058142903d6dd21b854cd865ce8e22aca3389c73091538c799828b5\"\n  tlp = \"green\"\n  prod = \"true\"\n  analysis = \"https://app.twinwave.io/shared/08652ddb-3de8-4aaa-ad19-a5e042b5ceb9/dc45e7b5c789ac3eb920b197fb6aaa90e06789cdd918d2df94bd2012421d190b\"\n  greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\nstrings:\n  $ = \"powLikeYou\"\n  $ = \"powLoveTube\"\n  $ = \"girlKarolLike\"\n  $ = \"karolLoveGirl\"\n  $ = \"doorYouLoad\"\n  $ = \"tubePow\"\n  $ = \"loadTubeLove\"\n  $ = \"dowGirlDoor\"\n  $ = \"dowNextLove\"\n  $ = \"doorLikePow\"\n  $ = \"likePowLike\"\ncondition:\n  any of them\n  and filesize < 1MB\n}\n\n\nrule crimson_rat_pe32_padding {\nmeta:\n  description = \"Finds crimson .net built PE32 with fake padding to make them biggies\"\n  author = \"Ryan C. Moon (@moonbas3)\"\n  team = \"SEI Dirty Dozen Hunt Group\"\n  date = \"2021-12-16\"\n  samples = \"67a225feedc5ce4adf75acb41e8b0e746e7daaec779225cd72f860a263b92a6e\"\n  tlp = \"green\"\n  prod = \"true\"\n  greetz = \"Greetz to the A1000 Reversing Labs crew\"\nstrings:\n  $padding = /\\x1c\\x00{210}/\ncondition:\n  uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550 and\n  #padding > 5\n}\n\nrule Win32_Trojan_Emotet : tc_detection malicious\n{\n    meta:\n\n        author              = \"ReversingLabs\"\n\n        source              = \"ReversingLabs\"\n        status              = \"RELEASED\"\n        sharing             = \"TLP:WHITE\"\n        category            = \"MALWARE\"\n        malware             = \"EMOTET\"\n        description         = \"Yara rule that detects Emotet trojan.\"\n\n        tc_detection_type   = \"Trojan\"\n        tc_detection_name   = \"Emotet\"\n        tc_detection_factor = 5\n\n    strings:\n\n        $decrypt_resource_v1 = {\n            55 8B EC 83 EC ?? 53 8B D9 8B C2 56 57 89 45 ?? 8B 3B 33 F8 8B C7 89 7D ?? 83 E0 ??\n            75 ?? 8D 77 ?? EB ?? 8B F7 2B F0 83 C6 ?? 8D 0C 36 E8 ?? ?? ?? ?? 8B D0 89 55 ?? 85\n            D2 74 ?? 83 65 ?? ?? 8D 43 ?? 83 65 ?? ?? C1 EE ?? 8D 0C B0 8B F2 8B D9 2B D8 83 C3\n            ?? C1 EB ?? 3B C1 0F 47 5D ?? 85 DB 74 ?? 8B 55 ?? 8B F8 8B 0F 8D 7F ?? 33 CA 0F B6\n            C1 66 89 06 8B C1 C1 E8 ?? 8D 76 ?? 0F B6 C0 66 89 46 ?? C1 E9 ?? 0F B6 C1 66 89 46\n            ?? C1 E9 ?? 0F B6 C1 66 89 46 ?? 8B 45 ?? 40 89 45 ?? 3B C3 72 ?? 8B 7D ?? 8B 55 ??\n            33 C0 66 89 04 7A 5F 5E 8B C2 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v1 = {\n            56 57 33 C0 BF ?? ?? ?? ?? 57 50 50 6A ?? 50 FF 15 ?? ?? ?? ?? BA ?? ?? ?? ?? B9 ??\n            ?? ?? ?? E8 ?? ?? ?? ?? 68 ?? ?? ?? ?? 57 8B F0 56 68 ?? ?? ?? ?? 57 FF 15 ?? ?? ??\n            ?? 83 C4 ?? 8B CE 5F 5E E9\n        }\n\n        $decrypt_resource_v2 = {\n            55 8B EC 83 EC ?? 8B 41 ?? 8B 11 33 C2 53 56 8D 71 ?? 89 55 ?? 8D 58 ?? 89 45 ?? 83\n            C6 ?? F6 C3 ?? 74 ?? 83 E3 ?? 83 C3 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? FF D0 8D 14 1B B9 ?? ?? ?? ?? 52 6A ?? 50 E8 ?? ?? ?? ?? BA ??\n            ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 89 45 ?? 85 C0 74 ?? C1 EB ?? 8B C8 57 33 C0 8D\n            14 9E 33 DB 8B FA 2B FE 83 C7 ?? C1 EF ?? 3B F2 0F 47 F8 85 FF 74 ?? 8B 16 8D 49 ??\n            33 55 ?? 8D 76 ?? 0F B6 C2 43 66 89 41 ?? 8B C2 C1 E8 ?? 0F B6 C0 66 89 41 ?? C1 EA\n            ?? 0F B6 C2 66 89 41 ?? C1 EA ?? 0F B6 C2 66 89 41 ?? 3B DF 72 ?? 8B 45 ?? 33 D2 8B\n            4D ?? 5F 66 89 14 41 8B C1 5E 5B 8B E5 5D C3\n        }\n\n        $generate_filename_v2 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? 50 6A ?? 6A ?? 51 6A ?? B9 ?? ?? ?? ??\n            E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? FF D0 85 C0 0F 88 ?? ?? ?? ?? 56\n            B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 8B 15 ?? ?? ?? ?? 8B F0 8D 85 ?? ?? ?? ?? 8D [1-5] 51\n            51 50 56 8D [1-5] 68 ?? ?? ?? ?? 51 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B\n            C8 E8 ?? ?? ?? ?? FF D0 83 C4 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 56 6A ?? 50 B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8\n            E8 ?? ?? ?? ?? FF D0 B8 ?? ?? ?? ?? 5E 8B E5 5D C3 33 C0 8B E5 5D C3\n        }\n\n        $decrypt_resource_v3 = {\n            56 8B F1 BA [6-9] B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 56 6A ?? 50 68 ?? ?? ?? ??\n            BA ?? ?? ?? ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? 59 FF D0 5E C3\n        }\n\n        $generate_filename_v3 = {\n            55 8B EC 81 EC ?? ?? ?? ?? 53 56 57 8B F1 8B FA 6A ?? 8D 4D ?? E8 ?? ?? ?? ?? BB ??\n            ?? ?? ?? 8D 8D ?? ?? ?? ?? 53 E8 ?? ?? ?? ?? 53 8D 8D ?? ?? ?? ?? E8 ?? ?? ?? ?? 83\n            C4 ?? 8D 85 ?? ?? ?? ?? BB ?? ?? ?? ?? 8B D3 56 50 BE ?? ?? ?? ?? [2-5] 8B CE E8 ??\n            ?? ?? ?? 59 FF D0 57 8D 85 ?? ?? ?? ?? 8B D3 50 [2-5] 8B CE E8 ?? ?? ?? ?? 59 FF D0\n            8D 85 ?? ?? ?? ?? C7 45 ?? ?? ?? ?? ?? 89 45 ?? BA ?? ?? ?? ?? 8D 85 ?? ?? ?? ?? B9\n            ?? ?? ?? ?? 89 45 ?? B8 ?? ?? ?? ?? 66 89 45 ?? 8D 45 ?? 50 68 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? 59 FF D0 F7 D8 5F 1B C0 5E 40 5B 8B E5 5D C3\n        }\n\n        $decrypt_resource_v4 = {\n            56 57 8B FA E8 ?? ?? ?? ?? 8B F0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ??\n            ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 8B 0D ?? ?? ?? ??\n            89 44 B9 ?? A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ??\n            8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? FF D0 8B F8 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ??\n            ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 6A ?? 57\n            FF D0 5F 5E C3\n        }\n\n        $generate_filename_snippet_v4 = {\n            A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ?? ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ??\n            ?? ?? ?? A3 ?? ?? ?? ?? 56 53 FF D0 A1 ?? ?? ?? ?? 85 C0 75 ?? B9 ?? ?? ?? ?? E8 ??\n            ?? ?? ?? BA ?? ?? ?? ?? 8B C8 E8 ?? ?? ?? ?? A3 ?? ?? ?? ?? 56 FF D0 5F 5E 33 C9 8D\n            04 43 66 89 08 5D 5B 59 C3\n        }\n\n        $decrypt_resource_snippet_v5 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89 02 8B C1 C1 E8 ?? 8D 52\n            ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89 42 ?? 0F B6 C1 66 89 42\n            ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43 5F 5E 8B C3 5B 83 C4 ??\n            C3\n        }\n\n        $decrypt_resource_snippet_v6 = {\n            C1 EE ?? 33 C0 55 33 ED 8B D3 8D 0C B7 8B F1 2B F7 83 C6 ?? C1 EE ?? 3B F9 0F 47 F0\n            85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 88 0A 8B C1 C1 E8 ?? 8D 52 ?? C1 E9 ??\n            88 42 ?? 88 4A ?? C1 E9 ?? 45 88 4A ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 5D C6 04\n            03 ?? 5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $liblzf_decompression_1 = {\n            83 EC ?? 8B 44 24 ?? 53 55 8D 2C 11 89 4C 24 ?? 8B 54 24 ?? 33 DB 03 C2 89 6C 24 ??\n            56 89 44 24 ?? 0F B6 41 ?? 8D 72 ?? 0F B6 11 C1 E2 ?? 0B D0 8D 45 ?? 89 44 24 ?? 57\n            8B F9 3B C8 0F 83 ?? ?? ?? ?? 0F B6 47 ?? C1 E2 ?? 0B D0 6B C2 ?? 8B CA C1 E9 ?? 33\n            CA 89 54 24 ?? 8B 54 24 ?? C1 E9 ?? 2B C8 8B 44 24 ?? 81 E1 ?? ?? ?? ?? 8B 2C 88 8B\n            C7 2B 44 24 ?? 03 6C 24 ?? 89 04 8A 8B C7 8B 54 24 ?? 2B C5 48 89 44 24 ?? 3D ?? ??\n            ?? ?? 0F 8D ?? ?? ?? ?? 3B EA 0F 86 ?? ?? ?? ?? 8A 45 ?? 3A 47 ?? 0F 85 ?? ?? ?? ??\n            0F B6 55 ?? 8D 4F ?? 0F B6 45 ?? 89 4C 24 ?? 0F B6 09 C1 E2 ?? 0B D0 C1 E1 ?? 0F B6\n            07 0B C8 3B D1 0F 85 ?? ?? ?? ?? 8B 44 24 ?? B9 ?? ?? ?? ?? 2B C7 3B C1 6A ?? 0F 47\n            C1 89 44 24 ?? 8D 46 ?? 5A 3B 44 24 ?? 72 ?? 33 C9 8B C6 85 DB 0F 94 C1 2B C1 83 C0\n            ?? 3B 44 24 ?? 0F 83 ?? ?? ?? ?? 8B C6 8D 4B ?? 2B C3 88 48 ?? 33 C0 85 DB 8B 5C 24\n            ?? 0F 94 C0 2B F0 83 FB ?? 0F 86 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ??\n            ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85\n            ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47\n        }\n\n        $liblzf_decompression_2 = {\n            0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 0F 85 ?? ?? ?? ?? 8A 45 ?? 6A ?? 5A 3A\n            47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45\n            ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47\n            ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ??\n            6A ?? 5A 3A 47 ?? 75 ?? 8A 45 ?? 6A ?? 5A 3A 47 ?? 75 ?? 8D 0C 3A 2B EF 42 41 3B D3\n            73 ?? 8A 04 29 3A 01 74 ?? 8B 5C 24 ?? 83 EA ?? 83 FA ?? 73 ?? 8B CB 8A C2 C1 F9 ??\n            C0 E0 ?? 02 C8 88 0E 46 EB ?? 8B C3 C1 F8 ?? 2C ?? 88 06 8D 42 ?? 88 46 ?? 83 C6 ??\n            8B 7C 24 ?? 8B 44 24 ?? 47 88 1E 03 FA 33 DB 83 C6 ?? 3B F8 72 ?? 8B 6C 24 ?? 8D 46\n            ?? 3B 44 24 ?? 76 ?? 33 C0 EB ?? 3B 74 24 ?? 73 ?? 8A 07 43 88 06 46 8B 44 24 ?? 47\n            83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B F8 73 ?? 8B 54 24 ?? E9 ?? ?? ?? ?? 8A 07 43\n            88 06 46 47 83 FB ?? 75 ?? C6 46 ?? ?? 33 DB 46 3B FD 72 ?? 8B CE 8D 53 ?? 2B CB 88\n            51 ?? 33 C9 85 DB 0F 94 C1 2B F1 2B 74 24 ?? 8B C6 5F 5E 5D 5B 83 C4 ?? C3\n        }\n\n        $decrypt_resource_snippet_v7 = {\n            C1 EE ?? 3B F9 0F 47 F0 85 F6 74 ?? 8B 5C 24 ?? 8B 0F 8D 7F ?? 33 CB 0F B6 C1 66 89\n            02 8B C1 C1 E8 ?? 8D 52 ?? 0F B6 C0 66 89 42 ?? C1 E9 ?? 0F B6 C1 C1 E9 ?? 45 66 89\n            42 ?? 0F B6 C1 66 89 42 ?? 3B EE 72 ?? 8B 5C 24 ?? 8B 44 24 ?? 33 C9 5D 66 89 0C 43\n            5F 5E 8B C3 5B 83 C4 ?? C3\n        }\n\n        $state_machine_snippet_v7 = {\n            8D 84 24 ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B\n            94 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24\n            ?? ?? ?? ?? 50 68 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 54 24 ??\n            8B 8C 24 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? 8D 94\n            24 ?? ?? ?? ?? 89 84 24 ?? ?? ?? ?? 8D 84 24 ?? ?? ?? ?? 50 E8 ?? ?? ?? ?? FF 74 24\n            ?? 8B F0 FF B4 24 ?? ?? ?? ?? 8B 8C 24 ?? ?? ?? ?? F7 DE 8B 94 24 ?? ?? ?? ?? 1B F6\n            81 E6 ?? ?? ?? ?? 81 C6 ?? ?? ?? ?? E8 ?? ?? ?? ?? FF B4 24 ?? ?? ?? ?? FF B4 24 ??\n            ?? ?? ?? 8B 94 24 ?? ?? ?? ?? 8B 4C 24 ?? E8 ?? ?? ?? ?? 83 C4 ?? E9\n        }\n\n    condition:\n        uint16(0) == 0x5A4D and\n        (\n            $decrypt_resource_v1 and\n            $generate_filename_v1\n        ) or\n        (\n            $decrypt_resource_v2 and\n            $generate_filename_v2\n        ) or\n        (\n            $decrypt_resource_v3 and\n            $generate_filename_v3\n        ) or\n        (\n            $decrypt_resource_v4 and\n            $generate_filename_snippet_v4\n        ) or\n        (\n            $decrypt_resource_snippet_v5 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v6 and\n            all of ($liblzf_decompression_*)\n        ) or\n        (\n            $decrypt_resource_snippet_v7 and\n            $state_machine_snippet_v7\n        )\n}\nrule solarmarker_pdf_downloader {\n  meta:\n    description = \"Finds Solarmarker-generated pdfs using shapes with embedded links.\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    date = \"2021-11-18\"\n    samples = \"aad015178e6b6476aaa6cef7198ee0ddf523e0c23614c9ef403bf339f220d1d4,e3d432bbeebefc5cfe1733659597a5f8b4c43d9a683b3c47f695e9e754369a54,b367e876ffa73ad3ad1d086d8f99d98cf8014bf561854b41f12eb3605878bcde,c6c6e4c5c40346511196e5ea676e866455b92d6f7b810bc9f775734e4236f79e\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n    comment = \"Solarmarker uses normal pdf generation software, so this mostly focuses on the terseness of their geometric links along with the text padding and pipe delimiters\"\n  strings:\n    $s1 = \"/Rect [\" ascii\n    $s2 = \"/URI /URI (http\" ascii\n    $s3 = { 7c [1-2] 7c 7c [1-2] 29 3e }\n    $s4 = \"/FlateDecode \" ascii\n  condition:\n    uint32be(0) == 0x25504446\n    and all of them\n    and $s2 in (0..255) and #s2 < 3\n    and $s3 in (0..512)\n}\n\nrule HTML_atob_Phishing\n{\n    meta:\n        author = \"Nathan Fowler/Jim Farnish\"\n        date = \"2021-03-02\"\n        modified = \"2021-10-19\"\n        description = \"Potential HTML phishing using document.write(atob( the values are base64 encoded or URI encoded unescape\"\n        wiki = \"/reference/O365\"\n    strings:\n        $a1 = /document\\.write\\([\\x20\\x09]*atob\\(/        ascii\n        $a2 = /document\\.write\\([\\x20\\x09]*unescape\\(/    ascii\n        $b = \"</script\"                                   nocase ascii\n    condition:\n        any of ($a*)\n        and $b\n}\n\n\nrule AdwindRAT_jRat_7Oct21\n{\n  meta:\n    description     = \"Finds jrat includes in java jar files left over from forking jrat to adwind.\"\n    author          = \"SEI Hunt Team Deadly Yara Assassination Squad\"\n    date            = \"2021-10-07\"\n    samples = \"13510f3ee14e47e2fc457215420e795f0959e33411e4fa2e8a889a3c7fb858d9\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $jrat = { 2f 4a 52 61 74 2e 63 6c 61 73 73 }\n    $jar_meta = { 4d 45 54 41 2d 49 4e 46 2f 4d 41 4e 49 46 45 53 54 2e 4d 46 }\n  condition:\n    uint16be(0) == 0x504b and\n    all of ($j*)\n}\n\nrule maldoc_sheet_eval_reverse_join_split {\n  meta:\n    description = \"Detects maldocs vba macro with eval and any reverse-joined strings or via split.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-10-06\"\n    samples = \"d6c487b1fb3d31851921b343f3d131f7cb4c0469a60484037a6fa8cfbdc29dea\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $dfm = { d0 cf 11 e0 }\n    $vba = { 56 42 41 }\n    $eval = \"eval(\"\n    $s1 = \"split(\"\n    $s2 = \"reverse(\"\n    $s3 = \"join(\"\n    $s4 = { (48|68|50|70) [0-4] (54|74) [0-4] (54|74) [0-4] (50|70|48|68) }\n  condition:\n    $dfm at 0 and $vba and $eval and 2 of ($s*)\n}\n\n\nrule DLL_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-10-05\"\n        sample          = \"From Validation portal - 0148b8275bab6e00a98da011489b6d3e84c809d99ee190a5b00840f3f63cba93\"\n        tlp             = \"green\"\n        prod            = \"true\"\n        description     = \"Some commonly used API calls by malware. Probable indicator of a malicious executable.\"\n    strings:\n       $string1 = \"URLDownloadToFileA\"\tnocase ascii wide\n       $string2 = \"RegCreateKeyExW\"\tnocase ascii wide\n       $string3 = \"VirtualAlloc\"\tnocase ascii wide\n       $string4 = \"KERNEL32.dll\"    nocase ascii wide\n    condition:\n        uint16be(0) == 0x4d5a\n        and 2 of ($string*)\n}\n\nrule Too_Many_3s\n{\n    meta:\n       author          = \"Nilanjana Saha/Ryan Moon\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an insanely big chunk of numbers in a PE file with excess of 3's in it. If this rule triggers, it's indicative of maliciousness\"\n    strings:\n       $string1 = \"This program must be run under Win32\"        nocase ascii wide\n       $string5 = { 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? 3? }\n       $string6 = { 25 25 25 }\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n        and #string5 > 20\n}\n\nrule Win32_Header\n{\n    meta:\n       author          = \"Nilanjana Saha\"\n       date            = \"2021-09-24\"\n       sample          = \"546b3cc7640a0c3105f6674fd9e2debf\"\n       tlp             = \"green\"\n       prod            = \"true\"\n       description     = \"Contains an unusual STUB, it's definitely malicious if this rule triggers\"\n       greetz          = \"Thanks to Reversing labs for access to A1000\"\n    strings:\n        $string1 = \"This program must be run under Win32\"    nocase ascii wide\n        $a1 = \"URL.DLL\" nocase ascii wide\n        $a2 = \"InetIsOffline\" nocase ascii wide\n        $api = \"kernel32.dll\"    nocase ascii wide\n     condition:\n        uint16be(0) == 0x4d5a\n        and $string1\n        and all of ($a*)\n        and #api>=2\n}\n\nrule base64_powershell_builder {\n  meta:\n    description = \"Identifies hostile .ps files that use other files to write/read base64 to create pe32.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2021-09-23\"\n    samples = \"7a30581de07bad69f3f05af56edeccdfae83a025532daad559d30a381ce1f6d3\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"SEI Hunting crew: Sean Dalnodar, Nilanjana Saha, and Jerry Zepp\"\n  strings:\n    $s0 = \"@echo off\"\n    $r0 = /echo [a-zA-Z0-9\\x2f\\x2b]{76}={0,2}>{1,2}[a-zA-Z0-9]{1,64}/\n  condition:\n    filesize < 1MB and $s0 at 0 and #r0 > 50\n}\n\nrule PE_MZ_AdminPDB\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"Medium\"\n\t\tdate = \"2021-08-10\"\n\t\tdescription = \"PE/MZ compiled with the presence of an administrator PDB\"\n\tstrings:\n\t\t$ = /C:(\\\\Users)?\\\\Admin[^\\x00]{2,256}\\.pdb/\tnocase ascii\n\tcondition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule HTML_HighAscii_Phish\n:maldoc\n{\n    meta:\n                description = \"Potential HTML phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-06-04\"\n\t\tmodified = \"2021-08-09\"\n\t\treference = \"/wiki/get2\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\"\n\n    strings:\n                $a1 = \"<script\"\tnocase ascii\n\t\t$a2 = \"<frame\"\tnocase ascii\n\t\t$a3 = \"<iframe\"\tnocase ascii\n\t\t$a4 = \"<embed\"\tnocase ascii\n\t\t$a5 = \"<object\" nocase ascii\n\n\t\t//Catch-all attempts\n\t\t$a6 = /function[^a-z]/ nocase ascii\n\t\t$a7 = \".html\"\tnocase ascii\n\n\t\t$exclude1 = \".topleft     { background: #1B4992 url(https://www.privatepost.net/template/v4/images/red_tl.gif); }\"\n                $exclude2 = \"function numberFormatPerc(_number) {\"\n\t\t$exclude3 = \"<!-- Generated by Aspose.Words for .NET \"\n\t\t$exclude4 = \"http://schemas.microsoft.com/office/word/\"\n\t\t$exclude5 = \"http://schemas.microsoft.com/office/excel/\"\n\t\t$exclude6 = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><sst xmlns=\\\"http://schemas.openxmlformats.org/\"\n\t\t$exclude7 = { efbb bf3c 3f78 6d6c }\n\t\t$exclude8 = \"document.getElementById(\\\"btnFDTypeAutoFill\\\").click();\"\n\n    condition:\n                uint16be(0) == 0xefbb\n                and any of ($a*)\n\t\tand not any of ($exclude*)\n}\n\nrule PDF_Google_Docs_Renderer\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-07-01\"\n\t\tdescription = \"Google Docs Renderer with ancient PDF 1.4 specification and BOM (Byte Order Mark) leading the title, possible malspam or phishing.\"\n\t\treference = \"Firefly Ticket #145122\"\n\tcondition:\n\t\tuint32be(0) == 0x25504446\t//%PDF-1.4\n\t\tand uint32be(4) == 0x2d312e34\t//%PDF-1.4\n\n\t\t//BOM in the title\n\t\tand ( for any i in (0..64) : (\n\t\t\t    uint32be(i) == 0x3c3c2f54\n\t\t\tand uint32be(i+4) == 0x69746c65\n\t\t\tand uint32be(i+8) == 0x203c4645\n\t\t\tand uint32be(i+12) == 0x46463030\n\t\t\t)\n\t\t)\n\t\t//Skia/PDF m93 Google Docs Renderer\n\t\tand ( for any i in (0..512) : (\n\t\t\t    uint32be(i) == 0x28536b69\n\t\t\tand uint32be(i+4) == 0x612f5044\n\t\t\tand uint16be(i+8) == 0x4620\n\t\t\tand uint32be(i+14) == 0x476f6f67\n\t\t\tand uint32be(i+18) == 0x6c652044\n\t\t\t)\n\t\t)\n}\n\nrule PE_Darkside_Ransomware\n:malexe\n{\n        meta:\n                description = \"PE/MZ with byte code matching Darkside Ransomware subroutine\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2021-06-18\"\n                hash = \"7f97f85a6f340e199666b5f2d141c08ff4eccca5\"\n    strings:\n            // matching calling sequence\n            // sub add mov test add jz mov push movzx cmp jna\n            //  mov add mov pop movzx cmp jn\n\n            $ = {   81 EC AC 00 00 00 8B 45 0C F7 45 14 00 04 00 00\n                    74 02 8B 00 50 0F B6 C0 83 F8 0F 76 05 B8 0F 00\n                    00 00 89 45 F0 58 0F B6 C4 83 F8 11 76 05 }\n\n    condition:\n            uint16(0) == 0x5a4d\n            and\n            all of them\n\n}\n\nrule PE_MZ_SleepingWithTheEnemy\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-17\"\n        description = \"PE/MZ containing the Sleep or Kernel32 API call but written backwards.\"\n        reference = \"/wiki/raccoon\"\n        sample = \"ecf14e5b521fd83697915fe02ab94585de651c21917d9f949d3c13b3beecac20\"\n    strings:\n        $ = /\\x00peels\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x00\\x00p\\x00e\\x00e\\x00l\\x00s\\x00\\x00/\t\t\t\tnocase ascii\n        $ = /23lenrek\\x00/\t\t\t\t\t\t\t\t\t\tnocase ascii\n        $ = /\\x002\\x003\\x00l\\x00e\\x00n\\x00r\\x00e\\x00k\\x00/\t\tnocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and any of them\n}\n\n\nrule PE_MZ_NonsenseCertIssuerOrSubject\n{\n\tmeta:\n\t\tauthor \t\t= \"Nathan Fowler\"\n\t\tdate \t\t= \"2021-06-16\"\n\t\tdescription \t= \"PE/MZ with an invalid certificate issuer or subject\"\n\t\treference \t= \"/wiki/agenttesla\"\n\t\tsample \t\t= \"1af4b28e44d75b4fe50ae509798a626c\"\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t        and (\n\t\t\t      pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t\t   or pe.signatures[pe.number_of_signatures - 1].subject matches /CN=[^\\x2e]+\\/O=[^\\x2e]+\\/OU=[^\\x2e]+\\/emailAddress=[^\\x2e@]+/\n\t\t)\n}\n\nrule PE_MZ_AveMaria_Stealer\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2021-06-16\"\n\t\tdescription\t= \"Presence of Ave Maria Stealer or Vitali Kremez as a folder path wide\"\n\t\treference\t= \"/wiki/avemaria\"\n\n\tstrings:\n\t\t$ = { \t4100 7600 6500 5f00 4d00 6100 7200 6900\n\t\t\t6100 2000 5300 7400 6500 6100 6c00 6500\n\t\t} //Ave_Maria Stealer\n\n\t\t$ = {\t5c00 5600 6900 7400 6100 6c00 6900 2000\n\t\t\t4b00 7200 6500 6d00 6500 7a00 5c00\n\t\t} // Vitali Kremez\n\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand any of them\n}\n\nrule AveMaria_API_calls\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2021-06-13\"\n\t\tDescription\t= \"Matches AveMaria and other malware samples using a string of API calls\"\n\t\tReference \t= \"/wiki/AveMaria\"\n\t\tsha256\t\t= \"ac14bf805d1796f1463b5f27b79496dab9a07f5bd50336628bcfbdc2dc996acf\"\n\t\tTLP\t\t= \"Amber\"\n\t\tGreetz\t\t= \"Thanks to Reversing Labs, to A1000 gang\"\n    strings:\n    \t$a1 = \"bcrypt.dll\"    nocase ascii\n    \t$a2 = \"urlmon.dll\"    nocase ascii\n   \t$a3 = \"ws2_32.dll\"    nocase ascii\n    \t$a4 = \"netapi32.dll\"    nocase ascii\n    \t$a5 = \"crypt32.dll\"    nocase ascii\n    \t$a6 = \"psapi.dll\"    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n    \tand all of them\n}\n\nrule qakbot_20210607 {\n  meta:\n    description = \"Identifies Qakbot samples via commonly used API sets\"\n    author=\"Vikalp Tripathi\"\n    reference=\"https://www.malware-traffic-analysis.net/2021/06/04/2021-06-03-thru-04-Qakbot-malware-and-artifacts.zip\"\n    date = \"2021-07-06\"\n    tlp = \"amber\"\n    prod = true\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n  strings:\n    $a1=\"ConvertSidToStringSid\" nocase ascii\n    $a2=\"GetUserProfileDirectory\" nocase ascii\n    $a3=\"LookupAccountName\" nocase ascii\n    $a4=\"RegDeleteValue\" nocase ascii\n    $a5=\"RegLoadKey\" nocase ascii\n    $a6=\"RegSetValueEx\" nocase ascii\n    $a7=\"RegDeleteValue\" nocase ascii\n\n\n    $b3=\"GDI32.dll\" nocase ascii\n    $b4=\"ole32.dll\" nocase ascii\n    $b5=\"OLEAUT32.dll\" nocase ascii\n    $b6=\"stager_1.dll\" nocase ascii\n\n    $c6=\"ADVAPI32.dll\" nocase ascii\n    $c1=\"GetSidSubAuthorityCount\" nocase ascii\n    $c2=\"OpenThreadToken\" nocase ascii\n    $c3=\"GetSidSubAuthority\" nocase ascii\n    $c4=\"OpenProcessToken\" nocase ascii\n    $c5=\"LookupAccountSidW\" nocase ascii\n\n    $d4=\"KERNEL32.dll\" nocase ascii\n    $d1=\"lstrcpynW\" nocase ascii\n    $d2=\"lstrcmpiA\" nocase ascii\n    $d3=\"lstrcatW\" nocase ascii\n  condition:\n    uint16(0)==0x5a4d\n    and 4 of ($a*)\n    and any of ($b*)\n    and 3 of ($c*)\n    and 2 of ($d*)\n}\n\nrule malware_via_api {\n  meta:\n    description = \"Identifies miscellaneous malware via certificate API library calls and matching library includes\"\n    author=\"Vikalp Tripathi\"\n    sample=\"bdb26c5860ed5657c9b29eae09079c950159ccc2ebc56f2dffc190d90e33efa4\"\n    date = \"2021-07-06\"\n    greetz = \"Thanks to Reversing Labs to A1000 gang.\"\n    tlp = \"amber\"\n    prod = \"true\"\n  strings:\n    //libraries\n    $a1=\"crypt32.dll\" nocase ascii\n    $a2=\"rpcrt4.dll\" nocase ascii\n    $a3=\"user32.dll\" nocase ascii\n    $a4=\"shlwapi.dll\" nocase ascii\n    $a5=\"kernel32.dll\" nocase ascii\n    //imports\n    $b1=\"RpcServerListen\" nocase ascii\n    $b2=\"NdrServerCall2\" nocase ascii\n    $b3=\"I_RpcBindingIsClientLocal\" nocase ascii\n    $b4=\"UuidFromStringA\" nocase ascii\n    $b14=\"VirtualProtect\" nocase ascii\n    $b5=\"VirtualProtectEx\" nocase ascii\n    $b6=\"VirtualAlloc\" nocase ascii\n    $b7=\"CertFreeCertificateChain\" nocase ascii\n    $b8=\"CryptImportPublicKeyInfo\" nocase ascii\n    $b9=\"CertFreeCertificateContext\" nocase ascii\n    $b10=\"CertCreateCertificateContext\" nocase ascii\n    $b11=\"CertFindCertificateInStore\" nocase ascii\n    $b12=\"CertEnumCertificatesInStore\" nocase ascii\n    $b13=\"CryptDecodeObject\"\n  condition:\n    uint16(0)==0x5a4d\n    and 3 of ($a*)\n    and 8 of ($b*)\n}\n\nrule PE_MZ_TooManySections\n{\n        meta:\n                author = \"sysopfb/Nathan Fowler\"\n                date = \"2021-06-02\"\n                description = \"PE/MZ with an insane number of PE sections\"\n        condition:\n                uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n                and pe.number_of_sections >= 50\n}\n\n\nrule PE_MZ_PrintableChrs1024\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2021-06-01\"\n        description = \"A long series of printable characters at offset 1024 decimal\"\n        reference = \"/wiki/icedid\"\n        thanks = \"sysopfb\"\n    condition:\n        uint16be(0) == 0x4d5a and uint32(uint32(0x3C)) == 0x00004550\n        and (for all i in (1024..4096) : (uint8(i) != 0x00))\n        and (for all i in (0656..1023) : (uint8(i) == 0x00))\n}\n\nrule MZ_Hancitor_DLL_File\n{\n\tmeta:\n\t\tauthor          = \"Nilanjana Saha\"\n\t\tdate            = \"2021-05-31\"\n\t\tdescription     = \"Hancitor Dll leading to cobalt strike and ficker stealer infection\"\n\t\treference       = \"https://www.malware-traffic-analysis.net/2021/05/24/index2.html\"\n\tstrings:\n\t\t$ = {\n\t\t\t4300 c741 0401 0000 00b8 0200 0000 e950\n\t\t\t0200 00c7 4104 0200 0000 b805 0000 00e9\n\t\t\t3f02 0000 c741 0403 0000 00b8 0800 0000\n\t\t\te92e 0200 00c7 4104 0400 0000 b80b 0000\n\t\t\t00e9 1d02 0000 c741 0405 0000 00b8 0e00\n\t\t\t0000 e90c 0200 00c7 4104 0600 0000 b811\n\t\t\t0000 00e9 fb01 0000 c741 0407 0000 00b8\n\t\t\t1400 0000 e9ea 0100 00c7 4104 0800 0000\n\t\t\tb816 0000 00e9 d901 0000 c741 0409 0000\n\t\t\t00b8 1800 0000 e9c8 0100 00c7 4104 0a00\n\t\t\t0000 b81a 0000 00e9 b701 0000 c741 040b\n\t\t\t0000 00b8 1c00 0000 e9a6 0100 00c7 4104\n\t\t\t0c00 0000 b81e 0000 00e9 9501 0000 c741\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule IceID_from_stolenimage {\n\tmeta:\n\t\tauthor =\"Vikalp Tripathi\"\n\t\treference = \"https://www.malware-traffic-analysis.net/2021/05/27/index.html\"\n\n\tstrings:\n\t\t//$b1=\"PluginInit\" nocase\n\t\t$b2=\"shell32.dll\" nocase ascii\n\t\t$a1=\"CreateFileW\" nocase ascii\n\t\t$a2=\"CommandLineToArgvW\" nocase ascii\n\t\t$a5=\"DeleteCriticalSection\" nocase ascii\n\t\t$a6=\"GetFinalPathNameByHandleW\" nocase ascii\n\t\t$a3=\"CloseHandle\" nocase ascii\n\t\t$a4=\"EnterCriticalSection\" nocase ascii\n\t\t//$b5=\"Update\" nocase ascii\n\t\t$b6= \"kernel32.dll\" nocase ascii\n\n\tcondition:\n\t\tuint16(0)==0x5a4d\n\t\tand any of ($b*)\n\t\tand all of ($a*)\n}\n\nrule OLEVBA_VBAStomping\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-28\"\n\t\tdescription = \"Olevba suspects the use of VBA Stomping; look for suspicious pcode\"\n\t\treference = \"https://medium.com/walmartglobaltech/vba-stomping-advanced-maldoc-techniques-612c484ab278\"\n\tstrings:\n\t\t$ = \"|Suspicious|VBA Stomping        |\"\tascii\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule OLEVBA_Office_Excel4_Crash\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-03\"\n\t\tmodifed = \"2021-05-24\"\n\t\tdescription = \"Use of Excel 4 Macros with an abnormal macro parsing which causes olevba to crash.  This is likely Trickbot or Qakbot\"\n\t\treference = \"/wiki/qakbot, /wiki/trickbot, https://github.com/decalage2/oletools/issues/647\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\t\tsample = \"1c01713290a559e74eb6ef93d53f3910\"\n\t\tsample = \"393042b6ace53afa9a85773037442e02 \"\n\tstrings:\n\t\t$ = \"UnboundLocalError: local variable 'stringValue' referenced before assignment\"\n\t\t$ = \"struct.error: unpack requires a buffer of\"\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule Office_ThickClient_Lure\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-24\"\n\t\tdescription = \"Office document attempting to lure the recipient into using the Desktop Excel version for exploitation\"\n\tstrings:\n\t\t$ = \"document using Online Viewer\"\n\t\t$ = \", please use Desktop PC\"\n\t\t$ = \"WHY   I   CANNOT   OPEN   THIS\"\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand any of them\n}\n\nrule MZ_PE_DataExfiltrator_mOrx\n{\n    meta:\n        author\t\t= \"Malware Utkonos\"\n\tmodified\t= \"2021-05-24\"\n\tmodified_author\t= \"Nathan Fowler\"\n        date\t\t= \"2021-05-07\"\n        description\t= \"Very wide rule to find an adversary handle that appears in many malicious samples and is potentially TrickBot related.\"\n\treference\t= \"/wiki/trickbot\"\n    strings:\n        $ = \"mOrx\"\n    condition:\n        uint16(0) == 0x5A4D and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_Hancitor_Emotet_ByteCode\n{\n\tmeta:\n\t\tdescription = \"Office document with shared byte code in Emotet and Hancitor maldocs\"\n\t\tauthor = \"Nathan Fowler/Vikalp Tripathi\"\n\t\trisk = \"high\"\n\t\tdate = \"2021-05-21\"\n\tstrings:\n\t\t$weird = {\t\t0e00 626a 626a 381a 381a 0000 0000 0000\n\t\t\t\t\t\t0000 0000 0000 0000 0000 0000 0904 1600\n\t\t\t\t\t\t2e0e 0000 5a70 d265 5a70 d265\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand $weird at 544\n}\n\nrule Office_Macro_EXEC\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and an optional EXEC call to cmd, msiexec, certutil, powershell, mshta, rundll, or regsvr32\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Vikalp Tripathi\"\n                risk = \"high\"\n                date = \"2019-06-24\"\n\t\tmodified = \"2021-05-21\"\n                tlp = \"GREEN\"\n                sample = \"4e8a09af76b5f1b162a75ea221a1360a\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $badness1 = /EXEC\\x28[\\x27\\x22]?([cC][mM][dD]|[pP][oO][wW][eE][rR]|[mM][sS][iI][eE][xX][eE][cC]|[cC][eE][rR][tT][uU][tT][iI][lL]|[mM][sS][hH][tT][aA]|[rR][uU][nN][dD][lL][lL])/\n\t\t$badness2 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness3 = /m.?s.?i.?e.?x.?e.?c/\t\tnocase ascii wide\n\t\t$badness4 = /p.?o.?w.?e.?r.?s.?h.?e.?l.?l/\tnocase ascii wide\n\t\t$badness5 = /c.?e.?r.?t.?u.?t.?i.?l/\t\tnocase ascii wide\n\t\t$badness6 = /m.?s.?h.?t.?a/\t\t\tnocase ascii wide\n\t\t$badness7 = /r.?u.?n.?d.?l.?l/\t\t\tnocase ascii wide\n\t\t$badness8 = /r.?e.?g.?s.?v.?r.?3.?2/\t\tnocase ascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and any of ($badness*)\n}\n\nrule PE_MZ_SleepyKernels\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with more than one instance of kernel32 and Sleep\"\n        description = \"This implies this PE/MZ is embedding another PE/MZ and it is sleepy cause sleepy sleeps\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-01\"\n        modified    = \"2021-05-21\"\n\tthanks      = \"Vikalp Tripathi\"\n        sample      = \"e5f5f693ddda55535169ed36cf260de8, 06983f709a4332d18e948d55fa137581\"\n        feelz       = \"https://youtu.be/7pOEW6bGK1I?t=65\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n\t$kern = \"kernel32\"\tnocase ascii wide\n        $ = { 53 6c65 6570 }    //Sleep\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n}\n\nrule Office_XML_Terse_WebSetting_External_Relationship\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-20\"\n\t\tthanks = \"David Coomber\"\n\t\tdescription = \"Excessively terse external relationship frame\"\n\tstrings:\n\t\t$ = \"/relationships/frame\\\"\"\n\t\t$ = \"Target=\\\"http\"\n\t\t$ = \"TargetMode=\\\"External\\\"\"\n\t\t$a = \"Relationships\"\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand all of them\n\t\tand #a == 2\n}\n\nrule OLEVBA_And_Office_Obfuscated_PowerShell\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-05-19\"\n\t\tdescription = \"Office document containing obfuscated powershell or other obfuscated malfeasance\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$a1 = /[^\\r\\n]{0,128}p[`^]*o[`^]*w[`^]*e[`^]*r[`^]*s[`^]*h[`^]*e[`^]*l[`^]*l[^\\r\\n]{0,128}/\tnocase ascii\t//powershell; additional capture is for resume-context\n\t\t$a2 = /CHAR\\(99\\).{0,8}&.{0,8}CHAR\\(109\\).{0,8}&.{0,8}CHAR\\(100\\)/\tnocase ascii\t//\"cmd\"\n\t\t$a3 = /N[`^]*e[`^]*w[`^]*-[`^]*O[`^]*b[`^]*j[`^]*e[`^]*c[`^]*t[`^]* [`^]*N[`^]*e[`^]*t[`^]*\\.[`^]*W[`^]*e[`^]*b[`^]*C[`^]*l[`^]*i[`^]*e[`^]*n[`^]*t/\t\t\t\t\t\tnocase ascii\t//New-Object Net.WebClient\n\t\t$a4 = /\\$\\{[`^]*e[`^]*n[`^]*V[`^]*:/\tnocase ascii\t//${env\n\t\t$a5 = \"CHAR(A94)&CHAR(111)&CHAR(119)&CHAR(101)&CHAR(114)&CHAR(115)&CHAR(104)&CHAR(101)&CHAR(108)&CHAR(108)\"\tnocase wide ascii\n\n\t\t$n1 = \"|May run PowerShell commands\"\tnocase ascii\n\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of ($a*) and not any of ($n*)\n}\n\nrule Ursnif_Big_REM\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-05-19\"\n\t\tdescription = \"REM ascii statement followed by a huge wall of non-breaking text\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t$ = /REM [^\\x20\\x09\\r\\n]{1024}/\n\tcondition:\n\t\t(  uint8(0) == 0x0a\n\t\tor uint8(0) == 0x0d\n\t\tor uint8(0) == 0x3c\n\t\tor uint8(0) == 0x20\n\t\tor uint8(0) == 0x09\n\t\t) and all of them\n}\n\nrule Office_4Byte_Pepe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"4 byte variable split/concat evasion technique\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = {\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00 [4]\n\t\t\t11 00b9 0004 00\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Potential_Equation_Editor_Exploit\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-29\"\n\t\tdescription = \"Potential Equation Editor Exploit in oddly cased OleNative which is used in the kit builder.\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"Ole10NA\"\t\tascii wide\n\t\t$ = \"Ole10NaT\"\t\tascii wide\n\t\t$ = \"Ole10NatI\"\t\tascii wide\n\t\t$ = \"Ole10NatiV\"\tascii wide\n\t\t$ = \"Ole10NativE\"\tascii wide\n\tcondition:\n\t\t( uint16be(0) == 0x504b or uint16be(0) == 0xd0cf )\n\t\tand any of them\n}\n\nrule XML_Too_Much_PHP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"XML Office Document with just too many PHP URLs in the XML\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$a = \".php\"\tnocase ascii wide\n\tcondition:\n\t\tuint32be(0) ==0x3c3f786d\n\t\tand #a >= 6\n}\n\nrule Office_Xor_Clng_AO\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler/Nilanjana Saha\"\n\t\tdate = \"2021-04-27\"\n\t\tdescription = \"Office document containing Xor function, auto-open behavior, and clng\"\n\t\treference = \"/wiki/dridex\"\n\tstrings:\n\t\t$x1 = { (58|78) (4f|6f) (52|72) }\t\t//Xor\n\t\t$x2 = { (43|63) (4c|6c) (4e|6e) (47|67) }\t//Clng\n\n\t\t$w1 = { (58|78) [1] (4f|6f) [1] (52|72) }\t\t//Xor\n\t\t$w2 = { (43|63) [1] (4c|6c) [1] (4e|6e) [1] (47|67) }\t//Clng\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"       nocase wide ascii\n                $ao5 = \"Evaluate\"       nocase wide ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand ( all of ($x*) or all of ($w*) )\n\t\tand any of ($ao*)\n}\n\nrule Office_Embedded_Script_Language\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-04-19\"\n\t\tdescription = \"Embedded Script Language in native Office file magic, potential code execution attempt.\"\n\t\treference = \"/wiki/ursnif\"\n\tstrings:\n\t\t//Capture up to 255 bytes for context\n\t\t$ = /\\x3cscript language=.{0,255}/\tnocase ascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule JavaScript_HexEncoding_Flood\n{\n  meta:\n    description = \"Detects potential phishing or other nefarious JS nonsense using hex->html encoding.\"\n    date = \"2021-03-25\"\n    modified = \"2021-03-29\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    greetz0 = \"Reversing Labs and the A1000 Gang\"\n    greetz1 = \"hi2u 25 March 2021 Birmingham Tornado Team\"\n    greetz2 = \"Nathan 'Smash all the Encodings' Fowler\"\n  strings:\n    $script_the_things = \"<script\"\n    $script_the_thingsh = { 3c (73|93) (63|83) (72|92) (69|89) (70|90) (74|94) }\n    $script_the_thingshw = { 3c 00 (73|93) 00 (63|83) 00 (72|92) 00 (69|89) 00 (70|90) 00 (74|94) 00 }\n    $hex_the_things = { 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 [2] 5c 78 }\n    $hex_the_things_u = { 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4] 5c 75 [4]  5c 75 }\n\n    //Exclusions\n    $not1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n    $not2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n    $not3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n    $not4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"\tascii\n\n  condition:\n    filesize < 1MB and any of ($script_the_things*) and any of ($hex_the_things*) and not any of ($not*)\n}\n\nrule Office_Binary_PutWrite\n{\n        meta:\n                description = \"Office document using binary write and put to a pound numeric file handle\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-03-22\"\n                sample = \"1573d9cb372724883e4bacdef81af436\"\n\t\treference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n\t\t$bw1 = /B.?i.?n.?a.?r.?y.?.?A.?s.?.?#?.?[0-9]/i\n\t\t$bw2 = /P.?u.?t.?.?#?.?[0-9]/i\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$exclude1 = { 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\t\t$exclude2 = \"Makro am 13.07.2005 von hkrassnitzer aufgezeichnet\"\n\t\t$exclude3 = \"SMA-LazardOrders@seic.com\"\tascii wide\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($bw*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule multiple_concats_in_xlm_formula_spinal_tap_amps_at_elven\n{\n   meta:\n       date = \"2021-03-18\"\n       author = \"Will Metcalf\"\n       reference = \"https://www.youtube.com/watch?v=hW008FcKr3Q\"\n       description = \"Behold The Great And Powerful Match Iterator. SILENT BUILDER AMPS TO 11\"\n       score = 90\n   strings:\n       $magic1 = \"<?xml\" nocase ascii wide\n       $magic2 = \"<xm:macrosheet\" nocase ascii wide\n       $fstart = \"<f>\" nocase ascii wide\n       $fend = \"</f>\" nocase ascii wide\n       $henge1 = \"REGISTER(\" nocase ascii wide fullword\n       $henge2 = \"CALL(\" nocase ascii wide fullword\n       $henge3 = \"SET.NAME(\" nocase ascii wide fullword\n       $henge4 = \"SET.VALUE(\" nocase ascii wide fullword\n       $henge5 = \"EXEC(\" nocase ascii wide fullword\n       $henge6 = \"FORMULA(\" nocase ascii wide fullword\n       $henge7 = \"FORMULA.ARRAY(\" nocase ascii wide fullword\n       $henge8 = \"FORMULA.FILL(\" nocase ascii wide fullword\n       $ampsat11 = /\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;.{0,8192}?\\&\\;/ nocase ascii wide\n   condition:\n         all of ($magic*) and any of ($henge*) and (for any i in (1..#fstart) : (for any of ($henge*) : ($ in (@fstart[i]..@fend[i])) and $ampsat11 in (@fstart[i]..@fend[i])))\n}\n\nrule PE_MZ_NET_TotallySpacedOut\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-15\"\n\t\tdescription = \"PE/MZ with VS_VERSION_INFO values containing excessive trailing space which is quite abnormal.\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = /ProductName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /CompanyName[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = /LegalCopyright[^\\x01]{1,128}\\x20{16}/\twide\n\t\t$ = /Comments[^\\x01]{1,128}\\x20{16}/\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\t\t\tascii\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule PE_MZ_JUCOAction\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-03-10\"\n\t\tdescription = \"Repeated byte code inefficient in a packed executable that may correlate to the packer being used\"\n\t\treference = \"/wiki/formbook\"\n\tstrings:\n\t\t$ = \"be run under Win32\"\n\t\t$ = {\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a [4]\n\t\t\t25 [2] 4a\n\t\t}\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Office_Enable_Editing\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-03-03\"\n\t\tdescription = \"Office document asking the user to enable editing, which enables the macro code.\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = \"enable editing\"\tnocase ascii wide\n\t\t$ = \"enable content\"\tnocase ascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule vm_cat_and_also_cat {\n  meta:\n    description = \"Detects common vm-detection techniques in vbs scripts.\"\n    date = \"2021-02-23\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    public_samples = \"fa96ef5de5c10538834ed92d9a99185f1b9eeb2beb9d2ef9d4ff8e57f36061c4, 15719bb40281aadf8f2a95c1719534ee71317dbbc5e5e2b3572add27e2c0e786\"\n    greetz0 = \"Thanks to Fowler for encoding alternatives\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n  strings:\n    $getobj = \"GetObject(\" nocase\n    $getobjh = { (67|87) (65|85) (74|94) (6f|8f) (62|82) (6a|8a) (65|85) (63|83) (74|94) 28 }\n    $getobjhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $serviceQuery = \"objWMIService.ExecQuery(\" nocase\n    $serviceQueryb = \"b2JqV01JU2VydmljZS5FeGVjUXVlcnko\"\n    $serviceQueryh = { (6f|8f) (62|82) (6a|8a) (77|97) (6d|8d) (69|89) (73|93) (65|85) (72|92) (76|96) (69|89) (63|83) (65|85) 2e (65|85) (78|98) (65|85) (63|83) (71|91) (75|95) (65|85) (72|92) (79|99) 28 }\n    $serviceQueryhw = { (6f|8f) 00 (62|82) 00 (6a|8a) 00 (77|97) 00 (6d|8d) 00 (69|89) 00 (73|93) 00 (65|85) 00 (72|92) 00 (76|96) 00 (69|89) 00 (63|83) 00 (65|85) 00 2e 00 (65|85) 00 (78|98) 00 (65|85) 00 (63|83) 00 (71|91) 00 (75|95) 00 (65|85) 00 (72|92) 00 (79|99) 00 28 00 }\n\n    $str0 = \"winmgmts:\" nocase\n    $path0 = \".\\\\root\" nocase\n    $path1 = \"\\\\cimv2\" nocase\n    $attr0 = \"Win32_Bios\" nocase\n    $attr1 = \"Win32_PnPEntity\" nocase\n    $attr2 = \"Win32_ComputerSystem\" nocase\n    $attr3 = \"Win32_Process\" nocase\n\n  condition:\n    $str0 and (any of ($getobj*) or any of ($serviceQuery*)) and any of ($path*) and any of ($attr*)\n}\n\nrule Office_OpenXML_External_oleObject_Link\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external linked OLE object, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-23\"\n\t\tmodified = \"2021-02-24\"\n                tlp = \"GREEN\"\n\t\tsample = \"02bc0a764bceb7df398ea898b1501f09\"\n\t\treference = \"/wiki/loki\"\n\n        strings:\n                $a1 = /oleObject\\x22[^\\x3c]+Target=\\x22http[^\\x22]+/\n                $a2 = /Target=\\x22http[^\\x22]+[^\\x3c]+oleObject\\x22/\n\n\t\t//Exclusions\n\t\t$e1 = \"/docs.ims.corp.seic.com/\"\tascii\n\n        condition:\n\t\t//file magic in this case was document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n\t\t\tor uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and any of ($a*)\n\t\tand not any of ($e*)\n}\n\nrule Office_Word_DocMcStuffings\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-24\"\n\t\tdescription = \"Document embedded in a document, using PK format, containing the string Microsoft_Office_Word_Macro-Enabled_Document which seems to indicate a document kit builder.\"\n\t\treference = \"/wiki/zloader, /wiki/guloader\"\n\tstrings:\n\t\t$ = \"Microsoft_Office_Word_Macro-Enabled_Document\"\n\tcondition:\n\t\tuint32be(0) == 0x504b0304\n\t\tand all of them\n}\n\nrule PDF_ExifTool_MetaStomped\n{\n    meta:\n        author = \"Nathan Fowler/Sean Dalnodar\"\n        date = \"2021-02-19\"\n\tlast_updated = \"2022-05-25\"\n        sample = \"b1eee4586ba12643f711ea40100ab6a73ba720c1\"\n        greetz = \"Thanks to the a1000 Reversing Labs Crew for the research assist.\"\n        prod = \"true\"\n        description = \"Exiftool META PDF stomping; exiftool when stomping metadata in PDFs must always leave it's mark.  This is noted in the exiftool manual.  To correctly stomp a PDF you must take the PDF, conver it using qpdf, then re-PDF it.\"\n        process = \"This rule indicatesa PDF where someone has used Exiftool to modify or delete meta data.  Review the PDF and validate it is not malicious via Twinwave.  Validate all redirections to unknown sites that may be secondary downloaders or phishing lures.\"  \n        reference = \"/wiki/bazar\"\n    strings:\n        $ = \"BeginExifTool\"  ascii\n        $ = \"EndExifTool\"  ascii\n    condition:\n        uint32be(0) == 0x25504446\n        and all of them\n}\n\nrule PE_MZ_ColumnFluffer256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-19\"\n\t\tdescription = \"Two null-byte separated code structure indicating potential PE/MZ stuffing in the packer for the purposes of obfuscation\"\n\tstrings:\n\t\t$ = /([^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}[^\\x00]{2}\\x00{2}){256}/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule HTML_JavaScript_Refresh\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript window.location\"\n                analyst_notes = \"This is potentially phishing or highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-03\"\n\t\tmodified = \"2021-02-18\"\n                tlp = \"GREEN\"\n\n        strings:\n                $r1 = /window\\.location\\.[^\\r\\n]{0,128}/\tnocase ascii\n\n                //Exclusions\n                $e1 = \".citrixdata.com/\"        ascii\n                $e2 = \".force.com/\"             ascii\n                $e3 = \".sharefile.com/\"         ascii\n                $e4 = \".documentforce.com/\"     ascii\n                $e5 = \".salesforce.com/\"        ascii\n\n        condition:\n                filesize < 8KB\n                and uint16(0) == 0x213c\n                and any of ($r*)\n                and not any of ($e*)\n}\n\n\nrule RAR_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-12\"\n\tmodified = \"2021-02-18\"\n        reference = \"\"\n        description = \"Single executable file embedded in RAR archive\"\n        sample = \"4d394070f5c9be4f97077ba1d877213d, 6620cc2603cb9189cbfae2e318e806a3\"\n\n    strings:\n        //Bad file extensions\n        $bad_ext = /\\.(exe|scr|bat|cmd|jse?|vbs)\\x0a/   nocase ascii\n\n        //Anchor pattern\n        $anchor = /\\.[a-zA-Z]{3}\\x0a/\n\n    condition:\n        uint32(0) == 0x21726152\n        and #bad_ext <= 2\n        and #anchor <=2\n\tand all of them\n}\n\nrule Office_OLE_EquationEditorHex\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Will Metcalf\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Word Document using raw hex Equation Editor as a CSLID potential CVE-2017-11882 exploit\"\n\t\treference = \"/wiki/zloader, https://www.lastline.com/labsblog/evading-static-analyzers-by-solving-the-equation-editor/\"\n\tstrings:\n\t\t$ = { 02CE020000000000C000000000000046 }\t//CVE-2017-11882,  CLSID {0002CE02-0000-0000-C000-000000000046} of Equation Editor\n\t\t$ = /ole.{0,32}native/\tnocase wide\n\tcondition:\n\t\tall of them\n}\n\nrule Office_OLE_Macro_SheetProtection\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-16\"\n\t\tdescription = \"Embedded Word Document, as OLE, with Macros Enabled followed by sheetProtection in the same file.\"\n\t\treference = \"/wiki/zloader\"\n\tstrings:\n\t\t$ = \"sheetProtection\"\t\t\t\t\tnocase ascii\n\t\t$ = \"oleObject progId=\\\"Word.DocumentMacroEnabled\"\tnocase ascii\n\tcondition:\n\t\t( uint16be(0) == 0xd0cf or uint32be(0) == 0x3c3f786d )\n\t\tand all of them\n}\n\nrule PE_MZ_Dridex_NopNopNop_Flowbissa\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-02-11\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"Indicators of a packer commonly used with Dridex since 2019.\"\n\tstrings:\n\t\t$a = { 90909055 }\n\t\t$b = \"^_[]\"\tascii\n\t\t$c = /RSDS[^\\x5c]{1,64}\\.pdb/\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 6\n\t\tand #b > 1\n\t\tand $c\n}\n\nrule multiple_concats_in_excel4_formula_exec\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 6E 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x006e))\n}\n\nrule multiple_concats_in_excel4_formula_register\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 95 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0095))\n}\n\nrule multiple_concats_in_excel4_formula_call\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = {06 00 [0-8194] 08 (44|24|17) [0-8194] 08 (44|24|17) [0-8194] 08 (24|44|17) [0-8194] 42 ?? 96 00}\n\t\t$meat = {08 (44|24|17) [0-8192] 08 (44|24|17) [0-8192] C0 08 44}\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0096))\n}\n\nrule multiple_concate_c_path_builder\n{\n\tmeta:\n\t\tdate = \"2021-02-08\"\n\t\tauthor = \"Will Metcalf\"\n\t\tthanks = \"https://blog.reversinglabs.com/blog/excel-4.0-macros\"\n\t\treference = \"https://support.microsoft.com/en-us/office/excel-specifications-and-limits-1672b34d-7043-467e-8e27-269d656771c3\"\n\t\tdescription = \"See the rule name\"\n\tstrings:\n\t\t$magic = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$bof = { 09 08 08 00 00 06 40 00 }\n\t\t$bof1 = { 09 08 10 00 00 06 40 00 [10] 00 00 }\n\t\t$bof2 = { 09 08 08 00 00 05 40 00 }\n\t\t$dsum1 = { 1E 00 00 00 ?? 00 00 00 [0-20] 20 45 78 63 65 6C 20 34 2E 30 00 }\n\t\t$dsum2 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 20 }\n\t\t$dsum3 = { 1E 00 00 00 ?? 00 00 00 [0-20] 45 78 63 65 6C 20 34 2E 30 2D }\n\t\t$fhdr = { 06 00 [0-8194] 42 ?? 50 01 }\n\t\t$meat = { 17 01 00 43 17 01 00 3A 17 01 00 5C 17 01 00 }\n\tcondition:\n\t\t $magic at 0 and any of ($bof*) and any of ($dsum*) and (for any i in (1..#fhdr) : ( for all of ($meat*) : ($ in (@fhdr[i]..@fhdr[i] + uint16(@fhdr[i] + 0x02) + 4)) and uint16(@fhdr[i] + 0x02) <= 8192 and uint16(@fhdr[i] + uint16(@fhdr[i] + 0x02) + 2) == 0x0150))\n}\n\nrule Excel4_Biff8\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"Will Metcalf, Brad Duncan\"\n        date = \"2021-02-04\"\n        description = \"Legacy Excel 4 document with a modern BIFF8 header, there's a rift in the space-time continiuum\"\n        feelz = \"https://youtu.be/tGOtIPMP7VM?t=80\"\n        risk = \"high\"\n    strings:\n        $ = { 0908 1000 0006 0500 }\n        $ = \"Excel 4\"\n    condition:\n        uint16be(0) == 0xd0cf\n        and all of them\n}\n\nrule OLEVBA_Office_Excel4M_Execution\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tmodified = \"2021-02-04\"\n\t\tdescription = \"Office document using Excel4M to execute an external application\"\n\t\tfirefly = \"Ticket #126736\"\n\n\tstrings:\n\t\t//Opens a dynamic data exchange (DDE) channel to an application and returns the number of\n\t\t//the open channel. Once you have opened a channel to another application with INITIATE, you\n\t\t//can use EXECUTE and SEND.KEYS to control the other application from a Microsoft Excel\n\t\t//macro. (SEND.KEYS is available only with Microsoft Excel for Windows.) If INITIATE is\n\t\t//successful, it returns the number of the open channel. All the subsequent DDE macro functions\n\t\t//use this number to specify the channel. If INITIATE is unsuccessful, FALSE is returned.\n\t\t$a1 = \"INITIATE(\"\tascii\n\t\t$ab1 = \"POKE(\"\t\tascii\n\t\t$ab2 = \"REQUEST(\"\tascii\n\t\t$ab3 = \"EXECUTE(\"\tascii\n\t\t$ab4 = \"SEND.KEYS(\"\tascii\n\n\t\t//Starts a separate program. Use EXEC to start other programs with which you want to\n\t\t//communicate. Use EXEC with Microsoft Excel's other DDE functions (INITIATE, EXECUTE, and\n\t\t//SEND.KEYS) to create a channel to another program and to send keystrokes and commands to\n\t\t//the program. (SEND.KEYS is available only in Microsoft Excel for Windows.)\n\t\t$b1 = \"EXEC(\"\t\tascii\n\n\t\t//Enables or disables a custom command or menu. Disabled commands appear dimmed and\n\t\t//can't be chosen. Use ENABLE.COMMAND to control which commands the user can click in a\n\t\t//menu bar.\n\t\t$b2 = \"ENABLE.COMMAND(\"\tascii\n\n\t\t//Enables or disables a drawing object or the selected drawing object. A disabled object will not\n\t\t//run any macro events assigned to it, and the controls will be grayed out.\n\t\t$b3 = \"ENABLE.OBJECT(\"\tascii\n\n\t\t//Deletes a file from the disk. Although you will normally delete files manually, you can, for\n\t\t//example, use FILE.DELETE in a macro to delete temporary files created by the macro.\n\t\t$b4 = \"FILE.DELETE(\"\tascii\n\n\t\t//Equivalent to clicking the Add Mailer command on the Mail submenu of the File menu. Adds a\n\t\t//new PowerTalk mailer to the active workbook. Use this command to add addressing or subject\n\t\t//information to a workbook that you want to send to another user.\n\t\t$b5 = \"MAIL.ADD.MAILER(\"\tascii\n\n\t\t//Registers the specified dynamic link library (DLL) or code resource and returns the register ID.\n\t\t//You can also specify a custom function name and argument names that will appear in the\n\t\t//Paste Function dialog box. If you register a command (macro_type = 2), you can also specify a\n\t\t//shortcut key. Because Microsoft Excel for Windows and Microsoft Excel for the Macintosh use\n\t\t//different types of code resources, REGISTER has a slightly different syntax form when used in\n\t\t//each operating environment.\n\t\t$b6 = \"REGISTER(\"\tascii\n\n\t\t//NCF - Possibly unregistered CALL functions to Kernel functions\n\t\t//https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ee391643(v=vs.85)\n\t\t//Assuming that the REGISTER function is in cell A5, after your macro registers GetTickCount,\n\t\t//you can use the CALL function to return the number of milliseconds that have elapsed:\n\t\t$b7 = \"CALL(\\\"shell\"\tnocase ascii\n\t\t$b8 = \"CALL(\\\"user\"\tnocase ascii\n\t\t$b9 = \"CALL(\\\"kernel\"\tnocase ascii\n\t\t$b10 = \"CALL(\\\"shlwapi\"\tnocase ascii\n\t\t$b11 = \"CALL(\\\"mstask\"\tnocase ascii\n\t\t$b12 = \"CALL(\\\"ole\"\tnocase ascii\n\t\t$b13 = \"CALL(\\\"dbg\"\tnocase ascii\n\t\t$b14 = \"CALL(\\\"url\"\tnocase ascii\n\n\t\t//Defines a name on a macro sheet to refer to a value. The defined name exists only on the\n\t\t//macro sheet's list of names and does not appear in the global list of names for the workbook.\n\t\t//The SET.NAME function is useful for storing values while the macro is calculating.\n\t\t$c1 = \"SET.NAME(\"\tnocase ascii\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand (\n\t\t\t($a1 and any of ($ab*))\n\t\t\tor any of ($b*)\n\t\t\tor #c1 >= 6\n\t\t)\n}\n\nrule Office_XML_Functionally_Stupid\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\tmodified = \"2021-02-03\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"Excessive amount of curly brace, semi-colon, and-or parenthesis function building.  Likely multi-script language Office document stuffing\"\n\n\tstrings:\n\t\t$od = \"/officeDocument/\"\n\n\t\t$p1 = \"(){\"\n\t\t$p2 = \"})(\"\n\t\t$p3 = \"();\"\n\t\t$p4 = \")+(\"\n\n\t\t//Not functional math\n\t\t$e1 = \"<f>((((\"\n\n\tcondition:\n\t\t//<?xml\n\t\tuint32(0) == 0x6d783f3c\n\t\tand $od\n\t\tand (#p1 + #p2 + #p3 + #p4) > 1024\n\t\tand not any of ($e*)\n}\n\nrule AnyFile_B64_Encoded_ThisProgram {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n\t\tdate = \"2019-08-20\"\n\t\tmodified = \"2019-08-21\"\n\t\treference = \"\"\n\t\tsamples = \"\"\n\n\tstrings:\n\n\t\t// Various encodings of \"This program \"\n\n\t\t$a1 = \"lzIHByb2dyYW0gY2F\" ascii wide // This program cannot\n\t\t$a2 = \"aXMgcHJvZ3JhbSBjYW5\" ascii wide // This program cannot\n\t\t$a3 = \"GlzIHByb2dyYW0gY2Fubm\" ascii wide // This program cannot\n\t\t$a4 = \"hpcyBwcm9ncmFtIGNhbm5\" ascii wide // This program cannot\n\t\t$a5 = \"aXMgcHJvZ3JhbSBjYW5ub3\" ascii wide // This program cannot\n\t\t$a6 = \"hpcyBwcm9ncmFtIGNhbm5vdC\" ascii wide // This program cannot\n\n\t\t$a8 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a9 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a10 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a11 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAYwBhAG4AbgBvAH\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a12 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABjAGEAbgBuAG8AdA\" ascii wide // Null-spaced wide format of This program cannot\n\t\t$a13 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAGMAYQBuAG4AbwB0AC\" ascii wide // Null-spaced wide format of This program cannot\n\n\t\t$a15 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a16 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a17 = \"QAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a18 = \"dABvAG4AbgBhAGMAIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a19 = \"B0AG8AbgBuAGEAYwAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\t\t$a20 = \"HQAbwBuAG4AYQBjACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program cannot\n\n\t\t$a22 = \"9ubmFjIG1hcmdvcnA\" ascii wide // tonnac margorp sihT\n\t\t$a23 = \"b25uYWMgbWFyZ29ycCB\" ascii wide // tonnac margorp sihT\n\t\t$a24 = \"Rvbm5hYyBtYXJnb3JwIHN\" ascii wide // tonnac margorp sihT\n\t\t$a25 = \"G9ubmFjIG1hcmdvcnAgc2\" ascii wide // tonnac margorp sihT\n\t\t$a26 = \"b25uYWMgbWFyZ29ycCBzaW\" ascii wide // tonnac margorp sihT\n\t\t$a27 = \"Rvbm5hYyBtYXJnb3JwIHNpaF\" ascii wide // tonnac margorp sihT\n\n\t\t$a29 = \"546869732070726f6772616d2063616e6e6f7420\" ascii wide nocase // This program cannot\n\n\t\t$a31 = \"20746f6e6e6163206d6172676f72702073696854\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a33 = \" tonnac margorp sihT\" ascii wide nocase // tonnac margorp sihT\n\n\t\t$a35 = \"aXMgcHJvZ3JhbSB\" ascii wide // This program must\n\t\t$a36 = \"hpcyBwcm9ncmFtIG1\" ascii wide // This program must\n\t\t$a37 = \"lzIHByb2dyYW0gbXV\" ascii wide // This program must\n\t\t$a38 = \"aXMgcHJvZ3JhbSBtdX\" ascii wide // This program must\n\t\t$a39 = \"hpcyBwcm9ncmFtIG11c3\" ascii wide // This program must\n\t\t$a40 = \"GlzIHByb2dyYW0gbXVzdC\" ascii wide // This program must\n\n\t\t$a42 = \"gAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a43 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHM\" ascii wide // Null-spaced wide format of This program must\n\t\t$a44 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB\" ascii wide // Null-spaced wide format of This program must\n\t\t$a45 = \"GgAaQBzACAAcAByAG8AZwByAGEAbQAgAG0AdQBzAH\" ascii wide // Null-spaced wide format of This program must\n\t\t$a46 = \"aABpAHMAIABwAHIAbwBnAHIAYQBtACAAbQB1AHMAdA\" ascii wide // Null-spaced wide format of This program must\n\t\t$a47 = \"BoAGkAcwAgAHAAcgBvAGcAcgBhAG0AIABtAHUAcwB0AC\" ascii wide // Null-spaced wide format of This program must\n\n\t\t$a49 = \"QAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a50 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGk\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a51 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQB\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a52 = \"HQAcwB1AG0AIABtAGEAcgBnAG8AcgBwACAAcwBpAG\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a53 = \"dABzAHUAbQAgAG0AYQByAGcAbwByAHAAIABzAGkAaA\" ascii wide // Reversed Null-spaced wide format of This program must\n\t\t$a54 = \"B0AHMAdQBtACAAbQBhAHIAZwBvAHIAcAAgAHMAaQBoAF\" ascii wide // Reversed Null-spaced wide format of This program must\n\n\t\t$a56 = \"c3VtIG1hcmdvcnA\" ascii wide // tsum margorp sihT\n\t\t$a57 = \"N1bSBtYXJnb3JwIHN\" ascii wide // tsum margorp sihT\n\t\t$a58 = \"RzdW0gbWFyZ29ycCB\" ascii wide // tsum margorp sihT\n\t\t$a59 = \"c3VtIG1hcmdvcnAgc2\" ascii wide // tsum margorp sihT\n\t\t$a60 = \"RzdW0gbWFyZ29ycCBzaW\" ascii wide // tsum margorp sihT\n\t\t$a61 = \"HN1bSBtYXJnb3JwIHNpaF\" ascii wide // tsum margorp sihT\n\n\t\t$a63 = \"546869732070726f6772616d206d75737420\" ascii wide nocase // This program must\n\n\t\t$a65 = \"207473756d206d6172676f72702073696854\" ascii wide nocase // tsum margorp sihT\n\n\t\t$a67 = \" tsum margorp sihT\" ascii wide nocase // tsum margorp sihT\n\n\t\t//Exclusions, RFC2822 body matchihng\n\t\t$e1 = \"Received: from oreo.seic.com\"\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand any of ($a*)\n\t\tand not any of ($e*)\n}\nrule PE_MZ_Pp_Pals\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-26\"\n\t\tdescription = \"Packer associated with Qakbot\"\n\t\treference = \"/wiki/qakbot\"\n\tstrings:\n\t\t$ = { 7050 2070 5020 7050 2070 5020 7050 }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule XMLHTTP_atob_Phishing\n{\n\tmeta:\n\t\tdescription = \"Potential HTML attachment or other JavaScript using XMLHTTP and atob, possible phishing\"\n\t\tdate = \"2021-01-21\"\n\t\trisk = \"high\"\n\tstrings:\n\t\t$ = /\\.open\\(\"GET\",[\\x09x20]+atob\\(/\n\t\t$ = \"XMLHttpRequest();\"\n\tcondition:\n\t\tall of them\n}\n\nrule MZ_Header_In_Document\n{\n        meta:\n                description = \"MZ Header found in RTF or Office file\"\n                author = \"Nathan Fowler/Sean Dalnodar\"\n                risk = \"high\"\n                date = \"2018-10-02\"\n                modified = \"2022-06-28\"\n                tlp = \"GREEN\"\n                thanks = \"RH-MP\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $doc1 = \"Document\" wide\n                $doc2 = \"Workbook\" wide\n                $doc3 = \"OLE Package\"\n                $doc4 = \"ObjInfo\" wide\n\n                $mz1 = \"4d5a 9000 0300 0000\" nocase wide ascii\n                $mz2 = \"4d5a 5000 0200 0000\" nocase wide ascii\n                $mz3 = \"4d5a 0000 0000 0000\" nocase wide ascii\n                $mz4 = \"4d5a 4152 5548 89e5\" nocase wide ascii\n                $mz5 = \"4d5a 8000 0100 0000\" nocase wide ascii\n                $mz6 = \"4d5a 9000 0300 0400\" nocase wide ascii\n                $mz7 = \"4d5a e800 0000 005b\" nocase wide ascii\n\n                $mz8 = { 4d5a 9000 0300 0000 }\n                $mz9 = { 4d5a 5000 0200 0000 }\n                $mz10 = { 4d5a 0000 0000 0000 }\n                $mz11 = { 4d5a 4152 5548 89e5 }\n                $mz12 = { 4d5a 8000 0100 0000 }\n                $mz13 = { 4d5a 9000 0300 0400 }\n                $mz14 = { 4d5a e800 0000 005b }\n\n                $mz15 = { 4d005a00 90000000 03000000 000000 }\n                $mz16 = { 4d005a00 50000000 02000000 000000 }\n                $mz17 = { 4d005a00 00000000 00000000 000000 }\n                $mz18 = { 4d005a00 41005200 55004800 8900e5 }\n                $mz19 = { 4d005a00 80000000 01000000 000000 }\n                $mz20 = { 4d005a00 90000000 03000000 040000 }\n                $mz21 = { 4d005a00 e8000000 00000000 005b00 }\n\n                $mz22 = \"This program cannot be run in\"  nocase\n                $mz23 = \"This program must be\"           nocase\n\n                $mz24 = \"546869732070726f6772616d2063616e6e6f742062652072756e20696e\" nocase wide ascii\n                $mz25 = \"546869732070726f6772616d206d757374206265\"                   nocase wide ascii\n\n                $mz26 = { 5468 6973 2070 726f 6772 616d 2063 616e 6e6f 7420 6265 2072 756e 2069 6e }\n                $mz27 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 }\n\n                $mz28 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006300 61006e00 6e006f00 74002000 62006500 20007200 75006e00 20006900 6e }\n                $mz29 = { 54006800 69007300 20007000 72006f00 67007200 61006d00 20006d00 75007300 74002000 620065 }\n\n\t\t//Exclude MSI\n\t\t$msi = { EFBF BDEF BFBD 11E0 A1B1 1AEF BFBD }\n\n\t\t//Exclusions\n\t\t$e1 = {  4d5a 0000 0000 0000 ??00 5300 7500 6d00 6d00 6100 7200 79 }\n\t\t$e2 = \"Mellon Financial Corporation\"\n\n        condition:\n                ($rtf at 0 or $xml at 0 or ($office at 0 and any of ($doc*))) and any of ($mz*) and not $msi\n\t\tand not any of ($e*)\n}\n\nrule PE_MZ_AncientNET\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-07\"\n\t\tdescription = \"PE/MZ using an ancient version of .NET and a current signed certificate\"\n\t\treference = \"/wiki/agenttesla\"\n\tstrings:\n\t\t$ = { 2e4e 4554 4672 616d 6577 6f72 6b2c 5665 7273 696f 6e3d 7634 2e30 0000 } //.NET 4.0\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand all of them\n\n\t\t//Certificate expires in 6 months or more\n\t\tand pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + 15552000\n}\n\nrule PE_MZ_BangBang\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2021-01-07\"\n                description = \"PE/MZ using !-! or @-@ wide as a separator for byte logic after being packed.\"\n                reference = \"/wiki/redline, /wiki/agenttesla, /wiki/quasar\"\n        strings:\n                $a1 = { 0021 002d 0021 00 }\n                $a2 = { 0040 002d 0040 00 }\n        condition:\n                uint16be(0) == 0x4d5a\n                and (#a1 + #a2) > 2048\n}\n\nrule Office_Macro_EmbeddedFormObject\n{\n        meta:\n                description = \"Office document with a macro and auto-open functionality with multiple (greater than or equal to 2) embedded form objects\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2021-01-05\"\n                sample = \"1573d9cb372724883e4bacdef81af436, 746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"/wiki/trickbot, /wiki/ursnif\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Numeric User Path\n\t\t$nu = /[A-Za-z]:\\\\Users\\\\[0-9]+\\\\/\n\n\t\t//Negations\n\t\t$n1 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and #fo >= 2\n\t\tand (any of ($ao*) or $nu)\n\t\tand any of ($vb*)\n\t\tand not any of ($n1*)\n}\n\nrule Office_Macro_EmbeddedFormObject_Excel4\n{\n        meta:\n                description = \"Office document with an Excel 4 Macro, VBA, and an embedded form object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2019-09-27\"\n\t\tmodified = \"2021-01-04\"\n                sample = \"746a77ad399ad485b5b35e9d35733e82\"\n                reference = \"\"\n\n        strings:\n                //0027920: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n                //0027930: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n                //0027940: 6564 6465 6420 4f62 6a65 6374 0000 0000  edded Object....\n\n                $fo = { 4d69 6372 6f73 6f66 7420 466f 726d 7320\n                        322e 3020 466f 726d 0010 0000 0045 6d62\n                        6564 6465 6420 4f62 6a65 6374\n                }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Excel4\n\t\t$ex4 = \"Excel4\"\t\twide ascii\n\n\t\t//Negations\n\t\t$n1 = \"SQL2K14ODS01\"\twide ascii\n\t\t$n2 = { 5c 5c65 6e74 2e77 6662 2e62 616e 6b2e 636f 7270 5c }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $fo\n\t\tand $ex4\n\t\tand any of ($vb*)\n\t\tand not any of ($n*)\n}\n\nrule PE_MZ_12S_dadada\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-12-21\"\n                description = \"Potential signs of packer and packer-stuffed PE/MZ seen with Dridex\"\n                reference = \"/wiki/dridex\"\n                feelz =\t\"https://www.youtube.com/watch?v=jqk0jwNs2Ew&t=52\"\n        strings:\n                //0030bc0: 7475 7265 3d22 7838 3622 0d0a 2020 2020  ture=\"x86\"..\n                //0030bd0: 2020 2020 2020 2020 7075 626c 6963 4b65          publicKe\n                //0030be0: 7954 6f6b 656e 3d22 3635 3935 6236 3431  yToken=\"6595b641\n                $ = { 22 0d0a 2020 2020 2020 2020 2020 2020 7075 626c 6963 4b65 7954 6f6b 656e 3d22 }\n                $ = { a?3e a?3e a?3e a?3e b?3e b?3e b?3e b?3e }\n                $ = { da dada dada dada }\n        condition:\n                uint16be(0) == 0x4d5a\n                and all of them\n}\n\nrule Office_XML_Russian_Macro\n{\n        meta:\n                author = \"Nathan Fowler/Nilanjana\"\n                creation_date = \"2020-12-17\"\n                last_update = \"2022-04-12\"\n                sample = \"\"\n                greetz = \"Thanks to the a1000 Reversiing Labs Crew for the research assist\"\n                prod = \"true\"\n                description = \"Office XML document containing the phrases Макросы (Macros), Листы (Sheets), Sheet1 (Лист1) or This book (ЭтаКнига)\"\n                reference = \"/wiki/qakbot\"\n                process = \"This rule flagged because this document contains key values in Russian.  Since SEI doesn't conduct much/any business with this country the analyst should submit the associated xls document to Twinwave and validate it is not malicious.  Make sure to review any redirects to websites or secondary downloads that are identified to ensure they are not malicious or phishing lures\"\n                reference = \" \"\n        strings:\n                $ = \"Макросы\"   ascii wide\n                $ = \"mакросы\"   ascii wide\n                $ = \"Листы\"     ascii wide\n                $ = \"Лист1\" ascii wide\t//Sheet1\n                $ = \"ЭтаКнига\" ascii wide\t//This book\n        condition:\n                (uint32be(0) == 0x3c3f786d or uint16be(0) == 0xd0cf)\n                and any of them\n}\n\nrule Office_XML_Excel4\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-17\"\n        description = \"Office Excel 4.0 represented in XML which is a modern document format.  Abnormal time-warp\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = \"Excel 4.0\"    ascii wide\n    condition:\n        uint32be(0) == 0x3c3f786d and all of them\n}\n\nrule PE_MZ_KernelNotKernelAgain\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-12-16\"\n        reference = \"/wiki/dridex\"\n        sample = \"487765c199a6ae9ea318ec795d342328\"\n        description = \"Use of hidden kernel32 that has been obfuscated to avoid detection via a malware packer\"\n    strings:\n        $ = /[^kK]ernel32?\\.dll/    nocase ascii\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule Office_Biff8_Excel4\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-14\"\n\t\tdescription = \"Office 4.0 expressed in Biff8, a modern document format\"\n\t\treferece = \"/wiki/trickbot\"\n\t\tsample = \"86a7c75c6be25bef045c825542646b61\"\n\tstrings:\n\t\t$ = \"Excel 4.0\"\tascii\n\t\t$ = \"Biff8\"\tascii\n\t\t$ = /Excel (200|19)/\tascii\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_OpenXML_Potential_Phishing\n{\n        meta:\n                description = \"Office XML Document suspected of being a carrier for phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-11\"\n\t\tmodified = \"2020-12-14\"\n                tlp = \"GREEN\"\n\n        strings:\n                $xml = { 3c3f 786d 6c }\n\n\t\t$rel1 = /\\x2frelationships\\x2fhyperlink\\x22 Target=\\x22https?:\\x2f\\x2f[^\\x22]+\\x22 TargetMode=\\x22External\\x22/\n\t\t$rel2 = /\\x2frelationships\\x2fimage\\x22 Target=\\x22[^\\x3a]{1,8}/\n\t\t$rel3 = \"<Relationship Id=\\\"rId\"\n\n\t\t//Exclusions\n\t\t$exclude1 = \"niit\"\tnocase ascii\n\t\t$exclude2 = \"seic\"\tnocase ascii\n\t\t$exclude3 = \"/capgemini.com/\"\t\tnocase ascii\n\t\t$exclude4 = \"/www.capgemini.com/\"\tnocase ascii\n\t\t$exclude5 = \"/xceedwealthmanagement.org/harvey-reiner/\"\tnocase ascii\n        condition:\n                $xml at 0 and filesize <= 3KB and (#rel1 > 2 and #rel1 < 10) and (#rel2 > 2 and #rel2 < 10) and (#rel3 < 24) and not any of ($exclude*)\n}\n\nrule Office_IttyBittyBiteyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-22\"\n\t\tmodified = \"2020-12-11\"\n\t\tdescription = \"Office document with strange PK instanced byte separation\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$a1 = {\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t\t0004 0000 0000 00d7 0004 0000 0000 00d7\n\t\t}\n\n\t\t$pk = { 504b 0304 1400 }\t//PK\n\n\t\t//0000650: 0022 2422 232c 2323 305f 293b 5b52 6564  .\"$\"#,##0_);[Red\n\t\t//0000660: 5d5c 2822 2422 232c 2323 305c 291e 0422  ]\\(\"$\"#,##0\\)..\"\n\t\t$a2 = { 3b 5b52 6564 5d5c 2822 2422 232c 2323 305c 29 }\n\n\t\t$a3 = \"Linked Cell\"\twide ascii\n\n\t\t//Negations\n\t\t//0023f10: 2700 3002 ed00 b600 1400 5375 6e47 6172  '.0.......SunGar\n\t\t//0023f20: 642e 494f 436f 6e6e 6563 7469 6f6e 2400  d.IOConnection$.\n\t\t$n1 = \"SunGard.IOConnection\"\tascii\n\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand #pk > 1\n\t\tand not any of ($n*)\n}\n\nrule Office_INCLUDEPICTURE_ExtHREF\n{\n\tmeta:\n\t\tdescription = \"Office, XML, or RTF document using INCLUDEPICTURE and an external HREF\"\n\t\tanalyst_notes = \"The external HREF may be malicious\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-08-11\"\n\t\tmodified = \"2020-12-10\"\n\t\tthanks = \"David Heise\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$a = /INCLUDEPICTURE[\\x20\\x09\\r\\n\\x22\\x27]*[hf]t{1,2}ps?:\\/\\/.{4,256}MERGEFORMAT/\n\n\t\t$n1 = \"eroomweb.seic.com\"\n\n\tcondition:\n\t\t(uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 or uint32be(0) == 0x3c3f786d)\n\t\tand $a and not any of ($n*)\n}\n\nrule Biff5ProtectedExcel4BurnInHell\n{\n\tmeta:\n\t\tauthor = \"Will Metcalf\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Office 97 Biff5 password protected document\"\n\tstrings:\n\t\t$a1 = { 0908080000050500[4]2f000400 }\n\t\t$a2 = { 000042006F006F006B00[57]0002 }\n\t\t$a3 = { 457863656C20342E30 }\n\t\t$n1 = { 0908080000050500[4]2f000400(00|01) }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of ($a*)\n\t\tand not $n1\n}\n\nrule Office_DoubleClutchingGrumpies\n{\n    meta:\n        author = \"Nathan Fowler\"\n        thanks = \"David Heise, Will Metcalf\"\n        date = \"2020-12-02\"\n        description = \"Excel 4.0 used without a BIFF version, no document encryption, and the lack of traditional CHRGEN seen containing 0x7b, 0x7c, and 0x7d in 0x0? wide spacing\"\n\n    strings:\n        $a = \"Excel 4.0\"\n        $b1 = \"Biff\"\n        $b2 = \"Encryption\"\n        $b3 = { 7b0? 0000 7c0? 0000 7d }\n\n    condition:\n        uint16be(0) == 0xd0cf\n        and $a and not any of ($b*)\n}\n\nrule Office_EggDt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-12-02\"\n\t\tdescription = \"Abnormally encrypted Office document attempting to evade tool usage by boutique Excel encryption processing that is currently unknown or understood\"\n\tstrings:\n\t\t$ = { 45 2b67 ??67 2b44 ???? 74 }\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Macrosheeeeeeeeeeeeet\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-10-15\"\n\t\tupdated = \"2020-11-23\"\n\t\tthanks = \"Will Metcalf for the backslashes\"\n                description = \"Office macrosheet in XML indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n                reference = \"/wiki/qakbot,/wiki/zloader\"\n        strings:\n\t\t$ = \"Target=\\\"macrosheets\"\n        condition:\n                filesize < 128KB\n                and uint8(0) == 0x3c\n                and all of them\n}\n\nrule Office_Terse_PK_Macrosheets\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-15\"\n\tupdated = \"2020-11-23\"\n\tthanks = \"Will Metcalf for the backslashes\"\n        description = \"Office document in PK format with a macrosheets folder indicating potential use of an Excel4 Macro; a modern document format with a legacy macro\"\n        reference = \"/wiki/qakbot\"\n    strings:\n        $ = /[\\x2f\\x5c]macrosheets/\t\tnocase ascii wide\n        $ = /\\.(jpe?g|png|gif)/\t\t\tnocase ascii wide\n        $ = \"Content_Types\"\t\t\t\tnocase ascii wide\n    condition:\n        filesize < 128KB\n        and uint32be(0) == 0x504b0304\n        and all of them\n}\n\nrule PE_MZ_CafeBafe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-23\"\n\t\treference = \"/wiki/dridex\"\n\t\tdescription = \"0xcafe PE/MZ byte separator used for reference and obfuscation\"\n\tstrings:\n\t\t$a = { bafe ffff cafe ffff cafe ffff bafe ffff }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 128\n}\n\nrule PE_MZ_NET_ATeam\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a = { a0 a2a2 a3a4 adae }\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 8\n}\n\nrule PE_MZ_NET_IP\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-16\"\n\t\tdescription = \"PE/MZ with interesting byte code unique to malware\"\n\t\treference = \"/wiki/masslogger\"\n\tstrings:\n\t\t$a =\"_@IP\"\n\tcondition:\n\t\tuint16be(0) == 0x4d5a\n\t\tand #a >= 32\n}\n\nrule OLEVBA_Office_Excel4M_VMCheck_GetWorkspace\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-11\"\n\t\tdescription = \"Office document using GET.W to check machine capability, VM detect\"\n\t\tfirefly = \"Ticket #126736\"\n\tstrings:\n\t\t$ = \"GET.WORKSPACE(11\"\tascii\t//X position of Excel\n\t\t$ = \"GET.WORKSPACE(12\"\tascii\t//Y position of Excel\n\t\t$ = \"GET.WORKSPACE(13\"\tascii\t//Workspace width\n\t\t$ = \"GET.WORKSPACE(14\"\tascii\t//Workspace height\n\t\t$ = \"GET.WORKSPACE(16\"\tascii\t//Free RAM in kilobytes\n\t\t$ = \"GET.WORKSPACE(17\"\tascii\t//Total RAM in kilobytes available to Excel\n\t\t$ = \"GET.WORKSPACE(18\"\tascii\t//Math Co-Processor present\n\t\t$ = \"GET.WORKSPACE(19\"\tascii\t//Mouse present\n\t\t$ = \"GET.WORKSPACE(23\"\tascii\t//Full path to startup directory or folder\n\t\t$ = \"GET.WORKSPACE(24\"\tascii\t//Full path to alternative startup directory\n\t\t$ = \"GET.WORKSPACE(26\"\tascii\t//Username\n\t\t$ = \"GET.WORKSPACE(27\"\tascii\t//Orgname\n\t\t$ = \"GET.WORKSPACE(31\"\tascii\t//Debug or single step macro check\n\t\t$ = \"GET.WORKSPACE(37\"\tascii\t//Country and locale\n\t\t$ = \"GET.WORKSPACE(42\"\tascii\t//Can play sounds\n\t\t$ = \"GET.WORKSPACE(43\"\tascii\t//Can record sounds\n\t\t$ = \"GET.WORKSPACE(44\"\tascii\t//DLL check\n\t\t$ = \"GET.WORKSPACE(49\"\tascii\t//MAPI session in use\n\t\t$ = \"GET.WORKSPACE(64\"\tascii\t//Excel Mail System check\n\t\t$ = \"GET.WINDOW(5\"\tascii\t//Width, in points\n\t\t$ = \"GET.WINDOW(6\"\tascii\t//Height, in points\n\t\t$ = /GET\\.(WINDOW|WORKSPACE)\\([\\x20\\x09]*[A-Z]/\tascii\t//Potential evasion attempt by using a non-integer function call to GET.WORKSPACE or GET.WINDOW\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand any of them\n}\n\nrule PE_MZ_NET_lN4k\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdescription = \"PE/MZ with specific odd byte code almost exclusively seen with malware.  0 FPs on A1000\"\n\t\treference = \"/wiki/agenttesla\"\n\t\tdate = \"2020-11-10\"\n\t\tsamples = \"626758f886985fd8b5abd2526c42ea38, 1fa0185ac05a81b5cd35a4baf4c327e4\"\n\tstrings:\n\t\t//Honestly, who knows?  I dunno.\n\t\t//000934AC  A26C4E            mov [0x4e6c],al\n\t\t//000934AF  346B              xor al,0x6b\n\t\t$a = \"lN4k\"\t\t\tascii\n\t\t$ = \"WrapNonExceptionThrows\"\tascii\n\tcondition:\n\t\tfilesize < 2048KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n\t\tand #a >= 4\n}\n\nrule Office_TrailerPark_DoubleWide\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-15\"\n\t\tmodified = \"2020-11-10\"\n                risk = \"high\"\n                comments = \"Office document with macro using double-wide CHARGEN and Embedded Object\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$em = \"Embedded Object\" nocase wide ascii\n\n\t\t//Really long CHRGEN that is double-wide starting with exclamation and ending with tidle\n\t\t$double_wide = { 2100000022000000230000002400000025000000260000002700000028000000290000002a0000002b0000002c0000002d0000002e0000002f000000300000003100000032000000330000003400000035000000360000003700000038000000390000003a0000003b0000003c0000003d0000003e0000003f000000400000004100000042000000430000004400000045000000460000004700000048000000490000004a0000004b0000004c0000004d0000004e0000004f000000500000005100000052000000530000005400000055000000560000005700000058000000590000005a0000005b0000005c0000005d0000005e0000005f000000600000006100000062000000630000006400000065000000660000006700000068000000690000006a0000006b0000006c0000006d0000006e0000006f000000700000007100000072000000730000007400000075000000760000007700000078000000790000007a0000007b0000007c0000007d0000007e0000007f00000080000000 }\n\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb4 = \"OLE\"\tnocase wide ascii\n                $vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$negation1 = \";Data Source=SQL2K14ODS01\\\\INST2;\"\twide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $em and $double_wide and any of ($vb*) and not any of ($negation*)\n}\n\nrule OLE_URL_TinyDoc\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-11-05\"\n                description = \"OLE embedded document, extremely\tsmall in size, with a WIDE bare\tURL\"\n                reference = \"/wiki/lokibot\"\n                firefly\t= \"Ticket #126303\"\n\n        strings:\n                $ = \"Root Entry\"\twide\n                $ = \"Ole\"\t\twide\n                $ = \"://\"\t\twide\n\n\tcondition:\n\t\tfilesize < 6KB\n\t\tand uint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\n\nrule JavaScript_Unicode_Flood\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Potential phishing using excessive unicode\"\n\n\tstrings:\n\t\t$ = \"script\"\t\t\tnocase ascii\n\t\t$ = /(\\x5c[uU][0-9a-f]{2,4}){128}/\tascii\n\n\tcondition:\n\t\t(\tuint16be(0) == 0xefbb\n\t\t\tor uint8(0) == 0x3c\n\t\t\tor uint8(0) == 0x0a\n\t\t\tor uint8(0) == 0x0d\n\t\t\tor uint8(0) == 0x09\n\t\t\tor uint8(0) == 0x20\n\t\t)\n\t\tand all of them\n}\n\nrule OLEVBA_Office_Excel4_ResolutionCheck\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-04\"\n\t\tdescription = \"Use of Excel 4 Macros to perform a resolution check of the local machine prior to macro execution; sandbox detect\"\n\t\treference = \"/wiki/zloader\"\n\t\tthanks = \"Peter Misurek, Michelle Ticer\"\n\t\tnotes = \"This rule is designed to match on the output of olevba, not a raw document\"\n\n\tstrings:\n\t\t$ = \"Excel 4.0\"\n\t\t$ = \"APP.MAXIMIZE(\"\n\t\t$ = \"GET.WORKSPACE(\"\n\n\tcondition:\n\t\t( uint32be(0) == 0x6f6c6576 or uint32be(0) == 0x4552524f or uint32be(0) == 0x70797769 )\n\t\tand all of them\n}\n\nrule Office_Macro_Comspec\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing environment variable comspec with VBA\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /%.?c.?o.?m.?s.?p.?e.?c.?%/\tnocase ascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\nrule Office_Document_Close\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-30\"\n\t\tdescription = \"Office document instancing Document_Close with the purposes of executing a macro upon document closure\"\n\t\treference = \"Ticket 125818\"\n\tstrings:\n\t\t$ = /D.?o.?c.?u.?m.?e.?n.?t.?_.?C.?l.?o.?s.?e/\tascii\n\t\t$ = \"VBA\"\tascii wide\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand all of them\n}\n\n\n\nrule Suspected_PDF_Link_Image_Phish\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to URI\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-19\"\n                modified = \"2020-10-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n\t\t//2019-02-08 For performance\n\t\t$perf1 = \"/Rect\"\n\t\t$perf2 = \"/Link\"\n\t\t$perf3 = \"URI\"\n\n\t\t//2019-02-08\n\t\t//In some cases there is a 0x0a present between these, so for the first time ever, I'm using the '.' metacharacter\n\t\t///LInk./A 14 0 R./Border [0 0 0]./H /I./Rect [ 99.6735 646.9335 469.3665 656.0910 ].>>.endobj.14 0 obj.<< /Type /Action./S /URI./URI (http://angull\n                $link = /\\x2fLink(.|[\\r\\n]){0,64}\\x2fRect(.|[\\r\\n]){1,128}URI[\\x20\\x09]*\\x28[fh]t?tp[^\\x22\\r\\n\\x29\\x20]+/\n\n                //URL Exclusions\n                $exclude1 = /URI\\x20?\\x28(mailto|https?:\\x2f\\x2f[^\\x2f]+\\.(goldman|gs|morganstanley|spectrongroup|bloomberg|fisglobal|netxpro)\\.com\\x2f|https?:\\x2f\\x2f(tass)\\.com\\x2f)/\n\n                //PDF exclusions, the samples seen seem to not have /Form entities defined\n                //2019-01-02 - OneDrive phish contains a singular \"/Form/BBox\"\n                $exclude2 = /\\x2fForm[\\x20\\x09]*\\x2f/\n                $include2 = /\\x2fForm[\\x20\\x09]*\\x2fBBox/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n\t\t//2019-02-08 Chasing PDF creators at this point :(\n                //mPDF PHP-based content creator\n\t\t//dompdf content creator\n                $mpdf1 = \"mPDF \"\twide\n\t\t$mpdf2 = \"dompdf \"\twide\n\t\t$mpdf3 = \"CPDF\"\t\twide\n\n\t\t//This might FP a ton, but lets see if any 'wide' version of PDF is just weird/wonky leading/trailing spaced\n\t\t$mpdf4 = \" PDF\"\tnocase wide\n\t\t$mpdf5 = \"PDF \"\tnocase wide\n\n        condition:\n                    (filesize < 1024KB)\n                and uint16(0) == 0x5025\n                and ($pdf at 0)\n\t\tand all of ($perf*)\n                and (#link > 0 and #link < 3 )\n                and not $exclude1\n                and ( not $exclude2 or $include2 )\n                and (\n\t\t\t( not $title1 or $title2 )\n\t\t\t or any of ($mpdf*)\n\t\t)\n}\n\nrule Office_HiddenSheetSheeeeeeeeet\n{\n\tmeta:\n\t\tdescription = \"Office document with hidden or very hidden sheet with non-0x00 6 significant bits\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tthanks = \"Didier Stevens\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-10-27\"\n\t\treference = \"https://isc.sans.org/forums/diary/Excel+4+Macros+Abnormal+Sheet+Visibility/26726/\"\n\t\treference = \"https://docs.microsoft.com/en-us/openspecs/office_file_formats/ms-xls/b9ec509a-235d-424e-871d-f8e721106501\"\n\n\tstrings:\n\t\t$a = { 8500 ???? ???? ???? (01|02|03)01 }\n\t\t$b = { 8500 0000 0000 0000 (01|02|03)01 }\n\t\t$c = \"Excel\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $c\n\t\tand for any i in (1..#a): (uint16(@a[i] + 2) - uint16(@a[i] + 10) == 8)\n\t\tand not $b\n}\n\nrule PE_MZ_MF_DatJUCO_Action\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-21\"\n        comments = \"Excessive loop-based add xor, xor, add, add, jnz, jnc iteratively\"\n        reference = \"/wiki/qakbot\"\n        feelz = \"https://www.youtube.com/watch?v=fipQisc68dQ\"\n\n    strings:\n\n        //003FEEC8  65007200          add [gs:bp+si+0x0],dh\n        //003FEECC  3300              xor ax,[bx+si]\n        //003FEECE  3200              xor al,[bx+si]\n        //003FEED0  0000              add [bx+si],al\n        //003FEED2  0000              add [bx+si],al\n        //003FEED4  7500              jnz 0xeed6\n        //003FEED6  7300              jnc 0xeed8\n        //003FEED8  65007200          add [gs:bp+si+0x0],dh\n        //003FEEDC  3300              xor ax,[bx+si]\n        //003FEEDE  3200              xor al,[bx+si]\n        //003FEEE0  0000              add [bx+si],al\n        //003FEEE2  0000              add [bx+si],al\n        //003FEEE4  7500              jnz 0xeee6\n        //003FEEE6  7300              jnc 0xeee8\n        $ = {\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n            65007200 3300 3200 0000 0000 7500 7300\n        }\n\n    condition:\n        uint16be(0) == 0x4d5a\n        and all of them\n}\n\nrule PE_MZ_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE executable using 0x0b repeatedly and more than 32768 times\"\n                analyst_notes = \"This is potentially highly abnormal, based on PE_MZ_NET_BobThePEBuilder\"\n                author = \"Nathan Fowler\"\n                date = \"2020-10-19\"\n                samples = \"d831b3b3fb3030a9f9a1e9259105e57b\"\n                reference = \"/wiki/qakbot\"\n        thanks = \"Chris Fry\"\n\n        strings:\n                $a = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n\t\t\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #a > 32768\n}\n\n\nrule ta551_maldoc_zip\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-10-14\"\n\tmodified = \"2020-10-15\"\n        comments = \"Potential encrypted archive containing a singular document matching ta551/icedid naming convention\"\n        thanks = \"Michelle Ticer\"\n        reference = \"/wiki/icedid\"\n        greetz = \"Tony Drake, your FS-ISAC presentation gave me this very idea.\"\n    strings:\n        $d1 = \".docPK\"    ascii\n        $d2 = \".xlsPK\"    ascii\n        $d3 = \".docmPK\"   ascii\n        $d4 = \".xlsmPK\"   ascii\n        $d5 = \".docxPK\"   ascii\n        $d6 = \".xlsxPK\"   ascii\n    condition:\n        uint32be(0) == 0x504b0304\n        and uint32be(4) == 0x14000900\n        and uint16be(8) == 0x0800\n        and ( #d1 == 1 or #d2 == 1 or #d3 == 1 or #d4 == 1 or #d5 == 1 or #d6 == 1 )\n}\n\nrule PE_MZ_LongB64_2048\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-10-13\"\n\t\tdescription = \"PE/MZ with embedded long base64 starting with AAA, likely packed and obfuscated malware\"\n\t\treference = \"/wiki/asyncrat\"\n\tstrings:\n\t\t$ = /AAA[a-zA-Z0-9\\x2f\\x2b\\x3d-]{2048}/\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16be(0) == 0x4d5a\n\t\tand all of them\n}\n\nrule Macro_Shell\n{\n    meta:\n        description = \"Office macro contains code to run an executable or system command\"\n        risk = \"high\"\n\tauthor = \"Nathan Fowler\"\n\tmodified = \"2020-10-06\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $shell = \"WScript.Shell\"\n\n\t$exclude1 = { 5753 6372 6970 742e 5368 656c 6c00 2400 5203 0100 2500 5403 0100 b600 0f00 2f2f 434f 4e46 4952 4d31 2e74 7874 2e } //WScript.Shell CONFIRM1.txt\n\t$exclude2 = { 61 7869 6d75 6d20 3420 7461 6273 2066 6f72 2031 2064 6179 41 }\t\t//Maximum 4 tabs for 1 day - literally\n\t$exclude3 = { 70 776d 6f70 736d 7574 7561 6c66 756e 6473 406d 656c 6c6f 6e2e 636f 6d }\t//BNY\n\t$exclude4 = {\t4441 503a 2f2f\n\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and $shell and not any of ($exclude*)\n}\n\nrule Office_Macro_ShellExecute_FSO\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using subclassed ShellExcuteA and FileSystemObject\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\tmodified = \"2020-10-06\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"ShellExecuteA\"\t\t\twide ascii\n\t\t$badness2 = \"shell32.dll\"\t\t\tnocase wide ascii\n\t\t$badness3 = \"Scripting.FileSystemObject\"\tnocase wide ascii\n\n\t\t$exclude = {\n\t\t\t\t4441 503a 2f2f\n\t\t\t\t[0-32] 2a 2a2a 2047 4554 2055 5345 5227 7320 5849 442a 2a2a\n\t\t\t\t[0-32] 57 5363 7269 7074 2e53 6865 6c6c\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n\t\tand not $exclude\n}\n\nrule Office_WordSoup\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-21\"\n\t\tdescription = \"Office document containing many terse sentences with no periods, likely word soup nonsense\"\n\t\treference = \"/wiki/ta551,/wiki/icedid\"\n\tstrings:\n\t\t$soup = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){2,8}\\x00/\tascii\n\t\t$sauce = /\\x00\\x20[A-Z][a-z]+(\\x20[a-z]+){12}/\tascii\n\t\t$vb1 = \"VBA\"\twide ascii\n\t\t$vb2 = \"VBE\"\twide ascii\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand #soup > 32\n\t\tand not $sauce\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_OLEFormatDoVerb\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-09-16\"\n                description = \"Instanced OleFormat.DoVerb action, likely embedded OLE content with execution\"\n                reference = \"https://isc.sans.org/forums/diary/A+Mix+of+Python+VBA+in+a+Malicious+Word+Document/26578/\"\n\n        strings:\n\t\t$ = /O.?L.?E.?F.?o.?r.?m.?a.?t.?\\..?D.?o.?V.?e.?r.?b/\tnocase ascii\n\n        condition:\n\t\tuint16be(0) == 0xd0cf\n                and all of them\n}\n\nrule Office_XML_CDOMessage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Instanced CDO.Message Object in XML\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\n\t\t$ = \"CDO.Message\"\t\tnocase wide ascii\n\t\t$ = \"GetEncodedContentStream\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint32be(0) == 0x3c3f786d\n\t\tand any of them\n}\nrule Office_SpaceButt\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-15\"\n\t\tdescription = \"Office document with excessive 0x20 padding to EOF\"\n\t\treference = \"/wiki/emotet\"\n\n\tcondition:\n\t\tuint16be(0) == 0xd0cf\n\t\tand uint32(filesize-4)\t== 0x20202020\n\t\tand uint32(filesize-8)\t== 0x20202020\n\t\tand uint32(filesize-12)\t== 0x20202020\n\t\tand uint32(filesize-16)\t== 0x20202020\n}\n\nrule PE_MZ_EofDoom {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-10\"\n                description     = \"PE/MZ with 0xe? partitioned null\"\n                sample          = \"790b0d9e2b17f637c3e03e410aa22d16eccfefd28d74b226a293c9696edb60ad\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t\te?e? e?e? e?e? e?e? e?e? e?e? e?e? e?e?\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_NET_PDB {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-09-08\"\n                description     = \"PE/MZ with a PDB sandwiched betweren WrapNonExceptionThrows and CoreExeMain with too much 0x2a\"\n                sample          = \"91738cb45f5a36f2c957d9aa58c5ccf07c377a50c7d2e134e203347cbbccd0a1\"\n                reference       = \"/wiki/hawkeye\"\n\n        strings:\n\n\t\t$a = {\t5772 6170 4e6f 6e45 7863 6570 7469 6f6e\n\t\t\t5468 726f 7773 [16-128] 3a 5c [1-128] 2e70\n\t\t\t6462 [1-128] 5f43 6f72 4578 654d 6169 6e\n\t\t}\n\t\t$s = { 2a }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $a\n\t\tand #s > 1024\n}\n\nrule PE_MZ_NET_HeadInStars\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-31\"\n        description = \"PE/MZ with excessive asterisk padding at the beginning of the PE/MZ\"\n        reference = \"/wiki/raccoon\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n\t$s = {\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t\t1200 0000 2a00 0000 1200 0000 2a00 0000\n\t}\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and $s in (512..1024)\n}\n\nrule RTF_On3\n:maldoc\n{\n    meta:\n        description = \"Potential Equation 3 Native maldoc using RTF and on.3 byte code\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-26\"\n\n    strings:\n\t$ = \"6f6e2e33000000\" ascii\n\n    condition:\n        uint16(0) == 0x5c7b\n        and all of them\n}\n\nrule Office_ActiveWindowHwnd\n{\n        meta:\n                description = \"Office Document using a call reference to ActiveWindow HWND\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = { \t41[0-1] 63[0-1] 74[0-1] 69[0-1] 76[0-1] 65[0-1] 57[0-1]\n\t\t\t69[0-1] 6e[0-1] 64[0-1] 6f[0-1] 77[0-9] 48[0-1] 77[0-1]\n\t\t\t6e[0-1] 64\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0  //office\n                and all of them\n}\n\nrule PE_MZ_NET_CommaCommaCommaChameleon\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2020-08-24\"\n        description = \"PE/MZ with excessive 0x2c padding and a extremely long alphanumeric string\"\n        sample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n        reference = \"/wiki/agenttesla\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"\n        $c = { 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c 2c2c }\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #c > 256\n}\n\nrule Office_PipeHead\n{\n        meta:\n                description = \"Office Document using piped command to a URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-24\"\n                sample = \"3fc00a815bc3c02ffaa1cdbb4acb9358aa6fd7dcb5db3b6dd9098fd8e5d1d33c\"\n\t\treference = \"/wiki/icedid\"\n\n        strings:\n\t\t$ = /=[\\x20\\x09\\r\\n]*[\\x22\\x27](cmd|powershell|msiexec|certutil|mshta|rundll|regsvr32)[ex.\\x20\\x09]*\\x7c[\\x20\\x09]*[hf]t{1,2}p/\tnocase wide ascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n                and all of them\n}\n\nrule Office_SpaceAdmin\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc with excessive font declarations and spaced-out Administrator as the author\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-08-17\"\n\t\tmodified = \"2020-08-21\"\n\t\treference = \"/wiki/zloader\"\n\n\tstrings:\n\t\t$f1 = { 4300 6100 6c00 6900 6200 7200 6900 3100 }\n\t\t$a1 = /[^\\x20]Admin(istrator)?[\\x20]{48}/\tascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand ($a1 in (512..2048))\n\t\tand #f1 > 16\n}\n\nrule RTF_HookedOnPhonics\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using RTF with absolutely no letters in the first 1024 bytes.  No one taught them how the alphabet works\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-08-20\"\n        reference = \"/wiki/njrat\"\n        sample = \"2e72a053bf09d29401a9eaf0cb196b49\"\n\n    strings:\n        $alpha = /\\{\\\\rt.[^a-zA-Z]{1024}/\n\n    condition:\n        uint16(0) == 0x5c7b          //rtf\n        and $alpha at 0\n}\n\nrule Java_Jar_NoClass\n:maljar\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2020-08-20\"\n                description = \"More than 8 extremely tersely named class files with less than 4 long class file names\"\n                analyst_notes = \"This could potentially be a jRAT or AdWind\"\n                tlp  = \"AMBER\"\n                refernece = \"/wiki/qrat, /wiki/adwind\"\n\n        strings:\n\n                $class1 = /\\x2f[a-z]{1,3}\\.class/\n                $class2 = /\\x2f[^\\x2f]{4,64}\\.class/\n                $meta = \"META-INF/MANIFEST.MF\"\n\n        condition:\n                uint16(0) == 0x4b50\n                and $meta in (0..4096)\n                and #class1 >= 8\n\t\tand #class2 < 4\n}\n\nrule Office_GetObj_Create_Reverse\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using StrReverse, Auto Open behavior, GetObject, and Create -- possibly also Winmgmts\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-06\"\n\t\tupdated = \"2020-08-17\"\n                hash = \"e015e70e7fd1dae6423afaa0352b45f6\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/kpot, /wiki/agenttesla\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"StrReverse\"            nocase wide ascii\n                $bad2 = \"GetObject\"\t\tnocase wide ascii\n                $bad3 = \"Create\"\t\tnocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and ( all of ($bad*) or $bad1 )\n                and any of ($ao*)\n                and any of ($vb*)\n}\n\nrule Office_Biff_Forms_CallByName\n:maldoc\n{\n        meta:\n\t\tdescription = \"Potential maldoc using Biff, Microsoft Forms 2.0, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-14\"\n                reference = \"/wiki/muddywater\"\n                feelz =\t\"https://www.youtube.com/watch?v=sQgd6MccwZc&t=20\"\n\n        strings:\n                $bad1 = \"CallByName\"    nocase ascii\n                $bad2 = \"Biff\"          nocase ascii\n                $bad3 = \"Microsoft Forms 2.0\"   nocase ascii\n\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Auto_Open\"\tnocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"\tnocase wide ascii\n                $ao6 = \"Auto_Exec\"\tnocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and all of ($bad*)\n                and any of ($ao*)\n}\n\nrule Office_IWshRuntimeLibrary_Shell\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Potential maldoc using IWshRuntimeLibrary to avoid CreateObject for Shell\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-05-22\"\n\t\tmodified = \"2020-08-07\"\n\t\thash = \"\"\n\t\tthanks = \"Will Metcalf\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/ursnif, /wiki/ta551\"\n\t\tsample = \"7f6288f4124a41d23db91008fa7341ae\"\n\n\tstrings:\n\t\t$bad1 = \"IWshRuntimeLibrary\"    nocase ascii\n\t\t$bad2 = \"wshom.ocx\"             nocase ascii\n\n\t\t$func1 = \"WshShell\"     nocase ascii\n\t\t$func2 = \".exe\" \t\tnocase ascii\n\t\t$func3 = /S.?c.?r.?i.?p.?t.? .?H.?o.?s.?t/\tnocase ascii\n\t\t$func4 = \"Xor\"\t\t\tnocase ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($bad*)\n\t\tand any of ($func*)\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n}\n\nrule Office_macro_responseBody\n{\n        meta:\n                description = \"Office document with macro code and response.Body\"\n\t\tanalyst_notes = \"This suggests this document interacts with websites and could potentially download malicious code\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//response.Body\n\t\t$badness = { 72[0-1]65[0-1] 73[0-1]70[0-1] 6f[0-1]6e[0-1] 73[0-1]65[0-2] 42[0-1]6f[0-1] 64[0-1]79 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_BIFF_CompObj_SBVBA\n{\n        meta:\n                description = \"Office document with macro code, BIFF compound document, and sheet-bound VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-05\"\n                tlp = \"GREEN\"\n\t\tsample = \"4560ad14320551fa027d5c5006806bb5ba04dde028d7486c6ed2e467e99e8923\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"CompObj\"\t\tnocase wide\n\t\t$badness2 = \"biff\"\t\tnocase ascii\n\t\t$badness3 = { 44 6f63 756d 656e 743d 5368 6565 7420 [1-2]2f 2648 [8] 0d0a }\t//Sheet with Hex\n\t\t$badness4 = { 7d3b 5642 453b 2648 [8] 0d0a 0d0a }\t\t\t\t//Sheet with VBA\n\t\t$badness5 = { 50 4b03 0414 0006 0008 0000 }\t\t\t\t\t//PK Header\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and all of ($badness*)\n\t\tand #badness5 >= 3\n}\n\nrule Office_ChrGen_DoubleWide\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a double-wide CHRGEN string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-08-03\"\n                tlp = \"GREEN\"\n                reference = \"meows://isc.sans.org/forums/diary/Powershell+Bot+with+Multiple+C2+Protocols/26420/\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = { \t     0000 2e00 0000 2f00 0000 3000 0000\n\t\t\t\t3100 0000 3200 0000 3300 0000 3400 0000\n\t\t\t\t3500 0000 3600 0000 3700 0000 3800 0000\n\t\t\t\t3900 0000 3a00 0000 3b00 0000 3c00 0000\n\t\t\t\t3d00 0000 3e00 0000 3f00 0000 4000 0000\n\t\t\t\t4100 0000 4200 0000 4300 0000 4400 0000\n\t\t\t\t4500 0000 4600 0000 4700 0000 4800 0000\n\t\t\t\t4900 0000 4a00 0000 4b00 0000 4c00 0000\n\t\t\t\t4d00 0000 4e00 0000 4f00 0000 5000 0000\n\t\t\t\t5100 0000 5200 0000 5300 0000 5400 0000\n\t\t\t\t5500 0000 5600 0000 5700 0000 5800 0000\n\t\t\t\t5900 0000 5a00 0000 5b00 0000 5c00 0000\n\t\t\t\t5d00 0000 5e00 0000 5f00 0000 6000 0000\n\t\t\t\t6100 0000 6200 0000 6300 0000 6400 0000\n\t\t\t\t6500 0000 6600 0000 6700 0000 6800 0000\n\t\t\t\t6900 0000 6a00 0000 6b00 0000 6c00 0000\n\t\t\t\t6d00 0000 6e00 0000 6f00 0000 7000 0000\n\t\t\t\t7100 0000 7200 0000 7300 0000 7400 0000\n\t\t\t\t7500 0000 7600 0000 7700 0000 7800 0000\n\t\t\t\t7900 0000 7a00 0000 7b00 0000 7c00 0000\n\t\t\t\t7e00 0000\n\t\t}\n\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_HyperActiveX\n{\n        meta:\n                description = \"Office document with macro code, auto behavior, and a Active VBA referencing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-31\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/valak\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness1 = \"ActiveDocument\"\tnocase wide ascii\n\t\t$badness2 = \"ActiveWindow\"\tnocase wide ascii\n\t\t$badness3 = \"AutoHyphenation\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and all of ($badness*)\n}\n\nrule RealtimeYARA_o365_MacroEnable_Lure_Phish\n{\n        meta:\n                description = \"For use with Realtime Yara, matches md5 hash of image files used to entice recipients to enable macros or in phishing.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-15\"\n\t\tmodified = \"2020-09-09\"\n                tlp = \"GREEN\"\n\n        strings:\n                $jpg = { ffd8 ffe0 }\n\t\t$png =  { 8950 4e47 }\n        condition:\n                ($jpg at 0 or $png at 0)\n\t\tand filesize < 1024KB\n\t\tand (\n\t\t\t   hash.md5(0,filesize) == \"cdd03ba433ed0dd9445f0b4e6dd1a8e0\"\n\t\t\tor hash.md5(0,filesize) == \"2e3bc57790a1d3efe3dc49a398b1d4cd\"\n\t\t\tor hash.md5(0,filesize) == \"be7b5759a393fe1ee984e51de1b7dece\"\n\t\t\tor hash.md5(0,filesize) == \"521e6c2cc53de688260a48038a927afb\"\n\t\t\tor hash.md5(0,filesize) == \"c1267b689e929da51079dbe1ce08a57e\"\n\t\t\tor hash.md5(0,filesize) == \"cb962fa46dd7a02b53de2ff0e3b64094\"\n                        or hash.md5(0,filesize) == \"e5a96401ed343f79689294d1220c1272\"\n                        or hash.md5(0,filesize) == \"0dcb622ae9d718c538b24461c02af774\"\n\t\t\tor hash.md5(0,filesize) == \"c83d6b3b78aaf31ffee261fac2e7da9d\"\n\t\t\tor hash.md5(0,filesize) == \"cb40aa7cfb731ee9ead328dd73b43f72\"\t//Fin7 Maldoc\n\t\t\tor hash.md5(0,filesize) == \"9d4e27858795fe5a3aa23f55766c17db\"\t//AveMaria 2019-04-22\n\t\t\tor hash.md5(0,filesize) == \"eed6d4b6d183733b1ac2e0b2e9b18597\"\t//Retefe 2019-05-22\n\t\t\tor hash.md5(0,filesize) == \"04d8309436013894781a5a7647565783\"\t//CrimsonRat 2020-01-23 Ticket #87466\n\t\t\tor hash.md5(0,filesize) == \"d63b2dee989ac4e41301c9dcb31970a3\"\t//Formbook 2020-01-28\n\t\t\tor hash.md5(0,filesize) == \"d3d219eccad17e0aa11d97765b89014a\"\t//Unknown 2020-03-16\n\t\t\tor hash.md5(0,filesize) == \"766a1b16e29459a47052e183f7e2c3bc\"\t//Maze 2020-04-20 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"82355ce62e9c9ac5ce9b8457751b6d91\"\t//Maze 2020-04-20 image2.png\n\t\t\tor hash.md5(0,filesize) == \"28731825446d8bd37889c4f64c5b2127\"\t//Maze 2020-04-20 image4.jpeg\n\t\t\tor hash.md5(0,filesize) == \"584efa6623128629636a7f9004ecef17\"\t//Trickbot? 2020-40-22 image1.jpeg\n\t\t\tor hash.md5(0,filesize) == \"2903f9ca73c42c2f9a78cc869746569c\"\t//Trickbot? 2020-40-22 image1.jpg\n\t\t\tor hash.md5(0,filesize) == \"d9d5d51273a8ed68497b6b403cd39b7b\"\t//Valak 2020-07-31\n\t\t\tor hash.md5(0,filesize) == \"26c0efb2b26c8b43ce83bf6f9a53def3\"\t//ta551 2020-08-07\n\t\t\tor hash.md5(0,filesize) == \"3e79a2bfc6dd76b7eef3a025800ba10d\"\t//Azorult XMLHTTP 2020-09-09\n\t\t)\n}\n\nrule Office_SymbolicHex\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto behavior, and a hex-ascii string between a symbol character\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-28\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/valak\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /([\\x21-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7e][0-9]{1,2}){128}/\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand $badness\n}\n\nrule Office_MaxStonksNotStonks\n{\n        meta:\n                description = \"Office document with native Office file magic at offset 0 followed by multiple mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-21\"\n\t\tmodified = \"2020-07-24\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $badness = { 504b 0304 1400 0600 0800 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//005f4b0: ed00 b600 1400 5375 6e47 6172 642e 494f  ......SunGard.IO\n\t\t//005f4c0: 436f 6e6e 6563 7469 6f6e 2400 3602 0100  Connection$.6...\n\t\t$exclude1 = \"SunGard.IOConnection\"\tascii\n\n\t\t//009e940: ffff 0d00 0008 3200 0000 4d61 6b72 6f20  ......2...Makro\n\t\t//009e950: 616d 2031 332e 3037 2e32 3030 3520 766f  am 13.07.2005 vo\n\t\t//009e960: 6e20 686b 7261 7373 6e69 747a 6572 2061  n hkrassnitzer a\n\t\t//009e970: 7566 6765 7a65 6963 686e 6574 0200 0008  ufgezeichnet....\n\t\t$exclude2 = { 4d61 6b72 6f20 616d 2031 332e 3037 2e32 3030 3520 766f 6e20 686b 7261 7373 6e69 747a 6572 2061 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n                and not $badness in (0..8192)\n\t\tand #badness >= 2\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand not any of ($exclude*)\n}\n\nrule PE_MZ_MF_ABC123\n:malexe\n{\n        meta:\n                description = \"PE/MZ with excessive chrgen alpha declaration\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2020-07-21\"\n                tlp         = \"AMBER\"\n                reference   = \"/wiki/cobint\"\n\t\tfeelz\t    = \"meows://www.youtube.com/watch?v=sHQ_IEosaT4&t=10\"\n\t\tsample\t    = \"a3cad4f0caf2af2d2dd31aa6ea1b1af4\"\n\n        strings:\n\t\t$a1 = \"IsDebuggerPresent\"\t\tascii\n\t\t$a2 = \"abcdefghijklmnopqrstuvwxyz\"\tascii wide nocase\n\t\t$a3 = \"123456789\"\t\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize < 4096KB\n\t\tand all of ($a*)\n\t\tand #a2 >= 6\n\t\tand #a2 >= ( #a3 * 2 )\n}\n\nrule PE_MZ_DebugBreak\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE/MZ with suspicious API calls\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2020-07-17\"\n\t\ttlp         = \"AMBER\"\n\t\treference   = \"/wiki/icedid\"\n\n\tstrings:\n\n\t\t$ = \"DebugBreak\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"KillTimer\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"UnhandledExceptionFilter\"\n\t\t$ = \"WriteFile\"\n\t\t$ = \"Sleep\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 4096KB\n\t\tand all of them\n}\n\nrule PE_MZ_URL_XOR\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a single byte XOR key containing a URL\"\n        author      = \"Nathan Fowler\"\n\tthanks\t    = \"Sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-24\"\n\tmodified    = \"2020-07-14\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$a1 = \"http://\"\t\txor\n\t$a2 = \"https://\"\txor\n\n\t$exclude = {\n\t\t443a 5c6a\n\t\t656e 6b69 6e73 5c77 6f72 6b73 7061 6365\n\t\t5c43 4943 445f 456e 636f 6d70 6173 735c\n\t\t4375 7272 656e 745c 4275 696c 645c 456d\n\t\t4c69 7465 5c43 6c69 636b 4c6f 616e 5072\n\t\t6f78 7949 6d70 6c5c 6f62 6a5c 4a65 6e6b\n\t\t696e 735c 436c 6963 6b4c 6f61 6e50 726f\n\t\t7879 496d 706c 2e70 6462 00\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($a*)\n\tand not $exclude\n}\n\nrule Office_Macro_PK_Link_4\n{\n        meta:\n                description = \"Office document with Excel 4 macro code, linked cell, and mid-embedded PK\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-07-14\"\n                tlp = \"GREEN\"\n                sample = \"9cf44f1dd44ea313a0d931130ebb1aaf\"\n\t\treference = \"/wiki/hancitor\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$badness1 = \"Linked Cell\"\tascii\n\t\t$badness2 = \"Linked Cell\"\twide\n\t\t$badness3 = \"Excel 4.0 Macros\"\tascii\n\t\t$badness4 = { 504b 0304 1400 0600 0800 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($badness*)\n\t\tand not $badness4 in (0..8192)\n}\n\nrule PE_MZ_BuffyBuffs256\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-13\"\n\t\treference = \"/wiki/pony\"\n\t\tdescription = \"PE/MZ with a repeated padded byte sequence that makes absolutley no sense.  Buffy Buffs!\"\n\n\tstrings:\n\t\t$ = /a{256}/    nocase ascii\n\t\t$ = /b{256}/    nocase ascii\n\t\t$ = /c{256}/    nocase ascii\n\t\t$ = /d{256}/    nocase ascii\n\t\t$ = /e{256}/    nocase ascii\n\t\t$ = /f{256}/    nocase ascii\n\t\t$ = /g{256}/    nocase ascii\n\t\t$ = /h{256}/    nocase ascii\n\t\t$ = /i{256}/    nocase ascii\n\t\t$ = /j{256}/    nocase ascii\n\t\t$ = /k{256}/    nocase ascii\n\t\t$ = /l{256}/    nocase ascii\n\t\t$ = /m{256}/    nocase ascii\n\t\t$ = /n{256}/    nocase ascii\n\t\t$ = /o{256}/    nocase ascii\n\t\t$ = /p{256}/    nocase ascii\n\t\t$ = /q{256}/    nocase ascii\n\t\t$ = /r{256}/    nocase ascii\n\t\t$ = /s{256}/    nocase ascii\n\t\t$ = /t{256}/    nocase ascii\n\t\t$ = /u{256}/    nocase ascii\n\t\t$ = /v{256}/    nocase ascii\n\t\t$ = /w{256}/    nocase ascii\n\t\t$ = /x{256}/    nocase ascii\n\t\t$ = /y{256}/    nocase ascii\n\t\t$ = /z{256}/    nocase ascii\n\t\t$ = /0{256}/    ascii\n\t\t$ = /1{256}/    ascii\n\t\t$ = /2{256}/    ascii\n\t\t$ = /3{256}/    ascii\n\t\t$ = /4{256}/    ascii\n\t\t$ = /5{256}/    ascii\n\t\t$ = /6{256}/    ascii\n\t\t$ = /7{256}/    ascii\n\t\t$ = /8{256}/    ascii\n\t\t$ = /9{256}/    ascii\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_b64URL\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code, auto-behavior, and a base64 encoded URL\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-07-10\"\n\t\tthanks = \"Brad Duncan\"\n\t\tsample = \"2433e76542036ab53b138a98eeda548a\"\n\t\treference = \"/wiki/formbook\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$b64_alphabet1 = /a.?b.?c.?d.?e.?f.?g.?h.?i.?j.?k.?l.?m.?n.?o.?p.?q.?r.?s.?t.?u.?v.?w.?x.?y.?z/    ascii\n\t\t$b64_alphabet2 = /A.?B.?C.?D.?E.?F.?G.?H.?I.?J.?K.?L.?M.?N.?O.?P.?Q.?R.?S.?T.?U.?V.?W.?X.?Y.?Z/    ascii\n\n\t\t$encstring_1 = \"R0cD\" ascii wide // http://\n\t\t$encstring_2 = \"HRwOi\" ascii wide // http://\n\t\t$encstring_3 = \"dHA6Ly\" ascii wide // http://\n\t\t$encstring_4 = \"B0AHQAcAA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_5 = \"QAdABwADo\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_6 = \"dAB0AHAAOgA\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_7 = \"B0AHQAcAA6AC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_8 = \"HQAdABwADoALw\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_9 = \"dAB0AHAAOgAvAC\" ascii wide // Null-spaced wide format of http://\n\t\t$encstring_10 = \"HRwcz\" ascii wide // https://\n\t\t$encstring_11 = \"R0cHM\" ascii wide // https://\n\t\t$encstring_12 = \"dHBzOi\" ascii wide // https://\n\t\t$encstring_13 = \"R0cHM6Ly\" ascii wide // https://\n\t\t$encstring_14 = \"dAB0AHAAcwA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_15 = \"B0AHQAcABzADo\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_16 = \"QAdABwAHMAOgA\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_17 = \"dAB0AHAAcwA6AC\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_18 = \"B0AHQAcABzADoALw\" ascii wide // Null-spaced wide format of https://\n\t\t$encstring_19 = \"HQAdABwAHMAOgAvAC\" ascii wide // Null-spaced wide format of https://\n\n\t\t//Byte reversal of the above in case they call reverse\n\t\t$encstring_20 = \"Dc0R\"\n\t\t$encstring_21 = \"iOwRH\"\n\t\t$encstring_22 = \"yL6AHd\"\n\t\t$encstring_23 = \"AAcAQHA0B\"\n\t\t$encstring_24 = \"oDAwBAdAQ\"\n\t\t$encstring_25 = \"AgOAAHA0BAd\"\n\t\t$encstring_26 = \"CA6AAcAQHA0B\"\n\t\t$encstring_27 = \"wLAoDAwBAdAQH\"\n\t\t$encstring_28 = \"CAvAgOAAHA0BAd\"\n\t\t$encstring_29 = \"zcwRH\"\n\t\t$encstring_30 = \"MHc0R\"\n\t\t$encstring_31 = \"iOzBHd\"\n\t\t$encstring_32 = \"yL6MHc0R\"\n\t\t$encstring_33 = \"AwcAAHA0BAd\"\n\t\t$encstring_34 = \"oDAzBAcAQHA0B\"\n\t\t$encstring_35 = \"AgOAMHAwBAdAQ\"\n\t\t$encstring_36 = \"CA6AwcAAHA0BAd\"\n\t\t$encstring_37 = \"wLAoDAzBAcAQHA0B\"\n\t\t$encstring_38 = \"CAvAgOAMHAwBAdAQH\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($b64_alphabet*)\n\t\tand any of ($encstring*)\n}\n\nrule PE_MZ_MF_NET_FruitLoops\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-07-10\"\n\t\treference = \"/wiki/asyncrat\"\n\t\tdescription = \"PE/MZ with that has been packed and stuffed with excessive localized address looping\"\n\t\tsample = \"c2257678b2fa6523210ba60d4fbfcdda\"\n\n\tstrings:\n\n\t\t//000289DE  AE                scasb\n\t\t//000289DF  E280              loop 0x8961\n\t\t//000289E1  8CE2              mov dx,fs\n\t\t//000289E3  808BE281AC        or byte [bp+di-0x7e1e],0xac\n\t\t//000289E8  E281              loop 0x896b\n\t\t//000289EA  AA                stosb\n\t\t//000289EB  E280              loop 0x896d\n\t\t//000289ED  8BE2              mov sp,dx\n\t\t//000289EF  80ADE280AC        sub byte [di-0x7f1e],0xac\n\t\t//000289F4  E280              loop 0x8976\n\t\t//000289F6  AD                lodsw\n\t\t//000289F7  E281              loop 0x897a\n\t\t//000289F9  AD                lodsw\n\t\t//000289FA  E281              loop 0x897d\n\t\t//000289FC  AA                stosb\n\t\t//000289FD  E280              loop 0x897f\n\t\t//000289FF  AB                stosw\n\t\t//00028A00  E280              loop 0x8982\n\t\t//00028A02  AC                lodsb\n\t\t//00028A03  E281              loop 0x8986\n\t\t//00028A05  AF                scasw\n\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fruit = { A? E28? [7] A? E28? [7] E28? A? E28? A? E28? A? E28? A? }\n\n\tcondition:\n\t\tfilesize < 4096KB\n\t\tand uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n\t\tand all of them\n\t\tand #fruit > 2\n}\n\nrule OLE_Packager_Shell_Obj {\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-06-18\"\n\t\treference = \"/wiki/get2\"\n\t\tdescription = \"Packer Shell Object use check for embedded item\"\n\n\tstrings:\n\t\t$ = \"<oleObject progId=\\\"Packager Shell Object\\\" shapeId=\\\"\"\n\n\tcondition:\n\t\tall of them\n}\n\nrule crimeware_ta505_html_attachment {\n  meta:\n    author = \"Corsin Camichel, @cocaman\"\n    date = \"2020-06-14\"\n    version = \"1.0\"\n    tlp = \"green\"\n    description = \"Detects html attachments sent by TA505 (June 2020)\"\n\n  strings:\n      $div_style_none = \"<div style=\\\"display:none;\\\">\"\n      $html_div = \"<div\"\n      $html_iframe_attr = \"width: 100%; height: 100%; border: 0px\"\n      $html_element_id_1 = \"placeholder\"\n      $html_element_id_2 = \"iframeTemplate\"\n      $html_rnd_text = \"{{RND_TEXT}}\"\n      $html_javascript = \"<script type=\\\"text/javascript\\\">\"\n\n\n  condition:\n    $div_style_none at 3 and\n      #html_div >= 3 and\n      $html_iframe_attr and\n        (all of ($html_element_id_*) or $html_rnd_text) and\n      $html_javascript\n}\n\nrule Office_Excel4M_StupidEncrypted\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using Excel 4 macro obfuscation that has been encrypted in a rather poor manner\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2020-06-10\"\n\t\treference = \"/wiki/zloader\"\n\t\treference = \"meows://isc.sans.edu/forums/diary/Job+applicationthemed+malspam+pushes+ZLoader/26222/\"\n\n    strings:\n\t\t$ = \"Excel 4.0 Macros\"\tascii\n\t\t$ = \"Microsoft Enhanced Cryptographic\"\twide\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Active_Env_Shell\n:maldoc\n{\n\tmeta:\n\t\tauthor  = \"Nathan Fowler\"\n\t\tdate    = \"2019-01-30\"\n\t\tmodified = \"2020-06-02\"\n\t\ttlp     = \"GREEN\"\n\t\tdescription = \"Office document which contains a macro, auto execution behavior, environment, SetAttr, and shell functions\"\n\t\tsample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n\tstrings:\n\t\t$magic = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Macro present\n\t\t$vb1 = \"VBE\"    wide ascii\n\t\t$vb2 = \"VBA\"    wide ascii\n\t\t$vb4 = \"OLE\"    wide ascii\n\t\t$vb5 = \"stdole\" wide ascii\n\n\t\t//Auto-behavior\n                $ao1 = \"AutoOpen\"\tnocase wide ascii\n                $ao2 = \"Document_Open\"\tnocase wide ascii\n                $ao3 = \"Workbook_Open\"\tnocase wide ascii\n\t\t$ao4 = \"AutoExec\"\tnocase wide ascii\n\n\t\t//Badness\n\t\t$bad1 = \"Active\"\tnocase wide ascii\n\t\t$bad2 = \"Environ\"\tnocase wide ascii\n\t\t$bad3 = \"Shell\"\t\tnocase wide ascii\n\t\t$bad4 = \"SetAttr\"\tnocase wide ascii\n\t\t$bad5 = \"Environ\"\tnocase wide ascii\n\n\t\t//Likely bad string manipulation\n\t\t$lbad1 = \"Asc\"\t\tnocase wide ascii\n\t\t$lbad2 = \"Chr\"\t\tnocase wide ascii\n\t\t$lbad3 = \"Right\"\tnocase wide ascii\n\t\t$lbad4 = \"Left\"\t\tnocase wide ascii\n\t\t$lbad5 = \"Mid\"\t\tnocase wide ascii\n\t\t$lbad6 = \"Len\"\t\tnocase wide ascii\n\t\t$lbad7 = \"Xor\"\t\tnocase wide ascii\n\n\t\t//Hex anchor of hex-ascii\n\t\t$anchor = /[A-Fa-f0-9]{64}/\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n\t\t//Other exclusions\n\t\t$exclude5 = { 00 4100 6c00 6c00 6900 6100 6e00 7a00 4700 4900 }\n\n\t\t//FactSet\n\t\t$exclude6 = { 00 4661 6374 5365 748? }\n\n\t\t//SunGard\n\t\t$exclude7 = \"SunGard\"\n    $exclude8 = \"Capital Markets Price Comparison\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $magic at 0 and any of ($vb*) and any of ($ao*) and any of ($bad*) and any of ($lbad*) and not any of ($exclude*) and $anchor\n}\n\nrule PE_MZ_NET_OctoPack\n{\n    meta:\n    author = \"Nathan Fowler\"\n    date = \"2020-05-29\"\n    reference = \"/wiki/nanocore\"\n    description = \"PE/MZ with that has been packed and stuffed with character rotation, OctoPack Packer\"\n    reference = \"https://octopus.com/docs/packaging-applications/create-packages/octopack\"\n\n    strings:\n\n    $net = \"WrapNonExceptionThrows\"\n    $o1 = \"OctoPack\"    nocase ascii\n    $o2 = \"OctopusFileSystem\"\n    $o3 = \"OctopusPhysicalFileSystem\"\n\n    condition:\n        filesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n    and $net and any of ($o*)\n}\n\nrule PE_MZ_PipeHead\n{\n    meta:\n       author = \"Nathan Fowler\"\n       date = \"2020-05-26\"\n       reference = \"/wiki/loki\"\n       description = \"PE/MZ with fixed pipe character 0x7c in the PE/MZ header\"\n\n    strings:\n\n\t$a = { 6d6f 6465 2e0d 0d0a [16-24] 7c [7] 7c [7] 7c [7] 7c [7] 7c }\n\n    condition:\n\tfilesize < 4096KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not pe.is_dll()\n        and $a in (100..256)\n}\n\nrule PE_MZ_Qakbot_IEnumConn_GUID\n{\n    meta:\n       author = \"James Quinn/Randy Pargman\"\n       date = \"2020-05-19\"\n       reference = \"/wiki/qakbot\"\n       description = \"PE/MZ packed Qakbot GUID of IEnumConnections Interface seen with packed samples of Qakbot\"\n       modified_author = \"Nathan Fowler\"\n\n    strings:\n\n        $ = \"{b196b287-bab4-101a-b69c-00aa00341d07}\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n        and not pe.is_dll()\n        and all of them\n}\n\nrule win_ragnarlocker_a0 {\n    meta:\n        author = \"BYEMAN@zirconic.net\"\n        last_update = \"2020-04-15\"\n        description = \"detection based on the single Ragnarlocker sample currently found in Malpedia\"\n        hash = \"9bdd7f965d1c67396afb0a84c78b4d12118ff377db7efdca4a1340933120f376\"\n        malpedia_reference = \"https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarlocker\"\n        malpedia_version = \"2020-04-15\"\n        malpedia_license = \"CC BY-NC-SA 4.0\"\n        malpedia_sharing = \"TLP:AMBER\"\n\n    strings:\n        $low0 = \"---RAGNAR SECRET---\"\n        $low1 = \"***********************************************************************************\"\n        $low2 = \"FJTQRH]k(!Y<QQ15K:7)V1s(:DYW6pLCRC)dHC4zIYA)nW\\\"y ,qiy`&v])`Ib}>M\"\n        $low3 = \".ragnar_\" wide\n        $low4 = \"RGNR_\" wide\n        $low5 = \"%s-%s-%s-%s-%s\" wide\n        $hex0 = {66 66 66 0f 1f 84 00 00 00 00 00 0f b7 8c 55 10 f0 ff ff 42 81 f1 ?? ?? ?? ?? 03 f1 8b c6 c1 c0 ?? 2b f0 3b d7 7?}\n        $hex1 = {33 d2 0f b6 cb f? ?? ?? 8b 45 ?? 0f ?? ?? ?? 03 c7 03 c8 0f ?? ?? 8a 84 3d 00 ff ff ff}\n        $hex2 = {40 8d 7f 01 0f b6 d0 8? ?? ?? 8? ?? ?? ?? ?? ?? ?? 0f b6 c1 03 c3 0f b6 d8 [7-14] 8b 45 14 0f b6 d1 [7-16] 03 d1 0f b6 ca 0f [5-8] 30 4f ff 83 ee 01 7?}\n\n    condition:\n            uint16(0) == 0x5a4d\n        and\n            (\n                (1 of ($hex*) and all of ($low*))\n            or\n                (2 of ($hex*) and 3 of ($low*))\n            )\n}\n\nrule Office_OpenXML_veryHidden\n{\n        meta:\n                description = \"Office Document suspected of being a carrier to an external Excel 4 macro via linking, potential stage-1 maldoc dropper\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-05-07\"\n                tlp = \"GREEN\"\n                sample = \"0ebd48fccb7a7a608bdb800fb34dd235\"\n                reference = \"https://inquest.net/blog/2020/05/06/ZLoader-4.0-Macrosheets-\"\n                thanks = \"WillyMac\"\n\n        strings:\n                $a1 = \"/xlMacrosheet\"\t\t\t\tascii\n                $a2 = \"macrosheet\"\t\t\t\tascii\n\n\t\t$b = /[\\x3e\\x3b][A-Z]{3,6}\\x28[^\\x29]{1,32}\\x29/\tascii\n\n        condition:\n                //Have seen prior XML file magic such as document.xml.rels ASCII front-stuffed with 0x0d heavily\n                (          uint16(0) == 0xcfd0  //office\n                        or uint8(0) == 0x20     //Space\n                        or uint8(0) == 0x09     //Tab\n                        or uint8(0) == 0x0a     //LF\n                        or uint8(0) == 0x0d     //CR\n                        or uint8(0) == 0x3c     //<\n                        or uint8(0) == 0x24     //$\n                        or uint8(0) == 0x27     //'\n                        or uint8(0) == 0x22     //\"\n                )\n\t\tand (any of ($a*) and #b > 512)\n}\n\nrule PE_MZ_DoYouEvenNullBruh\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a significantly large amount of contigious bytecode without any NUL\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-05-05\"\n\tmodified    = \"2020-05-06\"\n        sample      = \"8fca7af21a18eea054de86c2b061f3e2\"\n        reference   = \"/wiki/dridex\"\n\n    strings:\n\n        $kern = \"kernel32\"      nocase ascii wide\n\t$bruh = /\\x00[^\\x00]{2048}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n        and #kern > 1\n\tand not pe.is_dll()\n}\n\nrule RTF_Office_Administrator_Hex\n{\n        meta:\n                description = \"RTF/Office hex or ascii Administrator author with space padding or ADMIN User Path\"\n                author = \"Nathan Fowler\"\n                thanks = \"Cocaman\"\n                risk = \"high\"\n                date = \"2019-08-27\"\n\t\tmodified = \"2020-04-23\"\n\t\tsample = \"7ce0cbacee78e838d58d01e18ac2efaa\"\n\n        strings:\n\t\t$ = \"41646d696e6973747261746f7220202020202020202020202020202020202020202020202020202020202020202020202020202020\"\tnocase ascii\n\t\t$ = { 5c55 7365 7273 5c41 444d 494e 49 }\t\t//C:\\\\Users\\\\ADMIN\n\n\tcondition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0 )\n\t\tand any of them\n}\n\nrule Office_Zip_Image_Lure\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc with Macro code and a singular image, potentially used as a lure to enable Macros\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n\tupdated = \"2020-04-21\"\n        reference = \"/wiki/formbook\"\n        sample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $macro = \"vbaProject.bin\"    ascii\n\n        $img1 = \".jpeg\"    nocase ascii\n        $img2 = \".jpg\"    nocase ascii\n        $img3 = \".png\"    nocase ascii\n\n\t$negation = \"/printerSettings\"\n\n    condition:\n        uint16(0) == 0x4b50\n        and $macro\n\tand (#img1 + #img2 + #img3) > 0\n\tand (#img1 + #img2 + #img3) <= 2\n\tand not $negation\n}\n\nrule Office_Forms_Array_Split\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using embedded form object array splitting\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-04-20\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/maze\"\n\t\tsample = \"ad30987a53b1b0264d806805ce1a2561\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"Split\"\t\t\tnocase ascii\n\t\t$bad2 = /([0-9]{2,3},){16}/\tascii\n\t\t$bad3 = \"Microsoft Forms 2.0\"\tascii\n\t\t$bad4 = \"Embedded Object\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule PE_MZ_HeadSpace\n:malexe\n{\n    meta:\n\tdescription = \"PE/MZ with padding of 0x20 in the first 512 bytes of the PE/MZ\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-14\"\n        sample      = \"9e4be44cd94bf353c0a358a1d22d40ce\"\n        reference   = \"\"\n\n    strings:\n\t$space = { 2020 2020 00 }\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and $space in (128..512)\n}\n\n\nrule PE_MZ_100_Dalmations\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of 0x00 between 100-byte non-null data\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-13\"\n        sample      = \"\"\n        reference   = \"/wiki/ursnif\"\n\n    strings:\n        $dalmations = /\\x00([^\\x00]{100}\\x00{328,338}){8}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and filesize < 2048KB\n        and all of them\n}\n\nrule PE_MZ_dotNET_PaddedTokenJuice\n:malexe\n{\n    meta:\n        description = \"PE/MZ with padding of PublicKeyToken\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-04-09\"\n        sample      = \"973b19554de9736755cfb4a5d1c9ffa8\"\n        reference   = \"/wiki/agenttesla\"\n\tfeelz\t    = \"https://www.youtube.com/watch?v=gaF7kT5Moc0&t=34\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\n\t$ = /Token=[a-f0-9]{16}PAD/\n\n\t$juice = /[\\x2b\\x7e][^\\x20-7f][A-Z]/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand not pe.is_dll()\n        and all of them\n\tand #juice > 4096\n}\n\nrule Office_MsRdpClient\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using MsRdpClientShell or other calls\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                modified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32, e3893a8b21f9226a48ec0e10d5c3f414\"\n                thanks = \"Steve Tai\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad = /MsRdpClient[A-Za-z0-9]+/   ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and $bad\n                and any of ($vb*)\n}\n\nrule Office_StartupPath_CallByName\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using CallByName and StartupPath\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n\t\tmodified = \"2020-03-25\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n\t\tthanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = \"CallByName\"\tascii\n                $bad2 = \"StartupPath\"\tascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\n\nrule doc_is_a_jar : maldoc {\n  meta:\n    description = \"Finds docs that are jars.\"\n    date = \"2020-03-20\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    greetz = \"Nathan C. Fowler, sysopfb, Jim Farnish\"\n    samples = \"a29a29c542b44c44f08db0a286dcedcc\"\n    tlp = \"green\"\n    prod = \"true\"\n    family = \"qrat\"\n    notes = \"This is a strange jar that is a doc that is a jar, but it's really silverlight. QRat involved fun-time.\"\n  strings:\n    //.classPK\n    $s0 = { 2e 63 6c 61 73 73 50 4b }\n  condition:\n    uint16(0) == 0xcfd0 and filesize < 2000KB and $s0\n}\n\nrule PE_MZ_AE_AL_UA\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a definition for Accept-Encoding and Accept-Language\"\n        description = \"This implies this PE/MZ is constructing defined and explicit HTTP request headers\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2020-03-20\"\n\tsample\t    = \"64a1d0dfdbd8cf4ff63682bfc748b1c2\"\n\n    strings:\n\t$ = \"Accept-Encoding\"\tnocase wide ascii\n\t$ = \"Accept-Language\"\tnocase wide ascii\n\t$ = \"User-Agent\"\tnocase wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n}\n\nrule Office_JavaScript_Embed_TryCatchFunction\n:maldoc\n{\n    meta:\n                description = \"Potential maldoc using JavaScript try, catch, and function\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2020-03-19\"\n                hash = \"54b938909df6b33011e06fc85ce11a32\"\n                thanks = \"Andrew Smith\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n                $bad1 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]catch[\\{\\(]/             ascii\n                $bad2 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]try[\\{\\(]/               ascii\n                $bad3 = /[\\r\\n\\x20\\x09\\{\\(\\)\\}\\;]function[\\{\\(]/          ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n                and $office at 0\n                and all of ($bad*)\n                and any of ($vb*)\n}\n\nrule guloader_encrypted_preamble {\n  meta:\n    description = \"Finds GuLoader encrypted payloads based on the 64-byte preamble the group appends to the front of the file. Ascertains randomness of the file based on entropy afterwards.\"\n    date = \"2020-03-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"c4feebe17bd8750d3b201bcbc1b35f8d, 553b765ae891b259a91c9bbf39b3e0a8, 6d632124adc38e28d60a07f686044b47, b70d3a70fc5c7fc78f16c936fa54f27f, 4b2b2cbbddfe0c3a4a07101f735ca325, 92a222679eee72860e930a11c59ac154, 8a83ddc8696f9c46626e404485c9858f\"\n    tlp = \"green\"\n    prod = \"true\"\n    thanks = \"https://countuponsecurity.com/2016/03/09/unleashing-yara-part-3/\"\n  strings:\n    $s1 = /[a-f0-9]{64}/\n  condition:\n    filesize < 1000KB and filesize > 100KB and\n    $s1 at 0 and\n    math.entropy(65,160) > 6.5\n}\n\n\n\nrule PE_HeaderNonZeroEntropy\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 20 bytes of header with non-zero entropy.\"\n        description = \"This implies there is stuff where stuff usually isn't.\"\n        author      = \"Peter Misurek, Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-03\"\n\tmodified    = \"2020-03-11\"\n        sample      = \"ee0285249e50c5f5272bf8303eee3309\"\n        sample      = \"ca41b469a22a6def1e0b1dc84a57bf64\"\n        sample      = \"c640246c825676d1fc946cbdb7c47644\"\n        tlp         = \"AMBER\"\n\n    strings:\n\t$ = { 4f50 6174 6368 496e 7374 616c 6c3a 20 }\t//OPatchInstall seen with Fiddler\n\t$ = { b05b 3f73 df06 3f72 b05b c072 df06 3f72\n\t      b05b 3d73 df06 3f72 5269 6368 de06 3f72\n\t} //Symantec VIP\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and math.entropy(80,20) > 0\n\tand not pe.is_dll()\n\tand not any of them\n}\n\nrule PE_MZ_MF_36 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-11\"\n                description     = \"PE/MZ with specific 0x36 byte spacing\"\n                sample          = \"eb2d39761489978be92e74cd873d7332\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = { 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36?? 36 }\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not uint32(0) == 0x0a786564 //dex\n                and filesize <= 4096KB\n                and not pe.is_dll()\n                and all of them\n}\n\nrule dll_packer_science_not_feelz_2\n{\n\tmeta:\n\t\tsample=\"98cbaf55376e928b0c78fce3867d95b9ef4b45c1d91f103f00dad403dd524189\"\n\t\tthanks=\"Fowler\"\n\t\tauthor=\"Jason Reaves\"\n\tstrings:\n\t\t$a1 = {c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 [0-20] c1 45 08 04 [0-14] 8b 4? 08 [1-2] 78 77 77 77}\n\tcondition:\n\t\tall of them\n}\n\nrule PE_MZ_MF_CLC {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-03-03\"\n                description     = \"PE/MZ with specific clc, add, db\"\n                sample          = \"2b69d9463c6439973579fe04a781fb73\"\n                reference       = \"/wiki/netwire\"\n\n        strings:\n\t\t$ = {\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t\t00?? FF F8\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.is_dll()\n                and all of them\n}\n\nrule vbs_sins_reverse_base64 {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using reverse base64. As seen with Gozi/Ursnif.\"\n    date = \"2020-03-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"afc0be7f5fae05d84739b0c40723f5e6\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    // code preamble with == reverse base64 encoding\n    $s0 = { 63 6f 64 65 20 3d 20 22 3d }\n    // base64 detection\n    $s1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n  condition:\n    filesize > 1000KB and uint16(0) == 0x6f63 and\n    $s0 at 0 and $s1\n}\n\nrule vbs_sins_vertical_tab_ascii {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using hundreds of vertical tabs as separators. As seen with Qakbot\"\n    date = \"2020-02-26\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"4e8eeab906ee506e57c186c69048c40a\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s0 = \"Function\" ascii\n    $s1 = /\\x0a\\x0b\\x0b[^\\x0a\\x0b]/\n  condition:\n    filesize > 1000KB and uint8(0) == 0x0a and\n    all of ($s*)\n}\n\nrule PE_MZ_MF_3F_3E {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-24\"\n                description     = \"PE/MZ with specific 0x3F and 0x3E byte spacing\"\n                sample          = \"4762bc6f2a62120c6309036de944d5eb\"\n                reference       = \"/wiki/dridex\"\n\n        strings:\n\t\t$ = {\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F??\n\t\t\t3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F?? 3F\n\t\t}\n\n\t\t$ = {\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E??\n\t\t\t3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E?? 3E\n\t\t }\n\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize <= 4096KB\n                and not pe.is_dll()\n\t\tand all of them\n}\n\nrule PE_MZ_Kernel_Not_Kernel {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-21\"\n                description     = \"PE/MZ with specific kernel32.dll instanced as non-kernel32.dll\"\n                sample          = \"699e2a36312b07f677805829b7c832d5\"\n                reference       = \"/wiki/gootkit\"\n\n        strings:\n\t\t//Lets fixate on byte placement and an upper case ASCII set but a lowercase 'dll'\n\t\t//000f660: 6363 5f5f 5f65 655f 735f 5ff1 6f72 7900  cc___ee_s__.ory.\n\t\t//000f670: 4645 524e 4546 3232 2e64 6c6c 0000 5669  FERNEF22.dll..Vi\n\t\t//000f680: 7274 7561 6c41 6c6c 6f63 0000 7871 6f72  rtualAlloc..xqor\n\n\t\t$a = { 00 (4?|5?)(4?|5?) (4?|5?)(4?|5?) (4?|5?)(4?|5?) 3?3? 2e64 6c6c }\n\n\t\t$b1 = \"KERNEL32.DLL\"\tascii\n\t\t$b2 = \"KERNEL32.dll\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.is_dll()\n                and $a and not any of ($b*)\n}\n\nrule PE_MZ_MF_CAB_cmp {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-02-20\"\n                description     = \"PE/MZ with specific byte ordering of cmp\"\n                sample          = \"e81ea61add3e8788672a9190401289e5\"\n                reference       = \"/wiki/ursnif\"\n\n        strings:\n\t\t//000CAB25  3ADC              cmp bl,ah\n\t\t//000CAB27  3AE0              cmp ah,al\n\t\t//000CAB29  3AE4              cmp ah,ah\n\t\t//000CAB2B  3AE8              cmp ch,al\n\n\t\t//000CAB2D  3AEC              cmp ch,ah\n\t\t//000CAB2F  3AF0              cmp dh,al\n\t\t//000CAB31  3AF4              cmp dh,ah\n\t\t//000CAB33  3AF8              cmp bh,al\n\n\t\t//000CAB35  3AFC              cmp bh,ah\n\t\t//000CAB37  3A08              cmp cl,[bx+si]\n\n\t\t//000CAB39  3B0C              cmp cx,[si]\n\t\t//000CAB3B  3B10              cmp dx,[bx+si]\n\t\t//000CAB3D  3B14              cmp dx,[si]\n\t\t//000CAB3F  3B18              cmp bx,[bx+si]\n\n\t\t//000CAB41  3B1C              cmp bx,[si]\n\t\t//000CAB43  3B20              cmp sp,[bx+si]\n\t\t//000CAB45  3B24              cmp sp,[si]\n\t\t//000CAB47  3B28              cmp bp,[bx+si]\n\t\t//000CAB49  3B2C              cmp bp,[si]\n\n\t\t//000CAB4B  3B30              cmp si,[bx+si]\n\n\t\t$ = {\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3A?C 3A?0 3A?4 3A?8\n\t\t\t3??C 3??8\t\t//This part is really odd to me.  Min->Max in one step\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t\t3B?C 3B?0 3B?4 3B?8\n\t\t}\n\n        condition:\n\t\tfilesize <= 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\n}\n\nrule ASCII_Dropper_NeedABreak\n:malhtml\n{\n        meta:\n                description = \"ASCII programming language instancing and excessively long non-linebroken quoted string\"\n                analyst_notes = \"This is potentially an ASCII script-based dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-19\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/adwind\"\n                sample = \"85096e4eb76c8b65c8ce4aed8d17ee4b\"\n\n        strings:\n               $a1 = \"function\"\tnocase ascii\n\t\t$a2 = /[\\x22\\x27][^\\r\\n\\x22\\x27\\x00\\x20\\x09]{2048}/\tascii\n\t\t$b1 = \";base64,\"\tascii\n\n        //exclusions\n               $exclusion1 = \"'\\\"https://res.cisco.com:443/keyserver/keyserver\\\")'\"\n               $exclusion2 = \"<meta name='rest-upload-url' content='https://outlook.office365.com/Encryption/api.svc/mail/upload\"\n               $exclusion3 = \"<head><base href='http://res.cisco.com/envelopeopener/pf/\"\n               $exclusion4 = \"https://sdata.pb-santander.com/packageDownloadEnvelope.jsp\"     ascii\n               $exclusion5 = \"https://www.broadridge.com/intl/white-paper/shareholder-rights-directive\"\n\n        condition:\n\t            not uint16(0) == 0xcfd0\t//office\n\t\tand not uint32(0) == 0x6d783f3c\t//xml\n\t\tand not uint32(0) == 0x0a786564\t//dex\n                and (      uint8(0) == 0x20\t//Space\n                        or uint8(0) == 0x09\t//Tab\n\t\t\tor uint8(0) == 0x0a\t//LF\n\t\t\tor uint8(0) == 0x0d\t//CR\n\t\t\tor uint8(0) == 0x3c\t//<\n\t\t\tor uint8(0) == 0x24\t//$\n\t\t\tor uint8(0) == 0x27\t//'\n\t\t\tor uint8(0) == 0x22\t//\"\n\t\t\tor uint8(0) == 0x61\t//a...\n\t\t\tor uint8(0) == 0x62\n\t\t\tor uint8(0) == 0x63\n\t\t\tor uint8(0) == 0x64\n\t\t\tor uint8(0) == 0x65\n\t\t\tor uint8(0) == 0x66\n\t\t\tor uint8(0) == 0x67\n\t\t\tor uint8(0) == 0x68\n\t\t\tor uint8(0) == 0x69\n\t\t\tor uint8(0) == 0x6A\n\t\t\tor uint8(0) == 0x6B\n\t\t\tor uint8(0) == 0x6C\n\t\t\tor uint8(0) == 0x6D\n\t\t\tor uint8(0) == 0x6E\n\t\t\tor uint8(0) == 0x6F\n\t\t\tor uint8(0) == 0x70\n\t\t\tor uint8(0) == 0x71\n\t\t\tor uint8(0) == 0x72\n\t\t\tor uint8(0) == 0x73\n\t\t\tor uint8(0) == 0x74\n\t\t\tor uint8(0) == 0x75\n\t\t\tor uint8(0) == 0x76\n\t\t\tor uint8(0) == 0x77\n\t\t\tor uint8(0) == 0x78\n\t\t\tor uint8(0) == 0x79\n\t\t\tor uint8(0) == 0x7A\t//z\n                )\n                and all of ($a*)\n\t\tand not any of ($b*)\n\t\tand not any of ($exclusion*)\n}\n\nrule CryptographyFunction\n{\n  meta:\n    author = \"CISA trusted 3rd party\"\n    incident = \"10271944.r1.v1\"\n    date =    \"2019-12-25\"\n    category = \"Hidden_Cobra\"\n    family = \"HOTCROISSANT\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ALGO_crypto_1 = { 8A [1-5] 32 [1-4] 32 [1-4] 32 [1-4] 88 [1-5] 8A [1-4] 32 [1-4] 22 [1-4] 8B [1-5] 8D [3-7] 33 [1-4] 81 [3-7] C1 [1-5] C1 [1-5] 0B [1-4] 8D [1-5] 33 [1-4] 22 [1-4] C1 [1-5] 33 [1-4] 32 [1-4] 8B [1-4] 83 [1-5] C1 [1-5] 33 [1-4] C1 [1-5] C1 }\n  condition:\n    uint16(0) == 0x5A4D and any of them\n}\n\nrule crypt_constants_2\n{\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n    (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule lsfr_constants {\n  meta:\n    Author=\"NCCIC trusted 3rd party\"\n    Incident=\"10135536\"\n    Date = \"2018/04/19\"\n    category = \"hidden_cobra\"\n    family = \"n/a\"\n    description = \"n/a\"\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $ = {efcdab90}\n    $ = {558426fe}\n    $ = {7856b4c2}\n  condition:\n   (uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n}\n\nrule Office_Excel_4_Macro_Localized\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using Excel 4.0 Macros with a non-en-US localized 'macro' value\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-05\"\n        reference = \"/wiki/azorult\"\n        sample = \"2c93fb1a782b37146be53bd7c7a829da\"\n\n    strings:\n\t$a1 = { 4578 6365 6c20 342e 3020 4d61 }\n\t$a2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 }\n\t$a3 = \"57863656c20342e30204d61\"\t\t\t\t\tnocase ascii\n\t$a4 = \"45007800630065006c00200034002e00300020004d006100\"\tnocase ascii\n\n\t$b1 = { 4578 6365 6c20 342e 3020 4d61 6372 6f }\n\t$b2 = { 4500 7800 6300 6500 6c00 2000 3400 2e00 3000 2000 4d00 6100 6300 7200 6f }\n\t$b3 = \"457863656c20342e30204d6163726f\"\t\t\t\t\tnocase ascii\n\t$b4 = \"45007800630065006c00200034002e00300020004d006100630072006f\"\tnocase ascii\n\n    condition:\n\t(\n\t\t   uint16(0) == 0x5c7b\t\t//rtf\n\t\tor uint32(0) == 0x6d783f3c\t//xml\n\t\tor uint16(0) == 0x0a0d\t\t//asc\n                or uint16(0) == 0x0a0a\t\t//asc\n                or uint16(0) == 0x2020\t\t//asc\n                or uint16(0) == 0x0909\t\t//asc\n                or uint16(0) == 0x213c\t\t//html\n\t        or uint16(0) == 0xcfd0\t\t//office\n\t)\n\tand any of ($a*)\n\tand ((#a1 + #a2 + #a3 + #a4) > (#b1 + #b2 + #b3 + #b4))\n}\n\nrule qakbot_sad_math : vbs {\n  meta:\n    description = \"Finds qakbot stage 1 vbs with sad math inside of it.\"\n    date = \"2020-02-04\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ae4cb914039c22b52ab5c2580c537de9\"\n    reference = \"/wiki/qakbot\"\n    tlp = \"green\"\n    notes = \"This is low response (~400 samples ever), but no falses.\"\n  strings:\n    $dim = \"dim \"\n    $sad = /\\x0a[a-zA-Z]{1,6}\\s=\\s([0-9]{1,4}\\s[\\+\\-]\\s){3,32}[0-9]{1,5}\\x0a/\n  condition:\n    filesize > 100KB and\n    $dim and #sad > 20\n}\n\nrule HTML_msBlob\n:malhtml\n{\n        meta:\n                description = \"ASCII HTML attachment using JavaScript .msSaveOrOpenBlob\"\n                analyst_notes = \"This is potentially a maldoc dropper\"\n                author = \"Nathan Fowler\"\n                date = \"2020-02-04\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/poshadvisor\"\n\t\treference = \"meows://developer.mozilla.org/en-US/docs/Web/API/Navigator/msSaveOrOpenBlob\"\n\t\tsample = \"e6cd6c3baf1aaf0ad8e74461e9b09cc4\"\n\n        strings:\n                $ = \".msSaveOrOpenBlob\"\tascii\n                $ = \".msSaveBlob\"\tascii\n\n        condition:\n                (\t   uint16(0) == 0x0a0d\n\t\t\tor uint16(0) == 0x0a0a\n\t\t\tor uint16(0) == 0x2020\n\t\t\tor uint16(0) == 0x0909\n\t\t\tor uint16(0) == 0x213c\n\t\t)\n                and any of them\n}\n\nrule Office_VBA_Public\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using regsvr32, wmic process, or C:/Users/Public/ with a URL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-02-03\"\n        reference = \"\"\n        sample = \"50d518246c2b61f5b427948f87a0aa24\"\n\n    strings:\n\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $bad1 = \"regsvr32\"              nocase ascii\n        $bad2 = \"wmic process\"          nocase ascii\n        $bad3 = \"wmic.exe process\"      nocase ascii\n        $bad4 = \"c:\\\\users\\\\public\\\\\"   nocase ascii\n\n        $url1 = \"https://\"\tnocase ascii\n        $url2 = \"http://\"\tnocase ascii\n        $url3 = \"ftp://\"        nocase ascii\n\n    condition:\n\tuint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($vb*)\n        and any of ($bad*)\n        and any of ($url*)\n}\n\nrule PE_MZ_MF_xor_spacebutt {\n\n        meta:\n\t\tauthor          = \"Nathan Fowler\"\n                date            = \"2020-01-31\"\n                description     = \"PE/MZ with specific byte ordering of xor and and [bx+si],ah to EOF\"\n                sample          = \"d0e0aac1a7a2f82dfbf89fedeee14a40\"\n                reference\t= \"/wiki/bladabindi\"\n\n        strings:\n                //0014EAE1  301E170D          xor [0xd17],bl\n                //0014EAE5  31363031          xor [0x3130],si\n                //0014EAE9  3132              xor [bp+si],si\n                //0014EAEB  3030              xor [bx+si],dh\n                //0014EAED  3030              xor [bx+si],dh\n                //0014EAEF  3030              xor [bx+si],dh\n                $ = { 3030 3030 3030 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and uint32(filesize-4) == 0x20202020\n                and all of them\n\n}\n\nrule PE_MZ_MF_lumberjax6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated push ax at 6 and 8 byte distances\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074FC5  50                push ax\n\t\t//00074FC6  41                inc cx\n\t\t//00074FC7  44                inc sp\n\t\t//00074FC8  44                inc sp\n\t\t//00074FC9  49                dec cx\n\t\t//00074FCA  4E                dec si\n\t\t//00074FCB  47                inc di\n\t\t//00074FCC  50                push ax\n\t\t//00074FCD  41                inc cx\n\t\t//00074FCE  44                inc sp\n\t\t//00074FCF  44                inc sp\n\t\t//00074FD0  49                dec cx\n\t\t//00074FD1  4E                dec si\n\t\t//00074FD2  47                inc di\n\t\t//00074FD3  58                pop ax\n\t\t//00074FD4  58                pop ax\n\t\t//00074FD5  50                push ax\n\t\t$ = {\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50[6] 50[8] 50[6] 50[8] 50[6] 50[8]\n\t\t\t50\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule PE_MZ_MF_inc_add_db {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-28\"\n                description     = \"PE/MZ with specific byte ordering of repeated inc word, add, db, at fixed offsets\"\n                sample          = \"d1e9f86ae022c2905bf3f0cf9662a76b\"\n                reference       = \"/wiki/agenttesla\"\n\n        strings:\n\t\t//00074AAD  FF00              inc word [bx+si]\n\t\t//00074AAF  00FF              add bh,bh\n\t\t//00074AB1  FF                db 0xff\n\t\t//00074AB2  FF                db 0xff\n\t\t//00074AB3  FF                db 0xff\n\t\t//00074AB4  FF                db 0xff\n\t\t//00074AB5  FF00              inc word [bx+si]\n\t\t//00074AB7  00FF              add bh,bh\n\t\t//00074AB9  FF                db 0xff\n\t\t//00074ABA  FF                db 0xff\n\t\t//00074ABB  FF                db 0xff\n\t\t//00074ABC  FF                db 0xff\n\t\t$ = { \tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF [4]\n\t\t\tFF00 00FF\n\t\t}\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_Macro_Long\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using &H long manipulation with Chr, Asc, Len, or Mid with high compatibility\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-28\"\n        reference = \"/wiki/formbook\"\n\tsample = \"7d44686ad010e6c6a56a9c1762667b7d\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n\t$hc1 = \"VBA6\"\t\tascii\n\t$hc2 = \"VBA7\"\t\tascii\n\t$hc3 = \"Win16\"\t\tascii\n\t$hc4 = \"Win32\"\t\tascii\n\t$hc5 = \"Win64\"\t\tascii\n\t$hc6 = \"Mac\"\t\tascii\n\n\t$f1 = \"Chr\"\t\tascii\n\t$f2 = \"Mid\"\t\tascii\n\t$f3 = \"Asc\"\t\tascii\n\t$f4 = \"Len\"\t\tascii\n\n\t$l1 = \"\\\"&H\\\"\"\t\tascii\n\t$l2 = \"'&H'\"\t\tascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n\tand all of ($hc*)\n\tand any of ($f*)\n\tand any of ($l*)\n}\n\nrule PE_MZ_lumberjax_6x8 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2020-01-27\"\n                description     = \"PE/MZ with specific byte ordering of repeated ax\"\n                sample          = \"f6f4e15ed664afc6bdd3abf5ca77edc5\"\n                reference       = \"/wiki/formbook\"\n\n        strings:\n\n        //push ax\n        $ = {\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50[8] 50[6] 50[8] 50[6] 50[8] 50[6] 50[8] 50[6]\n            50\n        }\n\n        //add [b?+?i],ax\n        $ = {\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n            010? 010? 010? 010? 010? 010? 010? 010?\n        }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not pe.characteristics & pe.DLL\n                and all of them\n}\n\nrule Office_OleObject_Terse_WideURL\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using URL wide encoding in an terse Ole Sheet\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\n    strings:\n        //OLE\n        $a1 = { 00 4f00 6c00 6500 0000 }\n\n        //Numeric \"Sheet[0-9]!Object \"\n        $a2 = { 0000 5368 6565 74?? 214f 626a 6563 7420 }\n\n        //URL embed\n        $u1 = \"http://\"         wide\n        $u2 = \"https://\"        wide\n        $u3 = \"ftp://\"\t        wide\n\n    condition:\n\tfilesize < 3KB\n\tand uint32(0) == 0xe011cfd0\n\tand all of ($a*)\n\tand any of ($u*)\n}\n\nrule Office_XML_Ole_autoLoad\n:maldoc\n{\n    meta:\n\tdescription = \"Potential maldoc using an embedded OLE object attempting to auto execute\"\n        analyst_notes = \"There is a very high probability of base64 encoded powershell call from this URL.  Initially seen in CrimsonRat\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2020-01-23\"\n        reference = \"/wiki/crimsonrat\"\n        firefly\t= \"Ticket #87466\"\n\tsample = \"69d4883858b44f0c41ba68493c389885\"\n\tmore_info = \"meows://docs.microsoft.com/en-us/office/vba/api/excel.oleobject.autoload\"\n\n    strings:\n\t$ = /<oleObjects><oleObject[^\\r\\n]+autoLoad=[\\x22\\x27]?(1|true)[\\x22\\x27]?/\tnocase ascii\n\n    condition:\n\tfilesize < 2KB\n\tand uint32(0) == 0x6d783f3c\n\tand all of them\n}\n\nrule Office_Emotet_JibJAB\n:maldoc\n{\n    meta:\n        description = \"Potential Emotet maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The JAB variables are the use of a dollar-sign at the very beginning of the base64 encoding\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-15\"\n\tmodified = \"2020-01-22\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/emotet\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        //$jab1 = { 0000 4a41 42 }\n        //$jab2 = { 0000 4a00 4100 4200 }\n\n\t//2020-01-15 seen in d79f7d6e6d53c51a1bc68ead8c78a3a6\n\t//00002c0: 2020 2020 4a41 4257 4147 732c 2c2c 2c73      JABWAGs,,,,s\n\t$jab1 = /[\\x00\\x20\\x09\\x3c\\r\\n]{2}J\\x00?A\\x00?B/\tascii\n\n\t//2020-01-22, negation handling for JABIL INC\n\t$neg1 = { 0000 4a41 4249 4c20 494e 43 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n\tand not any of ($neg*)\n}\n\nrule PE_MZ_MF_dridexpacker {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2020-01-22\"\n\t\tdescription     = \"PE/MZ with specific add/xor logic potentially Dridex or similar packer\"\n\t\tsample          = \"551de8d77807cee610e4ed129adde44f\"\n\t\treference       = \"/wiki/dridex\"\n\n\tstrings:\n\t\t//00037014  0020              add [bx+si],ah\n\t\t//00037016  0000              add [bx+si],al\n\t\t//00037018  3000              xor [bx+si],al\n\t\t//0003701A  0000              add [bx+si],al\n\n\t\t$ = { 0020 0000 3000 0000 }\n\n\t\t//0003600E  0100              add [bx+si],ax\n\t\t//00036010  1000              adc [bx+si],al\n\t\t//00036012  0000              add [bx+si],al\n\t\t//00036014  1800              sbb [bx+si],al\n\t\t//00036016  00800000          add [bx+si+0x0],al\n\t\t//0003601A  0000              add [bx+si],al\n\t\t//0003601C  0000              add [bx+si],al\n\t\t//0003601E  0000              add [bx+si],al\n\t\t//00036020  0000              add [bx+si],al\n\t\t//00036022  0000              add [bx+si],al\n\t\t//00036024  0000              add [bx+si],al\n\t\t//00036026  0100              add [bx+si],ax\n\t\t//00036028  0100              add [bx+si],ax\n\t\t//0003602A  0000              add [bx+si],al\n\t\t//0003602C  3000              xor [bx+si],al\n\t\t//0003602E  00800000          add [bx+si+0x0],al\n\t\t//00036032  0000              add [bx+si],al\n\t\t//00036034  0000              add [bx+si],al\n\t\t//00036036  0000              add [bx+si],al\n\n\t\t$ = { 00 00800000 [19] 00 00800000 0000 }\n\n\t\t//Kernel32 use\n\t\t$ = \"KERNEL32.dll\"    ascii\n\t\t$ = \"kernel32\"        ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand not pe.characteristics & pe.DLL\n\t\tand all of them\n}\n\nrule PE_MZ_MF_coocoo4coccopuffs {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-21\"\n        description     = \"PE/MZ with specific abnormal add, ror byte, or al\"\n        sample          = \"085ad62be3425cb4d822aec3396a159c\"\n        reference       = \"/wiki/agenttesla\"\n\n    strings:\n\t//000CB3F7  0000              add [bx+si],al\n\t//000CB3F9  0000              add [bx+si],al\n\t//000CB3FB  0000              add [bx+si],al\n\t//000CB3FD  0000              add [bx+si],al\n\t//000CB3FF  0000              add [bx+si],al\n\t//000CB401  C00C00            ror byte [si],byte 0x0\n\t//000CB404  0C00              or al,0x0\n\t//000CB406  0000              add [bx+si],al\n\t//000CB408  1030              adc [bx+si],dh\n\t//000CB40A  0000              add [bx+si],al\n\t//000CB40C  0000              add [bx+si],al\n\t//000CB40E  0000              add [bx+si],al\n\t//000CB410  0000              add [bx+si],al\n\t//000CB412  0000              add [bx+si],al\n\t//000CB414  0000              add [bx+si],al\n\t$ = { 0000 C00C00 0C00 0000 }\n\n\t//000002D9  7310              jnc 0x2eb\n\t//000002DB  0000              add [bx+si],al\n\t//000002DD  0A800100          or al,[bx+si+0x1]\n\t//000002E1  0004              add [si],al\n\t//000002E3  7311              jnc 0x2f6\n\t//000002E5  0000              add [bx+si],al\n\t//000002E7  0A800200          or al,[bx+si+0x2]\n\t//000002EB  0004              add [si],al\n\t//000002ED  7312              jnc 0x301\n\t//000002EF  0000              add [bx+si],al\n\t//000002F1  0A800300          or al,[bx+si+0x3]\n\t//000002F5  0004              add [si],al\n\t//000002F7  7313              jnc 0x30c\n\t//000002F9  0000              add [bx+si],al\n\t//000002FB  0A800400          or al,[bx+si+0x4]\n\t//000002FF  0004              add [si],al\n\t//00000301  7314              jnc 0x317\n\t//00000303  0000              add [bx+si],al\n\t$ = {\n\t\t     0000 [2]0100 [2]\n\t\t[2] 0000 [2]0200 [2]\n\t\t[2] 0000 [2]0300 [2]\n\t\t[2] 0000 [2]0400 [2]\n\t\t[2] 0000\n\t}\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_MF_nummyC_xorciser {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2020-01-17\"\n        description     = \"PE/MZ with specific abnormal xor with excessive cccc byte separation\"\n        sample          = \"\"\n        reference       = \"/wiki/emotet\"\n\n    strings:\n        //0001F379  33B033B4          xor si,[bx+si-0x4bcd]\n        //0001F37D  33B833BC          xor di,[bx+si-0x43cd]\n        //0001F381  33C0              xor ax,ax\n        //0001F383  33C4              xor ax,sp\n        //0001F385  33C8              xor cx,ax\n        //0001F387  33CC              xor cx,sp\n        //0001F389  33D0              xor dx,ax\n        //0001F38B  33D4              xor dx,sp\n        //0001F38D  33F8              xor di,ax\n        //0001F38F  33FC              xor di,sp\n        //0001F391  3314              xor dx,[si]\n        //0001F393  342C              xor al,0x2c\n        //0001F395  3458              xor al,0x58\n        //0001F397  345C              xor al,0x5c\n        //0001F399  3460              xor al,0x60\n        //0001F39B  3464              xor al,0x64\n        $ = { 33C0 33C4 33C8 33CC }\n\n        //0001F3C9  34C0              xor al,0xc0\n        //0001F3CB  34C4              xor al,0xc4\n        //0001F3CD  34C8              xor al,0xc8\n        //0001F3CF  34CC              xor al,0xcc\n        $ = { 34C0 34C4 34C8 34CC }\n\n        //0001F362  803384            xor byte [bp+di],0x84\n        $ = { 8033 }\n\n        //Feelz\n        $ = {\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n            cccc cccc cccc cccc cccc cccc cccc cccc\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule Office_Ursnif_PD94\n:maldoc\n{\n    meta:\n        description = \"Potential Ursnif maldoc using base64 wide encoding with OLE/Macros, likely a maldoc dropper\"\n\tanalyst_notes = \"There is a very high probability of base64 encoded powershell in this document embedded in some way.  The PD94 variables are the use base64 encoded XML likely xsl at the very beginning\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-12-19\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/ursnif\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $ao1 = \"AutoOpen\"       nocase wide ascii\n        $ao2 = \"Auto_Open\"      nocase wide ascii\n        $ao3 = \"Document_Open\"  nocase wide ascii\n        $ao4 = \"Workbook_Open\"  nocase wide ascii\n        $ao5 = \"AutoExec\"       nocase wide ascii\n        $ao6 = \"Auto_Exec\"      nocase wide ascii\n        $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n        $vb1 = \"VBE\"            nocase wide ascii\n        $vb2 = \"VBA\"            nocase wide ascii\n        $vb4 = \"OLE\"            nocase wide ascii\n        $vb5 = \"stdole\"         nocase wide ascii\n        $vb6 = \"macro\"          nocase wide ascii\n\n        $jab1 = { 0000 5044 3934 6257 7767 646d 56 }\n        $jab2 = { 0000 5000 4400 3900 3400 6200 5700 7700 6700 6400 6d00 5600 }\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($ao*)\n        and any of ($vb*)\n        and any of ($jab*)\n}\n\nrule PE_MZ_MF_push_ecx_or {\n\n    meta:\n\tauthor          = \"Nathan Fowler\"\n        thanks          = \"Jerry Zepp\"\n        date            = \"2019-12-06\"\n        description     = \"PE/MZ with too much push ecx with or ecx,ebx\"\n        sample          = \"\"\n        reference\t= \"\"\n\n    strings:\n\n//\t0003F18B  51                push ecx\n//\t0003F18C  51                push ecx\n//\t0003F18D  51                push ecx\n//\t0003F18E  51                push ecx\n//\t0003F18F  51                push ecx\n//\t0003F190  51                push ecx\n//\t0003F191  2C17              sub al,0x17\n//\t0003F193  1010              adc [eax],dl\n//\t0003F195  0B0B              or ecx,[ebx]\n//\t0003F197  0B0B              or ecx,[ebx]\n//\t0003F199  0B050B0B0B0B      or eax,[dword 0xb0b0b0b]\n//\t0003F19F  0C0D              or al,0xd\n\n        $ = { 5151 5151 5151 5151 [2-4] 0B0B }\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule certificate_chicanery_b64_too_long {\n  meta:\n    description = \"Detects pem-encoded certificates that are too long to be real.\"\n    date = \"2019-12-05\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"ffe3a6b7edb96c0e33fc50b514d46ac4\"\n    tlp = \"green\"\n    analyst_note = \"Fake pem-encoded certificates that are actually files. Maximum pem length is 32768 by standard.\"\n    prod = \"true\"\n  strings:\n    $head = \"-----BEGIN CERTIFICATE-----\" ascii\n    $tail = \"-----END CERTIFICATE-----\" ascii\n  condition:\n    uint16(0) == 0x2d2d and filesize > 33KB\n    and $head at 0 and $tail in (filesize-32..filesize)\n    and #head == 1 and #tail == 1\n}\n\nrule PE_MZ_MF_xor_enter {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-05\"\n        description     = \"PE/MZ with similar xor against eax dh,bh to enter\"\n        sample          = \"\"\n        reference       = \"/wiki/hawkeye\"\n\n    strings:\n\n        //00151EEC  A030A830AC        mov al,[0xac30a830]\n        //00151EF1  30B030B430B8      xor [eax-0x47cf4bd0],dh\n        //00151EF7  30BC30C030C430    xor [eax+esi+0x30c430c0],bh\n        //00151EFE  C830CC30          enter 0xcc30,0x30\n\n        $ = { A0[4] 30B?[4] 30B?[5] C830 }\n        $ = { CCCC CCCC CCCC }     //Bunch of int3 nonsense\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and not uint8(uint32(0x3c)+23) == 0x21\n        and all of them\n}\n\nrule PE_MZ_MF_pop_xor {\n\n    meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-12-02\"\n        description     = \"PE/MZ with similar xor against al 0x?6->0x?e\"\n        sample          = \"6c0bd3a2425bde56d7e827ce036c6c0d\"\n        reference       = \"/wiki/sodinokibi\"\n\n    strings:\n\n        //00028C58  5B                pop ebx\n        //00028C59  3464              xor al,0x64\n        //00028C5B  346B              xor al,0x6b\n        //00028C5D  3480              xor al,0x80\n        //00028C5F  348C              xor al,0x8c\n        //00028C61  3496              xor al,0x96\n        //00028C63  349E              xor al,0x9e\n        //00028C65  34A6              xor al,0xa6\n        //00028C67  34AE              xor al,0xae\n        //00028C69  34B6              xor al,0xb6\n        //00028C6B  34BE              xor al,0xbe\n        //00028C6D  34C6              xor al,0xc6\n        //00028C6F  34CE              xor al,0xce\n        //00028C71  34D6              xor al,0xd6\n        //00028C73  34DE              xor al,0xde\n        //00028C75  34E6              xor al,0xe6\n        //00028C77  34EE              xor al,0xee\n        //00028C79  34F6              xor al,0xf6\n        //00028C7B  34FE              xor al,0xfe\n        //00028C7D  3406              xor al,0x6\n\n        $ = { A6?? AE?? B6?? BE?? C6?? CE?? D6?? DE?? E6?? EE?? F6?? FE }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_VBS_WSHRat {\n\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-12-02\"\n\t\tdescription     = \"PE/MZ or VBS with literal text indicating it is WSHRat\"\n\t\tsample          = \"d2c395fe219cf04c7f57ea75f312f028\"\n\t\treference       = \"/wiki/houdini, /wiki/wshrat\"\n\n\tstrings:\n\n\t\t//00005520: 1243 6f70 7972 6967 6874 20c2 a920 2032  .Copyright ..  2\n\t\t//00005530: 3031 3900 000a 0100 056b 6c70 6c75 0000  019......klplu..\n\t\t//00005540: 1201 000d 5753 4852 6174 2050 6c75 6769  ....WSHRat Plugi\n\t\t//00005550: 6e00 0000 7c71 0000 0000 0000 0000 0000  n...|q..........\n\t\t//00005560: 9e71 0000 0020 0000 0000 0000 0000 0000  .q... ..........\n\t\t$ = \"WSHRat \"\tascii\n\t\t$ = \"NIUm\"\tascii // WSHRat\n\t\t$ = \"0hSYX\"\tascii // WSHRat\n\t\t$ = \"SFJhdC\"\tascii // WSHRat\n\n\tcondition:\n\t\t((uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550)\n\t\tor uint8(0) == 0x27)\n\t\tand any of them\n}\n\nrule Office_Macro_IntBuilding\n{\n        meta:\n                description = \"Office document with an excessively long single byte split-based tokenized string likely using binary write and put to drop an executable\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-21\"\n                sample = \"fbe55179449262e64d524738ab63f00a\"\n                reference = \"/wiki/crimsonrat\"\n\n        strings:\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//YARA will go nuts unless it has a forward anchor generating atoms\n\t\t$bad_mamajama = /\\x00([0-9]{1,3}[^0-9]){1024}/\n\n        condition:\n                uint16(0) == 0xcfd0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $bad_mamajama\n\n}\n\nrule PE_MZ_CrimsonRAT {\n\n        meta:\n                author          = \"Nathan Fowler\"\n\t\tthanks\t\t= \"Jason Blanks, Jason Reaves\"\n                date            = \"2019-11-21\"\n                description     = \"PE/MZ with a fixed unique packer/crypter/attribution string identified by Jason Blanks\"\n                sample          = \"ae23d2c808c2849dcd0cf2f1bdcf98d6\"\n                reference       = \"/wiki/crimsonrat\"\n\n        strings:\n\n\t\t$ = \"dooursuac\"\t\t\t\t\tnocase wide ascii\n\t\t$ = \"71461f04-2faa-4bb9-a0dd-28a79101b599\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule Office_Macro_Echo\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto open, and @echo off\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-11-20\"\n                tlp = \"GREEN\"\n                sample = \"598ae1d71df7dee7c7f8a39fc723cdef, 5ec4fa2f8e0ceb362148da93b98a5839\"\n                reference = \"/wiki/dridex\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness = \"@echo off\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($vb*)\n                and any of ($ao*)\n                and $badness\n}\n\nrule HTML_Meta_Refresh\n:malhtml\n{\n\tmeta:\n\t\tdescription = \"ASCII HTML attachment using META REFRESH\"\n\t\tanalyst_notes = \"This is potentially phishing or highly abnormal\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-24\"\n\t\tmodified = \"2019-11-19\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$r1 = /<meta[\\x20\\x09\\r\\n]+HTTP-EQUIV=[\\x22\\x27\\r\\n]*REFRESH[\\r\\n\\x22\\x27\\x20\\x09]*content=/\tnocase ascii\n\n\t\t//Exclusions\n\t\t$e1 = \".citrixdata.com/\"\tascii\n\t\t$e2 = \".force.com/\"\t\tascii\n\t\t$e3 = \".sharefile.com/\"\t\tascii\n\t\t$e4 = \".documentforce.com/\"\tascii\n\t\t$e5 = \".salesforce.com/\"\tascii\n\n\tcondition:\n\t\tfilesize < 8KB\n\t\tand uint16(0) != 0xcfd0\n\t\tand any of ($r*)\n\t\tand not any of ($e*)\n}\n\n\nrule PE_MZ_Fixed_100byte_B64 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-14\"\n                description     = \"PE/MZ with a fixed 100 bytes sequentially separated by quad-null at least 32 times\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference       = \"/wiki/emotet\"\n\n        strings:\n\n\t\t$b64 = /(\\x00\\x00\\x00\\x00[A-Za-z0-9\\x2b\\x2f\\x3d]{100}){32}\\x00\\x00\\x00\\x00/\n\t\t$dot_net = \"WrapNonExceptionThrows\"\n\n        condition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $b64\n\t\tand not $dot_net\n}\n\nrule Office_Macro_Forms_DoubleEscapePath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office document with macro code using Microsoft Forms 2.0 with an escaped path string\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-11-14\"\n\t\ttlp = \"GREEN\"\n\t\tsample = \"3a94097e0ce4d1051b1c4283349b0028\"\n\t\treference = \"/wiki/ursnif\"\n\n\tstrings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$vb1 = \"VBE\"            nocase wide ascii\n\t\t$vb2 = \"VBA\"            nocase wide ascii\n\t\t$vb4 = \"OLE\"            nocase wide ascii\n\t\t$vb5 = \"stdole\"         nocase wide ascii\n\t\t$vb6 = \"macro\"          nocase wide ascii\n\n\t\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t\t$badness1 = \"Microsoft Forms 2.0 Form\"\t\twide ascii\n\t\t$badness2 = \"Embedded Object\"\t\t\twide ascii\n\t\t$badness3 = \"c:\\\\\\\\\"\t\t\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($vb*)\n\t\tand any of ($ao*)\n\t\tand all of ($badness*)\n}\n\nrule Office_Forms_ShellV_ActiveWindow\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0, ShellV, and ActiveWindow\"\n\n\tstrings:\n\t\t$ = \"Microsoft Forms 2.0 Form\"\n\t\t$ = \"Embedded Object\"\n\t\t$ = \"ShellV\"\n\t\t$ = \"ActiveWindow\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of them\n}\n\nrule Office_Macro_Forms_B64\n:maldoc\n{\n\tmeta:\n\t\tauthor\t= \"Nathan Fowler\"\n\t\tthanks\t= \"Peter Misurek\"\n\t\tdate\t= \"2019-11-11\"\n\t\tsample\t= \"dca1e5c76d9bb93696784beabe5b8a94\"\n\t\tdescription = \"Office document using Forms 2.0 and what appears to be a long base64 embed with macro code\"\n\n\tstrings:\n\t\t//0000e20: 4d69 6372 6f73 6f66 7420 466f 726d 7320  Microsoft Forms\n\t\t//0000e30: 322e 3020 466f 726d 0010 0000 0045 6d62  2.0 Form.....Emb\n\t\t//0000e40: 6564 6465 6420 4f62 6a65 6374 000d 0000  edded Object....\n\t\t//0000e50: 0046 6f72 6d73 2e46 6f72 6d2e 3100 f439  .Forms.Form.1..9\n\n\t\t$f1 = \"Microsoft Forms 2.0 Form\"\n\t\t$f2 = \"Embedded Object\"\n\n\t\t//Base64 fixation on \\x2b\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2f]{1,256}\\x2b\\x2b?){8}/\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0\n\t\tand all of ($f*)\n\t\tand $b64\n\t\tand any of ($vb*)\n}\n\nrule PE_MZ_MF_ButtXorcising_00aa800 {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-07\"\n                description     = \"PE/MZ with 0x00 to xor eax,dh at 0x00aa800\"\n                sample          = \"119272817301ed65056fce0a988ca4e2\"\n                reference       = \"/wiki/emotet\"\n\n        condition:\n\t\t//000AA7FC  0000              add [eax],al\n\t\t//000AA7FE  0000              add [eax],al\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3030              xor [eax],dh\n\t\t//000AA804  0000              add [eax],al\n\t\t//000AA806  0000              add [eax],al\n\n\t\t//000AA800  3030              xor [eax],dh\n\t\t//000AA802  3000              xor [eax],al\n\n\t\t//Hold my beer!\n\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d\n\t\tand uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint16(0x00aa800) == 0x3030\n\t\tand (\n\t\t\t   uint16(0x00aa800+2) == 0x0030\n\t\t\tor uint16(0x00aa800+2) == 0x3030\n\t\t\tor uint16(0x00aa800+2) == 0x3000\n\t\t\tor uint16(0x00aa800+2) == 0x0000\n\t\t)\n\t\tand uint32(0x00aa800-4) == 0x00000000\n\t\tand uint32(filesize-4) == 0x00000000\n}\n\nrule PE_MZ_MF_nop_cli_aaa {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with a potential nop loop and plenty of cli to aaa\"\n                sample          = \"12a3241475e69b231534c13f91bb090f\"\n                reference\t= \"/wiki/formbook\"\n\n        strings:\n\t\t//000960C4  00DA              add dl,bl\n\t\t//000960C6  90                nop\n\t\t//000960C7  E200              loop 0x960c9\n\t\t//000960C9  A5                movsd\n\n\t\t$s1 = { 90?? ??a5 }\n\n\t\t//0009691D  FA                cli\n\t\t//0009691E  37                aaa\n\n\t\t$s2 = { fa37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #s2 > 32\n}\n\nrule PE_MZ_MF_aaa_xor {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-05\"\n                description     = \"PE/MZ with aaa to xor likely at fixed byte spaces repeatedly\"\n                sample          = \"2a59b2da2f755298511fb02d0c562d09, ade3222c8a1116639e08ecc6a945f16a\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//0003700B  37                aaa\n\t\t//0003700C  3233              xor dh,[bp+di]\n\t\t//0003700E  363039            xor [ss:bx+di],bh\n\t\t//00037011  363338            xor di,[ss:bx+si]\n\t\t//00037014  3431              xor al,0x31\n\t\t//00037016  37                aaa\n\t\t//00037017  3232              xor dh,[bp+si]\n\t\t//00037019  3034              xor [si],dh\n\t\t//0003701B  3235              xor dh,[di]\n\t\t//0003701D  3131              xor [bx+di],si\n\t\t//0003701F  3838              cmp [bx+si],bh\n\t\t//00037021  37                aaa\n\t\t//00037022  3339              xor di,[bx+di]\n\t\t//00037024  3338              xor di,[bx+si]\n\t\t//00037026  3039              xor [bx+di],bh\n\t\t//00037028  3237              xor dh,[bx]\n\t\t//0003702A  353035            xor ax,0x3530\n\t\t//0003702D  37                aaa\n\n\t\t$s1 = { 37 [8-12] 37 [8-12] 37 [8-12] 37 }\n\n\t\t//00037044  37                aaa\n\t\t//00037045  3137              xor [bx],si\n\t\t//00037047  37                aaa\n\n\t\t$s2 = { 37 [2] 37 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $s1 in (filesize-128..filesize)\n\t\tand $s2 in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_xor_add {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with xor edi, and an odd add of null bytes via add eax+eax+0x0\"\n                sample          = \"c65c495d5b6c6141f9075f333376577a\"\n                reference\t= \"/wiki/troldesh\"\n\n        strings:\n\t\t//000F8770  0E                push cs\n\t\t//000F8771  6C                insb\n\t\t//000F8772  33FF              xor edi,edi\n\t\t//000F8774  003A              add [edx],bh\n\t\t//000F8776  00740000          add [eax+eax+0x0],dh\n\n\t\t$ = { 33ff 003a 0074 0000 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MF_ButtXorcising {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a significant amount of cmp and xor at EOF likely\"\n                sample          = \"b89aa47071ff9e25758503b9ebf830e1\"\n                reference\t= \"/wiki/netwire\"\n\n        strings:\n\t\t//00045203  3031              xor [ecx],dh\n\t\t//00045205  3534 3438 30        xor eax,0x30383434\n\t\t//0004520A  3335 3931 3736      xor esi,[dword 0x36373139]\n\t\t//00045210  3135 3538 3636      xor [dword 0x36363835],esi\n\t\t//00045216  3536 3936 30        xor eax,0x30363936\n\t\t//0004521B  3238              xor bh,[eax]\n\t\t//0004521D  3239              xor bh,[ecx]\n\t\t//0004521F  3031              xor [ecx],dh\n\t\t//00045221  3335 3333 3733      xor esi,[dword 0x33373333]\n\t\t//00045227  3931              cmp [ecx],esi\n\t\t//00045229  333535373834      xor esi,[dword 0x34383735]\n\t\t//0004522F  3036              xor [esi],dh\n\t\t//00045231  363332            xor esi,[ss:edx]\n\t\t//00045234  3539343034        xor eax,0x34303439\n\t\t//00045239  383533383830      cmp [dword 0x30383833],dh\n\t\t//0004523F  3031              xor [ecx],dh\n\t\t//00045241  3534343830        xor eax,0x30383434\n\t\t//00045246  333539313736      xor esi,[dword 0x36373139]\n\t\t//0004524C  313535383636      xor [dword 0x36363835],esi\n\n\t\t$butt = { 3031 [16-48] 3031 [16-48] 3031 }\n\n\tcondition:\n                filesize < 8192KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #butt >= 8\n\t\tand $butt in (filesize-128..filesize)\n}\n\nrule PE_MZ_MF_MoveNJump {\n\n        meta:\n             \tauthor          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a very tight sequence of mov eax,eax with jump dword to similar bytes\"\n                sample          = \"b13338b707a3f01899b967e510470d57\"\n                reference\t= \"/wiki/imminentrat\"\n\n        strings:\n                //0000400  FF252C514100      jmp dword [dword 0x41512c]\n                //00000406  8BC0              mov eax,eax\n                //00000408  FF2528514100      jmp dword [dword 0x415128]\n                //0000040E  8BC0              mov eax,eax\n                //00000410  FF2524514100      jmp dword [dword 0x415124]\n                //00000416  8BC0              mov eax,eax\n                //00000418  FF2520514100      jmp dword [dword 0x415120]\n                //0000041E  8BC0              mov eax,eax\n                //00000420  FF251C514100      jmp dword [dword 0x41511c]\n                //00000426  8BC0              mov eax,eax\n                //00000428  FF2518514100      jmp dword [dword 0x415118]\n                //0000042E  8BC0              mov eax,eax\n                //00000430  FF2538514100      jmp dword [dword 0x415138]\n                //00000436  8BC0              mov eax,eax\n                //00000438  FF2514514100      jmp dword [dword 0x415114]\n                //0000043E  8BC0              mov eax,eax\n                //00000440  FF2510514100      jmp dword [dword 0x415110]\n                //00000446  8BC0              mov eax,eax\n                //00000448  FF250C514100      jmp dword [dword 0x41510c]\n                //0000044E  8BC0              mov eax,eax\n                //00000450  FF2508514100      jmp dword [dword 0x415108]\n                //00000456  8BC0              mov eax,eax\n                //00000458  FF2504514100      jmp dword [dword 0x415104]\n                //0000045E  8BC0              mov eax,eax\n                //00000460  FF2548514100      jmp dword [dword 0x415148]\n                //00000466  8BC0              mov eax,eax\n                //00000468  FF2544514100      jmp dword [dword 0x415144]\n                //0000046E  8BC0              mov eax,eax\n                //00000470  FF2540514100      jmp dword [dword 0x415140]\n                //00000476  8BC0              mov eax,eax\n                //00000478  FF2554514100      jmp dword [dword 0x415154]\n                //0000047E  8BC0              mov eax,eax\n                //00000480  FF2550514100      jmp dword [dword 0x415150]\n                //00000486  8BC0              mov eax,eax\n                //00000488  FF2500514100      jmp dword [dword 0x415100]\n                //0000048E  8BC0              mov eax,eax\n                //00000490  FF25FC504100      jmp dword [dword 0x4150fc]\n\n                $ = {\n                     \tff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n                        ff25 ???? 4100\n                        8bc0\n        }\n\n\tcondition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_MF_push_inc_dec_pop_xor {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and xor\"\n\t\tsample\t\t= \"682226ea12f4323a3cbba4f6d05cc731\"\n\t\treference\t= \"/wiki/trickbot\"\n\n        strings:\n                //000C01D4  50                push eax\n                //000C01D5  41                inc ecx\n                //000C01D6  44                inc esp\n                //000C01D7  44                inc esp\n                //000C01D8  49                dec ecx\n                //000C01D9  4E                dec esi\n                //000C01DA  47                inc edi\n                //000C01DB  58                pop eax\n                //000C01DC  58                pop eax\n                //\n                //000C01DD  50                push eax\n                //000C01DE  41                inc ecx\n                //000C01DF  44                inc esp\n                //000C01E0  44                inc esp\n                //000C01E1  49                dec ecx\n                //000C01E2  4E                dec esi\n                //000C01E3  47                inc edi\n\n                $wtf1 = {\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                                5041 4444 494e 4758 58\n                                5041 4444 494e 47\n                }\n\n\t\t//0009C001  42                inc edx\n\t\t//0009C002  3130              xor [eax],esi\n\t\t//0009C004  0000              add [eax],al\n\t\t//0009C006  0000              add [eax],al\n\n\t\t$wtf2 = { 42 3130 0000 0000 }\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_MF_push_inc_dec_pop {\n\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-11-04\"\n                description     = \"PE/MZ with a structured amount of push, inc, dec, pop, and shl dword\"\n\n        strings:\n\t\t//000C01D4  50                push eax\n\t\t//000C01D5  41                inc ecx\n\t\t//000C01D6  44                inc esp\n\t\t//000C01D7  44                inc esp\n\t\t//000C01D8  49                dec ecx\n\t\t//000C01D9  4E                dec esi\n\t\t//000C01DA  47                inc edi\n\t\t//000C01DB  58                pop eax\n\t\t//000C01DC  58                pop eax\n\t\t//\n\t\t//000C01DD  50                push eax\n\t\t//000C01DE  41                inc ecx\n\t\t//000C01DF  44                inc esp\n\t\t//000C01E0  44                inc esp\n\t\t//000C01E1  49                dec ecx\n\t\t//000C01E2  4E                dec esi\n\t\t//000C01E3  47                inc edi\n\n                $wtf1 = {\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t\t\t5041 4444 494e 4758 58\n\t\t\t\t5041 4444 494e 47\n\t\t}\n\n\t\t//0003AEE7  C12020            shl dword [eax],byte 0x20\n\t\t$wtf2 = { C12020 }\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #wtf1 >= 8\n\t\tand $wtf2\n}\n\nrule PE_MZ_ADD_EAX_4 {\n\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-11-01\"\n\t\tdescription\t= \"PE/MZ with an abnormal amount of 'add eax,4' possitionally concatenated together\"\n\t\tthanks\t\t= \"Rob Simmons, master of math feelz\"\n\n\tstrings:\n\t\t$wtf = { 83c004 [24-29] 83c004 [24-29] 83c004 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #wtf >= 8\n}\n\nrule DirectVBE7DLL_URL\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE7.DLL, password protection, and URLs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-11-01\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$auto1 = \"Workbook_Open\"\n\t\t$auto2 = \"Document_Open\"\n\t\t$auto3 = \"Workbook_Close\"\n\t\t$auto4 = \"Document_Close\"\n\n\t\t$url1 = \":/\"\n\t\t$url2 = \"/:\"\n\n\t\t$pass1 = \"Password\" nocase\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n\t\tuint16(0) == 0xcfd0 and $office1 at 0\n                and all of ($dll*) and any of ($vb*) and any of ($auto*) and any of ($url*) and all of ($pass*)\n\t\tand not any of ($exclude*)\n}\n\n\nrule PE_MZ_NET_BobThePEBuilder\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 0x0b repeatedly\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-22\"\n                samples = \"fb4116fc8cb498fd4bd521e0d46a4526\"\n                reference = \"/wiki/agenttesla\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n                $ = { 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b 0b0b }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule PE_MZ_NET_64x3x3_ABC\n:malexe\n{\n        meta:\n                description = \"PE .NET executable using 64 bytes of 3 byte lowercase a-z nonsense null separated\"\n                analyst_notes = \"This is potentially highly abnormal\"\n                author = \"Nathan Fowler\"\n                date = \"2019-10-16\"\n\t\tsamples = \"0af7e3fe796cd3f1420ae9132ec59078\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$choochoo_it_is_the_idiot_train = /(\\x00[a-z]{3}){64}/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #choochoo_it_is_the_idiot_train > 16\n\n}\n\nrule PE_MZ_DOUBLESTUFFED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed, with an embedded PE/MZ\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"Ronnie T\"\n        risk        = \"high\"\n        date        = \"2019-10-15\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"208f55b5aec627fc100cad0703caf78b,35961988631d38424f0d43acdc3d6040,71ea6fe86188e0b487efbc30678115d0,840072e60195f3f593768b3df42cf99d,8d536592acc6050087ee8b70f7e79c64,8eda0309ee2d27408adf1bc4eba14b82,fa94e348babc6c9d0feaf30f6808fa62\"\n\n    strings:\n        //This program ... be run\n        $p1 = { 2154 6869 7320 7072 6f67 7261 6d20 [4-6] 2062 6520 7275 6e20 }\n\n    condition:\n\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and #p1 >= 2\n}\n\nrule PE_MZ_SHA1_WIDE_VSI_PACKED\n:malexe\n{\n    meta:\n        description = \"PE/MZ, packed,  with a wide SHA1 hash null separated after VS_VERSION_INFO\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n\t$vsi = \"VS_VERSION_INFO\"\t\t\twide\n\t$sha = /\\x00\\x00([a-fA-F0-9]\\x00){40}\\x00/\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(0x80) != uint32(0x85)\n\tand uint32(0x86) != uint32(0x91)\n\tand uint32(0x92) != uint32(0x95)\n\tand all of them\n\tand @sha > @vsi\n}\n\nrule PE_MZ_NET_Portable_Pads\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable with PADPAD and super-duper portable.\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-08\"\n        tlp         = \"AMBER\"\n        reference   = \"\"\n        sample      = \"b2557faa8db43872ed7f778a51e88338\"\n\n    strings:\n        $ = \"WrapNonExceptionThrows\"    ascii\n\t$ = \"PADPAD\"\n\n\t//Portable + portable\n\t$ = { 7000 6f00 7200 7400 6100 6200 6c00 65 }\n\t$ = { 5000 6f00 7200 7400 6100 6200 6c00 65 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule vbs_sins_many_small_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using thousands of small arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-10-03\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"637b148a482a96cad07aafec5c9726cf, bc24d1771a323d2ef64aa13ba0c1f29c, 26446c8003ec839ddb9e35bf4a51b154\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /=array\\(([a-z0-9]{2,12},){25}/ nocase\n  condition:\n    filesize > 100KB and filesize < 10000KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 500\n}\n\nrule PE_MZ_NET_Confuser\n:malexe\n{\n    meta:\n        description = \"PE/MZ .NET packed executable using ConfuserEx\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/quasar\"\n        sample      = \"75602c2990a65a38484bfa45c622edf5\"\n\n    strings:\n\t$ = \"WrapNonExceptionThrows\"\tascii\n\t$ = \"ConfuserEx v\"\t\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_2Spooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is making ghost noises\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        $ = {\n            4545 45?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4f4f 4f?? 4f4f 4f?? 4f4f 4f??\n            4f4f 4f?? 4545 45\n        }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_MZ_SoSpooky\n:malexe\n{\n    meta:\n        description = \"PE/MZ that is probably making ghost noises between a 41 byte separation of 0x03 EOT\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-10-02\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/agenttesla\"\n        sample      = \"f66e2324ada4f96600beb4961d2d68b2\"\n\n    strings:\n        //00e6e10: 0000 0000 0000 0000 0000 0000 0303 0382  ................\n        //00e6e20: 4545 45e8 4f4f 4fef 4f4f 4fef 4f4f 4fef  EEE.OOO.OOO.OOO.\n        //00e6e30: 4f4f 4fef 4f4f 4fef 4f4f 4fef 4f4f 4fef  OOO.OOO.OOO.OOO.\n        //00e6e40: 4f4f 4fef 4545 45e8 0303 0382 0000 0000  OOO.EEE.........\n\n        //Short circuit to avoid long atoms?\n        $johnny5 = { 0303 03[41] 0303 03 }\n\n        //PCRE time\n        $pcre_anchor = /\\x03{3}[^\\x03]{41}\\x03{3}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $johnny5\n        and $pcre_anchor\n}\n\nrule doc_is_an_msi : maldoc {\n  meta:\n    description = \"Finds documents that are actually exes that are actually msis using exe-to-msi converter.\"\n    date = \"2019-10-02\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"12e9bf78f8fcf9bb363031b8095a02ad\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler, Oracle of Delphi Compilers\"\n  strings:\n    // www.exetomsi.com\n    $s1 = { 77 77 77 2e 65 78 65 74 6f 6d 73 69 2e 63 6f 6d }\n    // Exe to msi converter\n    $s2 = { 45 78 65 20 74 6f 20 6d 73 69 20 63 6f 6e 76 65 72 74 65 72 }\n    // This program cannot be run in DOS mode\n    $t1 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 63 61 6e 6e 6f 74 20 62 65 20 72 75 6e 20 69 6e 20 44 4f 53 20 6d 6f 64 65 }\n    // This program must be run under Win32\n    $t2 = { 54 68 69 73 20 70 72 6f 67 72 61 6d 20 6d 75 73 74 20 62 65 20 72 75 6e 20 75 6e 64 65 72 20 57 69 6e 33 32 }\n  condition:\n    uint16(0) == 0xcfd0 and\n    all of ($s*) and ($t1 or $t2)\n}\n\nrule ta505_dll_packer_science_not_feelz\n:malexe\n{\n\tmeta:\n\t\tauthor = \"sysopfb\"\n\t\tadjustments = \"Nathan Fowler\"\n\t\tdate = \"2019-10-01\"\n\t\treference = \"/wiki/ta505\"\n\t\tsample = \"60d670ba325ab1ff6f64b810681a780c\"\n\n\tstrings:\n\t\t$ = { c7 45 fc 00 00 00 00 8b 45 08 33 45 0c 89 45 08 c1 45 08 04 8b 4d 08 81 c1 78 77 77 77 }\n\n\tcondition:\n                (uint16(0) == 0xcfd0 or (uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550))\n\t\tand all of them\n}\n\nrule PE_MZ_HineyButt_PDB\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a PDB in the last 8 bytes of a file\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n        $dll = \".DLL\"       nocase ascii\n\t$pdb = \".pdb\"       nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand $dll in (512..768)\n        and $pdb in (filesize-8..filesize)\n}\n\nrule PE_MZ_Many_kernel32DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with 'kernel32.DLL' instanced twice, once at the beginning of the file after the PE header\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$kern = \"kernel32.DLL\"\tnocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $kern in (512..768)\n\tand #kern >= 2\n}\n\nrule PE_MZ_PaddingUpFront_DLL\n:malexe\n{\n    meta:\n        description = \"PE/MZ with DLL instanced in the beginning of the file and XXPADDING present\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-30\"\n        tlp         = \"AMBER\"\n\treference   = \"/wiki/icedid\"\n\tsample\t    = \"1fd8e38f4772545349bec4586f42037f\"\n\n    strings:\n\t$dll = \".DLL\"\t\tnocase ascii\n\t$pad = \"XXPADDING\"\tascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and $dll in (512..768)\n\tand $pad\n}\n\nrule vbs_sins_yuge_arrays {\n  meta:\n    description = \"Isolates 'interesting' vbs files that obfuscate using yuge arrays of nonsense. As seen with Qakbot\"\n    date = \"2019-09-25\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    greetz = \"Jose Tejada, Miscreant Hunter\"\n    samples = \"ab606edac9743bd38329630496e13bcc, 048a451e99556b0f90576c2a976073d7\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = /\\)\\x0a[a-z]{1,15}=array\\(([a-z0-9]{1,2},){500}/ nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    $s1 and #s1 > 25\n}\n\nrule vbs_sins_funky_const {\n  meta:\n    description = \"Isolates 'interesting'  vbs files that obfuscate using const. As seen in Qakbot\"\n    date = \"2019-09-23\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"fa72ac316f5d4fe20f4b4fcca16033da, c9a59a536d6ee03780c60638a427dbe9\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"creATeOBjEct(\\\"Scripting.FileSystemObject\\\")\" ascii nocase\n    $s2 = \"GetOsVersion\" ascii nocase\n    $s3 = \":const\" ascii nocase\n  condition:\n    filesize > 100KB and\n    // exclude exe, zip, msi, rar\n    uint16(0) != 0x5a4d and uint16(0) != 0x4b50 and\n    uint16(0) != 0x534d and uint16(0) != 0x6152 and\n    all of ($s*) and #s3 > 50\n}\n\n\nrule OLE_Execution_2016\n{\n        meta:\n                description = \"Office document containing shell execution functions and OLE\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tmodified = \"2019-09-24\"\n        strings:\n                $ole1 = \"OLE\"\n\n                //$http1 = \"http://\" nocase\n                //$http2 = \"https://\" nocase\n\t\t$http3 = \"XMLHTTP\"\n\t\t$http4 = \"ResponseBody\" nocase\n\n                $script1 = \"vbscript\" nocase\n                $script2 = \"wscript\" nocase\n                $script3 = \"Scripting.\"\n                $script5 = \"CreatObject\"\n\n                $exe1 = \".exe\" nocase\n                $exe2 = \"Env\"\n                $exe3 = \".Shell\" nocase\n                $exe4 = \".Run \" nocase\n\n        condition:\n\t\t( uint16(0) == 0x5c7b or uint16(0) == 0xcfd0)\n                and any of ($ole*) and any of ($http*) and any of ($script*) and any of ($exe*)\n}\n\nrule PE_MZ_B_Emotet_IP\n:malexe\n{\n    meta:\n        description = \"PE/MZ with fixed byte offset values\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\tanalyst_notes = \"These byte offset matches appear to be related to a heavily packed PE/MZ with explicit byte offsets used for unpacking.\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint16(0x0003772C) == uint16(0x00000088)\n\tand uint16(0x0003785C) == uint16(0x00000088)\n}\n\nrule PE_MZ_ABC\n:malexe\n{\n    meta:\n        description = \"PE/MZ with some ABC fluff\"\n\treference   = \"/wiki/emotet\"\n        author      = \"Nathan Fowler\"\n        risk        = \"high\"\n        date        = \"2019-09-16\"\n        tlp         = \"AMBER\"\n\tsamples     = \"8b7c2463cef2f0dbfe3206d3a97d355e\"\n\n    strings:\n\t$ = { \t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t\t4141 4141 4141 4141 4141 4141 4141 4141\n\t}\n\n\t$ = {\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t\t4242 4242 4242 4242 4242 4242 4242 4242\n\t}\n\n\t$ = { \t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t\t4343 4343 4343 4343 4343 4343 4343 4343\n\t}\n\n\t$ = {\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t\t6161 6161 6161 6161 6161 6161 6161 6161\n\t}\n\n\t$ = {\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t\t6262 6262 6262 6262 6262 6262 6262 6262\n\t}\n\n\t$ = {\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t\t6363 6363 6363 6363 6363 6363 6363 6363\n\t}\n\n    condition:\n\tfilesize < 768KB\n        and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_Kernel_No_Kernel\n:malexe\n{\n    meta:\n        description = \"PE/MZ with a Lev Distance transformation of kernel32 of one.\"\n        author      = \"Nathan Fowler\"\n        thanks      = \"sysopfb\"\n        risk        = \"high\"\n        date        = \"2019-09-12\"\n        tlp         = \"AMBER\"\n\n    strings:\n        //Lev Distance 1 transformations of Kernel32 ASCII non-wide\n        $ = /[^k]ernel32/    nocase ascii\n        $ = /k[^e]rnel32/    nocase ascii\n        $ = /ke[^r]nel32/    nocase ascii\n        $ = /ker[^n]el32/    nocase ascii\n        $ = /kern[^e]l32/    nocase ascii\n        $ = /kerne[^l]32/    nocase ascii\n        $ = /kernel[^3]2/    nocase ascii\n        $ = /kernel3[^2]/    nocase ascii\n\n        //Lev Distance 1 transformations of Kernel32 ASCII wide\n        $ = /[^k]\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00[^e]\\x00r\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00[^r]\\x00n\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00[^n]\\x00e\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00[^e]\\x00l\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00[^l]\\x003\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x00[^3]\\x002/    nocase ascii\n        $ = /k\\x00e\\x00r\\x00n\\x00e\\x00l\\x003\\x00[^2]/    nocase ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of them\n}\n\nrule PE_MZ_NET_SquidFsckers\n:malexe\n{\n        meta:\n\t\tdescription = \"PE/MZ .NET executable with an excessive amount of character-curlybrace embraces and ASCII immediately after assembly\"\n                author      = \"Nathan Fowler\"\n                risk        = \"high\"\n                date        = \"2019-09-12\"\n                tlp         = \"AMBER\"\n                sample      = \"84c7b34d6f53d8223ac2c2a40b38f831\"\n                reference   = \"/wiki/hawkeye\"\n\n        strings:\n                $net = \"WrapNonExceptionThrows\"\n                $squid1 = /[a-zA-Z][\\x7b\\x7d]/\n                $squid2 = /[\\x7d\\x7d][a-zA-Z]/\n                $ass = /<\\/assembly>[A-Za-z]/\n\n        condition:\n                filesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $net\n                and $ass\n                and (#squid1 + #squid2) > 1024\n}\n\nrule PE_MZ_AspireCrypt\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-06\"\n                description = \"PE MZ packed/encrypted with AspireCrypt\"\n                samples = \"a55b7e19b8990ec82acef9e0248be445\"\n\n        strings:\n\t\t//*protected by AspireCrypt - aspirecrypt.net\n\t\t$ = \"aspirecrypt\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule base64_string_theory {\n  meta:\n    description = \"Identifies hostile .ps1 files that use other files to write/read base64 to exes.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-20\"\n    samples = \"187d6fac509379430c969459e53851a5, 85ac7cda6c50b42ce8be5fb32944f9ae, fd2c513cfb6943b5de95b18acfb25b57\"\n    family = \"remcos\"\n    greetz = \"Nathan Fowler of Clan Feelz, Peter Misurek of Clan Feelz, Reversing Labs and the A1000 Wonder machine\"\n    feelz = \"https://www.youtube.com/watch?v=5FELdBsixGg\"\n    tlp = \"green\"\n    prod = \"true\"\n  strings:\n    $s1 = \"WriteAllBytes(\" ascii nocase\n    $s2 = \"FromBase64String(\" ascii nocase\n    // .exe encoded as argument\n    $s3 = \"LmV4ZQ==\"\n    // execute the thing\n    //$s4 = \"Start-Process\"\n  condition:\n    filesize < 1MB and\n    for any i in (1..16): ( i == 0x0a ) and\n    all of them\n}\n\nrule base64_wide_theory {\n  meta:\n    description = \"Finds incredibly long wide base64 sections within .net v2 executables, observed in Raccoon for string->executable crafting\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-09-06\"\n    samples = \"2abdc20b86f1be28e8b7fee52cd4f5f0\"\n    reference = \"/wiki/raccoon\"\n    prod = \"true\"\n    greetz = \"Nathan Fowler - Human-Based Machine Learner, Rob Pantz - Base64 Decoder\"\n    tlp = \"green\"\n  strings:\n    //CorExeMain|00|mscoree.dll\n    $s1 = { 43 6f 72 45 78 65 4d 61 69 6e 00 6d 73 63 6f 72 65 65 2e 64 6c 6c }\n    // base64 wide area, fronted by \\x01 (start of heading?)\n    $s2 = { 22 e0 01 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 (3? | 4?) 00 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    $s1 and $s2\n}\n\nrule PE_MZ_NET_Cntrline_0xff_Cont\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-05\"\n                reference = \"/wiki/azorult\"\n                description = \"PE MZ with an excessive amount of center-line 4 byte 0xff\"\n                samples = \"2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n\t\tgreetz = \"Ryan Moon\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /([^\\xff]{6}\\xff\\xff\\xff\\xff[^\\xff]{6}){8}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule too_many_high_ascii_ffff : malexe {\n  meta:\n    description = \"Finds out when there are just too many 0xFFFF, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"4716659cf8e22c72fa517ea649009c17, fe6c366a9197d1a9e924fa2a3338e1eb, 2204c70e0edfde02ce6bfcbb6ceaa0b0\"\n    greetz = \"Nathan Fowler, CyberSwordsmith, Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n    prod = \"true\"\n  strings:\n    $xff = { ff ff [14] ff ff }\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    not pe.is_dll() and\n    #xff > 100\n}\n\nrule Susp_MS_Lnk_CMD\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File spawning cmd /C\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-09\"\n        sample          = \"b61d0630c4efd55397eedd9e7ab323ae\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n\n       $cmd             = \"cmd.exe\"   ascii nocase\n       $arg             = \"/c\"        wide ascii nocase\n       $set             = \"set\"       wide ascii nocase\n\n    condition:\n        uint16(0) == 0x4c\n        and uint16(0x3c) == 0x7         // start minimized\n        and filesize < 20KB\n        and $bytes at 0x50\n        and @arg[1] - @cmd[#cmd] < 300\n        and @set[1] - @arg[#arg] < 10\n}\n\nrule Susp_MS_Lnk_Embedded_Payload\n:malfile\n{\n    meta:\n        description     = \"Suspicious MS Lnk File with embedded payload in machine name field\"\n        author          = \"Peter Misurek\"\n        risk            = \"high\"\n        date            = \"2019-07-12\"\n        sample          = \"\"\n        sample          = \"\"\n        sample          = \"\"\n        tlp             = \"AMBER\"\n\n    strings:\n        $bytes1         = { 00 60 00 00 00 03 00 00\n                            a0 58 00 00 00 00 00 00 }\n        $bytes2         = { 1f 50 e0 4f d0 20 ea 3a\n                            69 10 a2 d8 08 00 2b 30 }\n    condition:\n        uint16(0) == 0x004c\n        and uint16(0x3c) == 0x0007       // start minimized\n        and $bytes2 at 0x50\n        and (filesize - @bytes1 > 500)\n}\n\nrule Office_WinHTTP_DirectDLL\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-09-04\"\n\t\treference = \"/wiki/trickbot\"\n\t\tsample = \"dfda24a5529416dd9bd0723b1f5874d4\"\n\t\tdescription = \"WinHTTP function call with direct instancing of the WinHTTP DLL\"\n\t\tanalyst_notes = \"This maldoc contains Internet payload/functionality interaction\"\n\n\tstrings:\n\n\t\t//Lowercase wide and non-wide DLL direct instancing coupled with correct 'WinHttp' non-wide\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" ascii\n\t\t$ = \"\\\\system32\\\\winhttp.dll\" wide\n\t\t$ = { 00 5769 6e48 7474 }\n\n\tcondition:\n\t\t//d0cf 11e0 a1b1 1ae1\n\t\tuint32(0) == 0xe011cfd0\n\t\tand all of them\n}\n\nrule PE_MZ_CleanButt_262140_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-09-04\"\n                reference = \"/wiki/loki\"\n                description = \"PE MZ with no human readable words in the last 262140 bytes to EOF\"\n\t\tanalyst_notes = \"It is very abnormal to have a PE/MZ that contains no human readable words, either in wide or non-wide format, in the last 262140 bytes to EOF.\"\n                samples = \"0ba008a118dc5b6d8d6143c4f9e0c66c\"\n\n        strings:\n\t\t$ascii_word1 = /\\x00[A-Za-z][a-z]{3,32}\\x00/\n\t\t$ascii_word2 = /\\x00[A-Za-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00[a-z]\\x00/\n\n        condition:\n                filesize <= 4096KB\n\t\tand filesize > 262140\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and not $ascii_word1 in (filesize-262140..filesize)\n                and not $ascii_word2 in (filesize-262140..filesize)\n}\n\nrule PE_Generic_Stealer\n:malexe\n{\n    meta:\n        description = \"\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-08-08\"\n\tmodified    = \"2019-09-04\"\n        source      = \"https://pastebin.com/raw/Yxsy9t6C\"\n        sample      = \"9982685953def8f730e37c9fab083076\"\n        sample      = \"c71459c3dabf8529ccb6dcade5e10432\"\n        tlp         = \"AMBER\"\n\n    strings:\n        // SELECT .. FROM moz_logins : camel-case\n        $stealer    = { (53|73) 00 (45|65) 00 (4c|6c) 00 (45|65) 00 (43|63)\n                        00 (54|74) 00 20 00 [0-40] 20 00 (46|66) 00 (52|72)\n                        00 (4f|6f) 00 (4d|6d) 00 20 00 6d 00 6f 00 7a 00 5f\n                        00 6c 00 6f 00 67 00 69 00 6e 00 73 00 }\n\n        $stealer2    = { (53|73) (45|65) (4c|6c) (45|65) (43|63)\n                         (54|74) 20 [0-40] 20 (46|66) (52|72)\n                         (4f|6f) (4d|6d) 20 6d 6f 7a 5f\n                         6c 6f 67 69 6e 73 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and 1 of ($stealer*)\n}\n\nrule PE_MZ_416_PipeHead_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ian Slacke\"\n                date = \"2019-09-03\"\n                reference = \"/wiki/raccoon\"\n                description = \"Multiple terse 4-16 byte pipe separated ascii printable values and instanced APIs\"\n                samples = \"239d209251de435fe56ff3cbebd23e2e\"\n\n        strings:\n\t\t$pipes = /\\x7c[\\x20-\\x7b\\x7d-\\x7e]{4,16}\\x7c/\n\n\t\t$api1 = \"WINHTTP.dll\"\tnocase wide ascii\t//Winnernets!\n\t\t$api2 = \"CRYPT32.dll\"\tnocase wide ascii\t//Crytpo API\n\t\t$api3 = \"SHLWAPI.dll\"\tnocase wide ascii\t//Shell API\n\t\t$api4 = \"KTMW32.dll\"\tnocase wide ascii\t//Kernel transaction manager\n\n        condition:\n\t\tfilesize < 4096KB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #pipes >= 6\n\t\tand any of ($api*)\n}\n\nrule powerdrinkers_and_powerisos {\n  meta:\n    description = \"Identifies PowerISO and MagicISO files containing one exe used as the setup indicator. Observed in Remcos RAT.\"\n    date = \"2019-08-16\"\n    author = \"Ryan C. Moon (@moonbas3)\"\n    samples = \"9eb841fc96f9f3f810a380bce4f0b459, b93836ecd4bb77e2afc669c1ac728d97, ba3fd5a3054cfe717aa9f1e39ac75cb9\"\n    thanks = \"Peter Misurek for big null rule and the maths, Trevor Jones, Hunter of Threat$, Nathan Fowler, Purveyor of Fine Feelz\"\n    tlp = \"green\"\n    reference = \"/wiki/remcos\"\n    prod = \"true\"\n  strings:\n    // start of iso archive is nulllllllllllllllllls (for like 30k), so pointer at 0 is 0000\n    // iso dvd tags\n    // CD001 type with version 01\n    $cd001 = { 02 43 44 30 30 31 01 }\n    // bea01 type instead, same version 01\n    $bea01 = { 42 45 41 30 31 01 }\n    // autorun this exe on open instruction\n    $run_exe = { 53 65 74 75 70 3d [1-128] 2e }\n    // normally files have names in iso, this exe does not\n    $no_leader_exe = { 00 00 00 00 00 00 00 00 00 00 00 00 00 4d 5a }\n  condition:\n    uint16(0) == 0x0000\n    and filesize > 100KB\n    and ($cd001 or $bea01)\n    and math.entropy(0,4096) == 0\n    and ($run_exe or $no_leader_exe)\n}\n\n\nrule PE_MZ_Mega_Flowbissa\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n\t\tmodified = \"2019-08-28\"\n                reference = \"/wiki/dridex, /wiki/avemaria\"\n                description = \"This very well could be Dridex or another abnormal packer.\"\n                analyst_notes = \"No idea why this actually works.\"\n                samples = \"c69585d584497dbcec267b6a0444a160, 30a6db8fb2b1a148220d9b93d5394380, fc81d570e1985dd47a5cd7bf55a993b9\"\n                feelz = \"https://youtu.be/R4Yu5TIgnTI?t=305\"\n\n        strings:\n                $flowbissa1 = \"^_[]\"\n                $flowbissa2 = \"_^[]\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n\t\t\t   #flowbissa1 > 5\n                \tor #flowbissa2 > 5\n\t\t)\n}\n\nrule PE_1010_2020_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-30\"\n                modified = \"2019-08-28\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and this weird counting stuffs\"\n                analyst_notes = \"This is a strange malware packer usualy with API calls used for VM detection/debugger detection and the 0x10->0x20 byte code is unusual.  The file may also use Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017, eb419cd10c94221e5223deb0e2857c97, 40b5945111a4e5175e731f67671eccb3, e492a6f1791974182879e2f17109d08a\"\n                thanks = \"Ryan Moon\"\n\n        strings:\n                //VM Check\n                $a1 = \"IsProcessorFeaturePresent\"\n                $a2 = \"IsDebuggerPresent\"\n\n                //1010->2020 usually null separated\n                $a3 = {    1010 1010 1010 1010 1010 1010 1010 1010    [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n                //0001f730: 5769 6465 4368 6172 546f 4d75 6c74 6942  WideCharToMultiB\n                //0001f740: 7974 6500 4b45 524e 454c 3332 2e64 6c6c  yte.KERNEL32.dll\n                $c1 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000a940: d600 4465 6c65 7465 4669 6c65 5700 4b45  ..DeleteFileW.KE\n                //000a950: 524e 454c 3332 2e64 6c6c 0000 ed01 4c6f  RNEL32.dll....Lo\n                $c2 = { 4465 6c65 7465 4669 6c65 5700 4b45 524e 454c 3332 2e64 6c6c }\n\n                //000207c0: 0000 d103 4d75 6c74 6942 7974 6554 6f57  ....MultiByteToW\n                //000207d0: 6964 6543 6861 7200 4b45 524e 454c 3332  ideChar.KERNEL32\n                $c3 = { 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 7200 4b45 524e 454c 3332 }\n\n\t\t//00036a70: 616d 6500 0e01 456e 756d 5379 7374 656d  ame...EnumSystem\n\t\t//00036a80: 4c6f 6361 6c65 7345 7800 4b45 524e 454c  LocalesEx.KERNEL\n\t\t//00036a90: 3332 2e64 6c6c 0000 7702 5365 6e64 4d65  32.dll..w.SendMe\n\t\t$c4 = { 456e 756d 5379 7374 656d  4c6f 6361 6c65 7345 7800 4b45 524e 454c }\n\n\t\t//002e480: 6549 6e70 7574 4100 5200 436c 6f73 6548  eInputA.R.CloseH\n\t\t//002e490: 616e 646c 6500 4b45 524e 454c 3332 2e64  andle.KERNEL32.d\n\t\t//002e4a0: 6c6c 0000 6b01 4765 7450 726f 7057 0000  ll..k.GetPropW..\n\t\t$c5 = { 436c 6f73 6548 616e 646c 6500 4b45 524e 454c 3332 2e64 6c6c }\n\n\t\t//0073000: e700 4372 6561 7465 5265 6d6f 7465 5468  ..CreateRemoteTh\n\t\t//0073010: 7265 6164 0000 4b45 524e 454c 3332 2e64  read..KERNEL32.d\n\t\t$c6 = { 4372 6561 7465 5265 6d6f 7465 5468 7265 6164 0000 4b45 524e 454c 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of ($a*)\n                and all of ($b*)\n                and any of ($c*)\n}\n\nrule gzip_contains_fake_exe : malexe {\n  meta:\n    description = \"Finds gzips with fake exe inside it that purports to be something else.\"\n    example = \"gzip containing jello.XLSX.exe in manifest\"\n    date = \"2019-08-28\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"e9b38ecad7856aead9c9a0b7be9a6f81\"\n    tlp = \"green\"\n    reference = \"/wiki/lokibot\"\n    prod = \"true\"\n  strings:\n    $fake_xls = /xlsx?\\.exe/ nocase\n    $fake_pdf = /pdf\\.exe/ nocase\n    $fake_doc = /docx?\\.exe/ nocase\n  condition:\n    uint16(0) == 0x8b1f\n    and any of them\n}\n\n\nrule PE_Big_Null\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-08-02\"\n        description   = \"\"\n        analyst_notes = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        samples       = \"\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 40 i in(0..filesize):\n            (math.entropy(i*4096,4096) == 0)\n}\n\nrule PE_MZ_NET_PoundEquals\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"/wiki/nanocore\"\n                description = \"WrapNonExceptionThrows and 128 or more #=\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR.  This is likely an unpacked .NET executable\"\n                samples = \"8cdbf3c971c5617ae84f4c54ad16f87f\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$pe = \"#=\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #pe >= 128\n}\n\nrule PE_MZ_NET_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-28\"\n                reference = \"\"\n                description = \"WrapNonExceptionThrows and 64 or more 8 byte fefe's.\"\n                analyst_notes = \"There really isn't a lot to go on with this sample, however, it appears that from an A1000 aspect this signature produces the best SNR\"\n                samples = \"6830373dc023bed9653a5e8c45782cd5\"\n\n        strings:\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$fefe = /[fFeE]{8}/\n\t\t$ = \"VS_VERSION_INFO\"\twide\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fefe >= 64\n}\n\nrule dine_and_dash_encoding : vbs {\n  meta:\n    description = \"Finds vbs files that have strange dashes + replace desires as probable field separators.\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"a5674232717a96084184e4b1ee3bd033\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227297/\"\n    tlp = \"green\"\n    notes = \"This is low response (~40 samples ever), but no falses.\"\n  strings:\n    $execute = \"execute(eval\" nocase\n    $replace = \"replace(\" nocase\n    $dine_and_dash = /-([A-Za-z0-9]{1,9}-){30}/\n  condition:\n    filesize < 100KB and\n    $execute and $replace and $dine_and_dash\n}\n\n\nrule Pepe_returns : malexe {\n  meta:\n    description = \"Potential dropper/stealer - PE + NulSoft installer + PEPEs\"\n    date = \"2019-08-27\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    samples = \"9f4d8bd1cba2681f3bcf642f56342ac7\"\n    reference = \"/wiki/osiris\"\n    reference = \"https://urlhaus.abuse.ch/url/227296\"\n    tlp = \"green\"\n    greetz = \"Nathan Fowler, Crypto-PEPE-ologist\"\n  strings:\n    // nsoft installer - \"|c0|.ndata\"\n    $ndata = { 2e 6e 64 61 74 61 }\n    // KERNEL32 no dll, nulls\n    $kernel32 = { 00 4b 45 52 4e 45 4c 33 32 00}\n    // PEPE spice returns\n    $pepe_returns = { 45 ?? 50 8d 45 ?? 50 }\n  condition:\n    filesize > 400KB and filesize < 50MB\n    and uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and $ndata and $kernel32\n    and #pepe_returns > 5\n}\n\n\nrule PE_MZ_NET_MODULE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Peter Misurek\"\n                date = \"2019-08-27\"\n                reference = \"\"\n                description = \".NET executable with a wide URL and a Module pointed to an executable name\"\n                analyst_notes = \"This is likely some unpacked malware that is Internet aware\"\n\t\tsamples = \"80362c16664eec2644ce303a6f022053\"\n\n        strings:\n\t\t$ = \"://\"\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = /\\x3cModule\\x3e\\x00[^\\x2e]{1,32}\\.exe\\x00/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_MasterP\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-27\"\n                reference = \"/wiki/nemty\"\n                description = \"Looks like an op code or something.\"\n                analyst_notes = \"No idea why this actually works but it's probably an op code\"\n                samples = \"0e0b7b238a06a2a37a4de06a5ab5e615\"\n                feelz = \"meows://youtu.be/yGnMQsG4avI?t=14\"\n\n        strings:\n                $flowbissa1 = \",$P]\"\n                $flowbissa2 = \"4$P^\"\n                $flowbissa3 = \"<$P_\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                         #flowbissa1 > 10\n                      or #flowbissa2 > 10\n                      or #flowbissa3 > 10\n                )\n}\n\nrule PE_Comments_Little_Spaces\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-02\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule PE_MZ_VB6_NULL\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"MSVBVM60.DLL to NUL instanced in first 1024 bytes of file with 0x005642352136\"\n\t\tanalyst_notes = \"This PE/MZ is not packed but appears poorly crafted and malicious in nature\"\n\t\tsamples = \"8244e16cbc0d39564614f3bc2f9be0a5\"\n\n\tstrings:\n\t\t$vbm = {\t4d53 5642 564d 3630 2e44 4c4c 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n\t\t$vb56 = \"VB5!6\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $vbm in (128..1024)\n\t\tand $vb56\n}\n\nrule PE_MZ_SluttyPutty\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-08-26\"\n\t\treference = \"\"\n\t\tdescription = \"Putty ASCII URL in the PE with IsDebuggerPresent\"\n\t\tanalyst_notes = \"This PE/MZ is attempting to appear like a legitimate Putty application\"\n\t\tsamples = \"7e13b2d92d7490b8b3a1f10edfe2f410\"\n\n\tstrings:\n\t\t$ = \"https://www.chiark.greenend.org.uk/~sgtatham/putty/\"\n\t\t$ = \"IsDebuggerPresent\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_aPlib\n:malexe\n{\n\tmeta:\n\t\tauthor=\"_pusher_\"\n\t\tdate=\"2016-06\"\n\t\tmodified = \"2019-08-23\"\n\t\tmodified_author = \"Nathan Fowler\"\n\t\treference = \"meows://github.com/x64dbg/yarasigs/blob/master/packer.yara\"\n\n\tstrings:\n\t\t$a0 = { 60 8B 74 24 24 8B 7C 24 28 8B 44 24 2C FC 33 DB B2 80 39 18 74 42 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 }\n\t\t$a1 = { 60 8B 74 24 24 8B 7C 24 28 FC 33 DB 33 D2 A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a3 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 }\n\t\t$a4 = { 61 94 55 B6 80 A4 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 8B C5 }\n\t\t$a5 = { B2 80 A4 B6 80 FF 13 73 F9 33 C9 FF 13 73 16 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3C AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 26 AC D1 E8 74 2F 13 C9 EB 1A 91 48 C1 E0 08 AC FF 53 04 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a6 = { B2 80 31 DB A4 B3 02 E8 6D 00 00 00 73 F6 31 C9 E8 64 00 00 00 73 1C 31 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 10 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 29 D9 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 ?? 11 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 }\n\t\t$a7 = { 33 C9 FF D3 73 16 33 C0 FF D3 73 23 B6 80 41 B0 10 FF D3 12 C0 73 FA 75 42 AA EB E0 E8 46 00 00 00 02 F6 83 D9 01 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 48 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a8 = { 33 C9 FF 14 24 73 18 33 C0 FF 14 24 73 21 B3 02 41 B0 10 FF 14 24 12 C0 73 F9 75 3F AA EB DC E8 43 00 00 00 2B CB 75 10 E8 38 00 00 00 EB 28 AC D1 E8 74 41 13 C9 EB 1C 91 48 C1 E0 08 AC E8 22 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a9 = { 33 C0 FF 13 73 1F B6 80 41 B0 10 FF 13 12 C0 73 FA 75 3A AA EB E0 FF 53 08 02 F6 83 D9 01 75 0E FF 53 04 EB 24 AC D1 E8 74 2D 13 C9 EB 18 91 48 C1 E0 08 AC FF 53 04 3B 43 F8 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\t\t$a10 = { 60 8B 74 24 24 8B 7C 24 28 FC B2 80 33 DB A4 B3 02 E8 6D 00 00 00 73 F6 33 C9 E8 64 00 00 00 73 1C 33 C0 E8 5B 00 00 00 73 23 B3 02 41 B0 10 E8 4F 00 00 00 12 C0 73 F7 75 3F AA EB D4 E8 4D 00 00 00 2B CB 75 10 E8 42 00 00 00 EB 28 AC D1 E8 74 4D 13 C9 EB 1C 91 48 C1 E0 08 AC E8 2C 00 00 00 3D 00 7D 00 00 73 0A 80 FC 05 73 06 83 F8 7F 77 02 41 41 95 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand any of them\n}\n\nrule PE_MZ_VP_KernelSanders\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Ryan Moon\"\n                date = \"2019-08-22\"\n                reference = \"/wiki/ursnif, /wiki/avemaria, /wiki/baldr, /wiki/amadey\"\n                description = \"Terse kernel32 API invocation for VirtualProtect with three or more Kernel32 instances\"\n                analyst_notes = \"This is a strange malware packer usually with API calls used for VM detection/debugger detection may use the 0x10->0x20 byte code\"\n                samples = \"4716659cf8e22c72fa517ea649009c17\"\n                feelz = \"https://youtu.be/DD0Sr2jpgnQ?t=93\"\n\n        strings:\n                //VirtualProtect to Kernel32\n                //0023d70: 5669 7274 7561 6c50 726f 7465 6374 0000  VirtualProtect..\n                //0023d80: 6b65 726e 656c 3332 2e64 6c6c 0000 0000  kernel32.dll....\n                $ = /VirtualProtect\\x00\\x00kernel32\\.dll\\x00\\x00\\x00\\x00/    nocase ascii\n\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #kern > 2\n}\n\nrule too_many_end_of_text_filler : malexe {\n  meta:\n    description = \"Finds out when there are just too many things, generally in exes\"\n    date = \"2019-08-21\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    tlp = \"green\"\n    sample = \"563735efb7ebe455df3640ecbf8408f8\"\n    greetz = \"Thanks to Reversing Labs for the A1000 gang.\"\n    feelz = \"https://www.youtube.com/watch?v=HWUQzbYUqGA\"\n  strings:\n    // EOT ascii\n    $end_of_text = /\\x03{32}/\n  condition:\n    filesize < 4096KB and\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550 and\n    #end_of_text > 10\n}\n\nrule PE_MZ_DoubleDLL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-16\"\n        reference = \"/wiki/guildma, https://isc.sans.edu/forums/diary/Guildma+malware+is+now+accessing+Facebook+andYouTube+to+keep+uptodate/25222/\"\n        description = \"MZP Delphi Executable that is a potential stealer\"\n        sample = \"9411341b781aa43b66b8f83658d5011b\"\n\n    strings:\n\t$dll1 = \"comctl32.dll\"\tnocase ascii\n\t$dll2 = \"kernel32.dll\"\tnocase ascii\n\t$dll3 = \"vcltest3.dll\"\tnocase ascii\n\t$dll4 = \"oleaut32.dll\"\tnocase ascii\n\t$dll5 = \"ole32.dll\"\tnocase ascii\n\n    condition:\n\tuint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #dll1 >= 2\n\tand #dll2 >= 2\n\tand all of them\n}\n\nrule PE_Extra_Naked\n:malexe\n{\n\tmeta:\n\t\tdescription = \"\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n\t        uint16(0) == 0x5a4d\n                and pe.characteristics & pe.RELOCS_STRIPPED\n                and pe.characteristics & pe.LINE_NUMS_STRIPPED\n                and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n                and pe.characteristics & pe.DEBUG_STRIPPED\n}\n\nrule PE_MZ_NET_1020_TooManySigns\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-08-19\"\n        reference = \"/wiki/nanocorehawkeye\"\n        description = \".NET executable with too many signature components\"\n        sample = \"a92669ec8852230a10256ac23bbf4489\"\n\n    strings:\n\t//Assembly to null\n\t$ = { 0d0a 3c2f 6173 7365 6d62 6c79 3e0d 0a00 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t//1010->2020 compiler\n\t$ = { \t1010 1010 1010 1010 1010 1010 1010 1010\n\t     \t[1-8]\n\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t}\n\n\t$s1 = \"Microsoft Code Signing PCA\"\n\t$s2 = \"Microsoft Time-Stamp\"\n\n    condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand all of them\n\tand #s1 >= 5\n\tand #s2 >= 5\n}\n\nrule shelling_out_and_being_violent : malexe {\n  meta:\n    description = \"Identifies API calls to Shell32.dll handles using ComSpec instead of cmd as the command interpreter with NUL as the ShellExecA verb.\"\n    author = \"Ryan C. Moon (moonbas3)\"\n    date = \"2019-08-13\"\n    samples = \"5a2ad7e2c91b21c03aaf17915595306f\"\n    greetz = \"Brad Duncan, URLHaus, JB and Greg for Phoenix\"\n  strings:\n    $shell_dll = { 53 68 65 6c 6c 33 32 2e 64 6c 6c }\n    $shell_exec = { 53 68 65 6c 6c 45 78 65 63 75 74 65 41 }\n    $shell_default_null_verb = { 4e 55 4c }\n    $shell_comspec_call = { 43 6f 6d 53 70 65 63 }\n  condition:\n    uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n    and all of them\n}\n\nrule PE_MZ_WallOfNull_EOF\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an insane amount of explicit NUL to EOF\"\n                author = \"Nathan Fowler\"\n                sample = \"59e255e597dc584a20009385367cc85e\"\n                reference = \"\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x00000000\t\t\t\t//Short-circuit\n\t\tand for all i in(1..1024): (uint32(filesize-(i*4)) == 0x00000000) //4096 bytes to NUL EOF\n}\n\nrule PE_MZ_Assembly_EOF_API\n:malexe\n{\n        meta:\n                description = \"PZ MZ with an assembly tag within 128 bytes to NUL EOF and INET/RDP API calls\"\n                analyst_notes = \"Potential Predator Stealer binary\"\n                author = \"Nathan Fowler\"\n                sample = \"a8d9a1d74d75111d1248932e13545a5d\"\n                reference = \"/wiki/predator\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$assembly = /\\x3c\\x2fassembly\\x3e[\\r\\n]*\\x00{1,128}$/\t//Match NUL to EOF\n\n\t\t$api1 = \"KERNEL32.dll\"\tnocase ascii\n\t\t$api2 = \"WININET.dll\"\tnocase ascii\n\t\t$api3 = \"USER32.dll\"\tnocase ascii\n\t\t$api4 = \"WTSAPI32.dll\"\tnocase ascii\t\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/\n\t\t$api5 = \"WTSSendMessageW\"\tnocase ascii\t//https://docs.microsoft.com/en-us/windows/win32/api/wtsapi32/nf-wtsapi32-wtssendmessagew\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $assembly in (filesize-128..filesize)\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000) //16 bytes to NUL EOF\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_Guest_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with a Base64 encoding of the word Guest\"\n                analyst_notes = \"Potential RevengeRAT binary\"\n                author = \"Nathan Fowler\"\n                sample = \"30391066d576f91ec888dad1bc8d7566\"\n                reference = \"/wiki/revengerat\"\n                risk = \"high\"\n                date = \"2019-08-12\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"R3Vlc3Q=\"\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZP_Winapi_BB\n:malexe\n{\n        meta:\n\t\tdescription = \"PZ MZP with Winapi.Windows call near EOF, potentially Danabot\"\n                analyst_notes = \"Potential Danabot binary\"\n                author = \"Nathan Fowler\"\n                sample = \"8e2a3d781ff800fe400ca50879ecc727, ae4af8f29c1736b15c23dda0bd654235, 2f3db6c096a9b02f3bf8e7abeb1bddad\"\n                reference = \"/wiki/danabot\"\n                risk = \"high\"\n                date = \"2019-08-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $api1 = \"Winapi.\"\n\n\t\t$bytebash1 = {\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t}\n\n\t\t$bytebash2 = { \t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t\t\t1111 1111 1111 1111 1111 1111 1111 1111\n\t\t}\n\n\t\t//Double-pack-built PE?\n                //Dunno what this is but it's always really weird looking to me.\n                $b1 = { 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30[1] 30 }\n                $b2 = { 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31[1] 31 }\n                $b3 = { 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32[1] 32 }\n                $b4 = { 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33[1] 33 }\n                $b5 = { 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34[1] 34 }\n                $b6 = { 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35[1] 35 }\n                $b7 = { 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36[1] 36 }\n                $b8 = { 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37[1] 37 }\n                $b9 = { 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 38[1] 39 }\n                $b10 = { 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39[1] 39 }\n                $b11 = { 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c[1] 3c }\n                $b12 = { 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e[1] 3e }\n                $b13 = { 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d[1] 3d }\n\n        condition:\n                uint32(0) == 0x00505a4d and uint32(uint32(0x3C)) == 0x00004550\n                and $api1 in (filesize-1024..filesize)\n\t\tand all of them\n}\n\nrule crypt_sniffer : malexe {\n\tmeta:\n\t\tdescription = \"Finds the crypto API calls used by remcos exes.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \"2019-08-07\"\n\t\tsample = \"9f00c4aeab418866544aef17db3ecac0\"\n\t\tsource = \"https://pastebin.com/raw/JaGe6qX8\"\n\tstrings:\n\t\t// whole tamale is a combination of crypt32.dll and api prep with some error strings between them.\n\t\t$whole_tamale = { 00 00 00 00 43 00 72 00 79 00 70 00 74 00 33 00 32 00 2e 00 64 00 6c 00 6c 00 00 00 43 72 79 70 74 50 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 43 72 79 70 74 55 6e70 72 6f 74 65 63 74 4d 65 6d 6f 72 79 00 00 00 00 43 00 72 00 79 00 70 00 74 00 50 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 00 00 43 00 72 00 79 00 70 00 74 00 55 00 6e 00 70 00 72 00 6f 00 74 00 65 00 63 00 74 00 4d 00 65 00 6d 00 6f 00 72 00 79 00 20 00 66 00 61 00 69 00 6c 00 65 00 64 00 }\n\t\t// our friend xpadding\n\t\t$padding = { 58 50 41 44 44 49 4e 47 }\n\t\t// fake rar reference\n\t\t$fake_rar = { 73 66 78 72 61 72 }\n\t\t// real rar\n\t\t$real_rar = { 77 69 6e 2e 72 61 72 20 47 6d 62 48 }\n\t\t// rar inside it\n\t\t$rar_header = { 52 61 72 21 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $whole_tamale and $rar_header and $fake_rar and $padding\n\t\tand not $real_rar\n}\n\n\nrule PE_Quad_Nul_B64_256_5M\n:malexe\n{\n        meta:\n                description = \"PZ MZ with multiple quad-null separated long 256 byte base64 encoded ascii strings\"\n                analyst_notes = \"Potential Amadey binary\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Ryan Moon\"\n                sample = \"35adc7a2f8d0a8d81df65db7a5b7d0d6\"\n                reference = \"/wiki/amadey\"\n                risk = \"high\"\n                date = \"2019-08-06\"\n                tlp = \"GREEN\"\n\n        strings:\n                //Base64\n                $b64 = /[^\\x00][\\x00]{4}[A-Za-z0-9\\x2b\\x2f]{256}/   ascii\n\n        condition:\n\t\tfilesize < 5MB\n                and uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand #b64 >= 2\n}\n\nrule base64_enbiggens : malexe {\n\tmeta:\n\t\tdescription = \"Finds base64 embedded files inside malware.. very very large sections of it.\"\n\t\tauthor = \"Ryan C. Moon (moonbas3)\"\n\t\tdate = \t\"2019-08-06\"\n\t\tsamples = \"7a50fd9c8c8a8fc4a42f4a5c51f6394ec26013abee1be3ba7f4285f67d5accb4\"\n\t\tgreetz = \"Thanks to Vitali Kremez for pushing out trickbot/amadey data\"\n\t\tsource = \"https://twitter.com/VK_Intel/status/1158620228261208064\"\n\tstrings:\n\t\t// bomberman?\n\t\t//$ = { 42 6f 6d 62 65 72 6d 61 6e 20 32 70 }\n\t\t// I don't know what this file is, but it's 78k of valid base64.\n\t\t// md5:741c612aa5d39a134879d28c444a0b39\n\t\t$ = /\\x00[a-zA-Z0-9\\x2f\\x2b]{4092}/\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_MZ_FEFE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0xfe repetition\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\tstrings:\n\t\t$fe = {\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t\tfefe fefe fefe fefe fefe fefe fefe fefe\n\t\t}\n\n                $ = \"PADDINGXX\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #fe > 128\n}\n\nrule calling_cards : gh0strat\n{\n\tmeta:\n\t\tdescription = \"gh0stRAT's calling cards\"\n\t\tauthor      = \"Ryan C. Moon (moonbas3)\"\n\t\tdate        = \"2019-08-02\"\n\t\treference\t\t= \"/wiki/gh0strat\"\n\t\tsample      = \"530545bbd28da7a01fdf7d6751352f63, c91c85f49bfaecd360639eeb50252707, 037e4546381b718ac32f0ecddfb78871\"\n\t\ttlp \t\t\t\t= \"white\"\n\t\tgreetz\t\t\t= \"@P3pperP0tts and urlhaus\"\n\tstrings:\n\t\t$calling_card2 = { 5f 61 64 6a 75 73 74 5f 66 64 69 76 }\n\t\t$calling_card3 = { 5f 65 78 63 65 70 74 5f 68 61 6e 64 6c 65 72 33 }\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n\t\tand $calling_card2 and $calling_card3\n}\n\nrule PE_MZ_2E_Trailers\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-08-02\"\n                description = \"PE/MZ with excessive 0x2e trailing bytecode to EOF\"\n\t\tanalyst_notes = \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n                reference = \"/wiki/gh0strat\"\n                samples = \"0f03ef58fe48b28a6f135ba994f584a2\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-4) == 0x2e2e2e2e\t\t\t\t//Short-circuit speed\n                and for all i in(1..8): (uint32(filesize-(i*4)) == 0x2e2e2e2e)\t//32 bytes of 0x2e to EOF\n}\n\nrule PE_Weekend_Hacking\n:malexe\n{\n        meta:\n                description = \"PE or resource re-built on weekend\"\n                author = \"Peter Misurek\"\n                risk = \"high\"\n                date = \"2019-04-08\"\n\t\tmodified = \"2019-08-01\"\n                hash = \"1f43c6a18bc727b14df2814e91546e0b\"\n                tlp = \"AMBER\"\n\n\tstrings:\n\t\t//001b200: bd06 0000 0200 0000 0000 0401 474e 5520  ............GNU\n\t\t//001b210: 4320 342e 352e 3200 012f 7573 722f 7372  C 4.5.2../usr/sr\n\t\t//001b220: 632f 6d69 6e67 772d 7275 6e74 696d 652f  c/mingw-runtime/\n\t\t$exclude = { 474e 5520 4320 342e 352e 32 [2] 2f 7573 722f 7372 632f 6d69 6e67 772d 7275 6e74 696d 652f }\n\n        condition:\n                uint16(0) == 0x5a4d\n                // #define EPOCH_DOW 3\n                // #define SECS_PER_DAY 86400\n                // dow = ((timestamp / SECS_PER_DAY) + EPOCH_DOW) % 7;\n                and ( ((pe.resource_timestamp\\86400)+3)%7==0 or ((pe.resource_timestamp\\86400)+3)%7==6 )\n\t\tand not #exclude > 4\n}\n\nrule MZ_KERNEL_SANDERS_SPACETIME\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tmodified = \"2019-08-01\"\n\t\tdescription = \"PE/MZ with too much leading or training space or too old, and two or more kernel32.dll calls\"\n\t\treference = \"/wiki/icedid\"\n\t\tsamples = \"b44306f812171715d3e2da7490807050\"\n\n\tstrings:\n\t\t$KW = \"kernel32.dll\"    nocase wide ascii\n\n\t\t//0003440: 0054 4849 5320 4953 2054 4845 204d 4152  .THIS IS THE MAR\n\t\t//0003450: 4b45 5220 5354 5249 4e47 2046 4f52 2054  KER STRING FOR T\n\t\t//0003460: 4845 2045 434c 4950 5345 204f 4f4d 5048  HE ECLIPSE OOMPH\n\t\t//0003470: 2045 5854 5241 4354 4f52 2031 3937 302d   EXTRACTOR 1970-\n\t\t//0003480: 3132 2d30 3320 0000 0000 0000 0000 0000  12-03 ..........\n\t\t$exclude1 = \"THIS IS THE MARKER STRING FOR THE ECLIPSE OOMPH EXTRACTOR 1970-12-03\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand #KW >= 2\n\t\tand not any of ($exclude*)\n\t\tand (\n\t\t\tpe.version_info[\"Comments\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{6,}/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{6,}/\n\n\t\t\tor pe.version_info[\"Comments\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"CompanyName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileDescription\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"FileVersion\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"LegalCopyright\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductName\"] matches /[\\x20\\x09]{6,}$/\n\t\t\tor pe.version_info[\"ProductVersion\"] matches /[\\x20\\x09]{6,}$/\n\n\t\t\t//or pe.resource_timestamp    <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t\tor pe.timestamp            <= time.now() - ( 20 * 31557600 )    //20 years or older\n\t\t)\n}\n\nrule PE_MZ_Bracket_Storm\n:malexe\n{\n    meta:\n        description     = \"Too many symbols (so many), inspired by Nanocore and Ramnit .scr files\"\n        author          = \"Ryan C. Moon (moonbas3)\"\n        date\t\t= \"2019-07-31\"\n        sample          = \"dd85773f073b2a7e32822960362cf053,c4f7e74f7ed4ae3e54b02c3ae9f0385fb9a1b741,d9bbaaf12acda3f90bee992e41c7147f558c3bcc\"\n        greetz          = \"Nathan Fowler, PCRE Gunfighter\"\n\treference\t= \"/wiki/nanocore, /wiki/ramnit\"\n\n    strings:\n        $wininet_lib = \"WININET.dll\" nocase\n        $r_lulz = /[^\\x7b-\\x7f][\\x7b-\\x7f]{300}/\n        $r_lulz2 = /[^\\x5b-\\x5f][\\x5b-\\x5f]{300}/\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3c)) == 0x00004550\n        and $wininet_lib and any of ($r*)\n}\n\nrule Java_JarHeads_2F\n:maljar\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-06-26\"\n\t\tmodified = \"2019-07-31\"\n\t\tdescription = \"More than 256 of lowercase folder names to camel-case or alpha-digit class name in a JAVA archive that is less than 1024KB.  Potential RAT and JAR stuffing evasion methods.\"\n\t\tanalyst_notes = \"This could potentially be a jRAT such as qRAT\"\n\t\tsamples = \"cdff7af0290135e0fc4748abf9b9041f, a42be1f121cd7a8d809b449d2e88f468\"\n\t\ttlp  = \"AMBER\"\n\t\trefernece = \"/wiki/qrat, /wiki/adwind\"\n\n\tstrings:\n\t\t$class1 = /\\x00[a-z\\x2f]+[A-Z][a-z]+\\.class/\n\t\t$class2 = /\\x00([a-z][0-9]{6,}\\x2f)+[a-z][0-9]{6,}\\.class/\n\t\t$meta = \"META-INF/MANIFEST.MF\"\n\n\tcondition:\n\t\tuint16(0) == 0x4b50\n\t\tand $meta in (0..4096)\n\t\tand ( #class1 > 256 or #class2 > 16 )\n\t\tand filesize < 1024KB\n}\n\nrule PE_MZ_RARSFX_EXE_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-29\"\n                description = \"PE/MZ RAR SFX containing an additional singular executable that is invoked from RAR SFX Setup\"\n\t\tanalyst_notes = \"This appears to be an attempt to obfuscate a PE/MZ inside of a RAR SFX PE/MZ\"\n                reference = \"/wiki/loki\"\n                samples = \"90dcfd2f25f50c91b61d2f476a0ede21\"\n\n        strings:\n\t\t//0049820: ed00 04ed 0000 bc7a 314d 8000 0003 434d  .......z1M....CM\n\t\t//0049830: 543b 5468 6520 636f 6d6d 656e 7420 6265  T;The comment be\n\t\t//0049840: 6c6f 7720 636f 6e74 6169 6e73 2053 4658  low contains SFX\n\t\t//0049850: 2073 6372 6970 7420 636f 6d6d 616e 6473   script commands\n\t\t//0049860: 0d0a 0d0a 5061 7468 3d25 7465 6d70 250d  ....Path=%temp%.\n\t\t//0049870: 0a53 6574 7570 3d64 6670 6d77 7477 6e67  .Setup=dfpmwtwng\n\t\t//0049880: 2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a  .exe..Silent=1..\n\t\t//0049890: 4f76 6572 7772 6974 653d 310d 0a00 7cbf  Overwrite=1...|.\n\t\t$ = { \t\t\t\t\t53 4658\n\t\t\t2073 6372 6970 7420 636f 6d6d 616e 6473\n\t\t\t0d0a 0d0a 5061 7468 3d25 7465 6d70 250d\n\t\t\t0a53 6574 7570 3d [5-16]\n\t\t\t2e65 7865 0d0a 5369 6c65 6e74 3d31 0d0a\n\t\t\t4f76 6572 7772 6974 653d 310d 0a\n\t\t}\n\n\t\t$exe = \".exe\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand $exe in (filesize-256..filesize)\n}\n\nrule PE_MZ_UPX_VERINFO_TOO_MUCH\n:malexe\n{\n\tmeta:\n\t\tauthor \t\t\t= \"Nathan Fowler\"\n\t\tdate \t\t\t= \"2019-07-25\"\n\t\tdescription \t= \"PE/MZ, UPX packed, with too much byte data after the VS_VERSION_INFO field and two or more kernel32.dll calls\"\n\t\tanalyst_notes \t= \"This appears to be an obfuscated PE/MZ or a PE in a PE\"\n\t\treference \t\t= \"/wiki/remcos\"\n\t\tsamples \t\t= \"baa0507fe166496d54f332a809c3e77c\"\n\n\tstrings:\n\t\t$V \t\t= \"VS_VERSION_INFO\"\twide\n\t\t$kern \t= \"kernel32\"\t\tnocase wide ascii\n\t\t$UPX \t= \"UPX\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $UPX in (32..512)\n\t\tand #kern >= 2\n\t\tand @V + 655350 < filesize\n}\n\nrule PE_MZ_KERNEL32_TOO_MANY_SOCK\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-24\"\n                description = \"PE MZ with more than or equal to three Kernel32 instances with Socket functionality\"\n                analyst_notes = \"This PE/MZ is highly abnormal and suggests that it may be stuffed with an additional PE\"\n                reference = \"/wiki/lokibot\"\n                samples = \"d9f05847190b022c5dc8d541442e7fd8\"\n                tlp = \"AMBER\"\n\n        strings:\n                $kern = \"kernel32.dll\"  nocase wide ascii\n\n                $exclude1 = \"RAR SFX\"    wide ascii\n                $exclude2 = \"NSIS\"    wide ascii\n\n                $api1 = \"getpeer\"    nocase wide ascii\n                $api2 = \"gethostby\"    nocase wide ascii\n                $api3 = \"getprotoby\"    nocase wide ascii\n                $api4 = \"getservby\"    nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern >= 4\n                and not any of ($exclude*)\n                and any of ($api*)\n}\n\nrule PE_MZ_Text_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n\t\tmodified = \"2019-07-22\"\n                description = \"PE MZ with a wall of text to EOF\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with base64 payload\"\n                reference = \"/wiki/trickbot, /wiki/amadey\"\n                samples = \"eff82b032f6b038987152f2ddc850c6e, e319a1cdcf0a1e5b6395891b6a283590\"\n                tlp = \"AMBER\"\n                feelz = \"meows://www.youtube.com/watch?v=l-O5IHVhWj0&feature=youtu.be&t=205\"\n\n        strings:\n                $b64 = /[a-zA-Z0-9\\x2b\\x2f]{128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and filesize < 4MB\n                and $b64 in (filesize-136..filesize-4)            //4 byte nonsense buffer in either direction\n\n}\n\nrule PE_MZ_KERNEL32_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Robert Simmons\"\n                date = \"2019-07-19\"\n                description = \"PE MZ with Kernel32 in the last 2048 bytes of the file\"\n\t\tanalyst_notes = \"This PE/MZ is highly abnormal\"\n                reference = \"/wiki/sodinokibi\"\n                samples = \"1ce1ca85bff4517a1ef7e8f9a7c22b16\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$kern = \"kernel32.dll\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $kern in (filesize-2048..filesize)\n\n}\n\nrule Office_Macro_Base64_Ascii\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and what appears to be a non-wide long base64 ascii embedded string\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t$badness = /[^A-Za-z0-9\\x2b\\x2f\\x3d_-][A-Za-z0-9\\x2b\\x2f\\x3d_-]{1024}/\t\tascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $badness\n}\n\nrule Office_Macro_PS_CLSID\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to PowerShell with -enc or a CLSID for WSH Shell Object\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-07-18\"\n                tlp = \"GREEN\"\n                sample = \"fe9a59f38d58637b48eada7d96aee6ed\"\n\t\treference = \"/wiki/ursnif\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Windows Script Host Shell Object\n\t\t$clsid = \"72C24DD5-D70A-438B-8A42-98424B88AFB8\"\t\tnocase wide ascii\n\n\t\t$badness1 = \"PowerShell\"\t\t\t\tnocase wide ascii\n\t\t$badness2 = \"-enc\"\t\t\t\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and ( all of ($badness*) or $clsid )\n}\n\nrule PE_MZ_Sec_Spec_Char\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with special characters in the PE names section\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with another payload, likely a stage 1 dropper\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\tstrings:\n\t\t$reloc = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (0..1024)\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand pe.number_of_sections > 2\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tpe.sections[i].name contains \"!\"\n\t\t\tor pe.sections[i].name contains \"@\"\n\t\t\t//or pe.sections[i].name contains \"#\"\n\t\t\tor pe.sections[i].name contains \"$\"\n\t\t\tor pe.sections[i].name contains \"%\"\n\t\t\tor pe.sections[i].name contains \"^\"\n\t\t\tor pe.sections[i].name contains \"&\"\n\t\t\tor pe.sections[i].name contains \"*\"\n\t\t\tor pe.sections[i].name contains \"(\"\n\t\t\tor pe.sections[i].name contains \")\"\n\t\t\tor pe.sections[i].name contains \"{\"\n\t\t\tor pe.sections[i].name contains \"}\"\n\t\t\tor pe.sections[i].name contains \"|\"\n\t\t\tor pe.sections[i].name contains \";\"\n\t\t\tor pe.sections[i].name contains \":\"\n\t\t\tor pe.sections[i].name contains \"'\"\n\t\t\tor pe.sections[i].name contains \"<\"\n\t\t\tor pe.sections[i].name contains \">\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\t//or pe.sections[i].name contains \"?\"\n\t\t\tor pe.sections[i].name contains \"/\"\n\t\t\tor pe.sections[i].name contains \"\\\\\"\n\t\t\tor pe.sections[i].name contains \"+\"\n\t\t\t//or pe.sections[i].name contains \"=\"\n\t\t)\n}\n\nrule PE_Large_B64_Like_Strings\n:malexe\n{\n    meta:\n        author        = \"Peter Misurek\"\n        date          = \"2019-07-17\"\n        description   = \"PE with large b64-like strings\"\n        analyst_notes = \"Not a lot of science, but it works.  B64 strings\"\n        analyst_notes = \"seem to have entropy values between 5 and 6 but \"\n        analyst_notes = \"when you push the length out, the gap closes to \"\n        analyst_notes = \"near 5.99.  This may be luck, but seems to work.\"\n        samples       = \"203b4a86dbb01bed35825e7429b20674\"\n        samples       = \"215ed19e4adb725b79b2134926c66287\"\n        samples       = \"1753fd377399233b77344c1a19bd4c60\"\n        tlp           = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x4550\n        and filesize < 4096KB\n        and for 50 i in(0..filesize\\4096):\n            (math.entropy(i*4096,4096) > 5.98\n            and math.entropy(i*4096,4096) < 6)\n}\n\nrule PE_MZ_NextHook_Reloc\n:malexe\n{\n        meta:\n             \tauthor = \"Nathan Fowler\"\n                date = \"2019-07-16\"\n                description = \"PE MZ with suspicious API calls and PE .reloc\"\n                analyst_notes = \"This is likely a malicious executable that is stuffed with additional payload\"\n                reference = \"/wiki/dridex\"\n                samples = \"8cce8560d94ae12ebf03a598a5854923\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"CallNextHookEx\"\n                $ = \"GetModuleFileNameEx\"\n                $ = \"RpcServerRegister\"\n                $ = \".reloc\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n}\n\nrule PE_MZ_NET_Double_Wrap\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-16\"\n                description = \".NET PE MZ with VS_VERSION_INFO, SkipVerification, and more than one call to WrapNonExceptionThrows\"\n                analyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed with another .NET archive, this is likely a stage-1 dropper\"\n                reference = \"\"\n                samples = \"d08f9c6fd2fafd6383c79d9f6967ecc6\"\n                tlp = \"AMBER\"\n\n        strings:\n                $wrap = \"WrapN\"\n\n                $ = \"VS_VERSION_INFO\" wide\n                $ = \"SkipVerification\"\n                $ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and #wrap >= 2\n}\n\nrule MZ_PE_NET_HeadSpace\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-15\"\n                description = \"A .NET/Mono MZ/PE with too much byte code ahead of the actual .NET nonsense stuffs\"\n                reference = \"\"\n                samples = \"036bdbd3d2bac71c2fa46587832398fc\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$n1 = \"WrapNonExceptionThrows\"\n\n\t\t//Six byte Assembly entity spacing\n\t\t$n2 = { 6974 793e 0d0a 2020 2020 2020 3c72 6571 }\n\t\t$n3 = { 6d3a 6173 6d2e 7633 223e 0d0a 2020 2020 2020 2020 3c72 6571 7565 7374 6564 4578 }\n\n\t\t$wordler = /[A-Z][a-z]+[A-Z]/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand filesize < 512KB\n\t\tand all of ($n*)\n\t\tand for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)\t//64 bytes to NUL EOF\n\t\tand not $wordler in (512..128000)\n}\n\nrule MZ_PE_Kernel_BO_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-07-11\"\n                description = \"MZ PE with 2048 bytes of NUL to EOF and specific byte ordering\"\n                reference = \"/wiki/lokibot, /wiki/pony\"\n                samples = \"1b76734447ec104a4fc399c430dd007a\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//00ccea0: 0000 0000 1000 0404 0900 0000 6b65 726e  ............kern\n\t\t//00cceb0: 656c 3332 0000 0000 0e00 0000 5274 6c4d  el32........RtlM\n\t\t//00ccec0: 6f76 654d 656d 6f72 7900 0000 acce 4c00  oveMemory.....L.\n\t\t$ = { 6b65 726e 656c 3332 [8] 5274 6c4d 6f76 654d 656d 6f72 7900 0000 }\n\t\t$ = \"IsValidURL\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand for all i in(1..512): (uint32(filesize-(i*4)) == 0x00000000)\n}\n\nrule PE_MZ_NET_LONG_WIDE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a trip down stupidland using a large amount of wide words with no breaks\"\n\t\tanalyst_notes = \"This is likely a malicious .NET/Mono executable that is stuffed\"\n                reference = \"/wiki/agenttesla\"\n                samples = \"c73b5ff9c01f042ee76b37e527bedc01\"\n                tlp = \"AMBER\"\n\n        strings:\n                $ = \"WrapNonExceptionThrows\"\n\n\t\t//Big words, no breaks.\n\t\t$sw = /([A-Za-z0-9]\\x00){128}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n\t\tand #sw > 128\n}\n\nrule PE_MZ_NET_HTTP_PAD\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                thanks = \"Peter Misurek\"\n                date = \"2019-07-09\"\n                description = \".NET PE MZ with a wide HTTP URL\"\n                reference = \"\"\n                samples = \"0f32d7f8a79e0e09cbb309f7cbcfa61b\"\n                tlp = \"AMBER\"\n\n        strings:\n                //byte jump for HTTP and HTTPS\n                $ = { 6800 7400 7400 7000 [0-2] 3a00 2f00 2f00 }\n                $ = \"WrapNonExceptionThrows\"\n                $ = \"XXPADDING\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n}\n\nrule RAR_SFX_Terse_EXE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-07-08\"\n                description = \"RAR SFX file with singular embedded executable and multiple terse files for archive stuffing, likely malicious and used to encapsulate the hostile archive\"\n                reference = \"/wiki/smokeloader\"\n                samples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\t\ttlp = \"AMBER\"\n\n        strings:\n\t\t$RAR = \"RAR SFX\"\t\t\t\t\t\t\tnocase ascii\n\n                $Dropper \t= /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x0a/\tnocase ascii\n                $Srt_Extensions = /\\x00[^\\n][\\x20-\\x7e]{3,6}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\t\t$Lng_Extensions = /\\x00[^\\n][\\x20-\\x7e]{7,256}\\.[A-Z]{3}\\x0a/\t\tnocase ascii\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $RAR\n                and #Dropper >= 1\n                and #Srt_Extensions >= 16\n\t\tand #Lng_Extensions <= 4\n}\n\nrule Office_Script_XLST\n:maldoc\n{\n    meta:\n\t\tdescription = \"Macro enabled document that contains an XLS/XLST file with JScript, VBScript, CScript, or WScript\"\n\t\tauthor      = \"Nathan Fowler\"\n\t\trisk        = \"high\"\n\t\tdate        = \"2019-07-08\"\n\t\ttlp         = \"GREEN\"\n\t\treference   = \"meows://isc.sans.edu/forums/diary/A+Stream+O+Maldoc/25096/, meows://isc.sans.edu/forums/diary/Malicious+XSL+Files/25098/\"\n\n    strings:\n\t\t$bad1\t= \"<script\"\t\t\t\t\t\t\t\tnocase wide ascii\n\t\t$bad2\t= /language=[^\\n]?[vbwjc]{1,2}script/\tnocase wide ascii\n\t\t$bad3\t= \"<?xml\"\t\t\t\t\t\t\t\tnocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand filesize < 20MB\n\t\tand all of them\n}\n\nrule CAB_Encapsulation\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-07-08\"\n\t\tdescription = \"CAB file with singular embedded executable, likely malicious and used to encapsulate the hostile archive\"\n\t\treference = \"\"\n\t\tsamples = \"a77f68125e4562dee4c45641a6f3eb70, eb933b3f85d8a94930b09601bdf682e5\"\n\n\tstrings:\n\t\t$Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)\\x00/\tnocase ascii\n\t\t$Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}\\x00/\t\t\tnocase ascii\n\n\tcondition:\n\t\tuint32(0) == 0x4643534d\n\t\tand #Dropper <= 2\n\t\tand #Extensions <= 2\n}\n\nrule RTF_Office_hexascii_API\n{\n        meta:\n                description = \"RTF/Office hex-ascii suspicious API calls or native API calls\"\n                author = \"Nathan Fowler\"\n                attribution = \"Created based on work from Justin Borland Oct 01 2018\"\n                thanks = \"Didier Stevens, sysopfb, Per Morten Sandstad\"\n                risk = \"high\"\n                date = \"2018-10-18\"\n                modified = \"2019-07-03\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $lib1 = \"LoadLibrary\" nocase ascii\n                $lib2 = /[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[46]c([03]0)?[46]9([03]0)?[46]2([03]0)?[57]2([03]0)?[46]1([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib3 = \"GetProcAddress\" nocase ascii\n                $lib4 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]1([03]0)?[46]4([03]0)?[46]4([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib5 = \"ExpandEnvironmentString\" nocase ascii\n                $lib6 = /[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]5([03]0)?[46]e([03]0)?[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[46]f([03]0)?[46]e([03]0)?[46]d([03]0)?[46]5([03]0)?[46]e([03]0)?[57]4([03]0)?[57]3([03]0)?[57]4([03]0)?[57]2([03]0)?[46]9([03]0)?[46]e([03]0)?[46]7([03]0)?[57]3/i\n\n                $lib7 = \"URLDownloadToFile\" nocase ascii\n                $lib8 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[46]e([03]0)?[46]c([03]0)?[46]f([03]0)?[46]1([03]0)?[46]4([03]0)?[57]4([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                //$lib9 = \"%UserProfile%\" nocase ascii\n                $lib10 = /25([03]0)?[57]5([03]0)?[57]3([03]0)?[46]5([03]0)?[57]2([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?25/i\n\n                $lib11 = \"ExitProcess\" nocase ascii\n                $lib12 = /[46]5([03]0)?[57]8([03]0)?[46]9([03]0)?[57]4([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3/i\n\n                $lib13 = \"kernel32\" nocase ascii\n                $lib14 = /[46]5([03]0)?[57]2([03]0)?[46]e([03]0)?[46]5([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib15 = \"shell32\" nocase ascii\n                $lib16 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?33([03]0)?32/i\n\n                $lib17 = \"WinExec\" nocase ascii\n                $lib18 = /[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3/i\n\n                $lib19 = \"UrlMon\" nocase ascii\n                $lib20 = /[57]5([03]0)?[57]2([03]0)?[46]c([03]0)?[46]d([03]0)?[46]f([03]0)?[46]e/i\n\n                $lib22 = \"ShellExecute\" nocase ascii\n                $lib23 = /[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5([03]0)?[46]3([03]0)?[57]5([03]0)?[57]4([03]0)?[46]5/i\n\n                $lib24 = \"CreateFile\" nocase ascii\n                $lib25 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib26 = \"VirtualAlloc\" nocase ascii\n                $lib27 = /[57]6([03]0)?[46]9([03]0)?[57]2([03]0)?[57]4([03]0)?[57]5([03]0)?[46]1([03]0)?[46]c([03]0)?[46]1([03]0)?[46]c([03]0)?[46]c([03]0)?[46]f([03]0)?[46]3/i\n\n                $lib28 = \"WriteFile\" nocase ascii\n                $lib29 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib30 = \"ReadFile\" nocase ascii\n                $lib31 = /[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib32 = \"CloseHandle\" nocase ascii\n                $lib33 = /[46]3([03]0)?[46]c([03]0)?[46]f([03]0)?[57]3([03]0)?[46]5([03]0)?[46]8([03]0)?[46]1([03]0)?[46]e([03]0)?[46]4([03]0)?[46]c([03]0)?[46]5/i\n\n                $lib34 = \"SetFilePointer\" nocase ascii\n                $lib35 = /[57]3([03]0)?[46]5([03]0)?[57]4([03]0)?[46]6([03]0)?[46]9([03]0)?[46]c([03]0)?[46]5([03]0)?[57]0([03]0)?[46]f([03]0)?[46]9([03]0)?[46]e([03]0)?[57]4([03]0)?[46]5([03]0)?[57]2/i\n\n                $lib36 = \"GetSystemDirectory\" nocase ascii\n                $lib37 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]3([03]0)?[57]9([03]0)?[57]3([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib38 = \"GetWindowsDirectory\" nocase ascii\n                $lib40 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]7([03]0)?[46]9([03]0)?[46]e([03]0)?[46]4([03]0)?[46]f([03]0)?[57]7([03]0)?[57]3([03]0)?[46]4([03]0)?[46]9([03]0)?[57]2([03]0)?[46]5([03]0)?[46]3([03]0)?[57]4([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n                $lib41 = \"GetTempPath\" nocase ascii\n                $lib42 = /[46]7([03]0)?[46]5([03]0)?[57]4([03]0)?[57]4([03]0)?[46]5([03]0)?[46]d([03]0)?[57]0([03]0)?[57]0([03]0)?[46]1([03]0)?[57]4([03]0)?[46]8/i\n\n                $lib43 = \"PADDINGXXPADDINGXXPADDINGXXPADDINGXX\" nocase ascii\n                $lib44 = /(50([03]0)?41([03]0)?44([03]0)?44([03]0)?49([03]0)?4[Ee]([03]0)?47([03]0)?58([03]0)?58([03]0)?){4}/\n\n                $lib45 = \"BITXOR\" nocase ascii\n                $lib46 = /[46]2([03]0)?[46]9([03]0)?[57]4([03]0)?[57]8([03]0)?[46]f([03]0)?[57]2/i\n\n                $lib47 = \"SHLWAPI\" nocase ascii\n                $lib48 = /[57]3([03]0)?[46]8([03]0)?[46]c([03]0)?[57]7([03]0)?[46]1([03]0)?[57]0([03]0)?[46]9/i\n\n                $lib49 = \"CreateThread\" nocase ascii\n                $lib50 = /[46]3([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[57]4([03]0)?[46]5([03]0)?[57]4([03]0)?[46]8([03]0)?[57]2([03]0)?[46]5([03]0)?[46]1([03]0)?[46]4/i\n\n                $lib51 = \"WriteProcessMemory\" nocase ascii\n                $lib52 = /[57]7([03]0)?[57]2([03]0)?[46]9([03]0)?[57]4([03]0)?[46]5([03]0)?[57]0([03]0)?[57]2([03]0)?[46]f([03]0)?[46]3([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]d([03]0)?[46]5([03]0)?[46]d([03]0)?[46]f([03]0)?[57]2([03]0)?[57]9/i\n\n\t\t//https://docs.microsoft.com/en-us/dotnet/api/microsoft.visualbasic.interaction.shell?view=netframework-4.7.2\n\t\t$lib53 = /Interaction[^\\w]{0,16}Shell/ ascii\n\n\t\t//Exclusions\n\t\t//SMA Trading\n\t\t$exclude1 = { 00 4a3a 5c53 4d41 204f 7065 7261 7469 6f6e 735c 5769 6e53 4350 5c77 696e 7363 702e 6578 6520 2f63 6f6e 736f 6c65 202f 636f 6d6d }\n\n        condition:\n                ($rtf at 0 or $office at 0) and any of ($lib*) and not any of ($exclude*)\n}\n\nrule SCT_Excel_By_GUID\n:maldoc\n{\n\tmeta:\n\t\tauthor = \"Justin Borland (Snort)/Nathan Fowler (Yara)\"\n\t\tdate = \"2019-07-02\"\n\t\tdescription = \"SCT invoking Excel by GUID, likely hostile activity\"\n\t\treference = \"\"\n\t\ttlp = \"RED\"\n\t\tsamples = \"\"\n\t\tanalyst_notes = \"Not sure what to do with this just yet, but it's likely a targeted double-secret APT\"\n\n\tstrings:\n\t\t$ = \"script language=\\\"vbscript\\\"\"\t\tnocase\n\t\t$ = \"new:00024500-0000-0000-C000-000000000046\"\tnocase\n\t\t$ = \".Workbooks.Add(\"\t\t\t\tnocase\n\t\t$ = \".VBProject.VBComponents.Add(\"\t\tnocase\n\n\t\t$xml = { 3c3f 786d 6c }\n\n\tcondition:\n\t\tuint32(0) == 0x6d783f3c and $xml at 0\n\t\tand all of them\n}\n\nrule MZ_PE_Signed_Not_Signed_Bare\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler/Peter Misurek\"\n                date = \"2019-07-01\"\n                description = \"MZ PE with PE certificate signature data yet the PE/MZ is not explicitly signed\"\n                reference = \"/wiki/hancitor\"\n                samples = \"9a69378f63c39e0f3a148dd3767fa807\"\n                analyst_notes = \"This is highly abnormal and suggests a PE wrapper for a signed PE executable embed.  This could be a loader/dropper of some kind.\"\n\n        strings:\n                //Signing (Internet1.0 where 0x2e is 0x17)\n                $={ 496e 7465 726e 6574 3117 30 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and all of them\n                and pe.number_of_signatures == 0\n}\n\nrule PE_njRAT\n:malexe\n{\n    meta:\n        description = \"Potential njRAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-26\"\n        sample      = \"3ea78365488b21f5529b3180494e7c23\"\n        sample      = \"417ec3fda20121b4bec2423e9f9fd54b\"\n        sample      = \"47b2883cd6b6da7478d8104422cd98a3\"\n        tlp         = \"AMBER\"\n\n    strings:\n        $cmd01      = \"etsh firewall add allowedprogram\"  wide ascii nocase\n        $cmd02      = \"md.exe /c\"                         wide ascii nocase\n        $cmd03      = \"ping\"                              wide ascii nocase\n        $cmd04      = \"del\"                               wide ascii nocase\n\n        $mask       = \"NOZONECHECKS\"                      wide ascii\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule PE_RevengeRAT\n:malexe\n{\n    meta:\n        description = \"Potential Revenge RAT PE/MZ\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-25\"\n\tmodified    = \"2019-06-26\"\n        sample      = \"0b0798c2657bb23770c8927adff3a272\"\n        sample      = \"e2aff6ddac67c1e12d771ce52beb76d3\"\n        sample      = \"01d70d0a41405eb1e3515c3be2ad0df0\"\n        tlp         = \"AMBER\"\n        reference   = \"/wiki/revenge\"\n\n    strings:\n        $reflect01  = \"ToBase64String\"                     wide ascii\n        $reflect02  = \"FromBase64String\"                   wide ascii\n        $reflect03  = \"System.Reflection\"                  wide ascii\n        $reflect04  = \"Assembly\"                           wide ascii\n\n        $recon01    = \"select \\x2a from win32_processor\"    wide ascii nocase\n        $recon02    = \"select \\x2a from firewallproduct\"    wide ascii nocase\n        $recon03    = \"select \\x2a from antivirusproduct\"   wide ascii nocase\n\n        $really01   = \"Nuclear Explosion\"                  wide ascii\n\t$asciiart   = { 2a00 2d00 5d00 4e00 4b00 5b00 2d00 2a }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and all of them\n}\n\nrule MZ_PE_Double_Kernel_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-25\"\n                reference = \"/wiki/azorult\"\n                description = \"PE/MZ with interesting API calls for VM checking and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"7545388a6d2d84ce50400a795f4209af\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t$api1 = \"IsDebuggerPresent\"\n\t\t$api2 = \"IsProcessorFeaturePresent\"\n\t\t$api3 = \"Sleep\"\n\t\t$api4 = \"GetActiveWindow\"\n\t\t$api5 = \"GetLastActivePopup\"\n\t\t$api6 = \"GetConsoleMode\"\n\t\t$api7 = \"GetEnvironmentStrings\"\n\t\t$api8 = \"GetTickCount\"\n\t\t$api9 = \"GlobalMemoryStatus\"\n\t\t$api10 = \"SetUnhandledExceptionFilter\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and #kern > 1\n\t\tand all of ($api*)\n}\n\nrule MZ_PE_VI_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n\t\tmodified = \"2019-06-24\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with Assembly after VS_VERSION_INFO\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malformed .NET PE\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n       strings:\n               $byte_order = { 5600 5300 5f00 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [128-1024] 3c61 7373 656d 626c 7920 }        //VERSION_INFO -> Assembly\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and for all i in(1..16): (uint32(filesize-(i*4)) == 0x00000000)    //64 bytes of nul to EOF\n                and $byte_order in (filesize-8192..filesize)\n}\n\nrule PE_LetsEncrypt\n:malexe\n{\n    meta:\n        description = \"Let's Encrypt does not offer code signing certificates.\"\n        author      = \"Peter Misurek\"\n        risk        = \"high\"\n        date        = \"2019-06-22\"\n        sample      = \"263d1d61374508250dc16249205df9b1\"\n        sample      = \"6670d53be021319ba3f01076c3e63adb\"\n        sample      = \"b9db97e8c832e5c6703b3e802d3751e5\"\n        tlp         = \"AMBER\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and pe.signatures[pe.number_of_signatures - 1].issuer matches /CN=Let\\x27s Encrypt/\n}\n\nrule MZ_PE_Double_Kernel\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-21\"\n                reference = \"/wiki/formbook, /wiki/netwire\"\n                description = \"PE/MZ with an excessive amount of null terminating to EOF and double kernel32\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious PE\"\n                samples = \"bb0c1fd7495aa3261a51615a1b79ceb2, 5367522264386a52e8a8f90f9f7f17c9\"\n\n        strings:\n                $kern = \"kernel32.dll\" nocase wide ascii\n\n\t\t//Chrome false positive\n\t\t//0003d70: 0100 0000 6d69 6e69 5f69 6e73 7461 6c6c  ....mini_install\n\t\t//0003d80: 6572 2e65 7865 2e70 6462 0000 1000 0030  er.exe.pdb.....0\n\t\t//0003d90: 1000 0050 1700 0060 1700 0080 1700 00c0  ...P...`........\n\t\t$pdb = { 0000 6d69 6e69 5f69 6e73 7461 6c6c 6572 2e65 7865 2e70 6462 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n                //uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 proces$\n                and for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n                and #kern > 1\n\t\tand not $pdb\n}\n\nrule Office_Macro_Msiexec_URL\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a call to msiexec\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-20\"\n                tlp = \"GREEN\"\n\t\tsample = \"987bd2361c0ed6e05400b027c113be44\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//msiexec nocase wide ascii with byte jump to a URL\n\t\t$badness1 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 20 [1-64] 3a2f 2f }\n\t\t$badness2 = { (4d|6d)(53|73) (49|69)(45|65) (58|78)(45|65) (43|63) 2e (45|65) (58|78)(45|65) 20 [1-64] 3a2f 2f }\n\t\t$badness3 = { (4d|6d)00 (53|73)00 (49|69)00 (45|65)00 (58|78)00 (45|65)00 (43|63)00 2e00 (45|65)00 (58|78)00 (45|65)00 2000 [1-128] 3a00 2f00 2f00 }\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand any of ($badness*)\n}\n\nrule PE_1010_2020_API_WW_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-14\"\n\t\tmodified = \"2019-06-17\"\n                reference = \"/wiki/ursnif, /wiki/sodinokibi, /wiki/icedid\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices with a wide-word jumble\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.\"\n                samples = \"077cf52855fe85aa60097d6e52cb4ea3, d8b3370d1b4901caccc9c22125171e21\"\n\n       strings:\n\t\t//Odd Stuffs\n                $bytes1 = { 1010 1010 1010 1010 1010 1010 1010 1010 [1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$bytes2 = { \t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0101 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t1000 0101 0101 0101 0101 0101 0101 0101\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t0201 0201 0201 0201 0201 0201 0201 0201\n\t\t\t\t1000 0201 0201 0201 0201 0201 0201 0201\n\t\t}\n\n\t\t$bytes3 = { \t1000 1000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 2000 2000 2000 2000 2000 2000 2000\n\t\t\t\t2000 0?00\n\t\t}\n\n\t\t//API calls\n                $api1 = \"Sleep\"\n                $api2 = \"EncodePointer\"\n                $api3 = \"DecodePointer\"\n                //$api4 = \"Dinkumware\"\n                $api5 = \"TlsAlloc\"\n                //$api6 = \"GetAsyncKeyState\"\n                $api7 = \"IsProcessorFeaturePresent\"\n                $api8 = \"IsDebuggerPresent\"\n                $api9 = \"GetTickCount\"\n                $api10 = \"RaiseException\"\n                //$api11 = \"GetSystemInfo\"\n\n\t\t//Word jumble, wide and non-wide\n\t\t$wordjumble = /(\\x20\\x00([A-Za-z0-9]\\x00)+){16}/\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand for all i in(1..4): (uint32(filesize-(i*4)) == 0x00000000)\t\t//16 bytes of NUL to EOF\n                and any of ($bytes*)\n\t\tand all of ($api*)\n\t\tand $wordjumble\n}\n\nrule Office_HeadSpace\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc with too much headspace in the first 16-4096 bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-25\"\n\t\tmodified = \"2019-06-17\"\n                hash = \"7ec4e7742de077fde05b0b83bb8a1cee, e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/revenge\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n                $headspace1 = { 2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020 2020 2020\n\t\t\t\t2020 2020 2020 2020 2020 2020\n\t\t}\n\n                $headspace2 = {\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t\t\tffff ffff ffff ffff ffff ffff ffff ffff\n\t\t}\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n                and $headspace1 in (1024..4096)\n                and $headspace2 in (16..1024)\n}\n\nrule Office_Macro_AutoBehavior_Image\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a lure image of type JPEG or PNG.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                modified = \"2019-06-17\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $image1 = { ffd8 ffe? }\n                $image2 = { 8950 4e47 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n\n                $ap1 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"\t\tnocase wide ascii\n                $vb2 = \"VBA\"\t\tnocase wide ascii\n                $vb4 = \"OLE\"\t\tnocase wide ascii\n                $vb5 = \"stdole\"\t\tnocase wide ascii\n                $vb6 = \"macro\"\t\tnocase wide ascii\n\n                //Cashsheet XLS ADSI Negation\n                $exclude1 = { 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 ??00 b700 2000 3e02 2800 5c02 ffff 0000 0000 6b00 ffff 6800 0000 a300 4e02 6000 0000 6f00 ffff 5800 0000 9604 4000 0000 0000 c900 4e02 4800 0000 ed00 b600 0c00 4144 5379 7374 656d 496e }\n\t\t$exclude2 = { 4144 5379 7374 656d 496e 666f 2400 5202 0100 2e00 5002 0000 0000 ed00 b600 0700 4c44 4150 3a2f 2f00 2000 5002 2100 5802 1100 2400 5602 0100 2e00 5402 0000 0000 0000 2000 5402 2100 5a02 ac00 0b00 2400 3202 0200 b600 0b00 4075 7362 616e 6b2e 636f 6d00 0500 9c00 }\n\t\t$exclude3 = { 005c 5c75 732e 6261 6e6b 2d64 6e73 2e63 6f6d 5c }\n\t\t$exclude4 = { 00 5c5c 656e 742e 7766 622e 6261 6e6b 2e63 6f72 705c }\n\n        condition:\n                uint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand (\n\t\t\t(\n\t\t\t\t( (#image1 == 1 and #image2 == 0) or (#image1 == 0 and #image2 == 1) )\n\t\t\t\tand any of ($vb*) and any of ($ao*)\n\t\t\t\tand not any of ($exclude*)\n\t\t\t)\n\t\t\tor ($ap1 and #image1 > 0 and #image1 < 3 and #image2 > 0 and #image2 < 3)\n\t\t)\n}\n\nrule Office_Shell_StrConv\n:maldoc\n{\n        meta:\n                description = \"Potential maldoc calling StrConv with byte hiding shuffle capability and ShellV\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-06-17\"\n                samples = \"e325ed8b9b495954c600f2ac57621616\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//https://docs.microsoft.com/en-us/office/vba/language/reference/user-interface-help/strconv-function\n\t\t$api1 = \"ShellV\"\tnocase wide ascii\n\t\t$api2 = \"StrConv\"\tnocase wide ascii\n\n\t\t$uapi1 = \"vbUnicode\"\tnocase wide ascii\n\t\t$uapi2 = \"vbFromUnicode\"\tnocase wide ascii\n\t\t$uapi3 = \"vbWide\"\tnocase wide ascii\n\t\t$uapi4 = \"vbNormal\"\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n                and any of ($ao*)\n                and any of ($vb*)\n\t\tand all of ($api*)\n\t\tand any of ($uapi*)\n}\n\n\nrule MZ_PE_NET_PDB\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-06-17\"\n                description = \".NET binary with an alpha PDB, however, there is no path to the PDB\"\n                reference = \"/wiki/bladabindi\"\n                samples = \"0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n\t\t$ = /\\x00[A-Za-z]+\\.pdb\\x00/\n\t\t$ = \"WrapNonExceptionThrows\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_PaddyWhacks_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-11\"\n                reference = \"/wiki/lokibot\"\n                description = \"PE/MZ with 0x0? padding to EOF that is not 0x00\"\n                analyst_notes = \"This is a PE binary with intentional and unusual EOF padding, potentially to evade hash based detections\"\n                samples = \"f905ef29af2a3dfae4ec04f9ddc837f4\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand (\n\t\t\t   for all i in(1..32): (uint32(filesize-(i*4)) == 0x01010101)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x02020202)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x03030303)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x04040404)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x05050505)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x06060606)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x07070707)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x08080808)    //128 bytes of nul to EOF\n\t\t\tor for all i in(1..32): (uint32(filesize-(i*4)) == 0x09090909)    //128 bytes of nul to EOF\n\t\t)\n}\n\nrule Potential_Obfuscated_Java_Archive\n{\n        meta:\n                description = \"Pack-200 Zip (or Java Archive) containing abnormal directory structure via 1IL obfuscation likely Armadillo\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-17\"\n\t\tmodified = \"2019-06-04\"\n                tlp = \"AMBER\"\n\n        strings:\n\t\t$dir = /(\\x2f[1LiI]+){2,5}/\n\t\t$manifest = \"META-INF\"\tnocase wide ascii\n\n        condition:\n\t\tuint16(0) == 0x4b50 and (#dir > 3) and $manifest\n}\n\nrule MZ_PE_UPX_NUL_EOF_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-04\"\n                reference = \"/wiki/remcos\"\n                description = \"PE/MZ which is UPX packed with an excessive amount of null terminating to EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE\"\n                samples = \"fc9cb2d2060b0847a440322b8823c977\"\n\n\tstrings:\n\t\t$ = \"UPX0\"\n\t\t$ = \"UPX1\"\n\t\t$ = \"</assembly>\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n\t\t//uint32 is 32 *bits* -- 8 bits in a byte, 32 bits in 4 bytes, so the above would process 32*4 bytes of information, or 128 bytes in 4 byte chunks.  For some reason I was thinking uint32 processed in 16 byte chunks not 4 byte chunks.\n\t\tand for all i in(1..32): (uint32(filesize-(i*4)) == 0x00000000)    //128 bytes of nul to EOF\n\t\tand all of them\n}\n\nrule MZ_PE_NET_Crypt_B64\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-03\"\n                reference = \"\"\n                description = \"Potential MZ PE .NET with VS_VERSION_INFO, WrapNonExceptionThrows, suspect API calls, and NUL EOF\"\n                analyst_notes = \"This appears to be an intentionally obfuscated and malicious .NET PE using Base64 and crypto\"\n                samples = \"227673dc393a3f31a1183e71f7ea6fba\"\n\n\tstrings:\n \t\t$ = \"VS_VERSION_INFO\"\t\twide\n\t\t$ = \"WrapNonExceptionThrows\"\n\t\t$ = \"FromBase64String\"\n\t\t$ = \"ToBase64String\"\n\t\t$ = \"base64Binary\"\n\t\t$ = \"RijndaelManaged\"\n\t\t$ = \"Rfc2898DeriveBytes\"\n\t\t$ = \"Sleep\"\n\t\t$ = \"KillOnExit\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_1010_2020_API_Dink_NUL_EOF\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-31\"\n                reference = \"/wiki/ursnif\"\n                description = \"0x10 to 0x20 16 byte or more byte sequences, null EOF, and a few random API spices\"\n                analyst_notes = \"This is high unusual from the aspect of the API calls used for VM detection/debugger detection, additionally the 0x10->0x20 byte code is unusual.  The file also uses Dinkumware, a legacy, C-library with a NUL EOF.\"\n                samples = \"f1f87964c6979732cd510d5bcbfb8017\"\n\n       strings:\n\t\t$ = {\t1010 1010 1010 1010 1010 1010 1010 1010\t[1-8] 2020 2020 2020 2020 2020 2020 2020 2020 }\n\n\t\t$ = \"Sleep\"\n\t\t$ = \"EncodePointer\"\n\t\t$ = \"DecodePointer\"\n\t\t$ = \"Dinkumware\"\n\t\t$ = \"TlsAlloc\"\n\t\t$ = \"GetAsyncKeyState\"\n\t\t$ = \"IsProcessorFeaturePresent\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"RaiseException\"\n\t\t$ = \"GetSystemInfo\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\nrule CreateObject_Shell\n{\n\tmeta:\n\t\tdescription = \"Office document using CreateObject to create a shell object and execute a file\"\n\t\tauthor = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n\t\trisk = \"medium\"\n\t\tdate = \"??\"\n\t\tmodified = \"2019-05-29\"\n\n\tstrings:\n\t\t$string1 = /createobject\\([\\x20\\x09]*[\\x22\\x27][a-z]script\\.shell/ nocase\n\t\t$string2 = /\\.(exe|vbs|bat|ps[0-9]+)/ nocase\n\t\t$string3 = \".run\" nocase\n\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\tcondition:\n\tuint16(0) == 0xcfd0 and $office at 0 and all of them\n}\n\nrule MZ_PE_NS_COMMENTS_ASS\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-05-23\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ PE .NET with VERSION_INFO comments pounding of the keyboard 1-32 characters lowercase.\"\n\t\tanalyst_notes = \"Someone took the lazy approach and just pounded the keyboard with lowercase characters for the Comments section of this file.  If it is gibberish, it is likely bad\"\n                samples = \"0c9594e73e00f30b1669e92b55774eee, 630099748bdafc84709b3f3dbdb2705a\"\n\n\tstrings:\n\t\t$ = \"<assembly\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,32}$/\n\t\tand all of them\n}\n\nrule Office_WMI\n:maldoc\n{\n        meta:\n                description = \"Office Document containing VBA and WMI and Short Path VBE DLL or a URL\"\n\t\tanalyst_notes = \"This is likely a type of maldoc dropper using winmgmts to deliver payload\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-05-23\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\twide ascii\n                $vb2 = \"VBA\"\twide ascii\n                $vb3 = \"OLE\"\twide ascii\n                $vb4 = \"stdole\"\twide ascii\n\n                $wmi1 = \"Win32_Process\"\twide ascii\n                $wmi2 = \"winmgmts:\\\\\\\\\"\twide ascii\n\n\t\t$url1 = \"://\"\twide ascii\n\t\t$url2 = \"//:\"\twide ascii\n\n        condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n                and ( any of ($dll*) or any of ($url*) )\n\t\tand any of ($vb*)\n\t\tand any of ($wmi*)\n}\n\nrule retefe_crypt2\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tmeta_author = \"Nathan Fowler\"\n\t\tsample = \"68ba5f9d5dd775c72711bc86e2c5d9384d7ab4efd6c24805304253e51365d816, 008a9b3ce958689aadc5eb16d557f8f2\"\n\t\tdate = \"2018-11-15\"\n\t\tanalyst_notes = \"This is likely a crypted sample of Retefe embedded in an OLE stream.  This means there is a MZ/PE here.\"\n\t\timplementation_date = \"2019-05-22\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t//0x27a8\n\t\t$decode1 = {c1 e0 03 [0-1] b6 c? 8b}\n\t\t//0x280e\n\t\t$decode2 = {b6 0? 11 33 c? 8b}\n\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\t$ActiveScriptParseiid_64 = {58 76 ef c7 ee e1 0e 48 97 ea d5 2c b4 d7 6d 17}\n\t\t$ActiveScriptParseiid_32 = {e2 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\n\tcondition:\n\t\tall of ($decode*) and $iid and any of ($ActiveScriptParseiid_*)\n}\n\nrule PE_MZ_VERSION_NUL\n:malexe\n{\n\tmeta:\n\t\tauthor          = \"Nathan Fowler\"\n\t\tdate            = \"2019-05-22\"\n\t\ttlp             = \"AMBER\"\n\t\tdescription     = \"MZ/PE with VERSION_INFO defined that is a explicit NULL value with NULL to EOF\"\n\t\tanalyst_notes\t= \"This is likely some type of malware that may be using a packer similar to Nanocore.  This is highly abnormal to have VERSION_INFO defined yet nothing but NUL\"\n\t\tsample          = \"0b13f3bd55238c71fd8993b658ce0484\"\n\t\treference       = \"/wiki/nanocore\"\n\n\tstrings:\n\t\t//NULL VERSION_INFO\n\t\t$ = {   5600 4500 5200 5300 4900 4f00 4e00 5f00\n\t\t\t4900 4e00 4600 4f00 [8]\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t\t0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0? 0?0?\n\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n}\n\nrule PE_Reloc_NUL\n:malexe\n{\n        meta:\n                description = \"PZ MZ with any VM-check API calls and .reloc NUL in 1-64 bytes\"\n\t\tanalyst_notes = \"It is likely that this PE/MZ is FlawedAmmy Loader\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"9629772e9ff369dc24dd47ca948fda6c\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$api1 = \"Sleep\"\n\t\t$api2 = \"Interlocked\"\n\t\t$api3 = \"GetStartupInfo\"\n\t\t$api4 = \"SetUnhandledExceptionFilter\"\n\t\t$api5 = \"IsDebuggerPresent\"\n\t\t$api6 = \"QueryPerformanceCounter\"\n\t\t$api7 = \"TerminateProcess\"\n\t\t$api8 = \"GetOEMCP\"\n\t\t$api9 = \"RegisterClass\"\n\n\t\t$spice1 = \"Any use of this Certificate\"\t\twide\n\t\t$spice2 = \"__wgetmain\"\t\t\t\tascii\n\t\t$spice3 = \"STATUS_ABIOS_LID_ALREADY_OWNED\"\tascii\n\t\t$spice4 = \"EV_MMAC_HAP_SHORT_MSG_RECEIVED\"\tascii\n\n\t\t//PE .reloc to NULL\n\t\t$reloc = {   2e72 656c 6f63 [1-64]\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t}\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $reloc in (512..4096)\n\t\tand any of ($spice*)\n\t\tand any of ($api*)\n}\n\nrule PE_API_B64\n:malexe\n{\n        meta:\n                description = \"PZ MZ with VM-check API calls and multiple long 256-16384 base64 encoded ascii strings\"\n\t\tanalyst_notes = \"Potential Trickbot binary\"\n                author = \"Nathan Fowler\"\n\t\tsample = \"e6dbe5e47dab3b586a10f9b2bfd4312a\"\n\t\treference = \"/wiki/trickbot\"\n                risk = \"high\"\n                date = \"2019-05-20\"\n                tlp = \"GREEN\"\n\n        strings:\n\t\t$ = \"Sleep\"\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetStartupInfo\"\n\t\t$ = \"SetUnhandledExceptionFilter\"\n\t\t$ = \"IsDebuggerPresent\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"TerminateProcess\"\n\n\t\t//Assembly -> Null\n\t\t//$ = { 6173 7365 6d62 6c79 3e00 0000 0000 0000 0000 0000 0000 0000 0000 }\n\n\t\t//Base64\n\t\t$b64 = /\\x00([A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f][A-Za-z0-9\\x2b\\x2f]){256,16384}([A-Za-z0-9\\x2b\\x2f]{2}==|[A-Za-z0-9\\x2b\\x2f]{3}=)?\\x00/\tascii\n\n        condition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand all of them\n\t\tand #b64 > 64\n}\n\nrule PE_UPX_Ass_AutoIT\n:malexe\n{\n    meta:\n        description = \"UPX packed PE/MZ with AutoIT and assembly\"\n\t\tanalyst_notes = \"This is a highly abnormal AutoIT UPX packed binary that is a second stage or first stage dropper payload\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-03\"\n\t\tmodified = \"2019-05-20 (pushed)\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/hawkeye, /wiki/nanocore\"\n\n    strings:\n\t\t$upx = \"UPX\"\n\n        $spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n        $spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\t\t$autoit = { 4100 7500 7400 6f00 4900 7400 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand $upx in (0..1024)\n        and any of ($spicyspice*)\n\t\tand $autoit\n}\n\nrule PE_MZ_NBS\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-17\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with NUL to EOF and nothing but whitespace in a singular VERSION_INFO field\"\n\tanalyst_notes\t= \"This PE is very strange in that the VERSION_INFO field values are nothing but 4 chr or more whitespace.  This likely is a malicious file and the miscreant is lazy\"\n        sample          = \"b98fa6c4e71634faa02fff7ed3c43474\"\n        reference       = \"/wiki/formbook\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand (\n\t\t   pe.version_info[\"Comments\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"CompanyName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileDescription\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"FileVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"LegalCopyright\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[\\x20\\x09]{4,}$/\n\t\tor pe.version_info[\"ProductVersion\"] matches /^[\\x20\\x09]{4,}$/\n\t)\n}\n\nrule MZ_PE_OutOfOrder_API\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n\t\tdate = \"2019-05-08\"\n                reference = \"/wiki/remcos\"\n                description = \"Potential MZ with PE, API out of order after VERSION_INFO, PADDING, and trailing NUL\"\n\n\tstrings:\n\t\t$ = \"PADDING\"\n\n\t\t//VERSION_INFO -> .dll byte-jump ordering\n\t\t$ = { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 [2048-8192] 2e64 6c6c }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand all of them\n}\n\n\nrule PE_WOW_CryptHook_NUL\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, CryptStringToBinaryA, and Wow64EnableWow64FsRedirection with NUL EOF\"\n        samples = \"5230d6352f3200d502ea2dcef55989ef\"\n\n    strings:\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"Wow64EnableWow64FsRedirection\"\n\n        //PE but no VERSION_INFO\n        $ver = \"VERSION_INFO\"    wide\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of ($API*)\n        and not $ver\n}\n\nrule PE_Nanocore_Winsock_GetAce\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-13\"\n        description = \"Potential Nanocore MZ with WSOCK32, GetAce, IcmpSendEcho with NUL EOF\"\n        samples = \"d1903c90c8720ca5c4a4efd34b15dff9, 7e88682c452b779ca187e5cf7cc615a1, 907923733bb1a5df6c0732b8303e7bc8, f43c463885fe1963175d454903dc5105\"\n\n    strings:\n\t$ = \"OLEAUT32.dll\"\n\t$ = \"WSOCK32.dll\"\n\t$ = \"GetAce\"\n\t$ = \"IcmpSendEcho\"\n\t$ = \"FtpOpenFileW\"\n\t$ = \"timeGetTime\"\n\t$ = \"IsThemeActive\"\n\n\t$upx = \"UPX\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand $upx in (512..2048)\n\tand all of them\n}\n\nrule UDF_Encapsulated_Executable\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-04\"\n\tmodified = \"2019-05-09\"\n        reference = \"\"\n        description = \"Single executable file embedded in UDF Image\"\n        sample = \"c0a1a387ae325b83f48cdc210027f160\"\n\n    strings:\n\t\t$udf1 = { 5500 4400 4600 }\n\t\t$udf2 = \"BEA01\"\t\tascii\n\t\t$udf3 = \"TEA01\"\t\tascii\n\n\t\t//Bad file extensions\n\t\t$bad_ext1 = \".exe;\"\tnocase ascii\n\t\t$bad_ext2 = \".scr;\"\tnocase ascii\n\t\t$bad_ext3 = \".bat;\"\tnocase ascii\n\t\t$bad_ext4 = \".cmd;\"\tnocase ascii\n\t\t$bad_ext5 = \".js;\"\tnocase ascii\n\t\t$bad_ext6 = \".vbs;\"\tnocase ascii\n\n\t\t//2019-05-09 Noticed that some UDF images do not adhere to the above and instead use WIDE formatting\n\t\t$bad_ext7  = { 2e00 (45|65)00 (58|78)00 (45|65)00 }\t//.exe\n\t\t$bad_ext8  = { 2e00 (53|73)00 (43|63)00 (52|72)00 }\t//.scr\n\t\t$bad_ext9  = { 2e00 (42|62)00 (41|61)00 (54|74)00 }\t//.bat\n\t\t$bad_ext10 = { 2e00 (43|63)00 (4d|6d)00 (44|64)00 }\t//.cmd\n\t\t$bad_ext11 = { 2e00 (4a|6a)00 (53|73)00 }\t\t//.js\n\t\t$bad_ext12 = { 2e00 (56|76)00 (42|62)00 (53|73)00 }\t//.vbs\n\n\n\t\t//Anchor pattern\n\t\t$anchor = /\\.[a-zA-Z]{3};[0-9]/\n\n    condition:\n        uint16(0) == 0x0000\n        and uint16(2) == 0x0000\n\tand uint16(filesize-2) == 0x0000\n\tand any of ($udf*)\n\tand #anchor == 1\n\tand (\n\t\t   #bad_ext1  == 1\n\t\tor #bad_ext2  == 1\n\t\tor #bad_ext3  == 1\n\t\tor #bad_ext4  == 1\n\t\tor #bad_ext5  == 1\n\t\tor #bad_ext6  == 1\n\t\tor #bad_ext7  == 1\n\t\tor #bad_ext8  == 1\n\t\tor #bad_ext9  == 1\n\t\tor #bad_ext10 == 1\n\t\tor #bad_ext11 == 1\n\t\tor #bad_ext12 == 1\n\t)\n}\n\nrule Susp_MS_Lnk\n:malfile\n{\n        meta:\n                description = \"Suspicious MS Lnk File\"\n                author      = \"Peter Misurek\"\n                risk        = \"high\"\n                date        = \"2019-05-06\"\n                sample      = \"cec1fdf5adb00b9844832d355ef877ab\"\n                sample      = \"6623f573ab668b7da9068a714968e8e9\"\n                sample      = \"fef3a77d195da8a049d583b259e161dd\"\n                tlp         = \"AMBER\"\n\n        strings:\n                $mshta          = \"mshta.exe\" nocase wide ascii\n                $url            = /https?\\x3a\\x2f\\x2f/ nocase wide ascii\n\n                $cmd1           = \"cmd.exe\" nocase wide ascii\n                $cmd2           = \"powershell.exe\" nocase wide ascii\n\n                $surfer         = { 2e 00 2e 00 5c 00 2e 00 2e }\n\n                $attrib         = \"attrib\" nocase wide ascii\n                $bytes          = { 1f 50 e0 4f d0 20 ea 3a\n                                    69 10 a2 d8 08 00 2b 30 }\n\n        condition:\n                uint16(0) == 0x4c\n                and uint16(0x3c) == 0x7         // start minimized\n                and filesize < 20KB\n                and $bytes at 0x50\n                and (($mshta and $url)\n                or any of ($cmd*))\n                and ($surfer or $attrib)\n}\n\nrule ZIP_Dropper_ManifestDestiny\n:malarchive\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        modified = \"2019-05-06\"\n        reference = \"/wiki/emotet, /wiki/hawkeye\"\n        description = \"Potential dropper encapsulated in a ZIP archive\"\n        sample = \"8f7c62dc6edd6adb31d1dacaf583d7a4\"\n\n    strings:\n        $Dropper = /[\\x20-\\x7e]\\.(jse?|exe|vbs|cmd|bat|scr|lnk)[^A-Z]/  nocase ascii\n        $Extensions = /[\\x20-\\x7e]\\.[A-Z]{3}[^A-Z\\x2e]/                 nocase ascii\n\n    condition:\n        uint16(0) == 0x4b50\n        and $Dropper in (0..256)\n        and #Dropper <= 2\n        and #Extensions <= 2\n}\n\nrule PE_PADPAD_Wrap_Nul\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-05-01\"\n        description = \"Potential Hawkeye keylogger with WrapNonExceptionThrows, PADPAD, and assembly to EOF NUL\"\n        sample = \"acb54dd5b48a1e39f3e8bec5fa2d3645\"\n\t\treference = \"/wiki/hawkeye\"\n\n    strings:\n\t$ = { 0d 0a3c 2f61 7373 656d 626c 793e 0000 0000 }\t//</assembly> with no CRLF to NUL\n\t$ = { 50 4144 50 4144 }\t\t\t\t\t// PADPAD\n\t$ = \"WrapNonExceptionThrows\"\t\t\t\t// Wiggity, wiggity, whack, wtf is this crap?\n\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_MZ_Nymaim_KernelSanders\n:malexe\n{\n   meta:\n        author          = \"Nathan Fowler\"\n        date            = \"2019-05-03\"\n        tlp             = \"GREEN\"\n        description     = \"MZ/PE with wide and non-wide kernel32.dll\"\n        sample          = \"fcceb04631384fe845a176a5fc95d51a, 2107473834a847fa4677f72f1e5310f2a\"\n        reference\t= \"/wiki/nymaim\"\n\n   strings:\n\t//kernel32.dll wide and non-wide in the same PE/MZ\n        $= { 6b65 726e 656c 3332 2e64 6c6c 0000 }\n        $= { 6b00 6500 7200 6e00 6500 6c00 3300 3200 2e00 6400 6c00 6c00 0000 }\n\n   condition:\n\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and uint32(filesize-16) == 0x00000000000000000000000000000000\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-48) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-80) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-112) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and all of them\n}\n\nrule PE_TeeBall_Cert_API\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Signed PE MZ with suspect API calls\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-05-02\"\n\t\ttlp = \"AMBER\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t$utn = \"UTN-USERFirst-Object\"\n\n\t\t//SNR isn't tasty, needs more spices\n\t\t$api1 = \"GetOEMCP\"\n\t\t$api2 = \"WideCharToMultiByte\"\n\t\t$api3 = \"EnterCriticalSection\"\n\t\t$api4 = \"GetACP\"\n\t\t$api5 = \"GetCPInfo\"\n\t\t$api6 = \"GetStartupInfo\"\n\t\t$api7 = \"IsDebuggerPresent\"\n\t\t$api8 = \"Interlocked\"\n\t\t$api9 = \"GetStartupInfo\"\n\t\t$api10 = \"MultiByteToWideChar\"\n\t\t$api11 = \"CriticalSection\"\n\n\t\t$spicyspice1 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\t\t$spicyspice2 = { 2f61 7373 656d 626c 793e 0d0a 0000 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.number_of_signatures >= 1\n\t\tand pe.number_of_signatures <= 3\n\t\tand pe.DEBUG_STRIPPED == 512\n\t\tand pe.RELOCS_STRIPPED == 1\n\t\tand pe.LOCAL_SYMS_STRIPPED == 8\n\t\tand pe.LINE_NUMS_STRIPPED == 4\n\t\tand pe.dll_characteristics == 32768\n\t\tand pe.number_of_imports >= 7\n\t\tand $utn in (filesize-4096..filesize)\n\t\tand any of ($spicyspice*)\n\t\tand all of ($api*)\n}\n\nrule PE_MZ_NUL_GZIP\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with NUL to EOF and gzip-base64 embed\"\n        sample \t\t= \"4e0bfe42fdd08bba60711352e1183f8a\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $gzip1 = { 4834 7349 4141 }\n        $gzip2 = { 4800 3400 7300 4900 4100 41 }\n\n\t$api = \"WrapNonExceptionThrows\"\n\n\t$anchor = /H4sIA[A-Za-z0-9\\x2b\\x2f_-]{1024}/\twide ascii\n\n\t//016cd50: 0100 0000 433a 5c78 616d 7070 5c68 7464  ....C:\\xampp\\htd\n\t//016cd60: 6f63 735c 4173 7069 7265 5c66 696c 6573  ocs\\Aspire\\files\n\t//016cd70: 5c70 7269 6e63 6532 3437 5f61 7545 5552  \\prince247_auEUR\n\t//016cd80: 597a 4944 515a 5678 4f64 6f5c 6175 4555  YzIDQZVxOdo\\auEU\n\t//016cd90: 5259 7a49 4451 5a56 784f 646f 6d61 2e70  RYzIDQZVxOdoma.p\n\t//016cda0: 6462 0000 cceb 1600 0000 0000 0000 0000  db..............\n\t$pdb = { 2e70 6462 }\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand uint32(filesize-32) == 0x00000000000000000000000000000000\n\tand any of ($gzip*)\n\tand $api\n\tand $anchor\n\tand $pdb\n}\n\nrule PE_MZ_keyencryption\n:malexe\n{\n   meta:\n        author  \t= \"Nathan Fowler\"\n        date    \t= \"2019-05-02\"\n        tlp     \t= \"GREEN\"\n        description \t= \"MZ/PE with keyencryption\"\n        sample \t\t= \"e58df1b9d3abe4a296ae03b70c6c2033\"\n\treference \t= \"/wiki/hawkeye\"\n\n   strings:\n\t$ke = \"keyencryption\"\tnocase ascii\n\n\t$ = \"</assembly>\"\n\t$ = \"anonymous namespace\"\n\n   condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand #ke > 32\n\tand all of them\n}\n\nrule Office_OLE_Macro_CMD_Rev\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using string reverse full path to cmd.exe with OLE/Macros, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-05-01\"\n        hash = \"dba69369133b00caf73be2e071cfc2a0\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/icedid\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t$ao1 = \"AutoOpen\"       nocase wide ascii\n\t$ao2 = \"Auto_Open\"      nocase wide ascii\n\t$ao3 = \"Document_Open\"  nocase wide ascii\n\t$ao4 = \"Workbook_Open\"  nocase wide ascii\n\t$ao5 = \"AutoExec\"       nocase wide ascii\n\t$ao6 = \"Auto_Exec\"      nocase wide ascii\n\t$ao7 = \"AutoPopulate\"   nocase wide ascii\n\n\t$vb1 = \"VBE\"            nocase wide ascii\n\t$vb2 = \"VBA\"            nocase wide ascii\n\t$vb4 = \"OLE\"            nocase wide ascii\n\t$vb5 = \"stdole\"         nocase wide ascii\n\t$vb6 = \"macro\"          nocase wide ascii\n\n\t//String reversed 'c:\\\\\\windows\\\\\\system32\\\\\\cmd'\n\t$cmd = { \t(44|64)[1-6] (4d|6d)[1-6] (63|43)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (52|32)[1-6]\n\t\t \t(53|33)[1-6] (4d|6d)[1-6] (45|65)[1-6] (54|74)[1-6] (53|73)[1-6] (59|79)[1-6]\n\t\t\t(53|73)[1-6] 5c[1-6] 5c[1-6] 5c[1-6] (53|73)[1-6] (57|77)[1-6] (4f|6f)[1-6]\n\t\t\t(44|64)[1-6] (4e|6e)[1-6] (49|69)[1-6] (57|77)[1-6] 5c[1-6] 5c[1-6] 5c[1-6]\n\t\t\t3a[1-6] (43|63)\n\t}\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n\tand any of ($ao*)\n\tand any of ($vb*)\n\tand $cmd\n}\n\nrule PE_MZ_Ursnif_Eyes\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-30\"\n        description = \"Potential Ursnif PE/MZ with spices that make me think it is bad\"\n        sample = \"3ef2de77f4b4f655a689fdf1bf78b6f5\"\n\n    strings:\n\t$version\t= { 5600 4500 5200 5300 4900 4f00 4e00 5f00 4900 4e00 4600 4f00 }\n\t$assembly\t= { 3c2f 6173 7365 6d62 6c79 3e0d 0a }\n\t$chrgen\t\t= {\t2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n\t\t\t\t3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n\t\t\t\t4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n\t\t\t\t6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n\t\t\t\t7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n\t\t\t\t8081 8283 8485 8687 8889 8a8b 8c8d 8e8f\n\t\t\t\t9091 9293 9495 9697 9899 9a9b 9c9d 9e9f\n\t\t\t  }\n\n\t$api1 = \"GetDoubleClickTime\"\n\t$api2 = \"Sleep\"\n\t$api3 = \"QueryPerformance\"\n\t$api4 = \"IsProcessorFeaturePresent\"\n\t$api5 = \"UnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand $version in (4096..filesize-65535)\n\tand $assembly in (4096..filesize-65535)\n\tand $chrgen\n\tand all of ($api*)\n}\n\nrule PE_Packed_Emotet\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential packed emotet/kryptik PE/MZ\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-29\"\n\t\tsample = \"ea155404e407fe8754a4bd938a87e082\"\n\t\tsample = \"84199eebef97df9e51c9ddc6eb245182\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n\tstrings:\n\t\t// outsd odd port i/o\n\t\t$outsd = { 6F5F 655F 5F4D 656D 6F72 79 }\n\n\t\t$ = \"SHEmptyRecycleBinA\"\n\t\t$ = \"FindExecutableW\"\n\t\t$ = \"CryptSignHashA\"\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\t\tand $outsd\n\t\tand any of them\n}\n\nrule PE_Emotet_BO_CryptSignHashA\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-29\"\n        description = \"Potential Emotet PE/MZ using CryptSignHashA with specific byte ordering\"\n        sample = \"ea155404e407fe8754a4bd938a87e082\"\n\treference = \"/wiki/emotet\"\n\n    strings:\n\n\t$ = \"CryptSignHashA\"\n\n\t//0003c60: 656c 3332 2e64 6c6c 0075 6f61 644c 6962  el32.dll.uoadLib\n\t//0003c70: 7261 7279 4578 5700 0000 0000 0000 0000  raryExW.........\n\t$ = { 656c 3332 2e64 6c6c [1-4] 6f61 644c 6962 7261 7279 4578 5700 }\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\tand uint32(filesize-16) == 0x00000000000000000000000000000000\n\tand all of them\n}\n\nrule PE_IPv4_CryptHook\n:malexe\n{\n    meta:\n        author = \"Peter Misurek/Nathan Fowler\"\n        date = \"2019-04-26\"\n        description = \"Potential Trickbot MZ, embedded IPv4 and CryptStringToBinaryA and SetWindowsHookEx\"\n        sample = \"f50cd8516b988d396505bb340899c6f2\"\n        sample = \"87a95561f405678080472d472c33ceba\"\n        sample = \"4e175051935c7c82232dd0c293ac42ef\"\n\n    strings:\n        //Hardcoded IPv4\n        $IP0 = { 302e3?[0-2]2e3?[0-2]2e3? }\n        $IP1 = { 312e3?[0-2]2e3?[0-2]2e3? }\n        $IP2 = { 322e3?[0-2]2e3?[0-2]2e3? }\n        $IP3 = { 332e3?[0-2]2e3?[0-2]2e3? }\n        $IP4 = { 342e3?[0-2]2e3?[0-2]2e3? }\n        $IP5 = { 352e3?[0-2]2e3?[0-2]2e3? }\n        $IP6 = { 362e3?[0-2]2e3?[0-2]2e3? }\n        $IP7 = { 372e3?[0-2]2e3?[0-2]2e3? }\n        $IP8 = { 382e3?[0-2]2e3?[0-2]2e3? }\n        $IP9 = { 392e3?[0-2]2e3?[0-2]2e3? }\n        $IP10 = { 30002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP11 = { 31002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP12 = { 32002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP13 = { 33002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP14 = { 34002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP15 = { 35002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP16 = { 36002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP17 = { 37002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP18 = { 38002e003?00[0-4]002e003?00[0-4]002e003? }\n        $IP19 = { 39002e003?00[0-4]002e003?00[0-4]002e003? }\n\n        //API calls\n        $API1 = \"CryptStringToBinaryA\"\n        $API2 = \"SetWindowsHookEx\"\n\n    condition:\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n        and any of ($IP*)\n        and all of ($API*)\n}\n\nrule MZ_PE_Osiris_BO\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-26\"\n                reference = \"/wiki/osiris\"\n                description = \"Potential Osiris MZ loader byte order and custom PE section\"\n                samples = \"47a4121b54b59a6914afc2e5607aecd1\"\n\n\tstrings:\n\t\t//00012270: 6541 0000 5001 4765 7453 7461 7274 7570  eA..P.GetStartup\n\t\t//00012280: 496e 666f 4100 4b45 524e 454c 3332 2e64  InfoA.KERNEL32.d\n\t\t//00012290: 6c6c 0000 fd00 4765 7444 4300 0302 5265  ll....GetDC...Re\n\t\t$ = { 4765 7453 7461 7274 7570 496e 666f 41[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand uint32(filesize-16) == 0x00000000000000000000\n\t\tand uint32(filesize-32) == 0x00000000000000000000\n\t\tand uint32(filesize-48) == 0x00000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000\n\t\tand pe.number_of_sections \t>= 5\n\t\tand pe.number_of_imports\t<= 7\n\t\tand pe.DEBUG_STRIPPED \t\t== 512\n\t\tand pe.MACHINE_32BIT \t\t== 256\n\t\tand pe.LOCAL_SYMS_STRIPPED \t== 8\n\t\tand pe.LINE_NUMS_STRIPPED \t== 4\n\t\tand pe.EXECUTABLE_IMAGE \t== 2\n\t\tand pe.RELOCS_STRIPPED \t\t== 1\n\t\tand pe.BYTES_REVERSED_HI \t== 32768\n\t\tand pe.UP_SYSTEM_ONLY \t\t== 16384\n\t\tand pe.DLL \t\t\t== 8192\n\t\tand pe.SYSTEM \t\t\t== 4096\n\t\tand for any i in (3..pe.number_of_sections - 1): (\n\t\t\tnot pe.sections[i].name matches /^\\.[a-z]+(data|text)$/\n\t\t\tand pe.sections[i].name matches /^\\.[a-z]+$/\n\t\t\tand pe.sections[i].raw_data_size == 4096\n\t\t\tand pe.sections[i].virtual_size % 1024 >> 0\n\t\t)\n\t\tand all of them\n}\n\nrule PE_DungCert_Serial\n:malexe\n{\n\n    meta:\n        author   = \"Peter Misurek\"\n        date     = \"2019-04-23\"\n\tmodified = \"2019-04-26\"\n        tlp      = \"AMBER\"\n        description = \"Bad signing certificate serial number with terse one-word Company Name\"\n        samples  = \"914656e842d407c3e90be6d60592fc55\"\n\n    condition:\n        filesize < 1024KB and uint16(0) == 0x5a4d\n        and not pe.signatures[pe.number_of_signatures - 1].serial matches /^([A-Fa-f0-9]{2}\\x3a?){2,}$/\n        and (\n\t\t   pe.version_info[\"CompanyName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t\tor pe.version_info[\"ProductName\"] matches /^[A-Za-z0-9]{1,20}$/\n\t)\n\n}\n\nrule MZ_PE_Pounders_NC\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-25\"\n                reference = \"/wiki/formbook\"\n                description = \"Potential MZ with PE version information pounding of the keyboard.\"\n                samples = \"7d745da50ef4aca016b759f5387fff1b\"\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\t\tand pe.version_info[\"CompanyName\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"Comments\"] matches /^[a-z]{1,128}$/\n\t\tand pe.version_info[\"ProductName\"] matches /^[a-z]{1,128}$/\n}\n\nrule API_Amadey\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Amadey Binary API\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"fbe6d341c1b69975be74616d01c6d273\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/amadey\"\n\n\tstrings:\n\t\t$ = \"Interlocked\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"CreateEventW\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"GetVersionExW\"\n\t\t$ = \"GetOEMCP\"\n\t\t$ = \"GetEnvironmentStringsW\"\n\t\t$ = \"RegisterClassW\"\n\t\t$ = \"UnregisterClassA\"\n\t\t$ = \"PostMessageW\"\n\t\t$ = \"WinVerifyTrust\"\n\t\t$ = \"GetStartupInfoW\"\n\t\t$ = \"LCMapStringW\"\n\n\t\t$byte_order = { 4b45 524e 454c 3332 2e64 6c6c [1-512] 5553 4552 3332 2e64 6c6c [1-32] 434f 4d43 544c 3332 2e64 6c6c [1-256] 5749 4e54 5255 5354 2e64 6c6c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n\t\tand pe.RELOCS_STRIPPED == 1\n\n}\n\nrule Office_40_URL_Embed\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using legacy Word/Excel 4.0 format and a URL present with a PK embed, likely a maldoc dropper\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        hash = \"d33fd4d91e78f4e4cda03703159bc37e\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/amadey\"\n\n    strings:\n        $office = { d0cf 11e0 a1b1 1ae1 }\n\n        $legacy1 = \"Excel 4.0\"\n        $legacy2 = \"Word 4.0\"\n\n        $bad1 = \"http://\"\n        $bad2 = \"https://\"\n\n        $embed = { 504b 0304 }    //PK\n\n    condition:\n        uint16(0) == 0xcfd0\n        and $office at 0\n        and any of ($legacy*)\n        and any of ($bad*)\n        and $embed in (4096 .. filesize)\n}\n\nrule API_Azorult\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Azorult Binary API with ForceRemove and CRC checking\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-24\"\n\t\tsample = \"4a0fbf8718587af3ebe26d9a86c5e81f\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/azorult\"\n\t\tfeelz = \"https://www.youtube.com/watch?v=Y-Tjgur2DTM&t=8\"\n\n\tstrings:\n\t\t$ = \"GetACP\"\n\t\t$ = \"GetLocaleInfoA\"\n\t\t$ = \"GetVersionExA\"\n\t\t$ = \"GetSystemTimeAsFileTime\"\n\t\t$ = \"QueryPerformanceCounter\"\n\t\t$ = \"GetTickCount\"\n\t\t$ = \"MultiByteToWideChar\"\n\t\t$ = \"WideCharToMultiByte\"\n\t\t$ = \"HeapDestroy\"\n\t\t$ = \"HeapCreate\"\n\t\t$ = \"HeapReAlloc\"\n\t\t$ = \"TerminateProcess\"\n\t\t$ = \"GetEnvironmentStrings\"\n\t\t$ = \"FreeEnvironmentStrings\"\n\t\t$ = \"GetCommandLine\"\n\t\t$ = \"EnumSystemLocales\"\n\t\t$ = \"IsValid\"\n\t\t$ = \"GetOEMCP\"\n\n\t\t//Interesting spices\n\t\t$ = \"GetProcessWindowStation\"\n\t\t$ = \"ForceRemove\"\n\t\t//$ = \"CRC Checker,\"\n\t\t//$ = \"Microsoft Visual C++\"\n\t\t$ = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n\t\t$ = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 5553 4552 3332 2e64 6c6c 00 }        //KERNEL32.dll USER32.dll\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule Office_Active_AO_Winmgm_Reverse\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential maldoc using StrReverse, Auto Open behavior, ActiveDocument, and Winmgmts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-22\"\n\t\thash = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/avemaria\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$bad1 = \"Winmgmts\"\t\tnocase ascii\n\t\t$bad2 = \"StrReverse\"\t\tascii\n\t\t$bad3 = \"ActiveDocument\"\tascii\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand all of ($bad*)\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n}\n\nrule Office_XML_LongInt\n:maldoc\n{\n    meta:\n        description = \"Potential maldoc using a long integer in XML\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-04-22\"\n        sample = \"56ff38d5a61f29004c1ee68ffd4f29d1\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/avemaria\"\n\n    strings:\n        $schema = \"xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"\"\n        $long_int = /=\\x22[0-9]{512,8096}\\x22/\n\n    condition:\n        uint16(0) == 0x3f3c\n        and uint16(2) == 0x6d78\n        and uint16(4) == 0x206c\n        and all of them\n}\n\nrule PE_Avemaria_CHAD\n:malexe\n{\n        meta:\n                description = \"Potential AveMaria Binary CHAD HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-22\"\n                sample = \"f5026299891e9351167633f655c9a682, 56ff38d5a61f29004c1ee68ffd4f29d1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/avemaria\"\n\n        strings:\n                //Nonsense\n\t        $chad1 = { 0d0a 486f 7374 3a20 [1-4] 0d0a 4163 6365 7074 3a20 2a2f 2a0d 0a43 6f6e 6e65 6374 696f 6e3a 2063 6c6f 7365 0d0a 0d0a }\n\t\t$chad2 = { 48 5454 502f 312e 310d 0a55 7365 722d 4167 656e 743a 20 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\n\n\nrule MZ_PE_PEPE\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-06-10\"\n\t\tmodified = \"2019-06-17\"\n                description = \"Interesting fluffy byte code potentially associated with njrat or .NET Bladabindi\"\n                reference = \"/wiki/njrat, /wiki/bladabindi\"\n                samples = \"a075d07dffdf125e20a57048deaa8abc, 0b6d3da3389ed3e54cac2dce807cd022\"\n\n        strings:\n                $pepe1 = { 8000 0000 0000 0000 0000 0000 0000 0001 }\n                $pepe2 = { f0f0 f0ff f0f0 f0ff f0f0 f0ff f0f0 f0ff }\n\t\t$pepe3 = { e0e9 e9ff e0e9 e9ff e0e9 e9ff e0e9 e9ff }\n\t\t$pepe4 = { 7805 7805 7805 7805 7805 7805 7805 7805 }\n\n        condition:\n                uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n                and (\n                           #pepe1 > 128\n                        or #pepe2 > 128\n                        or #pepe3 > 128\n                        or #pepe4 > 128\n                )\n}\n\nrule PE_CHAD_API_Raccoon\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential Raccoon Binary API, null bytes to EOF, No .Net Assembly, Dinkumware libraries, and CHAD HTTP Headers\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-19\"\n\t\tsample = \"4895e1c807a9bb9d2359d4510283fc8a\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/raccoon\"\n\n\tstrings:\n\t\t$api1 = \"HttpOpenRequestA\"\n\t\t$api2 = \"InternetReadFile\"\n\t\t$api3 = \"HttpSendRequestA\"\n\n\t\t//Nonsense\n\t\t$chad1 = { 636f 6e74 656e 742d 6469 7370 6f73 6974 696f 6e3a 2066 6f72 6d2d 6461 7461 3b20 6e61 6d65 3d22 }\n\t\t$chad2 = { 22 0d0a 436f 6e74 656e 742d 5479 7065 3a20 6170 706c 6963 6174 696f 6e2f 6f63 7465 742d 7374 7265 616d 0d0a 0d0a }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Dink_Ass_TPDB_W\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API, null bytes to EOF, .Net Assembly, Dinkumware libraries, and a terse path PDB\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n        date = \"2019-04-18\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17, 1e9a562ecf7a96dd7173d24c438ff8f9, 1e9a562ecf7a96dd7173d24c438ff8f9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n            //$api1 = \"AVVirtualProcessorRoot\"\n            $api2 = \"CreateSymbolicLinkW\"\n            $api3 = \"DecodePointer\"\n            $api4 = \"EncodePointer\"\n            $api5 = \"FlsGetValue\"\n            $api6 = \"FlsSetValue\"\n            $api7 = \"FreeEnvironmentStringsW\"\n            $api8 = \"GetACP\"\n            //$api9 = \"GetAsyncKeyState\"\n            $api10 = \"GetCommandLineA\"\n            //$api11 = \"GetCommandLineW\"\n            $api12 = \"GetConsoleCP\"\n            $api13 = \"GetConsoleMode\"\n            $api14 = \"GetCPInfo\"\n            $api15 = \"GetCurrentProcessorNumber\"\n            //$api16 = \"GetCurrentProcessorNumberEx\"\n            //$api17 = \"GetDC\"\n            $api18 = \"GetEnvironmentStringsW\"\n            $api19 = \"GetFileInformationByHandleEx\"\n            $api20 = \"GetLocaleInfoEx\"\n            $api21 = \"GetLocaleInfoW\"\n            $api22 = \"GetLogicalProcessorInformation\"\n            //$api23 = \"GetLogicalProcessorInformationEx\"\n            //$api24 = \"GetNumaHighestNodeNumber\"\n            $api25 = \"GetOEMCP\"\n            $api26 = \"GetProcAddress\"\n            //$api27 = \"GetProcessAffinityMask\"\n            $api28 = \"GetStartupInfoW\"\n            $api29 = \"GetSystemTimeAsFileTime\"\n            //$api30 = \"GetSystemTimePreciseAsFileTime\"\n            $api31 = \"GetTickCount64\"\n            //$api32 = \"GetTraceEnableFlags\"\n            //$api33 = \"GetTraceEnableLevel\"\n            //$api34 = \"GetTraceLoggerHandle\"\n            $api35 = \"GetUserDefaultLCID\"\n            $api36 = \"GetUserDefaultLocaleName\"\n            //$api37 = \"GetVersionExW\"\n            //$api38 = \"InterlockedFlushSList\"\n            $api39 = \"IsDebuggerPresent\"\n            $api40 = \"IsProcessorFeaturePresent\"\n            $api41 = \"IsValidCodePage\"\n            $api42 = \"IsValidLocale\"\n            $api43 = \"IsValidLocaleName\"\n            //$api44 = \"LocaleNameToLCID\"\n            $api45 = \"MultiByteToWideChar\"\n            $api46 = \"QueryPerformanceCounter\"\n            //$api47 = \"RegCreateKeyA\"\n            //$api48 = \"SchedulerKind\"\n            //$api49 = \"SetThreadAffinityMask\"\n            //$api50 = \"SleepConditionVariableCS\"\n            //$api51 = \"SleepConditionVariableSRW\"\n            //$api52 = \"SystemFunction036\"\n            //$api53 = \"TargetOversubscriptionFactor\"\n            $api54 = \"TlsAlloc\"\n            $api55 = \"TlsFree\"\n            $api56 = \"TlsGetValue\"\n            $api57 = \"TlsSetValue\"\n            //$api58 = \"TryAcquireSRWLockExclusive\"\n            //$api59 = \"TryEnterCriticalSection\"\n            $api60 = \"UnhandledExceptionFilter\"\n            //$api61 = \"UTF-16LEUNICODE\"\n            //$api62 = \"VirtualProtectEx\"\n            $api63 = \"WideCharToMultiByte\"\n\n            //Now, some random spice!\n            $spice1 = \"Dinkumware\"\n            $spice2 = \"assembly>\"\n            $spice3 = { 3a 5c [8-32] 2e 7064 6200 }        //Terse PDB\n            $spice4 = \"Sleep\"\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint32(filesize-32) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule PE_gozi_ursnif\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Gozi/Ursnif\"\n        risk = \"high\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n        tlp = \"GREEN\"\n\n    strings:\n        $pdb = /\\x3A\\x5c([A-Za-z-]{2,8}\\\\){1,4}(([A-Za-z]{1,12}\\.pdb){1})/\n\n        $ = \"Sleep\"\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"GetOEMCP\"\n        $ = \"HeapFree\"\n        $ = \"HeapSize\"\n        $ = \"TlsAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"HeapAlloc\"\n        $ = \"RtlUnwind\"\n        $ = \"WriteFile\"\n        $ = \"CloseHandle\"\n        $ = \"ExitProcess\"\n        $ = \"GetFileType\"\n        $ = \"HeapReAlloc\"\n        $ = \"TlsGetValue\"\n        $ = \"TlsSetValue\"\n        $ = \"GetConsoleCP\"\n        $ = \"GetLastError\"\n        $ = \"GetStdHandle\"\n        $ = \"LCMapStringW\"\n        $ = \"SetLastError\"\n        $ = \"SetStdHandle\"\n        $ = \"WriteConsoleW\"\n        $ = \"GetConsoleMode\"\n        $ = \"GetProcAddress\"\n        $ = \"GetStringTypeW\"\n        $ = \"RaiseException\"\n        $ = \"GetStartupInfoW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"GetModuleHandleW\"\n        $ = \"TerminateProcess\"\n        $ = \"GetCurrentProcess\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"EnterCriticalSection\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"SetUnhandledExceptionFilter\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $pdb\n        and pe.version_info[\"LegalCopyright\"] matches /Copyright\\x20?\\xa9\\x2020[0-2][0-9]\\x2e?\\x2d?(20[0-2][0-9])?/\n        and 40 of them\n}\n\nrule API_Emotet_Dinkumware_eFeelz\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API with pdb on E:\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-17\"\n                sample = \"d92b779ad3e8dfd26705cc812596ea17\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //Debugger/VM/system inventory\n                $api1 = \"GetLocaleInfoW\"\n                $api2 = \"IsValidLocale\"\n                $api3 = \"GetUserDefaultLCID\"\n                $api4 = \"EnumSystemLocalesW\"\n                $api5 = \"IsDebuggerPresent\"\n                $api6 = \"AreFileApisANSI\"\n                $api7 = \"IsValidCodePage\"\n                $api8 = \"GetTimeZoneInformation\"\n                $api9 = \"GetOEMCP\"\n                $api10 = \"GetACP\"\n                $api11 = \"QueryPerformanceCounter\"\n                $api12 = \"GetCPInfo\"\n                $api13 = \"IsProcessorFeaturePresent\"\n\t\t$api14 = \"GetConsoleCP\"\n\t\t$api15 = \"GetConsoleMode\"\n\n\t\t//Random API feelz\n\t\t$api20 = \"GetCommandLineA\"\n\t\t$api21 = \"GetCommandLineW\"\n\t\t$api22 = \"Sleep\"\n\n                //Now, some random spice!\n                $spice1 = \"Dinkumware\"\n                $spice2 = \"<assembly\"\n\t\t//0065f00: b794 0556 767d 0d3a 0100 0000 653a 5c42  ...Vv}.:....e:\\B\n\t\t//0065f10: 7572 6e5c 7365 6e64 5c68 6f75 7365 5c45  urn\\send\\house\\E\n\t\t//0065f20: 7861 6d70 6c65 436c 6173 732e 7064 6200  xampleClass.pdb.\n\n        \t$spice3 = {(65|45)3a 5c42 [8-64] 2e 7064 6200 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and uint16(filesize-2) == 0x0000\n                and all of them\n}\n\nrule PE_Ryuk\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-16\"\n        description = \"Ryuk\"\n        risk = \"high\"\n        sample = \"1bd7d1b87c5091a9653fe8005892b784\"\n        sample = \"4bb18d5e27f9e75b211f8053a1e0fb4f\"\n        tlp = \"GREEN\"\n\t\treference = \"/wiki/ryuk\"\n\n    strings:\n        // No system is safe\n        $str02  = { 4E6F 2073 7973 7465 6D20 6973 2073 6166 }\n\n        $ = \"GetACP\"\n        $ = \"TlsFree\"\n        $ = \"TlsAlloc\"\n        $ = \"HeapSize\"\n        $ = \"HeapFree\"\n        $ = \"GetOEMCP\"\n        $ = \"WriteFile\"\n        $ = \"RtlUnwind\"\n        $ = \"HeapAlloc\"\n        $ = \"GetCPInfo\"\n        $ = \"FindClose\"\n        $ = \"TlsSetValue\"\n        $ = \"TlsGetValue\"\n        $ = \"HeapReAlloc\"\n        $ = \"GetFileType\"\n        $ = \"FreeLibrary\"\n        $ = \"ExitProcess\"\n        $ = \"CreateFileW\"\n        $ = \"CloseHandle\"\n        $ = \"SetStdHandle\"\n        $ = \"SetLastError\"\n        $ = \"LCMapStringW\"\n        $ = \"GetStdHandle\"\n        $ = \"GetLastError\"\n        $ = \"GetConsoleCP\"\n        $ = \"WriteConsoleW\"\n        $ = \"DecodePointer\"\n        $ = \"RaiseException\"\n        $ = \"LoadLibraryExW\"\n        $ = \"GetStringTypeW\"\n        $ = \"GetProcessHeap\"\n        $ = \"GetProcAddress\"\n        $ = \"GetConsoleMode\"\n        $ = \"IsValidCodePage\"\n        $ = \"GetStartupInfoW\"\n        $ = \"GetCommandLineW\"\n        $ = \"GetCommandLineA\"\n        $ = \"TerminateProcess\"\n        $ = \"SetFilePointerEx\"\n        $ = \"GetModuleHandleW\"\n        $ = \"FlushFileBuffers\"\n        $ = \"SystemFunction036\"\n        $ = \"IsDebuggerPresent\"\n        $ = \"GetCurrentProcess\"\n        $ = \"GetModuleHandleExW\"\n        $ = \"GetModuleFileNameW\"\n        $ = \"GetCurrentThreadId\"\n        $ = \"WideCharToMultiByte\"\n        $ = \"MultiByteToWideChar\"\n        $ = \"InitializeSListHead\"\n        $ = \"GetCurrentProcessId\"\n        $ = \"LeaveCriticalSection\"\n        $ = \"EnterCriticalSection\"\n        $ = \"DeleteCriticalSection\"\n        $ = \"GetEnvironmentStringsW\"\n        $ = \"QueryPerformanceCounter\"\n        $ = \"GetSystemTimeAsFileTime\"\n        $ = \"FreeEnvironmentStringsW\"\n        $ = \"UnhandledExceptionFilter\"\n        $ = \"IsProcessorFeaturePresent\"\n        $ = \"SetUnhandledExceptionFilter\"\n        $ = \"InitializeCriticalSectionAndSpinCount\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $str02\n        and 20 of them\n}\n\nrule API_BO_BlackMoon\n:malexe\n{\n        meta:\n                description = \"Potential BlackMoon/KRBanker Binary API byte order\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"8f6a31b8eaa70217d80cc419f10285274cf3ec4c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/blackmoon\"\n\n        strings:\n\t\t//00016610: 4c6f 6164 4c69 6272 6172 7941 0000 5669  LoadLibraryA..Vi\n\t\t//00016620: 7274 7561 6c50 726f 7465 6374 0000 5261  rtualProtect..Ra\n\t\t//00016630: 7348 616e 6755 7041 0000 5348 4765 7453  sHangUpA..SHGetS\n\t\t//00016640: 7065 6369 616c 466f 6c64 6572 5061 7468  pecialFolderPath\n\n\t\t$byte_order =  { 4c6f 6164 4c69 6272 6172 7941 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 5261 7348 616e 6755 7041 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule API_Emotet_Keys\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary API using Hot Keys\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-16\"\n                sample = \"ba9e7159bb92c1525de87f4edd9f5af9\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n\t\t$api1 = \"GetProcAddress\"\n\n\t\t//Debugger/VM/system inventory\n\t\t$api2 = \"GetLocaleInfoW\"\n\t\t$api3 = \"IsValidLocale\"\n\t\t$api4 = \"GetUserDefaultLCID\"\n\t\t$api5 = \"EnumSystemLocalesW\"\n\t\t$api6 = \"IsDebuggerPresent\"\n\t\t$api7 = \"AreFileApisANSI\"\n\t\t$api8 = \"IsValidCodePage\"\n\t\t$api9 = \"GetTimeZoneInformation\"\n\t\t$api10 = \"GetOEMCP\"\n\t\t$api11 = \"GetACP\"\n\t\t$api12 = \"QueryPerformanceCounter\"\n\t\t$api13 = \"FreeEnvironmentStringsW\"\n\t\t$api14 = \"OutputDebugStringW\"\n\t\t$api15 = \"GetCPInfo\"\n\t\t$api16 = \"IsProcessorFeaturePresent\"\n\n\t\t//Feelz bad\n\t\t$api20 = \"GetSystemTimeAsFileTime\"\n\t\t$api21 = \"WideCharToMultiByte\"\n\t\t$api22 = \"UnhandledExceptionFilter\"\n\t\t$api23 = \"Sleep\"\n\t\t$api24 = \"GetAsyncKeyState\"\n\t\t$api25 = \"UnregisterHotKey\"\n\t\t$api26 = \"TlsAlloc\"\n\t\t$api27 = \"EncodePointer\"\n\t\t$api28 = \"GetCurrentProcessorNumber\"\n\t\t$api29 = \"GetTickCount64\"\n\t\t$api30 = \"SetFileInformationByHandleW\"\n\t\t$api31 = \"CreateSymbolicLinkW\"\n\n\t\t//Now, some random spice!\n\t\t$spice1 = \"Dinkumware\"\n\t\t$spice2 = \"<assembly\"\n\n\t\t//Tracking threats on whitespace usage!  NextGenHacker101 style skills.\n\t\t//$h4x0r = { 55 2020 2020 }\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint16(filesize-2) == 0x0000\n\t\tand all of them\n}\n\nrule PE_gozi_ursnif2\n:malexe\n{\n    meta:\n        author = \"Peter Misurek\"\n        date = \"2019-04-08\"\n        description = \"Gozi/Ursnif\"\n        sample = \"d599cb016d98ff5e53ffc288df945ac0\"\n\n    strings:\n        $api01 = \"GetProcAddress\"\n        $api02 = \"TerminateProcess\"\n        $api03 = \"GetCurrentProcess\"\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and\n        (pe.entry_point == 0x5e8 or pe.entry_point == 0x2abe7\n        or pe.entry_point == 0x2b95d or pe.entry_point == 0x2c3f8\n        or pe.entry_point == 0x2cf18 or pe.entry_point == 0x2ee78\n        or pe.entry_point == 0x308a2 or pe.entry_point == 0x31c2f\n        or pe.entry_point == 0x9d17f2 or pe.entry_point == 0x1281D1\n        or pe.entry_point == 0x1567 or pe.entry_point == 0x6B9D\n        or pe.entry_point == 0x1839F)\n}\n\nrule PE_DungCert_CN\n:malexe\n{\n    meta:\n    author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-04-01\"\n\tmodified = \"2019-04-12\"\n        tlp = \"AMBER\"\n        reference = \"/wiki/emotet\"\n        description = \"Signed PE/MZ with a garbage CN value, reminds me of SSLValidator.pl logic\"\n        samples = \"25f63a7402048eea0955b7468e9ef2c3\"\n\n    condition:\n    uint16(0) == 0x5a4d\n        and (\n               pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[^aAeEiIoOuU]+$/\n            or pe.signatures[pe.number_of_signatures - 1].subject matches /^\\/CN=[A-Z]{8,32}$/\n        )\n}\n\nrule PE_DungCert_HackingTooMuchTime\n:malexe\n{\n    meta:\n        author   = \"Nathan Fowler/Peter Misurek\"\n        thanks   = \"The Distinguished Order of the Miscreant Punchers, RHMP\"\n        date     = \"2019-04-02\"\n\tmodified = \"2019-04-12\"\n        tlp      = \"AMBER\"\n        reference   = \"/wiki/emotet\"\n        description = \"Self-Signed PE/MZ with a not_after value so large they are simply hacking too much time.\"\n        samples  = \"25f63a7402048eea0955b7468e9ef2c3\"\n        feelz    = \"https://www.youtube.com/watch?v=fQGbXmkSArs\"\n\n    condition:\n        //MZ and PE\n        uint16(0) == 0x5a4d and uint32(uint32(0x3C)) == 0x00004550\n\n        //Null at the end, seen this quite a few times with Emotet\n        and uint16(filesize-2) == 0x0000\n\n        //Certificate expires in 10 years or more and appears to be self-signed\n        and pe.signatures[pe.number_of_signatures -1].not_after >  time.now() + (315569520 * 1.1)\n        and pe.signatures[pe.number_of_signatures -1].version    == 3\n        and pe.signatures[pe.number_of_signatures -1].algorithm  == \"sha1WithRSA\"\n        and pe.signatures[pe.number_of_signatures -1].issuer     == pe.signatures[pe.number_of_signatures -1].subject\n        and pe.signatures[pe.number_of_signatures -1].subject matches /^\\/CN=[^\\x2e]+$/\n\n        //LOL, literally no idea what I'm doing here, but PE isn't PEPE without spices.\n        and pe.NO_BIND           == 2048\n        and pe.NO_SEH            == 1024\n        and pe.NO_ISOLATION      == 512\n        and pe.NX_COMPAT         == 256\n        and pe.DEBUG_STRIPPED    == 512\n        and pe.MACHINE_32BIT     == 256\n        and pe.FORCE_INTEGRITY   == 128\n\n        //Maybe a good idea, https://www.sans.org/reading-room/whitepapers/malicious/attributes-malicious-files-33979 says so.  I grabbed some of these at random feelz.\n        and pe.SUBSYSTEM_WINDOWS_CUI     == 3\n        and pe.SUBSYSTEM_WINDOWS_GUI     == 2\n        and pe.SUBSYSTEM_NATIVE          == 1\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.LINE_NUMS_STRIPPED        == 4\n        and pe.EXECUTABLE_IMAGE          == 2\n        and pe.RELOCS_STRIPPED           == 1\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n\n}\n\nrule API_Emotet_PE_PEPE\n:malexe\n{\n        meta:\n                description = \"Potential Emotet Binary using too many feelz\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-12\"\n                sample = \"1e57b56a1e40a89d326ca55ee1df2996\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/emotet\"\n\n        strings:\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n                $pepe1 = { 3a00 0000 ffff 8?00 }\n                $pepe2 = { 3b00 0000 ffff 8?00 }\n                $pepe3 = { 3c00 0000 ffff 8?00 }\n                $pepe4 = { 3d00 0000 ffff 8?00 }\n                $pepe5 = { 3e00 0000 ffff 8?00 }\n                $pepe6 = { 3f00 0000 ffff 8?00 }\n                $pepe7 = { 3000 0000 ffff 8?00 }\n                $pepe8 = { 3100 0000 ffff 8?00 }\n                $pepe9 = { 3200 0000 ffff 8?00 }\n                $pepe10 = { 3300 0000 ffff 8?00 }\n                $pepe11 = { 3400 0000 ffff 8?00 }\n                $pepe12 = { 3500 0000 ffff 8?00 }\n                $pepe13 = { 3600 0000 ffff 8?00 }\n                $pepe14 = { 3700 0000 ffff 8?00 }\n                $pepe15 = { 3800 0000 ffff 8?00 }\n                $pepe16 = { 3900 0000 ffff 8?00 }\n\n        condition:\n                uint16(0) == 0x5a4d\n        and $lib\n        and ( #pepe1 + #pepe2 + #pepe3 + #pepe4 + #pepe5 + #pepe6 + #pepe7 + #pepe8 + #pepe9 + #pepe10 + #pepe11 + #pepe12 + #pepe13 + #pepe14 + #pepe15 + #pepe16 >= 10 )\n}\n\nrule API_Trickbot_Voltron\n:malexe\n{\n        meta:\n            description = \"Potential Trickbot binary\"\n            author = \"Nathan Fowler\"\n            risk = \"high\"\n            date = \"2019-04-10\"\n            sample = \"f4cc6daa274bdc484cadd4745ff7a975\"\n            tlp = \"GREEN\"\n            reference = \"/wiki/trickbot\"\n            feelz = \"https://youtu.be/tZZv5Z2Iz_s?t=2\"\n\n        strings:\n            //0025820: c002 496e 7465 726c 6f63 6b65 6449 6e63  ..InterlockedInc\n            //0025830: 7265 6d65 6e74 0000 bc02 496e 7465 726c  rement....Interl\n            //0025840: 6f63 6b65 6444 6563 7265 6d65 6e74 0000  ockedDecrement..\n            //0025850: 2104 536c 6565 7000 bd02 496e 7465 726c  !.Sleep...Interl\n            //0025860: 6f63 6b65 6445 7863 6861 6e67 6500 b402  ockedExchange...\n            //$byte_order = { bc02 496e 7465 726c 6f63 6b65 6444 6563 7265 6d65 6e74 [1-4] 536c 6565 70[1-4] 496e 7465 726c 6f63 6b65 64 }\n\n            //C library\n            $lib = \"Dinkumware\"               wide ascii\n\n            //Crypt stuffs\n            $api1 = \"CryptEncrypt\"            wide ascii\n            $api2 = \"CryptImportKey\"          wide ascii\n            $api3 = \"CryptAcquireContextA\"    wide ascii\n            $api4 = \"InterlockedIncrement\"    wide ascii\n            $api5 = \"InterlockedDecrement\"    wide ascii\n            $api6 = \"InterlockedExchange\"     wide ascii\n            $api7 = \"Sleep\"                   wide ascii\n\n        condition:\n            uint16(0) == 0x5a4d\n            and all of them\n}\n\nrule Baldrs_hate_MZ\n:malexe\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-04-09\"\n                reference = \"/wiki/baldr\"\n                description = \"Potential Baldr stealer/locker\"\n                samples = \"d673af1e4ca06225f287677943a214fd\"\n\n        strings:\n\t\t$api1 = \"BinaryReader\"\t\t\t\tascii wide\n\t\t$api2 = \"CryptoServiceProvider\"\t\t\tascii wide\n\t\t$api3 = \"TripleDESCryptoServiceProvider\"\tascii wide\n\t\t$api4 = \"SHA1CryptoServiceProvider\"\t\tascii wide\n\t\t$api5 = \"CryptoTransform\"\t\t\tascii wide\n\t\t$api6 = \"TransformFinalBlock\"\t\t\tascii wide\n\t\t$api7 = \"BinaryOperation\"\t\t\tascii wide\n\t\t$api8 = \"BigEndianUnicode\"\t\t\tascii wide\n\t\t$api9 = \"SymmetricAlgorithm\"\t\t\tascii wide\n\t\t$api10 = \"CryptUnprotectData\"\t\t\tascii wide\t//Srsly?\n\t\t$api11 = \"FromBase64String\"\t\t\tascii wide\n\n\t\t//.NET hatred\n\t\t$net1 = \"SkipVerification\"\t\t\tascii wide\n\t\t$net2 = \"WrapNonExceptionThrows\"\t\tascii wide\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand all of them\n}\n\nrule MZ_Emotet_Debug_Peek\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-09\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ with network mapping events\"\n        samples = \"096ba46194cefe593d39d4a07bb297db\"\n\n    strings:\n\n        //00150c0: 1a03 4d75 6c74 6942 7974 6554 6f57 6964  ..MultiByteToWid\n        //00150d0: 6543 6861 7200 2703 4f70 656e 4576 656e  eChar.'.OpenEven\n        //00150e0: 7441 0000 2b03 4f70 656e 4669 6c65 4d61  tA..+.OpenFileMa\n        //00150f0: 7070 696e 6741 0000 3303 4f70 656e 5072  ppingA..3.OpenPr\n        //0015100: 6f63 6573 7300 3a03 4f75 7470 7574 4465  ocess.:.OutputDe\n        //0015110: 6275 6753 7472 696e 6741 0000 3b03 4f75  bugStringA..;.Ou\n        //0015120: 7470 7574 4465 6275 6753 7472 696e 6757  tputDebugStringW\n        //0015130: 0000 3e03 5065 656b 4e61 6d65 6450 6970  ..>.PeekNamedPip\n        //0015140: 6500 4403 5072 6f63 6573 7333 3246 6972  e.D.Process32Fir\n        $byte_order = { 75 7470 7574 4465 6275 6753 7472 696e 6741 [1-8] 4f75 7470 7574 4465 6275 6753 7472 696e 6757 [1-8] 65 656b 4e61 6d65 6450 6970 65 }\n        $api1 = \"OpenFileMappingA\"    ascii\n        $api2 = \"MultiByteToWideChar\"    ascii\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n}\n\nrule MZ_Emotet_Space_Payload_NN\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-22\"\n\t\tmodified = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential Emotet MZ with oddly indented .NET stuffs or something also seen with Gandcrab\"\n\t\tsamples = \"e38024cae55c8f75236fbfbd0ba8bcda, c734c80b8b1b11417a9358e01b5567ac, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t//I keep coming back to this quad-spaced CRLF stuff.\n\t\t//I think this is an oddity... feelz.\n\t\t//002ae20: 7374 5665 7273 696f 6e3d 2231 2e30 223e  stVersion=\"1.0\">\n\t\t//002ae30: 0d0a 0d0a 2020 2020 3c61 7373 656d 626c  ....    <assembl\n\t\t//002ae40: 7949 6465 6e74 6974 790d 0a20 2020 2020  yIdentity..\n\t\t//002ae50: 2020 7479 7065 3d22 7769 6e33 3222 0d0a    type=\"win32\"..\n\t\t//002ae60: 2020 2020 2020 206e 616d 653d 2244 6973         name=\"Dis\n\t\t//002ae70: 6d2e 3122 0d0a 2020 2020 2020 2070 726f  m.1\"..       pro\n\t\t//002ae80: 6365 7373 6f72 4172 6368 6974 6563 7475  cessorArchitectu\n\t\t//002ae90: 7265 3d22 7838 3622 0d0a 2020 2020 2020  re=\"x86\"..\n\t\t//002aea0: 2076 6572 7369 6f6e 3d22 352e 312e 302e   version=\"5.1.0.\n\t\t//002aeb0: 3022 202f 3e0d 0a20 2020 2020 2020 0d0a  0\" />..       ..\n\t\t//002aec0: 2020 2020 3c64 6573 6372 6970 7469 6f6e      <description\n\t\t//002aed0: 3e57 696e 646f 7773 2064 6570 6c6f 796d  >Windows deploym\n\t\t//002aee0: 656e 7420 696d 6167 6520 7365 7276 6963  ent image servic\n\t\t//002aef0: 696e 6720 616e 6420 6d61 6e61 6765 6d65  ing and manageme\n\t\t//002af00: 6e74 2074 6f6f 6c3c 2f64 6573 6372 6970  nt tool</descrip\n\t\t//002af10: 7469 6f6e 3e0d 0a0d 0a20 2020 203c 6669  tion>....    <fi\n\n\t\t//Oddly spaced indentions\n\t\t$feelz111 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020202020202020 76657273696f6e3d22 }\n\t\t$feelz112 = { 2f3e0d0a \t\t\t\t\t\t\t 2020202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz91 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020202020202020 76657273696f6e3d22 }\n\t\t$feelz92 = { 2f3e0d0a \t\t\t\t\t\t\t202020202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz71 = { 70726f636573736f724172636869746563747572653d22783836220d0a 20202020202020 76657273696f6e3d22 }\n\t\t$feelz72 = { 2f3e0d0a \t\t\t\t\t\t\t20202020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz51 = { 70726f636573736f724172636869746563747572653d22783836220d0a 2020202020 76657273696f6e3d22 }\n\t\t$feelz52 = { 2f3e0d0a \t\t\t\t\t\t\t2020202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t$feelz31 = { 70726f636573736f724172636869746563747572653d22783836220d0a 202020 76657273696f6e3d22 }\n\t\t$feelz32 = { 2f3e0d0a \t\t\t\t\t\t\t202020 0d0a202020203c6465736372697074696f6e }\n\n\t\t//Oddly spaced indentions seen in Gandcrab 2019-04-09\n\t\t$feelz_he_11 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020202020\t3c }\n\t\t$feelz_he_9 = { 3c6170706c69636174696f6e3e200d0a\t202020202020202020\t3c }\n\t\t$feelz_he_7 = { 3c6170706c69636174696f6e3e200d0a\t20202020202020\t\t3c }\n\t\t$feelz_he_5 = { 3c6170706c69636174696f6e3e200d0a\t2020202020\t\t3c }\n\t\t$feelz_he_3 = { 3c6170706c69636174696f6e3e200d0a\t202020\t\t\t3c }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t   all of ($feelz11*)\n\t\t\tor all of ($feelz9*)\n\t\t\tor all of ($feelz7*)\n\t\t\tor all of ($feelz5*)\n\t\t\tor all of ($feelz3*)\n\t\t\tor $feelz_he_11\n\t\t\tor $feelz_he_9\n\t\t\tor $feelz_he_7\n\t\t\tor $feelz_he_5\n\t\t\tor $feelz_he_3\n\n\t\t)\n}\n\nrule MZ_ButtPadding\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-09\"\n\t\treference = \"/wiki/emotet, /wiki/gandcrab\"\n\t\tdescription = \"Potential MZ with PADDINGXX at EOF or null EOF with PADDINGXX in 1024 bytes to EOF\"\n\t\tsamples = \"d05b9bf3e5093ad39ab60289ba952723, 17a4b2ea4846a8ce82c950e66f714c7b\"\n\n\tstrings:\n\n\t\t$padding = \"PADDINGXX\"\tascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand (\n\t\t\t$padding in (filesize-64..filesize)\n\t\t\tor (\n\t\t\t\t    uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\t\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\t\t\tand $padding in (filesize-1024..filesize)\n\t\t\t)\n\t\t)\n}\n\nrule PE_Lots_Of_Evasion\n:malexe\n{\n\tmeta:\n\t\tdescription = \"PE with lots of evasive maneuvers\"\n\t\tauthor = \"Peter Misurek\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-04-03\"\n\t\thash = \"\"\n\t\ttlp = \"AMBER\"\n\n\tcondition:\n               uint16(0) == 0x5a4d\n               and pe.characteristics & pe.RELOCS_STRIPPED\n               and pe.characteristics & pe.LINE_NUMS_STRIPPED\n               and pe.characteristics & pe.LOCAL_SYMS_STRIPPED\n               and\n               for any i in (0..pe.number_of_sections - 1): (\n\t           math.entropy(pe.sections[i].raw_data_offset, pe.sections[i].raw_data_size) >= 7 and\n\t           pe.sections[i].name == \".text\" )\n}\n\nrule Hawkeye_PE_Assembly_Null\n:malexe\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-04-08\"\n\t\tdescription = \"Potential Hawkeye MZ Payload with .net assembly and null termination EOF\"\n\t\tsample = \"15961181f40ec5ca7c54f0c74dc2dce8\"\n\t\treference = \"/wiki/hawkeye\"\n\n\tstrings:\n\t\t$net = { 3e0d 0a3c 2f61 7373 656d 626c 793e 0d0a 0000 0000 0000 0000 0000 }\n\t\t$pkt = { 5075 626c 6963 4b65 7954 6f6b 656e 3d6e 756c 6c }\n\t\t$pdb = { 2e70 6462 }\n\n\t\t//16 byte value pairs, kind of like PEPE's brother.\n\t\t$byte = { 00\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t(4?|5?|6?|7?)(4?|5?|6?|7?)\n\t\t\t00 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand uint32(filesize-32)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-64)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-96)  == 0x00000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000\n\t\tand $net in (filesize-1024..filesize)\n\t\tand $pdb in (filesize-4096..filesize)\n\t\tand $pkt in (1024..8192)\n\t\tand #byte > 64\n}\n\nrule Office_Base64_BreakCatchWide\n:maldoc\n{\n    meta:\n\t\tdescription = \"Potential Emotet maldoc using base64 wide encoded break->catch\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-21\"\n\t\tmodified = \"2019-04-08\"\n\t\thash = \"534ab5d85e4e439449e3ad11708afcae\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/emotet\"\n\n    strings:\n\t\t$office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t// UTF8 and UTF16-LE string wide base64 encoded\n\t\t$encstring_1 = \"IAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHs\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_2 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB\"         ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_3 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB\"       ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_4 = \"ByAGUAYQBrADsAfQB9AGMAYQB0AGMAaAB7AH\"      ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_5 = \"HIAZQBhAGsAOwB9AH0AYwBhAHQAYwBoAHsAfQ\"     ascii wide // Null-spaced wide format of break;}}catch{}}\n\t\t$encstring_6 = \"cgBlAGEAawA7AH0AfQBjAGEAdABjAGgAewB9AH\"    ascii wide // Null-spaced wide format of break;}}catch{}}\n\n\t\t$encstring_7 = \"MAYQB0AGMAaAB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_8 = \"YwBhAHQAYwBoAHs\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_9 = \"BjAGEAdABjAGgAewB\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_10 = \"GMAYQB0AGMAaAB7AH\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_11 = \"YwBhAHQAYwBoAHsAfQ\" ascii wide // Null-spaced wide format of }catch{}}\n\t\t$encstring_12 = \"BjAGEAdABjAGgAewB9AH\" ascii wide // Null-spaced wide format of }catch{}}\n\n    condition:\n\t\tuint16(0) == 0xcfd0\n\t\tand $office at 0\n\t\tand any of ($encstring_*)\n}\n\nrule MZ_API_PDB_Dropper\n:malexe\n{\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-04-03\"\n        reference = \"/wiki/emotet\"\n        description = \"Potential Emotet MZ dropper\"\n        sample = \"5849bacfb97dadc213b48011577b89e2\"\n\n    strings:\n        //Require a PDB\n        $pdb = { 2e70 6462 0000 }\n\n        //API calls (VM/Debugger checking and encoded pointers)\n        $api1 = \"SetUnhandledExceptionFilter\"    wide ascii\n        $api2 = \"IsDebuggerPresent\"        wide ascii\n        $api3 = \"IsProcessorFeaturePresent\"    wide ascii\n        $api4 = \"EncodePointer\"            wide ascii\n        $api5 = \"DecodePointer\"            wide ascii\n        $api6 = \"Sleep\"                wide ascii\n        $api7 = \"GetWindowsDirectoryA\"        wide ascii\n        $api8 = \"GetSystemTimeAsFileTime\"    wide ascii\n        $api9 = \"VirtualProtect\"        wide ascii\n        $api10 = \"GetTempPathA\"            wide ascii\n        $api11 = \"FlsAlloc\"            wide ascii\n\n        //Other stuffs?\n        $stuffs1 = \"AVbad_alloc@std@@\"        wide ascii\n        $stuffs2 = \"AVexception@std@@\"        wide ascii\n        $stuffs3 = \"AVlogic_error@std@@\"    wide ascii\n\n        //.NET stuffs\n        //00035830: 7365 223e 3c2f 7265 7175 6573 7465 6445  se\"></requestedE\n        //00035840: 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a  xecutionLevel>..\n        //00035850: 2020 2020 2020 3c2f 7265 7175 6573 7465        </requeste\n        //00035860: 6450 7269 7669 6c65 6765 733e 0d0a 2020  dPrivileges>..\n        //00035870: 2020 3c2f 7365 6375 7269 7479 3e0d 0a20    </security>..\n\n        $net1 = { 3c2f 7265 7175 6573 7465 6445 7865 6375 7469 6f6e 4c65 7665 6c3e 0d0a 2020 2020 2020 3c2f 7265 7175 6573 7465 6450 7269 7669 6c65 6765 733e 0d0a 2020 2020 3c }\n        $net2 = { 2f61 7373 656d 626c 793e 0000 0000 0000 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and all of them\n        and pe.BYTES_REVERSED_LO         == 128\n        and pe.BYTES_REVERSED_HI         == 32768\n        and pe.DLL                       == 8192\n        and pe.SYSTEM                    == 4096\n}\n\nrule Office_Var_512\n:maldoc\n{\n        meta:\n                description = \"Office document with macro code, auto-behavior, and a large volume of var definitions or array element index one value references\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-04-01\"\n                tlp = \"GREEN\"\n\t\treference = \"/wiki/cobint\"\n\t\tsample = \"4517ceb504a23350ec22508b854e9415\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Auto_Open\"      nocase wide ascii\n                $ao3 = \"Document_Open\"  nocase wide ascii\n                $ao4 = \"Workbook_Open\"  nocase wide ascii\n                $ao5 = \"AutoExec\"       nocase wide ascii\n                $ao6 = \"Auto_Exec\"      nocase wide ascii\n                $ao7 = \"AutoPopulate\"   nocase wide ascii\n\n                $vb1 = \"VBE\"            nocase wide ascii\n                $vb2 = \"VBA\"            nocase wide ascii\n                $vb4 = \"OLE\"            nocase wide ascii\n                $vb5 = \"stdole\"         nocase wide ascii\n                $vb6 = \"macro\"          nocase wide ascii\n\n\t\t//Var\n\t\t$var1 = \"var \"\t\tnocase wide ascii\n\t\t$var2 = \"[1]\"\t\tnocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office at 0\n\t\tand any of ($ao*)\n\t\tand any of ($vb*)\n\t\tand ( #var1 > 512 or #var2 > 512 )\n}\n\nrule Hawkeye_Keylogger_MZ\n:malexe\n{\n\n    meta:\n        author = \"Nathan Fowler\"\n        date = \"2019-03-22\"\n        description = \"Potential Hawkeye Keylogger based on API byte ordering\"\n        samples = \"7b29c3f38cab047488f259d6cfb29948, 969305f9f01a46e8eee82885d9bde2bd\"\n        reference = \"/wiki/hawkeye\"\n\n    strings:\n        //011ff00: 6900 0000 8d49 4200 5669 7274 7561 6c41  i....IB.VirtualA\n        //011ff10: 6c6c 6f63 0000 0000 6b65 726e 656c 3332  lloc....kernel32\n\n        //008ef00: 4765 744e 6174 6976 6553 7973 7465 6d49  GetNativeSystemI\n        //008ef10: 6e66 6f00 6b65 726e 656c 3332 2e64 6c6c  nfo.kernel32.dll\n\n        $byte_order1 = { 4765 744e 6174 6976 6553 7973 7465 6d49 6e66 6f[1-4] 6b65 726e 656c 3332 2e64 6c6c }\n        $byte_order2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and any of ($byte_order*)\n}\n\nrule Random_Hunt_20190321\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt for VM-check/debugger potentially smokeloader or similar\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-21\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/smokeloader\"\n\t\tsample = \"986e45dd8ddc32d45b2c00dd6f0619ac\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"IsDebuggerPresent\"          wide ascii\n                $badapi2 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi3 = \"UnhandledExceptionFilter\"   wide ascii\n\t\t$badapi4 = \"Sleep\"\t\t\twide ascii\n\t\t$badapi5 = \"GetTimeZone\"\t\twide ascii\n\t\t$badapi6 = \"GetOEMCP\"\t\t\twide ascii\n\t\t$badapi7 = \"GetACP\"\t\t\twide ascii\n\t\t$badapi8 = \"GetCPInfo\"\t\t\twide ascii\n\t\t$badapi9 = \"VirtualProtect\"\t\twide ascii\n\t\t$badapi10 = \"QueryPerformance\"\t\twide ascii\n\t\t$badapi11 = \"GetProcessWindow\"\t\twide ascii\n\t\t$badapi12 = \"GetUserObjectInfo\"\t\twide ascii\n\t\t$badapi13 = \"GetLastActive\"\t\twide ascii\n\t\t$badapi14 = \"PeekMessageW\"\t\twide ascii\n\t\t$badapi15 = \"SetWindowsHook\"\t\twide ascii\n\n\t\t$padding = \"PADDINGXXPADDING\"\t\tascii\n\n        condition:\n                uint16(0) == 0x5a4d\n\t\tand uint32(filesize-32) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-64) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-96) == 0x00000000000000000000000000000000000000000000\n\t\tand uint32(filesize-128) == 0x00000000000000000000000000000000000000000000\n                and all of them\n}\n\nrule Win32_XXPADDING_NULL\n:malexe\n{\n    meta:\n        description = \"Potential dropper/stealer 32bit PE with 32byte EOF PADDINGXXPADDING to NULL\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-03-21\"\n        hash = \"dd408e70b13d29b37d03b390deed85a8\"\n        tlp = \"GREEN\"\n        reference = \"/wiki/pony, /wiki/lokibot\"\n\n    strings:\n        //This program must be run under Win32\\r\\n\n        $win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n        //PADDINGXXPADDING\n        $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n    condition:\n        uint16(0) == 0x5a4d\n        and $win32 in (0..256)\n        and $byte_padding in (filesize-1024..filesize)\n        and uint32(filesize-32) == 0x00000000000000000000000000000000\n        and uint32(filesize-64) == 0x00000000000000000000000000000000\n        and uint32(filesize-96) == 0x00000000000000000000000000000000\n        and uint32(filesize-128) == 0x00000000000000000000000000000000\n        and uint32(filesize-256) == 0x00000000000000000000000000000000\n}\n\nrule Troldesh_API_Byte_Order\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                modified        = \"2019-03-21\"\n                description     = \"Potential Troldesh payload\"\n                reference       = \"/wiki/troldesh\"\n                sample          = \"588c44f7d45328df605aaa90902f51b4, e3b60927db92de73e80813fa24a7c61b, d0b32bcb0d2d3c809dd829d0b4f5e36f, 7f9d970c685f7f33aa8a961f2a10173d\"\n\n        strings:\n                $this_program   = {     4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 4000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n        //VirtualAlloc kernel32\n        $api1 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 6b65 726e 656c 3332 0000 }\n\n        //VirtualAlloc GetModuleHandle KERNEL32.dll }\n        $api2 = { 5669 7274 7561 6c41 6c6c 6f63 [1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4] 4b45 524e 454c 3332 2e64 6c6c }\n\n        //Kernel32.dll ActiveKeyboardLayout\n        $api3 = { 4b45 524e 454c 3332 2e64 6c6c [1-4] 4163 7469 7661 7465 4b65 7962 6f61 7264 4c61 796f 7574 00 }\n\n        //Sleep TerminateProcess TlsAlloc\n        $api4 = { 2104 536c 6565 70[1-4] 2d04 5465 726d 696e 6174 6550 726f 6365 7373 [1-4] 546c 7341 6c6c 6f63 00 }\n\n        //Rich PE\n        $rich = { 5269 6368 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and any of ($api*) and $rich in (0..256)\n}\n\nrule Random_Hunt_20190320\n:malexe\n{\n        meta:\n                description = \"Random API-based hunt\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                tlp = \"GREEN\"\n                reference = \"\"\n\n        strings:\n                //VM detection/abnormal API calls\n                $badapi1 = \"SetFileTime\"                wide ascii\n                $badapi2 = \"IsDebuggerPresent\"          wide ascii\n                $badapi3 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi4 = \"IsValidLocale\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Azorult_API_Pad\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Azorult binary based on API ordering and Padding.  May match other families.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-20\"\n                sample = \"56d26fa38657f89c9a7800c9217443c1\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/azorult, /wiki/pony, /wiki/lokibot\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //API ordering\n                //006cd10: da10 0700 ee10 0700 0000 0000 6b65 726e  ............kern\n                //006cd20: 656c 3332 2e64 6c6c 0000 0000 4465 6c65  el32.dll....Dele\n                //006cd30: 7465 4372 6974 6963 616c 5365 6374 696f  teCriticalSectio\n                //006cd40: 6e00 0000 4c65 6176 6543 7269 7469 6361  n...LeaveCritica\n                //006cd50: 6c53 6563 7469 6f6e 0000 0000 456e 7465  lSection....Ente\n                //006cd60: 7243 7269 7469 6361 6c53 6563 7469 6f6e  rCriticalSection\n                $byte_order1 = { 6b65 726e 656c 3332 2e64 6c6c [1-4] 4465 6c65 7465 4372 6974 6963 616c 5365 6374 696f 6e00 }\n\n                //006ce10: 7274 7561 6c51 7565 7279 0000 0000 5769  rtualQuery....Wi\n                //006ce20: 6465 4368 6172 546f 4d75 6c74 6942 7974  deCharToMultiByt\n                //006ce30: 6500 0000 4d75 6c74 6942 7974 6554 6f57  e...MultiByteToW\n                //006ce40: 6964 6543 6861 7200 0000 6c73 7472 6c65  ideChar...lstrle\n                //006ce50: 6e41 0000 0000 6c73 7472 6370 796e 4100  nA....lstrcpynA.\n                $byte_order2 = { 5769 6465 4368 6172 546f 4d75 6c74 6942 7974 65[1-4] 4d75 6c74 6942 7974 6554 6f57 6964 6543 6861 72[1-4] 6c73 7472 6c65 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n                and $byte_padding in (filesize-48 .. filesize)\n}\n\nrule maldoc_b64_cmd_x20\n:maldoc\n{\n    meta:\n        author = \"Nathan Fowler/Peter Misurek\"\n        date = \"2019-03-19\"\n        tlp = \"AMBER\"\n        sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n        reference = \"/wiki/ursnif\"\n        description = \"Potential Maldoc Dropper using cmd with trailing spaces and wide base64 encoding\"\n\n    strings:\n        //VBA and OLE embedding\n        $vb1 = \"VBE\" nocase wide ascii\n        $vb2 = \"VBA\" nocase wide ascii\n        $vb4 = \"OLE\" nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n        //AutoExecute Macro Behavior\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        //Base64 encoded camel-case version of 'cmd  ' or 'cmd.  ' in WIDE format\n        $b1 = \"0ARAA\"        wide ascii\n        $b2 = \"0AZAA\"        wide ascii\n        $b3 = \"BNAEQ\"        wide ascii\n        $b4 = \"BNAGQ\"        wide ascii\n        $b5 = \"bQBEAC\"       wide ascii\n        $b6 = \"bQBkAC\"       wide ascii\n        $b7 = \"BtAEQ\"        wide ascii\n        $b8 = \"BtAGQ\"        wide ascii\n        $b9 = \"E0ARAAgAC\"    wide ascii\n        $b10 = \"E0ARAAuAC\"   wide ascii\n        $b11 = \"E0AZAAgAC\"   wide ascii\n        $b12 = \"E0AZAAuAC\"   wide ascii\n        $b13 = \"G0ARAAgAC\"   wide ascii\n        $b14 = \"G0ARAAuAC\"   wide ascii\n        $b15 = \"G0AZAAgAC\"   wide ascii\n        $b16 = \"G0AZAAuAC\"   wide ascii\n        $b17 = \"TQBEAC\"      wide ascii\n        $b18 = \"TQBkAC\"      wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0\n        and any of ($vb*)\n        and any of ($ao*)\n        and any of ($b*)\n}\n\nrule ursnif_maldoc_dropper_128byte\n:maldoc\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2019-03-19\"\n                tlp = \"AMBER\"\n                sample = \"5862a9f47c1e1b44d63114f292a52d90\"\n                reference = \"/wiki/ursnif\"\n                description = \"Potential Maldoc Dropper\"\n\n        strings:\n                //128 contigious bytes with no whitespace is odd.\n                $base64 = /[A-Z0-9\\x3b\\x3d_-]{128}/     nocase ascii\n\n                //Office 15 Long Path\n                $office15 = {   433a 5c50 726f 6772 616d 2046 696c 6573\n                                5c43 6f6d 6d6f 6e20 4669 6c65 735c 4d69\n                                6372 6f73 6f66 7420 5368 6172 6564 5c4f\n                                4646 4943 4531 355c 4d53 4f2e 444c 4c\n                        }\n\n                //Win16 compatibility\n                $win16 = \"Win16\"        wide ascii\n\n                //VBA and OLE embedding\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n                //AutoExecute Macro Behavior\n                $ao1 = \"AutoExec\"        nocase wide ascii\n                $ao2 = \"AutoOpen\"        nocase wide ascii\n                $ao3 = \"Workbook_Open\"   nocase wide ascii\n                $ao4 = \"Document_Open\"   nocase wide ascii\n                $ao5 = \"_Eval\"           nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0\n                and $office15 and $win16\n                and any of ($vb*)\n                and any of ($ao*)\n                and $base64\n}\n\nrule Formbook_PE_Packed_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential Formbook packed binary, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/formbook\"\n\n        strings:\n\t\t$packed1 = \"aspack\"\tascii\n\t\t$packed2 = \"adata\"\tascii\n\n\n\t\t//00719c0: f9ef 1100 0000 0000 6b65 726e 656c 3332  ........kernel32\n\t\t//00719d0: 2e64 6c6c 0000 0047 6574 5072 6f63 4164  .dll...GetProcAd\n\t\t//00719e0: 6472 6573 7300 0000 4765 744d 6f64 756c  dress...GetModul\n\t\t//00719f0: 6548 616e 646c 6541 0000 004c 6f61 644c  eHandleA...LoadL\n\t\t//0071a00: 6962 7261 7279 4100 0000 0000 0000 0000  ibraryA.........\n\n\t\t$byte_order = { 6b65 726e 656c 3332 2e64 6c6c [1-4]47 6574 5072 6f63 4164 6472 6573 73[1-4] 4765 744d 6f64 756c 6548 616e 646c 6541 [1-4]4c 6f61 644c 6962 7261 7279 4100 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule Ursnif_CHRGEN_API_Null\n:malexe\n{\n        meta:\n\t\tdescription = \"Potential ursnif binary with CHRGEN, API ordering, and training null bytes\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-19\"\n                sample = \"94b29b547ea3e22efb9d97f68f46875c\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/ursnif\"\n\n        strings:\n\n                //Chrgen\n                $chrgen1 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a5b 5c5d 5e5f\n                                6061 6263 6465 6667 6869 6a6b 6c6d 6e6f\n                                7071 7273 7475 7677 7879 7a7b 7c7d 7e7f\n                        }\n                $chrgen2 = {    2021 2223 2425 2627 2829 2a2b 2c2d 2e2f\n                                3031 3233 3435 3637 3839 3a3b 3c3d 3e3f\n                                4041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a5b 5c5d 5e5f\n                                6041 4243 4445 4647 4849 4a4b 4c4d 4e4f\n                                5051 5253 5455 5657 5859 5a7b 7c7d 7e7f\n                        }\n\n                //API Byte Ordering\n\t\t$byte_order = { 536c 6565 70[1-4] 4765 744d 6f64 756c 6546 696c 654e 616d 6557 }\n\n\t\t//.NET Spices\n\t\t$spice = /\\/security>[\\x20\\x0d\\x0a]+</\tascii\n\n\t\t//API calls (VM/Debugger checking and encoded pointers)\n\t\t$api1 = \"SetUnhandledExceptionFilter\"\twide ascii\n\t\t$api2 = \"IsDebuggerPresent\"\t\twide ascii\n\t\t$api3 = \"IsProcessorFeaturePresent\"\twide ascii\n\t\t$api4 = \"EncodePointer\"\t\t\twide ascii\n\t\t$api5 = \"DecodePointer\"\t\t\twide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and filesize < 8096KB\n                and uint32(filesize-32)  == 0x00000000000000000000000000000000\n                and uint32(filesize-64)  == 0x00000000000000000000000000000000\n                and uint32(filesize-96)  == 0x00000000000000000000000000000000\n                and uint32(filesize-128) == 0x00000000000000000000000000000000\n                and all of them\n}\n\nrule VM_Detect_BadAPI_MZ_Pad\n:malexe\n{\n        meta:\n                 description = \"Potential dropper/stealer\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/pony, /wiki/lokibot, /wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule API_Detect_Crypto_Pad_Think\n:malexe\n{\n        meta:\n                 description = \"Potential miner, malware, or ransomware with VM/Hardware detection and crypto functions w/padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-03-18\"\n                sample = \"a76b7140cf6d5c4dc5e0ecff23fc2ce0\"\n                tlp = \"GREEN\"\n                reference = \"/wiki/gandcrab\"\n\n        strings:\n                //PADDINGXXPADDING\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //VM detection/abnormal API calls\n                $badapi1 = \"WideCharToMultiByte\"        wide ascii\n                $badapi2 = \"MultiByteToWideChar\"        wide ascii\n                $badapi3 = \"EncodePointer\"              wide ascii\n                $badapi4 = \"DecodePointer\"              wide ascii\n                $badapi5 = \"UnhandledExceptionFilter\"   wide ascii\n                $badapi6 = \"IsDebuggerPresent\"          wide ascii\n                $badapi7 = \"IsProcessorFeaturePresent\"  wide ascii\n                $badapi8 = \"IsValidLocale\"              wide ascii\n                $badapi9 = \"GetTickCount64\"             wide ascii\n                $badapi10 = \"GetACP\"                    wide ascii\n                $badapi11 = \"GetOEMCP\"                  wide ascii\n                $badapi12 = \"SetUnhandledExceptionFilter\" wide ascii\n                $badapi13 = \"GetStartupInfoW\"           wide ascii\n                $badapi14 = \"GetLocaleInfoEx\"           wide ascii\n\n                //Ransomware Stuffs\n                $badapi20 = \"AreFileApisANSI\"           wide ascii\n                $badapi21 = \"SystemFunction036\"         wide ascii\n                $badapi22 = \"TlsAlloc\"                  wide ascii\n\n                //C library\n                $lib = \"Dinkumware\"                    wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d\n                and all of them\n}\n\nrule Qakbot_SMB_Feelz2\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-13\"\n                description     = \"Potential Qakbot, API call ordering and potentially SMB Feelz to smb.microsoft.com\"\n                reference       = \"/wiki/qakbot\"\n                sample          = \"61d36e1e058d996b28ae0f8a89fbdc46\"\n\n        strings:\n                $this_program = {       4d5a 9000 0300 0000 0400 0000 ffff 0000\n                                        b800 0000 0000 0000 ??00 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 0000 0000\n                                        0000 0000 0000 0000 0000 0000 ??00 0000\n                                        0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n                                        6973 2070 726f 6772 616d 2063 616e 6e6f\n                                        7420 6265 2072 756e 2069 6e20 444f 5320\n                                        6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n                                }\n\n                //Random PEPEs\n                //000789f0: 3e90 2029 0100 0000 5c5c 736d 622e 6d69  >. )....\\\\smb.mi\n                //00078a00: 6372 6f73 6f66 742e 636f 6d5c 7368 6172  crosoft.com\\shar\n                //00078a10: 655c 6465 762e 7064 6200 0000 0000 0000  e\\dev.pdb.......\n\n                //$pepe = { 5c5c 736d 622e 6d69 6372 6f73 6f66 742e 636f 6d5c }\n\n                //Maybe throw some spices in here too just for Spicy Spice (the missing Spice girl)\n                //00078d90: 322e 646c 6c00 d001 4973 4875 6e67 4170  2.dll...IsHungAp\n                //00078da0: 7057 696e 646f 7700 5553 4552 3332 2e64  pWindow.USER32.d\n                //00078db0: 6c6c 0000 2702 5175 6572 7953 6572 7669  ll..'.QueryServi\n                //00078dc0: 6365 4f62 6a65 6374 5365 6375 7269 7479  ceObjectSecurity\n                //00078dd0: 0000 4144 5641 5049 3332 2e64 6c6c 0000  ..ADVAPI32.dll..\n                $spice = {  4973 4875 6e67 4170 7057 696e 646f 77[1-4] 5553 4552 3332 2e64 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and $spice\n}\n\nrule njRAT_AutoIT_API\n{\n\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-03-14\"\n                reference = \"/wiki/bladabindi\"\n                description = \"Potential njrat binary or other RAT/stealer\"\n                sample = \"1e1df9886159e73bdf87c1c7ee5b8704\"\n\n        strings:\n\n                //0013bdb0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                //0013bdc0: 494e 4758 5850 4144 4449 4e47 5041 4444  INGXXPADDINGPADD\n                $byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n                //0008ebc0: 6900 7400 0000 0000 2f00 4100 7500 7400  i.t...../.A.u.t.\n                //0008ebd0: 6f00 4900 7400 3300 4500 7800 6500 6300  o.I.t.3.E.x.e.c.\n                //0008ebe0: 7500 7400 6500 5300 6300 7200 6900 7000  u.t.e.S.c.r.i.p.\n                //0008ebf0: 7400 0000 2f00 4100 7500 7400 6f00 4900  t.../.A.u.t.o.I.\n                //0008ec00: 7400 3300 4500 7800 6500 6300 7500 7400  t.3.E.x.e.c.u.t.\n                $autoit = { 2f00 4100 7500 7400 6f00 4900 7400 }\n\n                //These are \"bad\" API functions\n                $api1 = \"WNetAddConnection2W\"           nocase wide ascii\n                $api2 = \"WNetUseConnection\"             nocase wide ascii\n                $api3 = \"WNetCancelConnection2W\"        nocase wide ascii\n                $api4 = \"WNetGetConnectionW\"            nocase wide ascii\n                $api5 = \"InternetCloseHandle\"           nocase wide ascii\n                $api6 = \"InternetOpenW\"                 nocase wide ascii\n                $api7 = \"InternetSetOptionW\"            nocase wide ascii\n                $api8 = \"InternetCrackUrlW\"             nocase wide ascii\n                $api9 = \"HttpQueryInfoW\"                nocase wide ascii\n                $api10 = \"InternetQueryOptionW\"         nocase wide ascii\n                $api11 = \"InternetConnectW\"             nocase wide ascii\n                $api12 = \"HttpOpenRequestW\"             nocase wide ascii\n                $api13 = \"HttpSendRequestW\"             nocase wide ascii\n                $api14 = \"FtpOpenFileW\"                 nocase wide ascii\n                $api15 = \"FtpGetFileSize\"               nocase wide ascii\n                $api16 = \"InternetOpenUrlW\"             nocase wide ascii\n                $api17 = \"InternetReadFile\"             nocase wide ascii\n                $api18 = \"InternetQueryDataAvailable\"   nocase wide ascii\n\n        condition:\n                uint16(0) == 0x5a4d and $autoit and #byte_padding > 4 and any of ($api*)\n}\n\nrule Formbook_EventSink\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-12\"\n                description     = \"Potential Formbook payload using EVENT_SINK\"\n                reference       = \"/wiki/formbook\"\n                sample          = \"7729ec6cb4d2cd4f30360431f6674471, 2b1e178b9c8e6f84403431a99ba09db3\"\n\n        strings:\n\t\t$this_program = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 ??00 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t//Random PEPEs\n\t\t//0000240: 4d53 5642 564d 3630 2e44 4c4c 0000 0000  MSVBVM60.DLL....\n\t\t//0001380: 0700 0000 5823 4000 5642 3521 3626 2a00  ....X#@.VB5!6&*.\n\t\t//00c9310: 5f61 646a 5f66 7061 7461 6e00 1500 4556  _adj_fpatan...EV\n\t\t//00c9320: 454e 545f 5349 4e4b 5f52 656c 6561 7365  ENT_SINK_Release\n\t\t//00c9330: 0000 5700 5f43 4973 7172 7400 1400 4556  ..W._CIsqrt...EV\n\t\t//00c9340: 454e 545f 5349 4e4b 5f51 7565 7279 496e  ENT_SINK_QueryIn\n\t\t$pepe1 = { 4d53 5642 564d 3630 2e44 4c4c 00 }\n\t\t$pepe2 = { 5642 3521 36 }\n\t\t$pepe3 = { 4556 454e 545f 5349 4e4b }\n\n\t\t//API Byte Ordering\n\t\t//0002330: 6b65 726e 656c 3332 0000 0000 0000 0000  kernel32........\n\t\t//0002340: 1300 0000 4765 7443 7572 7265 6e74 5468  ....GetCurrentTh\n\t\t//0002350: 7265 6164 4964 0000 3023 4000 4423 4000  readId..0#@.D#@.\n\t\t//$byte_order = { 6b65 726e 656c 3332 [1-12] 4765 7443 7572 7265 6e74 5468 7265 6164 4964 0000 }\n\n        condition:\n                uint16(0) == 0x5a4d and $this_program at 0 and all of ($pepe*)\n}\n\nrule Stiff_Ursnif_API\n:malexe\n{\n        meta:\n                author          = \"Nathan Fowler\"\n                date            = \"2019-03-11\"\n                description     = \"Potential Ursnif/Gozi payload\"\n                reference       = \"/wiki/ursnif\"\n                sample          = \"dceb35aa2bedcb5c04045ebefec86135, 1380815f49012496cf30b7557f10495f\"\n\n        strings:\n                $this_program1   = { \t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 7468\n\t\t\t\t\t6973 2069 7320 6120 5769 6e64 6f77 7320\n\t\t\t\t\t4e54 2028 6f77 6e20 5254 4c29 2064 796e\n\t\t\t\t\t616d 6963 206c 696e 6b20 6c69 6272 6172\n\t\t\t\t\t790d 0a24 0000 0000 0000 0000 0000 0000\n                                }\n\n\t\t$this_program2 = {\t4d5a 5000 0200 0000 0400 0f00 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 ??00 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 00?? 0000\n\t\t\t\t\tba10 000e 1fb4 09cd 21b8 014c cd21 9090\n\t\t\t\t\t5468 6973 2070 726f 6772 616d 206d 7573\n\t\t\t\t\t7420 6265 2072 756e 2075 6e64 6572 2057\n\t\t\t\t\t696e 3332 0d0a 2437 0000 0000 0000 0000\n\t\t\t\t}\n\n\t\t\t\t//00330c0: 0000 0000 5800 456e 756d 4d6f 6e69 746f  ....X.EnumMonito\n\t\t\t\t//00330d0: 7273 5700 5749 4e53 504f 4f4c 2e44 5256  rsW.WINSPOOL.DRV\n\t\t\t\t//00330e0: 0000 1802 4765 744d 6f64 756c 6548 616e  ....GetModuleHan\n\t\t\t\t//00330f0: 646c 6557 0000 ef01 4765 7446 696c 654d  dleW....GetFileM\n\t\t\t\t//0033100: 5549 5061 7468 0000 f301 4765 7446 696c  UIPath....GetFil\n\t\t\t\t//0033110: 6554 7970 6500 5301 466c 7346 7265 6500  eType.S.FlsFree.\n\t\t\t\t//0033120: a303 5175 6572 7949 646c 6550 726f 6365  ..QueryIdleProce\n\t\t\t\t//0033130: 7373 6f72 4379 636c 6554 696d 6500 4b45  ssorCycleTime.KE\n\t\t\t\t//0033140: 524e 454c 3332 2e64 6c6c 0000 9a02 5365  RNEL32.dll....Se\n\t\t\t\t//0033150: 7450 616c 6574 7465 456e 7472 6965 7300  tPaletteEntries.\n\t\t\t\t//0033160: 4744 4933 322e 646c 6c00 ba01 5270 6353  GDI32.dll...RpcS\n\t\t\t\t//0033170: 6572 7665 724c 6973 7465 6e00 5250 4352  erverListen.RPCR\n\t\t\t\t//0033180: 5434 2e64 6c6c 0000 0000 0000 0000 0000  T4.dll..........\n\t\t$api1\t\t= { 5175 6572 7949 646c 6550 726f 6365 7373 6f72 4379 636c 6554 696d 65[1-4] 4b45 524e 454c 3332 2e64 6c6c 0000 }\n\n\t\t\t\t//0065800: 0000 0000 5eab 1200 0000 0000 4b45 524e  ....^.......KERN\n\t\t\t\t//0065810: 454c 3332 2e44 4c4c 0061 6476 6170 6933  EL32.DLL.advapi3\n\t\t\t\t//0065820: 322e 646c 6c00 636f 6d63 746c 3332 2e64  2.dll.comctl32.d\n\t\t\t\t//0065830: 6c6c 0067 6469 3332 2e64 6c6c 0069 7068  ll.gdi32.dll.iph\n\t\t\t\t//0065840: 6c70 6170 692e 646c 6c00 6f6c 6533 322e  lpapi.dll.ole32.\n\t\t\t\t//0065850: 646c 6c00 6f6c 6561 7574 3332 2e64 6c6c  dll.oleaut32.dll\n\t\t\t\t//0065860: 0073 6865 6c6c 3332 2e64 6c6c 0075 7365  .shell32.dll.use\n\t\t\t\t//0065870: 7233 322e 646c 6c00 7665 7273 696f 6e2e  r32.dll.version.\n\t\t\t\t//0065880: 646c 6c00 7769 6e73 706f 6f6c 2e64 7276  dll.winspool.drv\n\t\t\t\t//0065890: 0077 736f 636b 3332 2e64 6c6c 0000 4c6f  .wsock32.dll..Lo\n\t\t\t\t//00658a0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n\t\t\t\t//00658b0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n\t\t\t\t//00658c0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n\t\t\t\t//00658d0: 5072 6f63 6573 7300 0000 5265 6746 6c75  Process...RegFlu\n\t\t\t\t//00658e0: 7368 4b65 7900 0000 496d 6167 654c 6973  shKey...ImageLis\n\t\t\t\t//00658f0: 745f 4164 6400 0000 5361 7665 4443 0000  t_Add...SaveDC..\n\t\t\t\t//0065900: 4765 7441 6461 7074 6572 7349 6e66 6f00  GetAdaptersInfo.\n\t\t\t\t//0065910: 0000 4f6c 6544 7261 7700 0000 5661 7269  ..OleDraw...Vari\n\t\t\t\t//0065920: 616e 7443 6f70 7900 0000 5368 656c 6c45  antCopy...ShellE\n\t\t\t\t//0065930: 7865 6375 7465 4100 0000 4765 7444 4300  xecuteA...GetDC.\n\t\t\t\t//0065940: 0000 5665 7251 7565 7279 5661 6c75 6541  ..VerQueryValueA\n\t\t\t\t//0065950: 0000 4f70 656e 5072 696e 7465 7241 0000  ..OpenPrinterA..\n\t\t\t\t//0065960: 696e 6574 5f6e 746f 6100 0000 0000 0000  inet_ntoa.......\n\t\t$api2\t\t= { 4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[256-328] 696e 6574 5f6e 746f 6100 }\n\n        condition:\n                uint16(0) == 0x5a4d and ($this_program1 at 0 or $this_program2 at 0) and any of ($api*)\n}\n\nrule Office_Link_cmd_powershell\n{\n        meta:\n                description = \"Office Document containing a macro or a lnk with a call to console execution and/or some form of Powershell being called or console string manipulation being used\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-05\"\n                modified = \"2019-03-06\"\n                tlp = \"GREEN\"\n\t\tthanks = \"jwade, cocaman\"\n\t\treference = \"/wiki/ursnif, /wiki/Emotet-Evolutions\"\n\t\tsample = \"926d5f7cf14e3a85e55f5358e14eb2cb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $link = { 4c00 0000 0114 }\n                $rtf = { 7B 5C 72 }\n\n                //Console execution in plain text and hex ascii\n                $stupidland1 = /(start|cmd|comspec\\x25?)(\\.exe)?[\\x20\\x09]+\\/[a-z]/ nocase wide ascii\n                $stupidland2 = /([57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4|[46]3([03]0)?[46]d([03]0)?[46]4|[46]3([03]0)?[46]f([03]0)?[46]d([03]0)?[57]3([03]0)?[57]0([03]0)?[46]5([03]0)?[46]3([03]0)?(25)?)(([03]0)?2e([03]0)?[46]5([03]0)?[57]8([03]0)?[46]5)?(20|09|00|30)+2f/ nocase ascii\n\n                $powershellz0 = /p[^\\n]?o[^\\n]?w[^\\n]?e[^\\n]?r[^\\n]?s[^\\n]?h[^\\n]?e[^\\n]?l[^\\n]?l/      nocase wide ascii //Delimited Powershell\n                $powershellz1 = /l[^\\n]?l[^\\n]?e[^\\n]?h[^\\n]?s[^\\n]?r[^\\n]?e[^\\n]?w[^\\n]?o[^\\n]?p/      nocase wide ascii //Delimited Powershell Reversed\n                $powershellz2 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\][\\x20\\x09]*){2}/i      //PowerShell-based functions\n                $powershellz3 = /(\\[[a-z]+\\.[a-z]+(\\.[a-z]+)*\\]\\x3a\\x3a)/i            //PowerShell-based functions\n                $powershellz4 = \"new-\" nocase wide ascii\n                $powershellz5 = \"-wen\" nocase wide ascii\n                $powershellz6 = \"invoke-\" nocase wide ascii\n                $powershellz7 = \"-ekovni\" nocase wide ascii\n                $powershellz8 = \"start-\" nocase wide ascii\n                $powershellz9 = \"-trats\" nocase wide ascii\n                $powershellz10 = \"get-\" nocase wide ascii\n                $powershellz11 = \"-teg\" nocase wide ascii\n                $powershellz12 = /\\x25[A-Za-z0-9_-]+\\x3a/ wide ascii            //See https://ss64.com/nt/syntax.html\n                $powershellz13 = /[57]0([03]0)?[46]f([03]0)?[57]7([03]0)?[46]5([03]0)?[57]2([03]0)?[57]3([03]0)?[46]8([03]0)?[46]5([03]0)?[46]c([03]0)?[46]c/ nocase ascii      //Powershell in hex-ascii\n                $powershellz14 = /[46]c([03]0)?[46]c([03]0)?[46]5([03]0)?[46]8([03]0)?[57]3([03]0)?[57]2([03]0)?[46]5([03]0)?[57]7([03]0)?[46]f([03]0)?[57]0/ nocase ascii      //Powershell in hex-ascii reversed\n\t\t$powershellz15 = /e[^\\n]?n[^\\n]?c[^\\n]?o[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?c[^\\n]?o[^\\n]?m[^\\n]?m[^\\n]?a[^\\n]?n[^\\n]?d/\tnocase wide ascii\n\t\t$powershellz16 = /d[^\\n]?n[^\\n]?a[^\\n]?m[^\\n]?m[^\\n]?o[^\\n]?c[^\\n]?d[^\\n]?e[^\\n]?d[^\\n]?o[^\\n]?c[^\\n]?e[^\\n]?n/\tnocase wide ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                    ( $office at 0 and any of ($stupidland*) and any of ($powershellz*) and any of ($vb*))\n                 or ( ( $link at 0 or $rtf at 0 ) and ( any of ($powershellz*) or any of ($stupidland*) ) )\n}\n\nrule xml_office_doc_total_time_0 {\n    meta:\n        author = \"Sam Scholten\"\n        modified = \"2019-03-05\"\n        hashes = \"[42c4f6fadbf09bf7d9da9607a56d1879]\"\n    strings:\n        $xml = { 3c3f 786d 6c }\n\n        $progid_EXCEL = \"mso-application progid=\\\"Excel.Sheet\" nocase ascii\n        $progid_PPT = \"mso-application progid=\\\"PowerPoint.Show\" nocase ascii\n        $progid_WORD = \"mso-application progid=\\\"Word.Document\" nocase ascii\n\n        $macro_enabled_1 = \"application/vnd.ms-word.document.macroEnabled\"\n        $macro_enabled_2 = \"macrosPresent=\\\"yes\\\"\" nocase wide ascii\n\n        $c_0_total_time  = /<(o:)?TotalTime>0<\\/(o:)?TotalTime>/\n\n     condition:\n               $xml at 0 and\n        (\n            $progid_EXCEL in (0..100) or\n            $progid_PPT in (0..100) or\n            $progid_WORD in (0..100)\n               ) and (any of ($macro_enabled_*)) and $c_0_total_time\n}\n\nrule Obfuscated_This_Program\n:malexe\n{\n\tmeta:\n\t\tauthor\t\t= \"Nathan Fowler\"\n\t\tdate\t\t= \"2019-03-05\"\n\t\tdescription\t= \"Obfuscated/replaced 'This program cannot be run in DOS mode.' executable\"\n\t\treference\t= \"/wiki/dridex\"\n\t\tsample\t\t= \"1acc8ff2531d3a3feef29e6c06e21d3f\"\n\n\tstrings:\n\t\t$this_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 5468\n\t\t\t\t\t6973 2070 726f 6772 616d 2063 616e 6e6f\n\t\t\t\t\t7420 6265 2072 756e 2069 6e20 444f 5320\n\t\t\t\t\t6d6f 6465 2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\t\t$dis_program\t= {\t4d5a 9000 0300 0000 0400 0000 ffff 0000\n\t\t\t\t\tb800 0000 0000 0000 4000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 0000 0000\n\t\t\t\t\t0000 0000 0000 0000 0000 0000 ??00 0000\n\t\t\t\t\t0e1f ba0e 00b4 09cd 21b8 014c cd21 [38]\n\t\t\t\t\t2e0d 0d0a 2400 0000 0000 0000\n\t\t\t\t}\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $dis_program at 0 and not $this_program at 0\n}\n\nrule Delphi_Win32_XXPADDING\n:malexe\n{\n\tmeta:\n\t\tdescription = \"Potential dropper/stealer (Loki/Fareit/Pony/Graftor) 32 bit Delphi PE with 32byte EOF PADDINGXXPADDING\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-03-05\"\n\t\thash = \"ce86df7e2f57155fc785169f75250dca\"\n\t\ttlp = \"GREEN\"\n\t\treference = \"/wiki/pony, /wiki/lokibot\"\n\n\tstrings:\n\t\t//00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n\t\t$mz = { 4d5a 5000 }\n\n\t\t//This program must be run under Win32\\r\\n\n\t\t$win32 = { 5468 6973 2070 726f 6772 616d 206d 7573 7420 6265 2072 756e 2075 6e64 6572 2057 696e 3332 0d0a }\n\n\t\t$delphi = \"Delphi\"\tnocase wide ascii\n\n\t\t//PADDINGXXPADDING\n\t\t$byte_padding = { 5041 4444 494e 4758 5850 4144 4449 4e47 5041 4444 494e 4758 5850 4144 4449 4e47 }\n\n\t\t//Sprinkle in a little PEPE\n\t\t$pepe_spice = { 508b 45?? 508b 45 }\n\n\t\t//Some byte ordering API calls\n\t\t//0004a90: 656c 3332 2e64 6c6c 0000 0000 4765 744c  el32.dll....GetL\n\t\t//0004aa0: 6f6e 6750 6174 684e 616d 6541 0000 0000  ongPathNameA....\n\t\t$byte_order_API = { 656c 3332 2e64 6c6c [1-6] 4765 744c 6f6e 6750 6174 684e 616d 6541 0000 }\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d\n\t\tand $mz at 0\n\t\tand $win32\n\t\tand $delphi\n\t\tand $byte_padding in (filesize-32..filesize)\n\t\tand $pepe_spice\n\t\tand $byte_order_API\n}\n\nrule OpenXML_Too_Much_Trailing_Space\n{\n    meta:\n        description = \"OpenXML document contains too many trailing bytes of 0x20 (128+)\"\n        risk = \"high\"\n        author = \"Nathan Fowler\"\n        modified = \"2019-03-04\"\n\treference = \"/wiki/Emotet-Evolutions\"\n\n    strings:\n\t$xml\t= { 3c3f 786d 6c }\n\t$space\t= { 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 }\n\t$office = \"//schemas.microsoft.com/\" ascii\n\n    condition:\n        uint32(0) == 0x6d783f3c and $xml at 0\n        and $space in (filesize-128..filesize)\n\tand $office\n}\n\nrule Formbook_Executable_BittyBytes\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-03-01\"\n\t\ttlp = \"GREEN\"\n\t\tdescription = \"Potential Formbook payload 12 byte filename base64 byte offset\"\n\t\thashes = \"f2a94f9130c59e24d8976362fffa1b6a, f1e9add7c5b9ce7a4155f090a5a7263b, 692999bdd3569dad203d17fed1cf92c5\"\n\n\tstrings:\n\t\t$magic = { 4d5a 9000 0300 0000 0400 }\n\n\t\t// Not sure what I'm doing here but it seems like a good idea\n\t\t// 005fc20: ad09 0000 0062 6a55 5442 6e63 6967 676f  .....bjUTBnciggo\n\t\t// 005fc30: 3d2e 6578 6500 5468 6d51 572f 4673 4366  =.exe.ThmQW/FsCf\n\t\t//\n\t\t// 005e050: 0000 7700 720c 7600 5009 0000 0061 386d  ..w.r.v.P....a8m\n\t\t// 005e060: 4e65 6557 5652 4246 452e 6578 6500 6862  NeeWVRBFE.exe.hb\n\t\t// 005e070: 7850 702b 4746 677a 5046 6f59 4775 4f4e  xPp+GFgzPFoYGuON\n\t\t//\n\t\t// 0064340: 450c 7600 8406 0000 0038 3857 3679 2f2f  E.v......88W6y//\n\t\t// 0064350: 6b72 3950 4f2e 6578 6500 6351 632f 464b  kr9PO.exe.cQc/FK\n\t\t// 0064360: 646a 426d 666d 4476 6268 6a6c 664a 4564  djBmfmDvbhjlfJEd\n\n\t\t$pepe1 = { (01|02|03|04|05|06|07|08|09)00 0000 [12]2e 6578 6500 [1-8] (2f|2b) }\n\t\t$pepe2 = /[\\x01-\\x09]\\x00{3}[^\\x00\\r\\n]{12}\\.exe\\x00[A-Za-z0-9\\x2b\\x2f\\x3d_-}{1,8}[\\x2f\\x2b]/\n\n\t\t$dot_net = \"Assembly\"\tascii\n\n\t\t$exclude = \"InstallShield\"\tnocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5a4d and $magic at 0 and all of ($pepe*) and $dot_net and not $exclude\n}\n\nrule Executable_Unknown_Dropper\n:maldoc\n{\n        meta:\n                description = \"Executable unknown dropper used with Warzone RAT\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-02-26\"\n                hash = \"2cb663a749b8f07054e8ffc29564f78e\"\n                tlp = \"GREEN\"\n\n        strings:\n                //00000000: 4d5a 5000 0200 0000 0400 0f00 ffff 0000  MZP.............\n                $exe = { 4d5a 5000 }\n\n                //Packers\n                $upx0 = \"UPX0\"  ascii\n                $upx1 = \"UPX1\"  ascii\n\n                //API-DLL call ordering\n                //000a8120: 667c 1b00 0000 0000 4b45 524e 454c 3332  f|......KERNEL32\n                //000a8130: 2e44 4c4c 0061 6476 6170 6933 322e 646c  .DLL.advapi32.dl\n                //000a8140: 6c00 636f 6d63 746c 3332 2e64 6c6c 0063  l.comctl32.dll.c\n                //000a8150: 6f6d 646c 6733 322e 646c 6c00 6764 6933  omdlg32.dll.gdi3\n                //000a8160: 322e 646c 6c00 6f6c 6533 322e 646c 6c00  2.dll.ole32.dll.\n                //000a8170: 6f6c 6561 7574 3332 2e64 6c6c 0073 6865  oleaut32.dll.she\n                //000a8180: 6c6c 3332 2e64 6c6c 0073 6866 6f6c 6465  ll32.dll.shfolde\n                //000a8190: 722e 646c 6c00 7573 6572 3332 2e64 6c6c  r.dll.user32.dll\n                //000a81a0: 0076 6572 7369 6f6e 2e64 6c6c 0000 4c6f  .version.dll..Lo\n                //000a81b0: 6164 4c69 6272 6172 7941 0000 4765 7450  adLibraryA..GetP\n                //000a81c0: 726f 6341 6464 7265 7373 0000 5669 7274  rocAddress..Virt\n                //000a81d0: 7561 6c50 726f 7465 6374 0000 4578 6974  ualProtect..Exit\n                //000a81e0: 5072 6f63 6573 7300 0000 5265 674f 7065  Process...RegOpe\n                //000a81f0: 6e4b 6579 4100 0000 496d 6167 654c 6973  nKeyA...ImageLis\n                //000a8200: 745f 4164 6400 0000 4765 7453 6176 6546  t_Add...GetSaveF\n                //000a8210: 696c 654e 616d 6541 0000 5361 7665 4443  ileNameA..SaveDC\n                //000a8220: 0000 436f 496e 6974 6961 6c69 7a65 0000  ..CoInitialize..\n                //000a8230: 5661 7269 616e 7443 6f70 7900 0000 5368  VariantCopy...Sh\n                //000a8240: 656c 6c45 7865 6375 7465 4100 0000 5348  ellExecuteA...SH\n                //000a8250: 4765 7446 6f6c 6465 7250 6174 6841 0000  GetFolderPathA..\n                //000a8260: 4765 7444 4300 0000 5665 7251 7565 7279  GetDC...VerQuery\n                //000a8270: 5661 6c75 6541 0000 0000 0000 0000 0000  ValueA..........\n                $byte_order = {4b45 524e 454c 3332 2e44 4c4c [1-4]61 6476 6170 6933 322e 646c 6c[1-4] 636f 6d63 746c 3332 2e64 6c6c [1-4]63 6f6d 646c 6733 322e 646c 6c[1-4] 6764 6933 322e 646c 6c[1-4] 6f6c 6533 322e 646c 6c[1-4] 6f6c 6561 7574 3332 2e64 6c6c [1-4]73 6865 6c6c 3332 2e64 6c6c [1-4]73 6866 6f6c 6465 722e 646c 6c[1-4] 7573 6572 3332 2e64 6c6c [1-4]76 6572 7369 6f6e 2e64 6c6c [1-4] 4c6f 6164 4c69 6272 6172 7941 [1-4] 4765 7450 726f 6341 6464 7265 7373 [1-4] 5669 7274 7561 6c50 726f 7465 6374 [1-4] 4578 6974 5072 6f63 6573 73[1-4] 5265 674f 7065 6e4b 6579 41[1-4] 496d 6167 654c 6973 745f 4164 64[1-4] 4765 7453 6176 6546 696c 654e 616d 6541 [1-4] 5361 7665 4443 [1-4] 436f 496e 6974 6961 6c69 7a65 [1-4] 5661 7269 616e 7443 6f70 79[1-4] 5368 656c 6c45 7865 6375 7465 41[1-4] 5348 4765 7446 6f6c 6465 7250 6174 6841 [1-4] 4765 7444 43[1-4] 5665 7251 7565 7279 5661 6c75 6541 }\n\n        condition:\n                uint16(0) == 0x5a4d\n                and $exe at 0\n                and all of ($upx*)\n                and $byte_order\n}\n\nrule Empire_PEPE\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing magical 0xfd 0xf3 byte ordering\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\t\tfeelz = \"meows://www.youtube.com/watch?v=QsDDXSmGJZA&t=57\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$PEPE = { fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00 fd00 0000 0000 0000 0000 0000 00 f300 0000 0000 0000 0000 0000 00fd }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office\n\t\tand $PEPE\n\t\tand any of ($vb*)\n}\n\nrule Office_Ink_Automation\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing Ink Automation, OLE, VBE/VBA, and Decode functions\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-07-02\"\n\t\tmodified = \"2019-02-25\"\n\t\thash = \"39cbce484f3769eb23ea8dab0077d38c\"\n\t\ttlp = \"AMBER\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$rtf \t= { 7b5c 72 }\n\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb4 = \"OLE\"\tnocase wide ascii\n\t\t$vb5 = \"stdole\"\tnocase wide ascii\n\n\t\t$ink1 = \"msinkaut\"\t\tnocase wide ascii\n\t\t$ink2 = \"InkEd.InkEdit\"\tnocase wide ascii\n\n\t\t$decode1 = \"decode\"\tnocase wide ascii\n\t\t$decode2 = \"eval\"\tnocase wide ascii\n\t\t$decode3 = \"base64\"\tnocase wide ascii\n\t\t$decode4 = \"426173653634\"\tnocase wide ascii\n\t\t$decode5 = \"Chr(\"\tnocase wide ascii\n\n\tcondition:\n\t\t(uint16(0) == 0xcfd0 or uint16(0) == 0x7b5c)\n\t\tand ($office at 0 or $rtf at 0)\n\t\tand any of ($ink*)\n\t\tand any of ($decode*)\n\t\tand any of ($vb*)\n}\n\nrule Office_Int_Profile_ShortPath\n:maldoc\n{\n\tmeta:\n\t\tdescription = \"Office Document containing a integrer MS-DOS shortpath profile to TEMP\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-19\"\n\t\ttlp = \"AMBER\"\n\t\tsample = \"4b4d15b28d184c0deb43b1632d540731\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t//MS-DOS Short-path C:/DOCUMENT~1/[1-8 DIGITS]~1/LOCALS~1/Temp/VBE/.{1,8}.exd\n\t\t$feelz1 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz2 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 \t\t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz3 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz4 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 \t\t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz5 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 \t\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz6 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 \t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz7 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00\t\t\t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\t\t$feelz8 = { 3a00 5c00 4400 4f00 4300 5500 4d00 4500 7e00 3100 5c00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 3?00 \t7e00 3100 5c00 4c00 4f00 4300 4100 4c00 5300 7e00 3100 5c00 5400 6500 6d00 7000 5c00 5600 4200 4500 5c00 [1-16]00 2e00 6500 7800 64 }\n\n\t\t//AutoExecute Macro Behavior\n\t\t$ao1 = \"AutoExec\"        nocase wide ascii\n\t\t$ao2 = \"AutoOpen\"        nocase wide ascii\n\t\t$ao3 = \"Workbook_Open\"   nocase wide ascii\n\t\t$ao4 = \"Document_Open\"   nocase wide ascii\n\t\t$ao5 = \"_Eval\"           nocase wide ascii\n\n\t\t//VBA/OLE embedding\n\t\t$vb1 = \"VBE\"    nocase wide ascii\n\t\t$vb2 = \"VBA\"    nocase wide ascii\n\t\t$vb4 = \"OLE\"    nocase wide ascii\n\t\t$vb5 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and any of ($feelz*)\n}\n\nrule Office_Incompetent_Hackerz_rU\n:maldoc\n{\n    meta:\n        description = \"Office Document containing 'Office god' bytecode and CNormalrU\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n        date = \"2019-02-18\"\n        tlp = \"AMBER\"\n\n    strings:\n        $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n        $feelz1 = { 214f 6666 6963 8467 4f44 00 }    //'Office god'\n        $feelz2 = { 0000 2a5c 434e 6f72 6d61 6c72 5500 0100 0080 0000 }        //CNormalrU\n\n        $ao1 = \"AutoExec\"        nocase wide ascii\n        $ao2 = \"AutoOpen\"        nocase wide ascii\n        $ao3 = \"Workbook_Open\"   nocase wide ascii\n        $ao4 = \"Document_Open\"   nocase wide ascii\n        $ao5 = \"_Eval\"           nocase wide ascii\n\n        $vb1 = \"VBE\"    nocase wide ascii\n        $vb2 = \"VBA\"    nocase wide ascii\n        $vb4 = \"OLE\"    nocase wide ascii\n        $vb5 = \"stdole\" nocase wide ascii\n\n    condition:\n        uint16(0) == 0xcfd0 and $office at 0 and all of ($feelz*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_directory_surfing\n:maldoc\n{\n        meta:\n                description = \"Office Document containing a macro and prefix-based Windows directory surfing via slash-dot-dot-slash\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                created = \"2018-11-26\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n                thanks = \"Peter Misurek\"\n                tlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$surfer1 = /\\x5c\\x2e\\x2e\\x5cwindows[\\x5c\\x2e]*system/i\tascii\n\t\t$surfer2 = /[a-zA-Z0-9](\\x5c\\x2e\\x2e)+\\x5c[a-zA-Z0-9]/\tascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n                $vb1 = \"VBE\"\tnocase wide ascii\n                $vb2 = \"VBA\"\tnocase wide ascii\n                $vb3 = \"OLE\"\tnocase wide ascii\n                $vb4 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($surfer*) and any of ($ao*) and any of ($vb*)\n}\n\nrule Office_int_array\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, shell and int array\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2016-06-22\"\n\t\tmodified = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$shell = \"shell\"\tnocase wide ascii\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$int_array = /([0-9]+[\\x20\\x09\\r\\n]*,[\\x20\\x09\\r\\n]*){50}/\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and $shell and any of ($ao*) and any of ($vb*) and $int_array\n}\n\nrule Office_Mult_Cmdline_Switches_bool\n:maldoc\n{\n        meta:\n\t\tdescription = \"Suspected Macro loader, multiple terse command line switches and boolean operators\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-02-13\"\n\t\tmodified_sample = \"067883962660abd576bf618bb6876168\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                //Auto-behavior\n                $ao1 = \"AutoOpen\"       nocase wide ascii\n                $ao2 = \"Document_Open\"  nocase wide ascii\n                $ao3 = \"Workbook_Open\"  nocase wide ascii\n                $ao4 = \"AutoExec\"\tnocase wide ascii\n\t\t$ao5 = \"Evaluate\"\tnocase wide ascii\n\n\t\t//VBA\n\t\t$vb1 = \"VBE\"\tnocase wide ascii\n\t\t$vb2 = \"VBA\"\tnocase wide ascii\n\t\t$vb3 = \"OLE\"\tnocase wide ascii\n\t\t$vb4 = \"stdole\"\tnocase wide ascii\n\n\t\t$switches = /(\\x2f[a-zA-Z]{1,2}[^\\x20\\x09\\x2f]{0,6}[\\x20\\x09]*){2}/\n\n\t\t$boolean1 = \" && \"\tascii\n\t\t$boolean2 = \" || \"\tascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($ao*) and any of ($vb*) and (#boolean1 >= 2 or #boolean2 >= 2) and $switches\n}\n\nrule Office_Macro_vba_WinHttpReq\n{\n     meta:\n         description = \"Office document containing VBA with Web API calls and .exe\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\t date = \"unknown\"\n\t modified = \"2019-02-01\"\n\n     strings:\n\t $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\t $string1 = { 56 00 42 00 41 00 }\n\t $string2 = \"://\"\n\t $string3 = \".exe\" nocase\n\t $http1 = \"WinHttp\" nocase\n\t $http2 = \"URLDownload\" nocase\n\t $http3 = \"urlmon\" nocase\n\t $http4 = \"xmlhttp\" nocase\n\t $http5 = \"internetdownload\" nocase\n\t $http6 = \".responsebody\" nocase\n\t $http7 = \".send\" nocase\n\n\t $exclude1 = \"SunGard.IO\" nocase wide ascii\n\t $exclude2 = \"http://www.investonesupport.com\" nocase wide\n\n     condition:\n         uint16(0) == 0xcfd0 and $office at 0 and all of ($string*) and any of ($http*) and not any of ($exclude*)\n}\n\nrule Env_Var_SubStr\n{\n\tmeta:\n                description = \"NT Environment Variable Substring Manipulation\"\n                author = \"Nathan Fowler\"\n                reference = \"https://ss64.com/nt/syntax.html\"\n                risk = \"high\"\n                date = \"2018-12-31\"\n\t\tmodified = \"2019-01-31\"\n\n\tstrings:\n\t\t//Very terse match with no file magic anchoring, lets assume if we see this style notation anywhere that's it's so uncommon that it is\n\t\t//a malicious indicator.  For more information on this syntax see https://ss64.com/nt/syntax.html\n\n\t\t$substr1 = /([46][0-9A-F]|[57][0-9A])([03]0)?3a([03]0)?7e([03]0)?3[0-9]/\tnocase ascii\t\t//Hex-Ascii version of the substring notation with optional wide format\n\t\t$substr2 = /\\x25[^\\x25]{1,16}\\x3a\\x7e[0-9]+(\\x2c[0-9]+)?\\x25/\t\t\tnocase wide ascii\t//Ascii version of the substring notation\n\n\tcondition:\n\t\t(#substr1 > 2) or (#substr2 > 2)\n}\n\nrule Office_Macro_Chrmap_Wild: maldoc\n{\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-30\"\n        tlp     = \"GREEN\"\n        description = \"Macro-enabled Office document which contains VBA String functions and a character map incrementing by one starting from 0x00.\"\n        sample_hash = \"32dccc75cf76038f93c7c1cbacf70516\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"       nocase wide ascii\n\n\t//Charater mapping, incrementing by one\n\t$pepe = { 00[1] 0000 01[1] 0000 02[1] 0000 03[1] 0000 04[1] 0000 05[1] 0000 06[1] 0000 07[1] 0000 08[1] 0000 09[1] 0000 0a[1] 0000 0b[1] 0000 0c[1] 0000 0d[1] 0000 0e[1] 0000 0f[1] 0000 10[1] 0000 11[1] 0000 12[1] 0000 13[1] 0000 14[1] 0000 15[1] 0000 16[1] 0000 17[1] 0000 18[1] 0000 19[1] 0000 1a[1] 0000 1b[1] 0000 1c[1] 0000 1d[1] 0000 1e[1] 0000 1f[1] 0000 20[1] 0000 21[1] 0000 22[1] 0000 23[1] 0000 24[1] 0000 25[1] 0000 26[1] 0000 27[1] 0000 28[1] 0000 29[1] 0000 2a[1] 0000 2b[1] 0000 2c[1] 0000 2d[1] 0000 2e[1] 0000 2f[1] 0000 30[1] 0000 31[1] 0000 32[1] 0000 33[1] 0000 34[1] 0000 35[1] 0000 36[1] 0000 37[1] 0000 38[1] 0000 39[1] 0000 3a[1] 0000 3b[1] 0000 3c[1] 0000 3d[1] 0000 3e[1] 0000 3f[1] 0000 40[1] 0000 41[1] 0000 42[1] 0000 43[1] 0000 44[1] 0000 45[1] 0000 46[1] 0000 47[1] 0000 48[1] 0000 49[1] 0000 4a[1] 0000 4b[1] 0000 4c[1] 0000 4d[1] 0000 4e[1] 0000 4f[1] 0000 50[1] 0000 51[1] 0000 52[1] 0000 53[1] 0000 54[1] 0000 55[1] 0000 56[1] 0000 57[1] 0000 58[1] 0000 59[1] 0000 5a[1] 0000 5b[1] 0000 5c[1] 0000 5d[1] 0000 5e[1] 0000 5f[1] 0000 60[1] 0000 61[1] 0000 62[1] 0000 63[1] 0000 64[1] 0000 65[1] 0000 66[1] 0000 67[1] 0000 68[1] 0000 69[1] 0000 6a[1] 0000 6b[1] 0000 6c[1] 0000 6d[1] 0000 6e[1] 0000 6f[1] 0000 70[1] 0000 71[1] 0000 72[1] 0000 73[1] 0000 74[1] 0000 75[1] 0000 76[1] 0000 77[1] 0000 78[1] 0000 79[1] 0000 7a[1] 0000 7c[1] 0000 fdff ffff 7d[1] 0000 7e[1] 0000 7f[1] 0000 80[1] 0000 }\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and $pepe and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_OLE_Stream_Base64_GZip: maldoc {\n   meta:\n        author  = \"Nathan Fowler\"\n        date    = \"2019-01-28\"\n        tlp     = \"GREEN\"\n        description = \"Office document which contains base64 encoded gzip header\"\n        thanks = \"Jason Killam\"\n        sample_hash = \"e1f780c1c25ef948418abc97695c7b9a\"\n        feelz   = \"https://youtu.be/l-O5IHVhWj0?t=85\"\n\n   strings:\n        $magic = { d0cf 11e0 a1b1 1ae1 }\n\n        //H4sIAAAAAAAA/3SP227CMAxAf\n        //\"H4sIA\" gzip file header in base64 with long text after it\n        $feelz1 = { 4834 7349 41 }\n        $feelz2 = /[^A-Za-z0-9\\x2b\\x2f]H4sIA[A-Za-z0-9\\x2b\\x2f\\x3d]{128}/       ascii\n\n        //Macro present\n        $vb1 = \"VBE\"    wide ascii\n        $vb2 = \"VBA\"    wide ascii\n        $vb4 = \"OLE\"    wide ascii\n        $vb5 = \"stdole\" wide ascii\n\n        //Auto-behavior\n        $auto1 = \"AutoExec\"     nocase wide ascii\n        $auto2 = \"AutoOpen\"     nocase wide ascii\n        $auto3 = \"_Open\"        nocase wide ascii\n        $auto4 = \"_Close\"        nocase wide ascii\n\n   condition:\n         uint16(0) == 0xcfd0 and $magic at 0 and all of ($feelz*) and any of ($vb*) and any of ($auto*)\n}\n\nrule Office_VB_RegEdit\n{\n        meta:\n                description = \"Office document containing RegEdit functions\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-24\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n\t\t$reg1 = { 07 00 52 00 45 00 47 00 49 00 4e 00 53 00 54 00 }\n\t\t$reg2 = \"\\\\shell\\\\open\\\\command\"\n\t\t$reg3 = \"\\\\run\"\n\n        condition:\n                uint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($reg*)\n}\n\nrule GetCursorPos\n{\n\tmeta:\n\t\tdescription = \"Office Document containing GetCursorPos API call\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"unknown\"\n\t\tmodified = \"2019-01-25\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$api = \"GetCursorPos\" nocase wide ascii\n\n\t\t$vb1 = \"VBE\"\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and $api and any of ($vb*)\n}\n\nrule EXE_NameSpace\n{\n        meta:\n                description = \"Executable with a XML namespace defined to a URI object which we do not like\"\n                author = \"Nathan Fowler\"\n                date = \"2019-01-24\"\n                risk = \"high\"\n                tlp = \"GREEN\"\n\n        strings:\n                $magic1 = { 4d5a }       //MZ\n\t\t$magic2 = \"This program \"\tascii\n\n\t\t//https://stackoverflow.com/questions/180985/what-is-tempuri-org\n\t\t$namespace1 = \"://upclick.com/\"\tascii\n\t\t$namespace2 = \"://tempuri.org/\"\tascii\n\n        condition:\n                uint16(0) == 0x5a4d and $magic1 at 0 and $magic2 and any of ($namespace*)\n}\n\nrule XML_B64_Autoopen\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Wide Encoded AutoOpen\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-22\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t// Null-spaced wide format of 'autoopen' and 'AUTOOPEN'\n\t\t$encstring_1 = \"dQB0AG8AbwB\"\t\tascii\n\t\t$encstring_2 = \"UAdABvAG8AcAB\"\t\tascii\n\t\t$encstring_3 = \"B1AHQAbwBvAHA\"\t\tascii\n\t\t$encstring_4 = \"dQB0AG8AbwBwAG\"\tascii\n\t\t$encstring_5 = \"B1AHQAbwBvAHAAZQ\"\tascii\n\t\t$encstring_6 = \"HUAdABvAG8AcABlAG\"\tascii\n\t\t$encstring_7 = \"VQBUAE8ATwB\"\t\tascii\n\t\t$encstring_8 = \"BVAFQATwBPAFA\"\t\tascii\n\t\t$encstring_9 = \"UAVABPAE8AUAB\"\t\tascii\n\t\t$encstring_10 = \"VQBUAE8ATwBQAE\"\tascii\n\t\t$encstring_11 = \"BVAFQATwBPAFAARQ\"\tascii\n\t\t$encstring_12 = \"FUAVABPAE8AUABFAE\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($encstring_*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule XML_B64_ActiveMime\n{\n\tmeta:\n\t\tdescription = \"XML document using Base64 Encoded ActiveMime and numeric embedded image\"\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-17\"\n\t\tmodified = \"2019-01-23\"\n\t\trisk = \"high\"\n\t\ttlp = \"GREEN\"\n\t\tthanks = \"Harold Ogden, you rock\"\n\n\tstrings:\n\n\t\t$magic = { 3c3f 786d 6c }       //<?xml\n\n\t\t//ActiveMime Base64 Encoded (accounting for leading or trailing characters)\n\t\t$b1 = \"N0aXZ\"\t\tascii\n\t\t$b2 = \"RpdmV\"\t\tascii\n\t\t$b3 = \"dGl2ZU1\"\t\tascii\n\t\t$b4 = \"N0aXZlTW\"\tascii\n\t\t$b5 = \"3RpdmVNaW\"\tascii\n\t\t$b6 = \"dGl2ZU1pbW\"\tascii\n\n\t\t//Wrapping at 76 bytes\n\t\t$anchor = { 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a [76] 0d 0a}\n\n\t\t$circular_alerting_exclusion = \"RG9uJ3QgcmlnaHQgY2xpY2sgdGhlIHdyb25nIGNsaWNrIQo=\"       //Avoid alerting on Intelligence mailing lists\n\n\tcondition:\n\t\tuint16(0) == 0x3f3c and $magic at 0 and any of ($b*) and (#anchor > 32) and not $circular_alerting_exclusion\n}\n\nrule Ultimate_PEPE_Silvia\n{\n\tmeta:\n\t\tdescription = \"Office Document containing excessive number of variable assembly or terse variables\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2019-01-23\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$vb1 = \"VBE\" nocase wide ascii\n\t\t$vb2 = \"VBA\" nocase wide ascii\n\n\t\t$ole1 = \"OLE\" nocase wide ascii\n\t\t$ole2 = \"stdole\" nocase wide ascii\n\n\t\t//Byte code analysis of the documents indicate the varible assembly patterns for arithmetic operations are these byte pattens below.\n\t\t//Breaking these out into the 160 possible combinations results in elimination of the YARA performance warnings regarding Aho Corsick atoms for\n\t\t//hex wildcard matching.  Plus it totally looks like I have some idea of what I'm doing too!\n\t\t$pepe1= { 80 0000 ff03 030? }\n\t\t$pepe2= { 80 0100 ff03 030? }\n\t\t$pepe3= { 80 0200 ff03 030? }\n\t\t$pepe4= { 80 0300 ff03 030? }\n\t\t$pepe5= { 80 0400 ff03 030? }\n\t\t$pepe6= { 80 0500 ff03 030? }\n\t\t$pepe7= { 80 0600 ff03 030? }\n\t\t$pepe8= { 80 0700 ff03 030? }\n\t\t$pepe9= { 80 0800 ff03 030? }\n\t\t$pepe10= { 80 0900 ff03 030? }\n\t\t$pepe11= { 80 0a00 ff03 030? }\n\t\t$pepe12= { 80 0b00 ff03 030? }\n\t\t$pepe13= { 80 0c00 ff03 030? }\n\t\t$pepe14= { 80 0d00 ff03 030? }\n\t\t$pepe15= { 80 0e00 ff03 030? }\n\t\t$pepe16= { 80 0f00 ff03 030? }\n\t\t$pepe17= { 81 0000 ff03 030? }\n\t\t$pepe18= { 81 0100 ff03 030? }\n\t\t$pepe19= { 81 0200 ff03 030? }\n\t\t$pepe20= { 81 0300 ff03 030? }\n\t\t$pepe21= { 81 0400 ff03 030? }\n\t\t$pepe22= { 81 0500 ff03 030? }\n\t\t$pepe23= { 81 0600 ff03 030? }\n\t\t$pepe24= { 81 0700 ff03 030? }\n\t\t$pepe25= { 81 0800 ff03 030? }\n\t\t$pepe26= { 81 0900 ff03 030? }\n\t\t$pepe27= { 81 0a00 ff03 030? }\n\t\t$pepe28= { 81 0b00 ff03 030? }\n\t\t$pepe29= { 81 0c00 ff03 030? }\n\t\t$pepe30= { 81 0d00 ff03 030? }\n\t\t$pepe31= { 81 0e00 ff03 030? }\n\t\t$pepe32= { 81 0f00 ff03 030? }\n\t\t$pepe33= { 82 0000 ff03 030? }\n\t\t$pepe34= { 82 0100 ff03 030? }\n\t\t$pepe35= { 82 0200 ff03 030? }\n\t\t$pepe36= { 82 0300 ff03 030? }\n\t\t$pepe37= { 82 0400 ff03 030? }\n\t\t$pepe38= { 82 0500 ff03 030? }\n\t\t$pepe39= { 82 0600 ff03 030? }\n\t\t$pepe40= { 82 0700 ff03 030? }\n\t\t$pepe41= { 82 0800 ff03 030? }\n\t\t$pepe42= { 82 0900 ff03 030? }\n\t\t$pepe43= { 82 0a00 ff03 030? }\n\t\t$pepe44= { 82 0b00 ff03 030? }\n\t\t$pepe45= { 82 0c00 ff03 030? }\n\t\t$pepe46= { 82 0d00 ff03 030? }\n\t\t$pepe47= { 82 0e00 ff03 030? }\n\t\t$pepe48= { 82 0f00 ff03 030? }\n\t\t$pepe49= { 83 0000 ff03 030? }\n\t\t$pepe50= { 83 0100 ff03 030? }\n\t\t$pepe51= { 83 0200 ff03 030? }\n\t\t$pepe52= { 83 0300 ff03 030? }\n\t\t$pepe53= { 83 0400 ff03 030? }\n\t\t$pepe54= { 83 0500 ff03 030? }\n\t\t$pepe55= { 83 0600 ff03 030? }\n\t\t$pepe56= { 83 0700 ff03 030? }\n\t\t$pepe57= { 83 0800 ff03 030? }\n\t\t$pepe58= { 83 0900 ff03 030? }\n\t\t$pepe59= { 83 0a00 ff03 030? }\n\t\t$pepe60= { 83 0b00 ff03 030? }\n\t\t$pepe61= { 83 0c00 ff03 030? }\n\t\t$pepe62= { 83 0d00 ff03 030? }\n\t\t$pepe63= { 83 0e00 ff03 030? }\n\t\t$pepe64= { 83 0f00 ff03 030? }\n\t\t$pepe65= { 84 0000 ff03 030? }\n\t\t$pepe66= { 84 0100 ff03 030? }\n\t\t$pepe67= { 84 0200 ff03 030? }\n\t\t$pepe68= { 84 0300 ff03 030? }\n\t\t$pepe69= { 84 0400 ff03 030? }\n\t\t$pepe70= { 84 0500 ff03 030? }\n\t\t$pepe71= { 84 0600 ff03 030? }\n\t\t$pepe72= { 84 0700 ff03 030? }\n\t\t$pepe73= { 84 0800 ff03 030? }\n\t\t$pepe74= { 84 0900 ff03 030? }\n\t\t$pepe75= { 84 0a00 ff03 030? }\n\t\t$pepe76= { 84 0b00 ff03 030? }\n\t\t$pepe77= { 84 0c00 ff03 030? }\n\t\t$pepe78= { 84 0d00 ff03 030? }\n\t\t$pepe79= { 84 0e00 ff03 030? }\n\t\t$pepe80= { 84 0f00 ff03 030? }\n\t\t$pepe81= { 85 0000 ff03 030? }\n\t\t$pepe82= { 85 0100 ff03 030? }\n\t\t$pepe83= { 85 0200 ff03 030? }\n\t\t$pepe84= { 85 0300 ff03 030? }\n\t\t$pepe85= { 85 0400 ff03 030? }\n\t\t$pepe86= { 85 0500 ff03 030? }\n\t\t$pepe87= { 85 0600 ff03 030? }\n\t\t$pepe88= { 85 0700 ff03 030? }\n\t\t$pepe89= { 85 0800 ff03 030? }\n\t\t$pepe90= { 85 0900 ff03 030? }\n\t\t$pepe91= { 85 0a00 ff03 030? }\n\t\t$pepe92= { 85 0b00 ff03 030? }\n\t\t$pepe93= { 85 0c00 ff03 030? }\n\t\t$pepe94= { 85 0d00 ff03 030? }\n\t\t$pepe95= { 85 0e00 ff03 030? }\n\t\t$pepe96= { 85 0f00 ff03 030? }\n\t\t$pepe97= { 86 0000 ff03 030? }\n\t\t$pepe98= { 86 0100 ff03 030? }\n\t\t$pepe99= { 86 0200 ff03 030? }\n\t\t$pepe100= { 86 0300 ff03 030? }\n\t\t$pepe101= { 86 0400 ff03 030? }\n\t\t$pepe102= { 86 0500 ff03 030? }\n\t\t$pepe103= { 86 0600 ff03 030? }\n\t\t$pepe104= { 86 0700 ff03 030? }\n\t\t$pepe105= { 86 0800 ff03 030? }\n\t\t$pepe106= { 86 0900 ff03 030? }\n\t\t$pepe107= { 86 0a00 ff03 030? }\n\t\t$pepe108= { 86 0b00 ff03 030? }\n\t\t$pepe109= { 86 0c00 ff03 030? }\n\t\t$pepe110= { 86 0d00 ff03 030? }\n\t\t$pepe111= { 86 0e00 ff03 030? }\n\t\t$pepe112= { 86 0f00 ff03 030? }\n\t\t$pepe113= { 87 0000 ff03 030? }\n\t\t$pepe114= { 87 0100 ff03 030? }\n\t\t$pepe115= { 87 0200 ff03 030? }\n\t\t$pepe116= { 87 0300 ff03 030? }\n\t\t$pepe117= { 87 0400 ff03 030? }\n\t\t$pepe118= { 87 0500 ff03 030? }\n\t\t$pepe119= { 87 0600 ff03 030? }\n\t\t$pepe120= { 87 0700 ff03 030? }\n\t\t$pepe121= { 87 0800 ff03 030? }\n\t\t$pepe122= { 87 0900 ff03 030? }\n\t\t$pepe123= { 87 0a00 ff03 030? }\n\t\t$pepe124= { 87 0b00 ff03 030? }\n\t\t$pepe125= { 87 0c00 ff03 030? }\n\t\t$pepe126= { 87 0d00 ff03 030? }\n\t\t$pepe127= { 87 0e00 ff03 030? }\n\t\t$pepe128= { 87 0f00 ff03 030? }\n\t\t$pepe129= { 88 0000 ff03 030? }\n\t\t$pepe130= { 88 0100 ff03 030? }\n\t\t$pepe131= { 88 0200 ff03 030? }\n\t\t$pepe132= { 88 0300 ff03 030? }\n\t\t$pepe133= { 88 0400 ff03 030? }\n\t\t$pepe134= { 88 0500 ff03 030? }\n\t\t$pepe135= { 88 0600 ff03 030? }\n\t\t$pepe136= { 88 0700 ff03 030? }\n\t\t$pepe137= { 88 0800 ff03 030? }\n\t\t$pepe138= { 88 0900 ff03 030? }\n\t\t$pepe139= { 88 0a00 ff03 030? }\n\t\t$pepe140= { 88 0b00 ff03 030? }\n\t\t$pepe141= { 88 0c00 ff03 030? }\n\t\t$pepe142= { 88 0d00 ff03 030? }\n\t\t$pepe143= { 88 0e00 ff03 030? }\n\t\t$pepe144= { 88 0f00 ff03 030? }\n\t\t$pepe145= { 89 0000 ff03 030? }\n\t\t$pepe146= { 89 0100 ff03 030? }\n\t\t$pepe147= { 89 0200 ff03 030? }\n\t\t$pepe148= { 89 0300 ff03 030? }\n\t\t$pepe149= { 89 0400 ff03 030? }\n\t\t$pepe150= { 89 0500 ff03 030? }\n\t\t$pepe151= { 89 0600 ff03 030? }\n\t\t$pepe152= { 89 0700 ff03 030? }\n\t\t$pepe153= { 89 0800 ff03 030? }\n\t\t$pepe154= { 89 0900 ff03 030? }\n\t\t$pepe155= { 89 0a00 ff03 030? }\n\t\t$pepe156= { 89 0b00 ff03 030? }\n\t\t$pepe157= { 89 0c00 ff03 030? }\n\t\t$pepe158= { 89 0d00 ff03 030? }\n\t\t$pepe159= { 89 0e00 ff03 030? }\n\t\t$pepe160= { 89 0f00 ff03 030? }\n\n\tcondition:\n\t\tuint16(0) == 0xcfd0 and $office at 0 and any of ($vb*) and any of ($ole*)\n\t\tand (\n\t\t\t   (#pepe1) > 32 or (#pepe2) > 32 or (#pepe3) > 32 or (#pepe4) > 32 or (#pepe5) > 32 or (#pepe6) > 32\n\t\t\tor (#pepe7) > 32 or (#pepe8) > 32 or (#pepe9) > 32 or (#pepe10) > 32 or (#pepe11) > 32 or (#pepe12) > 32\n\t\t\tor (#pepe13) > 32 or (#pepe14) > 32 or (#pepe15) > 32 or (#pepe16) > 32 or (#pepe17) > 32 or (#pepe18) > 32\n\t\t\tor (#pepe19) > 32 or (#pepe20) > 32 or (#pepe21) > 32 or (#pepe22) > 32 or (#pepe23) > 32 or (#pepe24) > 32\n\t\t\tor (#pepe25) > 32 or (#pepe26) > 32 or (#pepe27) > 32 or (#pepe28) > 32 or (#pepe29) > 32 or (#pepe30) > 32\n\t\t\tor (#pepe31) > 32 or (#pepe32) > 32 or (#pepe33) > 32 or (#pepe34) > 32 or (#pepe35) > 32 or (#pepe36) > 32\n\t\t\tor (#pepe37) > 32 or (#pepe38) > 32 or (#pepe39) > 32 or (#pepe40) > 32 or (#pepe41) > 32 or (#pepe42) > 32\n\t\t\tor (#pepe43) > 32 or (#pepe44) > 32 or (#pepe45) > 32 or (#pepe46) > 32 or (#pepe47) > 32 or (#pepe48) > 32\n\t\t\tor (#pepe49) > 32 or (#pepe50) > 32 or (#pepe51) > 32 or (#pepe52) > 32 or (#pepe53) > 32 or (#pepe54) > 32\n\t\t\tor (#pepe55) > 32 or (#pepe56) > 32 or (#pepe57) > 32 or (#pepe58) > 32 or (#pepe59) > 32 or (#pepe60) > 32\n\t\t\tor (#pepe61) > 32 or (#pepe62) > 32 or (#pepe63) > 32 or (#pepe64) > 32 or (#pepe65) > 32 or (#pepe66) > 32\n\t\t\tor (#pepe67) > 32 or (#pepe68) > 32 or (#pepe69) > 32 or (#pepe70) > 32 or (#pepe71) > 32 or (#pepe72) > 32\n\t\t\tor (#pepe73) > 32 or (#pepe74) > 32 or (#pepe75) > 32 or (#pepe76) > 32 or (#pepe77) > 32 or (#pepe78) > 32\n\t\t\tor (#pepe79) > 32 or (#pepe80) > 32 or (#pepe81) > 32 or (#pepe82) > 32 or (#pepe83) > 32 or (#pepe84) > 32\n\t\t\tor (#pepe85) > 32 or (#pepe86) > 32 or (#pepe87) > 32 or (#pepe88) > 32 or (#pepe89) > 32 or (#pepe90) > 32\n\t\t\tor (#pepe91) > 32 or (#pepe92) > 32 or (#pepe93) > 32 or (#pepe94) > 32 or (#pepe95) > 32 or (#pepe96) > 32\n\t\t\tor (#pepe97) > 32 or (#pepe98) > 32 or (#pepe99) > 32 or (#pepe100) > 32 or (#pepe101) > 32 or (#pepe102) > 32\n\t\t\tor (#pepe103) > 32 or (#pepe104) > 32 or (#pepe105) > 32 or (#pepe106) > 32 or (#pepe107) > 32 or (#pepe108) > 32\n\t\t\tor (#pepe109) > 32 or (#pepe110) > 32 or (#pepe111) > 32 or (#pepe112) > 32 or (#pepe113) > 32 or (#pepe114) > 32\n\t\t\tor (#pepe115) > 32 or (#pepe116) > 32 or (#pepe117) > 32 or (#pepe118) > 32 or (#pepe119) > 32 or (#pepe120) > 32\n\t\t\tor (#pepe121) > 32 or (#pepe122) > 32 or (#pepe123) > 32 or (#pepe124) > 32 or (#pepe125) > 32 or (#pepe126) > 32\n\t\t\tor (#pepe127) > 32 or (#pepe128) > 32 or (#pepe129) > 32 or (#pepe130) > 32 or (#pepe131) > 32 or (#pepe132) > 32\n\t\t\tor (#pepe133) > 32 or (#pepe134) > 32 or (#pepe135) > 32 or (#pepe136) > 32 or (#pepe137) > 32 or (#pepe138) > 32\n\t\t\tor (#pepe139) > 32 or (#pepe140) > 32 or (#pepe141) > 32 or (#pepe142) > 32 or (#pepe143) > 32 or (#pepe144) > 32\n\t\t\tor (#pepe145) > 32 or (#pepe146) > 32 or (#pepe147) > 32 or (#pepe148) > 32 or (#pepe149) > 32 or (#pepe150) > 32\n\t\t\tor (#pepe151) > 32 or (#pepe152) > 32 or (#pepe153) > 32 or (#pepe154) > 32 or (#pepe155) > 32 or (#pepe156) > 32\n\t\t\tor (#pepe157) > 32 or (#pepe158) > 32 or (#pepe159) > 32 or (#pepe160) > 32\n\t\t)\n}\n\nrule PEPE_Silvia_v2_Extreme_Edition\n{\n        meta:\n                description = \"Office Document containing excessive number of variable assembly or terse variables\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n                modified = \"2019-01-22\"\n                tlp = \"GREEN\"\n                thanks = \"sysopfb\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $pepe1 = { 80 0000 ff03 030? }\n                $pepe2 = { 84 0800 ff03 030? }  //Seen on 2019-01-22, reported by Justin Borland\n                $pepe3 = { b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 [2-8] b600 0200 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and ( #pepe1 > 32 or #pepe2 > 32 or #pepe3 > 32 )\n}\n\nrule Office_AC_Slater\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-22\"\n                risk = \"high\"\n                comments = \"Office document with macro using terse variable assembly similar to PEPE Silvia\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t//Variable stuffs\n\t\t$ac_slater = { ac00??00240046020100ac00??0?2b003e02010000000000 }\n\n                $vb1 = \"VBE\"    nocase wide ascii\n                $vb2 = \"VBA\"    nocase wide ascii\n                $vb4 = \"OLE\"    nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                uint16(0) == 0xcfd0 and $office and (#ac_slater > 64) and any of ($vb*)\n}\n\nrule RTF_Excel40_Macro_HexASCII\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2019-01-15\"\n\t\trisk = \"high\"\n\t\tcomments = \"Office document with an Excel 4.0 macro embedded in an RTF as Hex-Ascii\"\n\t\ttlp = \"GREEN\"\n\n\tstrings:\n\t\t$rtf = { 7B 5C 72 }\n\t\t$macro = \"0000457863656c20342e30204d6163726f7300\" nocase ascii\n\n\tcondition:\n\t\tuint16(0) == 0x5c7b and $rtf at 0 and $macro\n}\n\nrule RTF_Large_HexAscii_Embeded\n{\n        meta:\n                description = \"Large RTF Document containing 64, 128, or 256 byte offset hex-ascii encoding with embedded document\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2019-01-08\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $em1 = \"5b436f6e74656e745f54797065735d\"         nocase ascii    //[Content_Types]\n                $em2 = \"2e6f70656e786d6c666f726d6174732e\"       nocase ascii    //.openxmlformats.\n                $em3 = \"d0cf11e0a1b11ae1\"                       nocase ascii    //Office File Magic\n\n                $hexascii = /[\\r\\n]([0-9A-Fa-f]{64}|[0-9A-Fa-f]{128}|[0-9A-Fa-f]{256})[\\r\\n]/\n\n        condition:\n                uint16(0) == 0x5c7b and $rtf at 0 and filesize > 1024KB and any of ($em*) and (#hexascii > 1024)\n}\n\nrule Office_qwerty_whoami\n{\n        meta:\n                author = \"Nathan Fowler\"\n                date = \"2019-01-07\"\n                risk = \"high\"\n                comments = \"Potential macro using naming conventions or paths seen with Nymaim and Icedid\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $odd1 = { 5c 7177 6572 7479 }   // \\qwerty\n                $odd2 = { 5c77 686f 616d 695c } // \\whoami\\\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($odd*) and any of ($vb*)\n}\n\nrule Macro_RTFDocument\n{\n    meta:\n        description = \"RTF document contains an office macro\"\n\tauthor = \"Nathan Fowler\"\n\tdate = \"2019-01-02\"\n\tthanks = \"@Techhelplistcom\"\n\n    strings:\n\n\t$rtf = { 7B 5C 72 }\n\t$macro = \"MacroEnabled.\"\n\n    condition:\n        $rtf at 0 and $macro\n}\n\nrule Generic_Bad_XML_or_RTF\n{\n        meta:\n                description = \"Generic indicators of badness in an RTF, likely hex-ascii functions or excessive padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n\t\tmodified = \"2018-12-31\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7b5c 72 }\n                $xml = { 3c3f 786d 6c }\n\n                //Padding after the RTF header\n                $bad_start1 = { 7b5c 72 [3] (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) (09|20) }\n\n                //Msxml2.SAXXML\n                $bad1 = /[46]d([03]0)?[57]3([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c([03]0)?32([03]0)?2e([03]0)?[57]3([03]0)?[46]1([03]0)?[57]8([03]0)?[57]8([03]0)?[46]d([03]0)?[46]c/i\n\n                //.openxmlformat as hex-ascii\n                $bad2 = \"6f70656e786d6c666f726d6174\" wide ascii\n\n                //Office file magic as hex-ascii\n                $bad3 = \"d0cf11e0a1b\" nocase wide ascii\n\n                //Office file magic hatefully obfuscated\n                $bad4 = /d[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e[^\\}]+?\\}[\\x20\\x09\\r\\n]*?0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad5 = /d0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?cf[^\\}]+?\\}[\\x20\\x09\\r\\n]*?11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0[^\\}]+?\\}[\\x20\\x09\\r\\n]*?a1[^\\}]+?\\}[\\x20\\x09\\r\\n]*?b/i\n                $bad6 = /d0c[^\\}]+?\\}[\\x20\\x09\\r\\n]*?f11[^\\}]+?\\}[\\x20\\x09\\r\\n]*?e0a[^\\}]+?\\}[\\x20\\x09\\r\\n]*?1b/i\n\n\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\t\t$negate2 = \"534158584d4c5265616465722e362e30\"\tascii\t\t//SAXXMLReader.6.0\n\n        condition:\n                ( $rtf at 0 or $xml at 0 ) and ( any of ($bad*) or $bad_start1 at 0 ) and not any of ($negate*)\n}\n\nrule Office_Admin_Temp_Path_Wide\n{\n        meta:\n                description = \"Office document with wide hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-20\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n                $path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"      nocase wide\n                $path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"         nocase wide\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\nrule Office_Admin_Temp_Path\n{\n        meta:\n                description = \"Office document with hard-coded admin TEMP shortpath and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$path1 = \"C:\\\\Users\\\\ADMINI~1\\\\AppData\\\\Local\\\\Temp\\\\Word\"\tnocase ascii\n\t\t$path2 = \"C:\\\\Users\\\\ADMIN\\\\AppData\\\\Local\\\\Temp\\\\Word\"\t\tnocase ascii\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and any of ($path*) and any of ($vb*)\n}\n\nrule Office_Weird_ChrGen_Possible_XLM_Macro\n{\n        meta:\n                description = \"Office document with weird chrgen stuffs possibly an XLM macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-13\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$weird = { 0000000000010f0008021000??0?0?0005002c01 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n                $vb4 = \"OLE\" nocase wide ascii\n                $vb5 = \"stdole\" nocase wide ascii\n\n        condition:\n                $office at 0 and (#weird > 1024) and not any of ($vb*)\n}\n\nrule Suspected_PDF_Link_Image_Phish_Many_URIs\n{\n        meta:\n                description = \"Suspected PDF phish with embedded linked image to a high volume of URIs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-12\"\n                tlp = \"GREEN\"\n\n        strings:\n                $pdf = {25 50 44 46 2d 31 2e}\n\n                $uri1 = \"/URI(http\"\n                $uri2 = \"/URI (http\"\n\n                $distance_anchor = /\\x2fURI[\\x20\\x09]*\\(http[^\\)]+.{0,40}\\x2fURI[\\x20\\x09]*\\(http/\n\n                //The Phish PDFs either do not have a title or the title is some garbage online generator\n                $title1 = /\\x2fTitle[\\x20\\x09]*\\x28/\n                $title2 = /\\x2fTitle[\\x20\\x09]*\\x28(Created|Generated|Convert)/\n\n        condition:\n                (filesize < 300KB) and ($pdf at 0) and (#uri1 > 6 or #uri2 > 6) and $distance_anchor and (not $title1 or $title2)\n}\n\nrule Office_Potential_CVE_2018_15982\n{\n        meta:\n                description = \"Office Document suspected of being Adobe Flash CVE2018-15982\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-07\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n\t\t$wtf = { c0deabcdef }\n\n\t\t$beef1 = \">application/x-shockwave-flash<\" nocase wide ascii\n\t\t$beef2 = \"isDebugger\" nocase wide ascii\n\t\t$beef3 = \"com.adobe.tvsdk.\" nocase wide ascii\n\n        condition:\n\t\t($office at 0 or $rtf at 0 or $xml at 0) and ( $wtf or all of ($beef*) )\n}\n\nrule Office_HTML_Export_Links_Phish\n{\n        meta:\n                description = \"Office HTML Wide Document Export with 2 or less HREFs, suspected phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-12-03\"\n                tlp = \"GREEN\"\n\n                strings:\n\t\t\t$ms_derpffice_magic = {fffe 3c00 6800 7400 6d00 6c00 2000 7800}\n\n\t\t\t$ms_derpffice1 = \"<html xmlns:o=\\\"urn:schemas-microsoft-com:office:office\" wide\n\t\t\t$ms_derpffice2 = \"<meta http-equiv=Content-Type content=\\\"text/html; charset=unicode\\\">\" wide\n\t\t\t$ms_derpffice3 = \"<meta name=ProgId content=\" wide\n\t\t\t$ms_derpffice4 = \"href=\\\"http\" wide\n\n                condition:\n                        $ms_derpffice_magic at 0 and all of ($ms_derpffice*) and (#ms_derpffice4 < 3)\n}\n\nrule Office_URL_Reversed\n{\n        meta:\n                description = \"Office document with a string reversed URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-27\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n                $xml = { 3c3f 786d 6c }\n\n                $rev1 = \"//:sptth\"\n                $rev2 = \"//:ptth\"\n                $rev3 = \"//:ptf\"\n\n\n        condition:\n                ($office at 0 or $rtf at 0 or $xml at 0) and any of ($rev*)\n}\n\nrule RTF_Too_Much_Hex\n{\n        meta:\n\t\tdescription = \"RTF with a whole bunch of hex-ascii\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $rtf = { 7B5C72 }\n\n                        $entity1 = { 095c 6? }\n                        $entity2 = { 205c 6? }\n                        $entity3 = { 7b5c 6? }\n\n                        $hex = /([A-Fa-f0-9]{2}){128}/i\n\n\t\t\t$negate1 = \"\\\"mailto:class.actions@bnymellon.com\\\"\"\n\n                condition:\n                        $rtf at 0 and not $negate1 and (#entity1 > 6 or #entity2 > 6 or #entity3 > 6) and #hex > 16\n}\n\nrule Office_Document_Phishing\n{\n        meta:\n                description = \"Suspected Office Document Phishing\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-26\"\n                modified = \"2018-11-26\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf =  { 7b5c 72 }\n                $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$link1 = \"://\" nocase wide ascii\n\t\t$link2 = \"HYPERLINK \\\"http\"\n\t\t$link3 = { 0000 5f50 4944 5f48 4c49 4e4b 5300 0200 }\n\n\t\t$phish1 = \"this document is protected by\" nocase ascii\n\t\t$phish2 = \"click here to unlock\" nocase ascii\n\t\t$phish3 = \"click here to reset\" nocase ascii\n\t\t$phish4 = \"sign in to\" nocase ascii\n\n                $macro1 = \"VBE\" nocase wide ascii\n                $macro2 = \"VBA\" nocase wide ascii\n                $macro3 = \"OLE\" nocase wide ascii\n                $macro4 = \"stdole\" nocase wide ascii\n\n\tcondition:\n\t\t($rtf at 0 or $office at 0) and all of ($link*) and any of ($phish*) and not any of ($macro*)\n}\n\nrule rtf_obfuscated_equation_in_pars\n{\n        meta:\n                description = \"RTF file with Equation hidden in pars\"\n                author = \"Justin Borland & Greg Olmstead\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n\t\tmodified = \"2018-11-20\"\n                sha1_v1 = \"0f535507d02371ebab86fb318c55479d4b11ec7e\"\n        strings:\n                $rtf = { 7b 5c 72 }\n                $equation1 = /4\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 710\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 075\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ff]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 020\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 004\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 760\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 065/s\n                $equation2 = /45\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 750\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ff]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} [Ee]00\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 200\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 04[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 100\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 740\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 069\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 600\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 65/s\n                $equation3 = /450\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 071\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 500\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 610\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 074\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 900\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 6[Ff]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 06[Ee]\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 002\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 000\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 4[Ee]0\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 061\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 007\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 400\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 690\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 076\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 006\\}\\{\\\\\\*\\\\par\\\\par[0-9]{1,5} 5/s\n        condition:\n                $rtf at 0 and any of ($equation*)\n}\n\nrule Powershell_Obfuscation_Cmd\n{\n        meta:\n                description = \"Office Document suspected of containing Powershell obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-16\"\n\t\tmodified = \"2018-11-19\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $xml = { 3c3f 786d 6c }\n                $rtf = { 7b5c 72 }\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n                $for1 = \"f^or\" nocase ascii\n                $for2 = \"fo^r\" nocase ascii\n                $for3 = \"f^o^r\" nocase ascii\n\n                $cmd = \"cmd\" nocase ascii\n\n                $rabbits1 = /[a-zA-Z]\\x5e[a-zA-Z]\\x5e/\n\n\t\t$exclude = \"TickersSold\" ascii\n\n        condition:\n                ($xml at 0 or $office at 0 or $rtf at 0)\n                and (\n                        ( #rabbits1 > 64 and not $exclude )\n                        or (\n                                $cmd\n                                and (\n                                           any of ($for*)\n                                        or any of ($set*)\n                                )\n                        )\n                )\n}\n\nrule Thusla_Doom_Set\n{\n        meta:\n                description = \"Office Document containing excessive set obfuscation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-11-15\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\" nocase wide ascii\n                $vb2 = \"VBA\" nocase wide ascii\n\n                $ole1 = \"OLE\" nocase wide ascii\n                $ole2 = \"stdole\" nocase wide ascii\n\n                $set1 = \"s^et \" nocase ascii\n                $set2 = \"se^t \" nocase ascii\n                $set3 = \"s^e^t\" nocase ascii\n\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and (#set1 > 8 or #set2 > 8 or #set3 > 8)\n}\n\nrule Office_SecurityCryptography\n{\n        meta:\n\t\tdescription = \"Office document using System.Security.Cryptography\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Kirk Sayre\"\n                risk = \"high\"\n                date = \"2018-11-05\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t$crypt = \"System.Security.Cryptography.\" nocase wide ascii\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $crypt\n}\n\nrule Office_hexascii_binary_copy\n{\n        meta:\n\t\tdescription = \"Office document using binary copy in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//copy /b\n\t\t\t$hexascii = /[46]3([03]0)?[46]f([03]0)?[57]0([03]0)?[57]9([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_Nullsoft_Install\n{\n        meta:\n\t\tdescription = \"Office document with Nullsoft Installer encoded in hex-ascii\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//Nullsoft Ins\n\t\t\t$hexascii = /[46]e([03]0)?[57]5([03]0)?[46]c([03]0)?[46]c([03]0)?[57]3([03]0)?[46]f([03]0)?[46]6([03]0)?[57]4([03]0)?20([03]0)?[46]9([03]0)?[46]e([03]0)?[57]3/i\n\n                condition:\n                        ($office at 0 or $rtf at 0) and $hexascii\n}\n\nrule Office_hexascii_echo_off_and_bad\n{\n        meta:\n\t\tdescription = \"Office document with ECHO OFF and other badness\"\n                author = \"Nathan Fowler\"\n\t\tthanks = \"Justin Borland and Jerry Zepp\"\n                risk = \"high\"\n                date = \"2018-10-29\"\n\t\tmodified = \"2018-11-13\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\t\t\t$rtf = { 7B5C72 }\n\n\t\t\t//ECHO OFF\n\t\t\t$bad1 = /[46]5([03]0)?[46]3([03]0)?[46]8([03]0)?[46]f([03]0)?20([03]0)?[46]f([03]0)?[46]6([03]0)?[46]6/i\n\n\t\t\t//TIMEOUT\n\t\t\t$bad2 = /[57]4([03]0)?[46]9([03]0)?[46]d([03]0)?[46]5([03]0)?[46]f([03]0)?[57]5([03]0)?[57]4([03]0)?20/i\n\n\t\t\t//REG DELETE or QUERY\n\t\t\t$bad3 = /[57]2([03]0)?[46]5([03]0)?[46]7([03]0)?20([03]0)?([46]4([03]0)?[46]5([03]0)?[46]c([03]0)?[46]5([03]0)?[57]4([03]0)?[46]5|[57]1([03]0)?[57]5([03]0)?[46]5([03]0)?[57]2([03]0)?[57]9)([03]0)?20/i\n\n\t\t\t//for /f\n\t\t\t$bad4 = /[46]6([03]0)?[46]f([03]0)?[57]2([03]0)?20([03]0)?2f([03]0)?[46]6([03]0)?20/i\n\n\t\t\t//START /b\n\t\t\t$bad5 = /[57]3([03]0)?[57]4([03]0)?[46]1([03]0)?[57]2([03]0)?[57]4([03]0)?20([03]0)?2f([03]0)?[46]2([03]0)?20/i\n\n\t\t\t//Invoke-Expression\n\t\t\t$bad6 = /[46]9([03]0)?[46]e([03]0)?[57]6([03]0)?[46]f([03]0)?[46]b([03]0)?[46]5([03]0)?2d([03]0)?[46]5([03]0)?[57]8([03]0)?[57]0([03]0)?[57]2([03]0)?[46]5([03]0)?[57]3([03]0)?[57]3([03]0)?[46]9([03]0)?[46]f([03]0)?[46]e/\n\n                condition:\n                        ($office at 0 or $rtf at 0) and any of ($bad*)\n}\n\nrule Office_VBA_OLE_qwerty\n{\n        meta:\n                description = \"Office document using Microsoft Forms, Embedded Object, VBA, OLE, and literal qwerty\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-24\"\n                tlp = \"GREEN\"\n\n                strings:\n                        $office = { D0CF11E0A1B11AE1 }\n\n                        $bad1 = \"qwerty\"\n                        $bad2 = \"Microsoft Forms\"\n                        $bad3 = \"Embedded Object\"\n                        $bad4 = \"VBA\" wide ascii\n                        $bad5 = \"stdole\" wide ascii nocase\n\n                condition:\n                        $office at 0 and all of ($bad*)\n}\n\nrule RTF_Embedded_Office_Doc_OLE\n{\n        meta:\n\t\tdescription = \"RTF document with OLE-enabled embedded Office document.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-22\"\n                tlp = \"GREEN\"\n\n        strings:\n                $rtf = { 7B 5C 72 }\n\n                $office1 = \"D0CF11E0A1B11AE1\" nocase\n                $office2 = \"D000CF001100E000A100B1001A00E1\" nocase\n\n                $ole = /[46]F([03]0)?[46]C([03]0)?[46]5/i\n\n        condition:\n                ($rtf at 0) and any of ($office*) and $ole\n}\n\nrule Office_ChrGen_Eval_Reverse\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, Reverse, and ChrGen\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2018-10-16\"\n\t\tmodified = \"2018-11-01\"\n                tlp = \"GREEN\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n\n                $bad1 = \"Evaluate\"\n                $bad2 = \"Reverse\"\n\n\t\t$exclude1 = { 5265 7665 7273 6520 582d 4469 7669 6465 }\t\t//Reverse X-Divide\n\t\t$exclude2 = /Reverse[A-Za-z]/\t\t\t\t\t//Handle ReverseOrder\n\t\t$exclude3 = \"_Evaluate\"\t\t\t\t\t\t//Handle Evaluate\n\n                $chrgen1 = { 0000 2f01 0000 3001 0000 3101 0000 3201 0000 3301 0000 3401 0000 3501 0000 3601 0000 3701 0000 3801 0000 3901 0000 3a01 0000 3b01 0000 3c01 0000 3d01 0000 3e01 0000 3f01 0000 4001 0000 4101 0000 4201 0000 4301 0000 4401 0000 }\n\n        condition:\n                $office at 0 and any of ($vb*) and any of ($ole*) and all of ($bad*) and $chrgen1 and not any of ($exclude*)\n}\n\nrule doc_with_applicationRun_vba_autoopen\n{\n        meta:\n                description = \"DOC + Application.Run +VBA + Macro\"\n                author = \"Ryan Moon & Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $autoopen = /A\\x00?u\\x00?t\\x00?o\\x00?O\\x00?p\\x00?e\\x00n/\n                $vba = \"_VBA_PROJECT\" wide nocase\n                $run = /A\\x00?p\\x00?p\\x00?l\\x00?i\\x00?c\\x00?a\\x00t\\x00?i\\x00?o\\x00?n\\x00?.\\x00?R\\x00?u\\x00?n\\x00?\\x20?\\x00?\\x22/\n        condition:\n               $office at 0 and $autoopen and $vba and $run\n}\n\n\nrule xls_w_autoopen_eval_vba\n{\n        meta:\n                description = \"Generic rule looking for autoOpen and _Evaluate within xls\"\n                author = \"Ryan Moon & Justin Borland & Nathan Fowler also ran\"\n                risk = \"high\"\n                date = \"2018-10-01\"\n        strings:\n                $document_header = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $happy_trees1 = \"VBAProject\"\n                $happy_trees2 = \"_Evaluate\"\n                $happy_trees3 = \"Document_Open\"\n\n                $vba_to_eval_to_document_open = /VBAProject.{1,128}_Evaluate.{1,128}Document_Open/\n\n        condition:\n                $document_header at 0 and all of ($happy_trees*) and $vba_to_eval_to_document_open\n}\n\nrule Office_CharacterDict\n{\n        meta:\n                description = \"Office Document containing a numeric character dictionary and a macro\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-10-02\"\n\t\ttlp = \"GREEN\"\n        strings:\n\t        $office = { d0cf 11e0 a1b1 1ae1 }\n\n\t\t$stupidland1 = {3132 3334 3536 3738 3930 00}\n\t\t$stupidland2 = {3031 3233 3435 3637 3839 00}\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule doc_with_encoded_cmd_and_vbs\n{\n        meta:\n                description = \"Office document with 'cmd.exe /c' and 'LANGUAGE=VBScript>' in base64\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-25\"\n                tlp = \"green\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n                $cmd = \"Y21kLmV4ZSAvYyAg\" // 'cmd.exe /c  ' in base64\n                $vbscript = \"IExBTkdVQUdFPSJWQlNjcmlwdCI+\"  // ' LANGUAGE=\"VBScript\">' in base64\n        condition:\n                $office at 0 and $cmd and $vbscript\n}\n\nrule rtf_cve_2017_8570\n{\n        meta:\n                description = \"RTF with embedded classid used in CVE-2017-8570\"\n                author = \"Justin Borland\"\n                risk = \"high\"\n                date = \"2018-09-24\"\n\n        strings:\n                $rtf =  { 7b5c 7274 66 }\n                $classid = { 37 6233 3233 3033 3433 3733 3733 3434 3334 3632 6434 3433 3233 3533 3132 6433 3434 3633 3033 3232 6433 3833 3533 3534 3232 6433 3234 3234 3533 3733 3033 3533 3833 3533 3133 3833 3434 3237 64 }// Actual Hex in the Ascii -> 7b32303437373443462d443235312d344630322d383535422d3242453730353835313834427d which is actually -> {204774CF-D251-4F02-855B-2BE70585184B}  - ref https://github.com/rxwx/CVE-2017-8570/blob/master/calc.sct\n                $cdata = { 33 6332 3135 6234 3334 3434 3135 3434 3135 62 } // Actual Hex in Ascii -> 3c215b43444154415b -> <![CDATA[\n        condition:\n                $rtf at 0 and $classid and $cdata\n}\n\nrule Office_6_pif_hta_exe\n{\n        meta:\n                description = \"Office Document containing a macro, .exe, .hta, and 6.pif filename in base64.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"XDYucGlm\" wide ascii\n\t\t$stupidland2 = \".hta\" wide ascii\n\t\t$stupidland3 = \".exe\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_jpeg_recompress\n{\n        meta:\n                description = \"Office Document containing a macro and an image from jpeg-recompress.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"UNICODE\" wide ascii\n\t\t$stupidland2 = \"by jpeg-recompress\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_KeyString\n{\n        meta:\n                description = \"Office Document containing ExeName32, mid, right, and KeyString macro commands.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\t\ttlp = \"GREEN\"\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"KeyString\" wide ascii\n\t\t$stupidland2 = \"Mid\" wide ascii\n\t\t$stupidland3 = \"Right\" wide ascii\n\t\t$stupidland4 = \"ExeName32\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_PING\n{\n        meta:\n                description = \"Office Document containing command instruction to run the PING command and stdole/VBE/VBA.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-20\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"cmd.exe /c  ping\"\n\t\t$stupidland2 = \"Y21kLmV4ZSAvYyAgcGluZyBsb2NhbGhvc3QgLW4\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and any of ($stupidland*) and any of ($vb*)\n}\n\nrule Office_stdole_CallByName_ActiveDocument\n{\n        meta:\n                description = \"Office Document containing ole, CreateObject, ActiveDocument, and CallByName\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-18\"\n\n        strings:\n                $office = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$stupidland1 = \"CallByName\" nocase wide ascii\n\t\t$stupidland2 = \"CreateObject\" nocase wide ascii\n\t\t$stupidland3 = \"ActiveDocument\" nocase wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 5600 4200 4100 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                $office at 0 and all of ($stupidland*) and any of ($vb*)\n}\n\n\n\nrule RTF_CVE_11882_suspect_3030\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882 with excessive 0x30 byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-09-12\"\n\t\ttlp = \"GREEN\"\n\t\tmodified = \"2018-09-28\"\n\t\trevision = \"4\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 72 }\n\n\t\t$stuffs = { 3030 3030 3030 3030 3030 3030 3030 3030 }\n\n\t\t$magical_cocaman1 = /[46]500[57]100[57]500[46]100[57]400[46]900[46][Ff]00[46][Ee]00(2000[46][Ee]00[46]1|2[Ee]0033)/\n\t\t$magical_cocaman2 = /[46]5[57]1[57]5[46]1[57]4[46]9[46][Ff][46][Ee](20[46][Ee][46]1|2[Ee]33)/\n\n\tcondition:\n\t\t$rtf at 0 and $stuffs and any of ($magical_cocaman*)\n}\n\nrule RTF_x27_spaced_out\n{\n        meta:\n                description = \"RTF Document containing x27 weird stuffs and lots of space padding, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-09-04\"\n\n        strings:\n\t\t$badrtf1 = { 7b 5c 72 74 ?? ?? ?? ?? 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                $badrtf1 at 0 and $quote1\n}\n\nrule rtf_rtv0_obfuscated_http {\n  meta:\n    description = \"Yara rule to detect obfuscated download URLs in RTF file\"\n    urlhaus = \"https://urlhaus.abuse.ch/browse/tag/rtfkit/\"\n    author = \"Corsin Camichel, @cocaman\"\n    version = \"2018-09-04\"\n    version = \"1.3 Modified 2018-09-19\"\n    in_the_wild = true\n    payload = \"Formbook, AZOrult, Loki, RemcosRAT, AgentTesla\"\n    tlp = \"green\"\n\n  strings:\n    $magic = /{\\\\rt./     // most headers are rtv0, I have seen others too\n    $nop_1 = \"\\\\'9X\"      // different NOP strings seen over time\n    $nop_2 = \"\\\\90\"\n    $nop_3 = \"\\\\'7S\"\n    $nop_4 = /\\\\'../      // this seems like a bad idea and could generate FP (so good so far)\n    $http = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..3A\\\\'..2F\\\\'..2F/           // start of http://\n    $https = /\\\\'..68\\\\'..74\\\\'..74\\\\'..70\\\\'..73\\\\'..3A\\\\'..2F\\\\'..2F/   // start of https://\n    $null = /\\'..00/      // null bytes, sometimes in URL\n    $slash = /\\\\'..2F/\n\n  condition:\n    $magic at 0\n      and (#nop_1 > 50 or #nop_2 > 50 or #nop_3 > 50 or #nop_4 > 15)\n      and ($http or $https or $null or $slash)\n}\n\nrule RTF_par_par_party\n{\n        meta:\n                description = \"Tiny RTF 0a0d par par par Party and 0d 0a was not invited, potentially Emotet RTF.\"\n                author = \"Nathan Fowler/Ryan C. Moon\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$party = { 5c 7061 720a 0d5c 7061 720a 0d }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $party and filesize < 10KB\n}\n\nrule RTF_SpacedLink_Emotet\n{\n        meta:\n                description = \"Tiny RTF Document containing spaced-out (woooo space) link, potentially Emotet RTF.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-23\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$link1 = { 0a0d 5c70 6172 0a0d 6874 7470 3a2f 2f }\n\t\t$link2 = { 0a0d 5c70 6172 0a0d 6874 7470 733a 2f2f }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and any of ($link*) and filesize < 10KB\n}\n\nrule RTF_x27_ampersand\n{\n        meta:\n                description = \"RTF Document containing x27 and ampersand weird stuffs, possibly CVE-2017-0199.\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\t\tdate = \"2018-08-19\"\n\n        strings:\n                $office1 = { 7b 5c 72 74 66 }\n\t\t$office2 = { 7b 5c 72 74 76 }\n\n\t\t$amp1 = { 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c 26 ?? 5c }\n\t\t$quote1 = {5c 27 ?? ?? 5c 27 ?? ?? 5c 27 ?? ?? 5c }\n\n        condition:\n                ($office1 at 0 or $office2 at 0) and $amp1 and $quote1\n}\n\nrule RTF_CVE_11882_8570_suspect\n{\n\tmeta:\n\t\tdescription = \"RTF suspected of being CVE-2017-11882/8570 with excessive byte padding\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\t\tdate = \"2018-05-21\"\n\n\tstrings:\n\t\t$rtf =  { 7b5c 7274 6631 5c }\n\t\t$stuffs1 = { 3031 3035 3030 3030 3032 3030 3030 3030 3038 3030 3030 3030 }\n\t\t$stuffs2 = { 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 3030 }\n\t\t//$stuffs3 = { 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 3032 }\n\n\tcondition:\n\t\t$rtf at 0 and all of ($stuffs*)\n}\n\n\n\n\nrule VBE_Padding_MZ\n{\n        meta:\n                description = \"Office Document containing VBE and A and MZ padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n                $padding2 = { 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d 7a4d }\n\n\t\t$slashyslashes1 = { 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f 2f }\n\n        condition:\n                all of ($office*) and any of ($vb*) and all of ($padding*) and any of ($slashyslashes*)\n}\n\nrule ZIP_HTA\n{\n        meta:\n                description = \"Zip archive containing a .hta file\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $hta1 = \".hta\" nocase\n\n        condition:\n                $zip1 at 0 and ($hta1 in (filesize-100..filesize))\n}\n\nrule PDF_PowerShell\n{\n        meta:\n                description = \"PDF Document containing Powershell Hidden/Encoded\"\n                author = \"Nathan Fowler/Michelle Ticer\"\n                risk = \"high\"\n\n        strings:\n                $pdf1 = \"%PDF-\"\n\n                $ps1 = \"powershell.exe\" nocase\n                $ps2 = \"-EncodedCommand\" nocase\n                $ps3 = \" hidden\"\n\n        condition:\n                $pdf1 at 0 and all of ($ps*)\n}\n\nrule Office_WordPress_Evaluate\n{\n        meta:\n                description = \"Office Document containing VBA, Evaluation, and TurdPress URL\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$eval1 = \"Eval\"\n\n\t\t$turdpress1 = \"/wp-\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($eval*) and any of ($turdpress*)\n}\n\nrule Office_VBE_ByVal_CharGen\n{\n        meta:\n                description = \"Office Document containing VBA, Short Path VBE DLL, ByVal, and Chargen CHRs\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$byval1 = \"ByVal\"\n\t\t$byval2 = \"CallBy\"\n\n\t\t$chargen1 = { 16 1718 191a 2526 2728 292a 3435 3637 3839 3a43 4445 4647 4849 4a53 5455 5657 5859 5a63 6465 6667 6869 6a73 7475 7677 7879 7a }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($byval*) and all of ($chargen*)\n}\n\nrule VBE_Autofit_Padding\n{\n        meta:\n                description = \"Office Document containing VBE, FileSystemObject, and autofit with 'A' or 'B' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n\t\t$fso1 = \"emObject\"\n\n\t\t$fit1 = \"Autofit\" nocase\n\n        condition:\n                all of ($office*) and any of ($fso*) and any of ($vb*) and any of ($padding*) and any of ($fit*)\n}\n\n\nrule DirectVBE6DLL_Padding\n{\n        meta:\n                description = \"Office Document containing direct short path reference to VBE6.DLL or VBE7.dll with 'A' padding\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $dll1 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll2 = \"C:\\\\PROGRA~2\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n                $dll3 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA6\\\\VBE6.DLL\"\n                $dll4 = \"C:\\\\PROGRA~1\\\\COMMON~1\\\\MICROS~1\\\\VBA\\\\VBA7\\\\VBE7.DLL\"\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$padding1 = { 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 }\n\t\t$padding2 = { 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 }\n\n        condition:\n                all of ($office*) and any of ($dll*) and any of ($vb*) and any of ($padding*)\n}\n\nrule JS_in_a_Rar\n{\n        meta:\n                description = \"Detects a js inside a rar file.\"\n                author = \"Ryan C. Moon\"\n                risk = \"high\"\n\n        strings:\n                $rar_header = { 52 61 72 21 }\n                $js_extension = { 2e 6a 73 00 }\n\n        condition:\n                $rar_header at 0 and $js_extension\n}\n\nrule MiscreantPunch_PiratedOfficeVersionWMacrosXBAG\n{\n        meta:\n                description = \"Office Document containing cracked Office miscreant fingerprint\"\n                author = \"Will Metcalf/Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $cracked1 = \"RePack by Diakov\" wide ascii\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n        condition:\n                all of ($office*) and all of ($cracked*) and any of ($vb*)\n}\n\nrule ZIP_JS\n{\n        meta:\n                description = \"Zip archive containing a .js file potentially locky\"\n                author = \"Nathan Fowler / P.Burbage\"\n                risk = \"high\"\n\n        strings:\n                $zip1 = { 504b 0304 1400 0200 0800 }\n\n                $js1 = \".js\" nocase\n\t\t$js2 = \".jse\" nocase\n\n        condition:\n                $zip1 at 0 and ( ($js1 in (filesize-100..filesize)) or ($js2 in (filesize-100..filesize)) )\n}\n\nrule Office_CacheControl\n{\n        meta:\n                description = \"Office document containing Cache-Control HTTP Headers\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n\t\t$vb4 = \"OLE\"\n\t\t$vb5 = \"stdole\"\n\n\t\t$cc1 = \"Cache-Control\"\n\t\t$cc2 = \"no-cache\"\n\t\t$cc3 = \"no-store\"\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($cc*)\n}\n\nrule Office_RTF_Sandworm\n{\n        meta:\n                description = \"Office RTF Document containing Sandworm\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { 7b5c 7274 6631 205c 6164 6566 6c61 6e67 }\n\t\t$office2 = \"generator Msftedit \"\n\n\t\t$bad1 = \" Sandworm \"\n\t\t$bad2 = \"abcdefghijk\"\n\t\t$bad3 = \"ABCDEFGHIJK\"\n\n        condition:\n                all of ($office*) and all of ($bad*)\n}\n\nrule jsocket_v2_6 {\n    meta:\n        description = \"JSocket v2.6\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-19\"\n        reference = \"34f5bfeee44b545554c3112a68461282\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"javas/MaIn.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\n\nrule jsocket_v2_5 {\n    meta:\n        description = \"JSocket v2.5\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-08\"\n        reference = \"0249b3cbeb6742fafb946ae3a916b054\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"components/linux.plsk\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_4 {\n    meta:\n        description = \"JSocket v2.4\"\n        author = \"jurg@jurg.no\"\n        date = \"2016-01-01\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"windows/windows.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_3 {\n    meta:\n        description = \"JSocket v2.3\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-17\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.ini\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2_a {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-12-07\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.pl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_2 {\n    meta:\n        description = \"JSocket v2.2\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n        $pk = \"PK\"\n        $misc_0 = \"META-INF/MANIFEST.MF\"\n        $misc_1 = \"config/config.perl\"\n        $misc_2 = \"main/Start.classPK\"\n    condition:\n        $pk at 0 and\n        all of ($misc_*)\n}\n\nrule jsocket_v2_1 {\n\tmeta:\n    \tdescription = \"JSocket v2.1\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-09\"\n        reference = \"2c7cb88dc26d1b5cb0edd62d79f66ee7\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/resource.xsx\"\n        $misc_2 = \"java/textito.text\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v2_a {\n\tmeta:\n    \tdescription = \"JSocket v2.0(?)a\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-10-29\"\n        reference = \"25197708fb1fa081efa21822a62358d6\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = \"java/stubcito.opp\"\n        $misc_2 = \"java/textito.isn\"\n        $misc_4 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule jsocket_v1_2_dropper {\n\tmeta:\n    \tdescription = \"JSocket v1.2 dropper\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-07-22\"\n        reference_md5 = \"020e6397cdf1ba26470295fc32175de2\"\n    strings:\n    \t$pk = \"PK\"\n        $misc_1 = { 00 61 2e 74 78 74 50 4b } // \"a.txtPK\"\n        $misc_2 = { 00 62 2e 74 78 74 50 4b } // \"b.txtPK\"\n        $misc_3 = \"META-INF/MANIFEST.MF\"\n    condition:\n    \t($pk at 0) and\n        (all of ($misc_*))\n}\n\nrule java_rc5_6_class {\n\tmeta:\n    \tdescription = \"Java RC5 Key Expansion constants\"\n        author = \"jurg@jurg.no\"\n        date = \"2015-11-16\"\n    strings:\n    \t$magic = { CA FE BA BE }\n        $const_1 = { 3f f9 e3 77 9b 97 f0 51 }\n        $const_2 = { 40 05 bf 0a 8b 14 57 69 }\n        $const_3 = { b7 e1 51 63 }\n        $const_4 = { 9e 37 79 b9 }\n\tcondition:\n    \t$magic at 0 and\n        all of ($const_*)\n}\n\n\nrule Java_Malware_Allatori_Obfuscated\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"com/java/Manifest.mf\"\n        $cls1 = \"com/java/Main.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_QRat\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"e-data\"\n        $data2 = \"data\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"Qrypt.class\"\n        $cls3 = \"ReplacedInputStream.class\"\n        $do = \"_Do.class\"\n\n    condition:\n        $mf and any of ($data*) and (all of ($cls*) or $do)\n}\n\nrule Java_Malware_AlienSpy\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config.ini\"\n        $data2 = \"password.ini\"\n        $cls1 = \"plugins/Server.class\"\n        $cls2 = \"DecryptStub.class\"\n        $cls3 = \"LoadPassword.class\"\n        $cls4 = \"LoadStub.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_A\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"a.txt\"\n        $data2 = \"b.txt\"\n        $cls1 = \"Main.class\"\n\n    condition:\n        $mf and all of ($data*) and any of ($cls*)\n}\n\nrule Java_Malware_AlienSpy_B\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"MANIFEST.MF\"\n        $data2 = \"ID\"\n        $cls1 = \"Main.class\"\n        $cls2 = \"plugins/Server.class\"\n\n    condition:\n        $mf and all of ($data*) and all of ($cls*)\n}\n\nrule Java_Malware_JSocket_C\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"resource/password.txt\"\n        $data2 = \"resource/server.dll\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_D\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/stubcito.opp\"\n        $data2 = \"java/textito.isn\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"java/textito.text\"\n        $data2 = \"java/resource.xsx\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_E2\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"amarillo/asdasd.asd\"\n        $data2 = \"amarillo/adqwdqwd.asdwf\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_F\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.perl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket_G\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/12\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $data1 = \"config/config.pl\"\n        $data2 = \"main/Start.class\"\n\n    condition:\n        $mf and all of ($data*)\n}\n\nrule Java_Malware_JSocket\n{\n    meta:\n        author = \"Tom Ueltschi @c_APT_ure\"\n        date = \"2015/10\"\n\n    strings:\n        $mf = \"META-INF/MANIFEST.MF\"\n        $cls1 = \"org/jsocket/\"\n        $cls2 = \"org.jsocket.\"\n\n    condition:\n        $mf and all of ($cls*)\n}\n\nrule Office_Calibri_VBA\n{\n        meta:\n                description = \"Office document containing VBA, excessive Calibri declarations, and HTTP Response.Body with OLE Automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\t\t$office2 = { 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 00dc 0000 0008 0090 0100 0000 02cc c207 0143 0061 006c 0069 0062 0072 0069 0031 001e 0068 0101 0038 00bc }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $http1 = \"eBody\" nocase\n\t\t$http2 = \"HTTPRequest\" nocase\n\t\t$http3 = \"XMLH\" nocase\n\n                $script1 = \"Env\" nocase\n                $script2 = \"Script\" nocase\n\n                $ole1 = \"00020819-0000-0000-C000-000000000046\"\n                $ole2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($script*)\n}\n\nrule Access_Hidden_Tables_HTTP\n{\n        meta:\n                description = \"Office document containing VBA, Access linked databases, and HTTP Requests with OLE automation\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n\t\t$http1 = \"HTTPRequest\" nocase\n\t\t$http2 = \"XMLH\" nocase\n\t\t$http3 = \"ResponseBody\" nocase\n\n\t\t$ole1 = \"OLE\"\n\t\t$ole2 = { 23 00 4f 00 4c 00 45 00 }\n\t\t$ole3 = { 73 00 74 00 64 00 6f 00 6c 00 65 00 }\n\n\t\t$access1 = \"LinkedDatabase\" nocase\n\t\t$access2 = \"MSysObject\" nocase\n\t\t$access3 = \"DATABASE=\" nocase\n\n        condition:\n                all of ($office*) and any of ($vb*) and any of ($http*) and any of ($ole*) and any of ($access*)\n}\n\nrule Word2007_Interop_Assy_Excessive_Space\n{\n        meta:\n                description = \"Office document containing Word 2007 Interop Assemblies, excessive space (heap spray?), and VBA\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n                $string1 = \"00020905-0000-0000-C000-000000000046\"\n                $string2 = { 7b 00 30 00 30 00 30 00 32 00 30 00 39 00 30 00 35 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n\n                $subclass1 = \"ByVal\" nocase\n\t\t$subclass2 = \"Private Declare Function\" nocase\n\t\t$subclass3 = \"Alias \" nocase\n\t\t$subclass4 = \" Alias\" nocase\n\n                $bad1 = { 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 }\n\n        condition:\n                any of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*) and any of ($subclass*)\n}\n\nrule Outlook_Automation_Cyrillic\n{\n\tmeta:\n\t\tdescription = \"Office document containing Outlook automation and VBA with Cyrillic fonts\"\n\t\tauthor = \"Nathan Fowler\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n\n\t\t$string1 = \"00020819-0000-0000-C000-000000000046\"\n\t\t$string2 = { 7b 00 3000 30 00 30 00 32 00 30 00 38 00 31 00 39 00 2d 00 30 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 2d 00 43 00 30 00 30 00 30 00 2d 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 30 00 34 00 36 00 7d }\n\n\t\t$vb1 = { 56 00 42 00 41 00 }\n\t\t$vb2 = \"VBA\"\n\t\t$vb3 = \"VBE\"\n\n\t\t$bad1 = { 00 43 00 79 00 72 00 31 00 }\n\n\tcondition:\n\t\tany of ($office*) and any of ($string*) and any of ($vb*) and any of ($bad*)\n}\n\nrule OLE_Embedded_Jar\n{\n     meta:\n         description = \"Office document containing OLE embedded java archive\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n\t $string1 = { 4f 00 6c 00 65 00 }\n\t $string2 = { 01 00 43 00 6f 00 6d 00 70 00 4f 00 62 00 6a 00 }\n\t $java1 = \".jar\" nocase\n\t $java2 = \"META-INF/MANIFEST.MF\" nocase\n\n     condition:\n         all of ($string*) and any of ($java*)\n}\n\nrule OLEFormCipher\n{\n     meta:\n        description = \"Office document using form data reference AJAX, XML, or Java with Cipher and form submission\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $string1 = \"Content-Disposition: form-data\" nocase\n        $string2 = \"MULTIPART_BOUNDARY\" nocase\n\t$app1 = \"AJAX\" nocase\n\t$app2 = \"JAVA\" nocase\n\t$app3 = \"XML\" nocase\n\t$action1 = \"Submit\"\n\t$cipher1 = \"Cipher\" nocase\n\n     condition:\n\tany of ($office*) and any of ($string*) and any of ($app*) and all of ($action*) and all of ($cipher*)\n}\n\nrule rtf_includepicture\n{\n\tmeta:\n\t\tdescription = \"Detects rtf docs with includepicture, possibly MWI\"\n\t\tdate = \"2015-04-30\"\n\t\tauthor = \"culina@gmail.com\"\n\t\trisk = \"high\"\n\n\tstrings:\n\t\t$magic = \"{\\\\rt\"\n\t\t$string1 = \"INCLUDEPICTURE\"\n\t\t$string2 = \"http://\"\n\t\t$string3 = /\\.php\\?id=\\d/\n\n\tcondition:\n\t\t$magic at 0 and all of ($string*)\n}\n\nrule OLEHeapSpray\n{\n     meta:\n        description = \"Office document usin 0a heap spray with OLE\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = \"objemb\" nocase\n        $string2 = \"objdata\" nocase\n        $string3 = \"0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0\"\n\n     condition:\n        all of them\n}\n\nrule Subclassed_API\n{\n     meta:\n        description = \"Office document using obfuscated API subclassing to call DLL libraries using VBA that perform shell or Internet functions\"\n        author = \"Nathan Fowler\"\n        risk = \"high\"\n\n     strings:\n        $string1 = /Private Declare [^\\x20\\x09]+ Function/ nocase\n        $url1 = \"download\" nocase\n        $url2 = \"shell32\" nocase\n        $url3 = \"urlmon\" nocase\n        $url4 = \"inet\" nocase\n        $url5 = \"urlopen\" nocase\n        $url6 = \"createurl\" nocase\n        $url7 = \"internetopen\" nocase\n        $url8 = \"wininet\" nocase\n        $url9 = \"internetget\" nocase\n\n     condition:\n        all of ($string*) and any of ($url*)\n}\n\nrule Macro_HTTPCall\n{\n    meta:\n        description = \"Office document contains code for HTTP communications\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $http1 = \".open\" nocase\n        $http2 = \".send\" nocase\n        $http3 = \"HTTP.Status\" nocase\n        $http4 = \"User-Agent\" nocase\n        $http5 = \"Mozilla/\"\n        $http6 = \"200 Then\"\n\n    condition:\n        any of ($office*) and 3 of ($http*)\n}\n\nrule Macro_PayloadDownload\n{\n    meta:\n        description = \"Office document contains macro code indicating payload download capabilities\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $payload_1 = \"URLDownloadToFile\"\n        $payload_2 = \"Msxml2.XMLHTTP\"\n        $payload_3 = \"Microsoft.XMLHTTP\"\n\n    condition:\n        any of ($office*) and any of ($payload*)\n}\n\nrule Macro_ExecutesEXE\n{\n    meta:\n        description = \"Office document contains code that executes an executable file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $execute1_1 = /c\\:\\\\/\n        $execute1_2 = /\\.exe/\n        $execute1_3 = \"del \"\n\n    condition:\n        any of ($office*) and all of ($execute*)\n}\n\nrule Macro_CreateFile\n{\n    meta:\n        description = \"Office document macro contains code to create a file\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $create1 = \"CreateTextFile\"\n        $create2 = \"ADODB.Stream\"\n        $create3 = \"WriteText\"\n        $create4 = \"SaveToFile\"\n\n    condition:\n        any of ($office*) and any of ($create*)\n}\n\nrule ObfuscatedURL\n{\n    meta:\n        description = \"Office document contains an obfuscated URL string\"\n        risk = \"high\"\n\n    strings:\n        $office1 = { D0 CF 11 E0 A1 B1 1A E1 }\n        $url1 = \"687474703A2F2F\"\n        $url2 = \"Chr(68), Chr(74), Chr(74), Chr(70), Chr(3A), Chr(2F), Chr(2F)\"\n\n    condition:\n        any of ($office*) and any of ($url*)\n}\n\nrule Macro_XMLDocument\n{\n    meta:\n        description = \"XML document contains an office macro\"\n        reference = \"isc.sans.edu/diary/XML%3A+A+New+Vector+For+An+Old+Trick/19423\"\n        reference = \"www.trustwave.com/Resources/SpiderLabs-Blog/Attackers-concealing-malicious-macros-in-XML-files/?page=1&year=0&month=0\"\n\n    strings:\n\n        $xmlmacro1 = \"<?xml\"\n        $xmlmacro2 = \"<?mso-application progid=\\\"Word.Document\\\"?>\"\n        $xmlmacro3 = \"w:macrosPresent=\\\"yes\\\"\"\n\n    condition:\n        all of them\n}\n\n\n\nrule Office_VBA_OLE_Eval_Open\n{\n        meta:\n                description = \"Office Document containing VBA, OLE, Evaluation, and Document_Open\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-09-06\"\n        strings:\n                $vb1 = \"VBE\"\n                $vb2 = \"VBA\"\n                $vb3 = { 56 00 42 00 41 00 }\n                $ole1 = \"OLE\"\n                $ole2 = \"stdole\"\n                $eval1 = \"Evaluate\"\n                $open1 = \"Document_Open\"\n        condition:\n                any of ($vb*) and any of ($ole*) and any of ($eval*) and any of ($open*)\n}\n\nrule formbook_ace_archive\n{\n    meta:\n        description = \"Finds ace archives, not typically used for today's business but enjoyed by formbook malware\"\n        author = \"Sean Dalnodar\"\n        contact = \"sdalnodar@seic.com\"\n        date = \"2021-10-22\"\n        samples = \"fe8141ad1869a8ac34a4c258ce4c62d09ede71e1ea9f819c22e954aee473df4d\"\n\tsamples = \"76e745479aa92ba3a9d7aa6448aab35758ab2ef7ece2a66d4988bd0cde207771\"\n        tlp = \"green\"\n        prod = \"true\"\n    strings:\n        $a = {2a 2a 41 43 45 2a 2a} // **ACE**\n\t$b = {55 4e 52 45 47 49 53 54 45 52 45 44 20 56 45 52 53 49 4f 4e} // UNREGISTERED VERSION\n    condition:\n\t$a and $b\n\tand filesize < 1MB\n}\n\nrule AMSBypass {\n  meta:\n    description = \"Looks for powershell AntiMalwareSystem bypass method calls\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-10\"\n    samples = \"b9bf4200f9ca08904344c468e6848af7af740b8db8521184aafcbfce878fad24\"\n    samples = \"35f7add57f5349448f9db9f6d2ae22bac227d4ed398d21c9110407c6e7e7eb4d\"\n    tlp = \"green\"\n    prod = \"true\"\n    AMSI_bypass_Info = \"https://pentestlaboratories.com/2021/05/17/amsi-bypass-methods/\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {47 65 74 2D 4D 70 43 6F 6D 70 75 74 65 72 53 74 61 74 75 73} // Get-MpComputerStatus\n    $b = {41 4D 53 65 72 76 69 63 65 45 6E 61 62 6C 65 64} // AMServiceEnabled\n    $c = {52 65 66 6C 65 63 74 69 6F 6E 2E 41 73 73 65 6D 62 6C 79} // Reflection.Assembly\n  condition:\n    uint16be(0) == 0x4d5a\n    and any of them\n}\n\nrule icedID_doc_20211109 {\n  meta:\n    description = \"Looks for VBA methods found in IcedID sample on 9Nov21\"\n    author = \"Sean Dalnodar\"\n    date = \"2021-11-09\"\n    samples = \"4d1ba7c3d9cf95d861266734c00defbb10d3aae10aae1380029976a340a9e270\"\n    tlp = \"green\"\n    prod = \"true\"\n    twinwaveAnalysis = \"https://app.twinwave.io/shared/b2c47010-4473-446b-ae8a-debcefe50e60/3cd850201781c94e53272f83612fa46716db55eb36029d1d26c2cdb2dc7b2b89\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = {43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 77 73 63 72 69 70 74 2e 73 68 65 6c 6c 22 29 0a} // CreateObject(\"wscript.shell\")\n  condition:\n    $a and filesize <1MB\n}\nrule EFILock\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-06-08\"\n    last_update = \t\"\"\n    sample = \t\t\"c4c1e7a26c5ec2bd72d611afbe27d4a8dd88892bc0c5d7b0c1c08bff2eb04f6c\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"EFI related functions and DLL names called/exported via the exe/dll export table.  Noted in EFILock bootkits and other ransomeware/rootkit samples.\"\n    process = \t\t\"Submit the suspect file to Twinwave. Once it is complete, review the ClamAV output - if this is malicious it will have 'ClamAV detected: Win.Ransomware.Efilock'and VirusTotal will also have AV signature hits.  At this point, communicate with the end user and validate it was not openned. Also, check in Crowdstrike to ensure no boot files were modified (bootx64.efi for example).  If this is a client, attempt to purge the email via Firefly Email Remediation.  I haven't seen any IoC's associated with these EFILock samples when I've ran them through Twinwave, but you can check through Normalized Forensics > Network Connections and see... if there are any suspect websites being called drop them into an Intel ticket.\"\n    reference = \t\"https://www.bleepingcomputer.com/news/security/new-uefi-bootkit-used-to-backdoor-windows-devices-since-2012/\"\n    reference = \t\"https://eclypsium.com/2020/07/23/detecting-ransomware-and-other-threats-from-malicious-bootloaders/\"\n    reference = \t\"https://www.bleepingcomputer.com/news/security/finfisher-malware-hijacks-windows-boot-manager-with-uefi-bootkit/\"\n    reference = \t\"https://docs.microsoft.com/en-us/cpp/build/exporting-from-a-dll?view=msvc-170\"\n\n  strings:\n    $s0 = \"bootx64.efi\" // Exported DLL name\n    $s1 = \"AdapterDebugProtocol\" // Function Call exported via export table\n    $s2 = \"AppendDevicePathNode\" // Function Call exported via export table\n\n  condition:\n    uint16be(0) == 0x4d5a\n    and all of them\n}\nrule SleepyJava\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-03-11\"\n        description     = \"Javascript using sleep and encodeURIcomponent to encode and delay the execution of the script\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n      $string1 = \"encodeURIComponent(\"  wide ascii\n      $a1 = \"WScript\" wide ascii\n      $a2 = \"Sleep\" wide ascii\n\n    condition:\n        all of them\n}\nrule Javascript_Hatefulness_3\n{\n        meta:\n                description = \"Suspected JavaScript loader, locky\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n                $js1 = \"var \"\n                $js2 = \"fromCharCode(\"\n                $js3 = \"catch (\"\n                $js4 = \"\\\\u00\"\n\n\t\t$js_wordlist = /\\((\\x22[a-z]{4,32}\\x22\\x20?,\\x20?){4}/\n\n        condition:\n                all of them\n}\n\n\nrule calling_cards_socgholish : socgholish {\n  meta:\n    author          = \"Ryan C. Moon\"\n    creation_date   = \"2022-07-21\"\n    last_updated    = \"\"\n    samples         = \"\"\n    prod            = \"true\"\n    family          = \"SocGholish\"\n    description     = \"Identifies Socgholish samples based on calling card double-base64 pattern. High probability detection.\"\n    process         = \"Analyze web and process history in EDR to determine where this file ran, what context, and check network history to determine possible secondary download locations.\"\n  strings:\n    $ = \"T2k4dktGdGVMMTByS1M4PQ==\"\n  condition:\n    any of them\n}\n\nrule runParensRun : Dridex\n{\n  meta:\n    author          = \"SEI Non-professional Reverse Engineer Team\"\n    creation_date   = \"2022-07-21\"\n    last_updated    = \"\"\n    samples         = \"e68fcd845683be392885de766f158a1c6b00cea57bdd68b5ff44d54e62400e1f\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"false\"\n    family          = \"Dridex\"\n    description     = \"This rule identifies a malicious vba script associated with the Dridex Banking Trojan designed to steal information.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - validate the file was downloaded to the user's end point and if so - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"http://cluster2.infosec-ir.corp.seic.com:32001/samples/986675\"\n    reference       = \"https://bazaar.abuse.ch/sample/e68fcd845683be392885de766f158a1c6b00cea57bdd68b5ff44d54e62400e1f/\"\n    reference       = \"https://app.twinwave.io/shared/43d63e24-25b9-47ce-90d9-b83cb2537332/b488b44245da975225c52aafe857ad0b622808216b46df5593612bcd7287a8c3\"\n  strings:\n    // ((((((((((Run((((((((((\"O\" & \"4\" & \"\"))))))))))))))))))))\n    $s0 = {28 28 28 28 28 28 28 28 28 28 52 75 6e 28 28 28 28 28 28 28 28 28 28 22 4f 22 20 26 20 22 34 22 20 26 20 22 22 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29 29}\n  condition:\n    all of them\n}\n\nrule doubleShortcutID : Trojan\n{\n  meta:\n    author          = \"Sean Dalnodar\"\n    creation_date   = \"2022-07-18\"\n    last_updated    = \"\"\n    samples         = \"256f80e5ee14bc79da7d4598288056e90dcace8eee223fe59309e3cb79dd63db\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"gerneric trojan\"\n    description     = \"This script looks for double padded shortcut identifiers for %SystemRoot%% - a practice noted in several trojan varients.\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc). Check in Crowdstrike and validate the files existance/execution and remediate as required - escalate if necessary, even if the file was deleted validate it wasn't executed because it may have modified various system variables/settings.\"\n    reference       = \"https://a1000.reversinglabs.com/92be346f83688797720bf94a9429ee997be5e726/source/20462106/\"\n    reference       = \"https://app.twinwave.io/shared/d11ee86c-0fdd-44ae-8899-cfafa8b8a56a/0514b0b2394ee2691684b67e8b97e0a8871049b4a6b57f83f70ea90613239c3b\"\n  strings:\n    $header = {4D 5A}\n    // %SystemRoot%%\n    $s0 = {25 53 79 73 74 65 6D 52 6F 6F 74 25 25  } \n  condition:\n    $header at 0 and\n    all of them\n}\n\n\nrule packOfAs : Dridex malware\n{\n  meta:\n    author          = \"SEI Yara Crew\"\n    creation_date   = \"2022-07-14\"\n    last_updated    = \"\"\n    samples         = \"447cc6b9bd16b32034490e6c85e1b8110bb23eed\"\n    greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod            = \"true\"\n    family          = \"Dridex\"\n    description     = \"This rule identifies the use of ASPack, an advanced EXE packer created to compress Win32 executable files and protect them from non-professional reverse engineering\"\n      process       = \"Upload the file to Twinwave, check for VT, ClamAV, confirmations.  Once validated that this is malicious - remediate as required (e.g. block, contact end user, open intel, etc).\"\n    reference       = \"http://www.aspack.com\"\n    reference       = \"https://app.twinwave.io/shared/460c3732-d5cf-4914-956a-0b5accbc85d3/6fd10466618ab0669487997c7f6e1e11816562d05f73dabf4cccdc48b23dece1\"\n  strings:\n    $s0 = \"aspack\"\n  condition:\n    $s0\n}\n\nrule Sodinokibi_Ransomware : sodinokibi revil\n{\n  meta:\n    author =         \"Sean Dalnodar\"\n    creation_date =  \"2022-07-11\"\n    last_update =    \"\"\n    sample =         \"16a2903bcbae7f735f078192d5a4082e7f7225bcf4f50ee3fa6a54a51f4a2e92\"\n    greetz =         \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod =           \"true\"\n    description =    \"This rule identifies a trojan/ransomware called revil, Sodinokibi or Skeeyah - It targets Microsoft Operating Systems.  At the time of this rule's creation It is detected by Microsoft Defender and can be verified through Twinwave.\"\n    process = \"Run the file through Twinwave - if it is a valid hit you should see confirmation through the Virus Total output engine 'Win32:Sodinokibi-C Ransom'. Depending how the file was delivered check and see if it was successful or blocked.  If the delivery was successful, check Crowdstrike to validate download, installation, execution.  Once validated, escalate and/or reach out to the end user to start the remediation process.\"\n    reference =      \"https://www.trendmicro.com/vinfo/us/threat-encyclopedia/malware/Ransom.Win32.SODINOKIBI.A/\"\n\n  strings:\n    $s0 = { A2 42 57 E7 }\n\n  condition:\n    $s0\n}\n\n\nrule binaryObfuscation\n{\n  meta:\n    author = \t\t\"Sean Dalnodar\"\n    creation_date = \t\"2022-05-27\"\n    last_update = \t\"\"\n    sample = \t\t\"c1b594b4e47d437a5f73891c1a7112452dfbd9243ac3e77fdb72871af430b19e\"\n    greetz = \t\t\"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n    prod = \t\t\"true\"\n    description = \t\"Remocos uses multiple layers of obfuscation.  The first layer of this obfuscation is to convert the powershell (in this sample) to binary.  The second layer of obfuscation of the powershell script is to separate the method calls.  An example of this is something like this: ('Ne' + 'w-Obj' + 'ect Syst' + 'em.IO.Mem' + 'oryS' + 'tream').  If you are working an alert you should submit the file to Twinwave to analyze.  You can also manually review the file and paste any binary code you find into CyberChef and select 'from binary' as your recipe.  The result will be the actual script/powershell - look for http calls to IoCs, or additional obfuscation as described in the above sample. If Twinwave comes back clean, and you dont find anything suspicious in your manual review you can mark this as a potential false positive and leave the ticket as monitoring.\"\n\n  strings:\n    $re0 = /=\\([0-1,]{512}/\n\n  condition:\n    all of them\n}\n\n\nrule VBStrRevURI20220506\n{\n    meta:\n        author = \t\t\"sdalnodar@seic.com\"\n        date =\t\t\t\"20220506\"\n        description =\t\t\"IoC/URL Obfuscation seen in Nanocore and Valyria VB scripts\"\n        NanocoreSample = \t\"ad727ff3937bd2292c7561969868e971be6ff623bef51b5dbb38207593114d76\"\n        ValyriaSample = \t\"f462d744360cb35ccc07c1e48aa98d6c39f7a2356bc93d04cc92c0c6c508c386\"\n        greetz = \t\t\"Thanks a1000 Reversing Labs Crew for the research assist\"\n\n    strings:\n        $s0= \"StrReverse(\" nocase\n        $re1= /\\/\\/:s?ptth/ nocase\n\n    condition:\n        all of them\n}\n\n\n\nrule remcos20220504\n{\n    meta:\n        author = \"sdalnodar@seic.com and rmoon@seic.com\"\n        date = \"2022-05-03\"\n        description =  \"Obfuscation techniques seen in remcos VB scripts\"\n        sample = \"81a08b163648f4a09fbba230dc34b1b2c7e7e979fedc23c6bf89af0f39f32cff\"\n        greetz = \"Thanks a1000 Reversing Labs Crew for the research assist\"\n\n    strings:\n        $s0=  { 49 6E 53 74 72 52 65 76 28 57 53 63 72 69 70 74 2E 53 63 72 69 70 74 46 75 6C 6C 4E 61 6D 65 } // InStrRev(WScript.ScriptFullName\n        $http = /(68|48)(74|54){2}(70|50)(73|53)?3[Aa]2[Ff]2[Ff]/\n\n    condition:\n        all of them\n}\n\nrule ramnitWriteData\n{\n    meta:\n        author = \"sdalnodar@seic.com\"\n        date = \"2022-05-03\"\n        description = \"encoded WriteData in Ramnit/WScript samples\"\n        sample = \"ba85d46860fe2c3175c15d72dae0424f483095fd7493fc4f4737c68a695b3d7d\"\n        greetz = \"Thanks a1000 Reversing Labs Crew for the research assist\"\n    strings:\n        $re1=  /\\x57\\x72\\x69\\x74\\x65\\x44\\x61\\x74\\x61\\x20\\x3D\\x20\\x22[A-F0-9]{2000,}/ // WriteData = \"Encoded Data\"\n\n    condition:\n        $re1\n}\n\n\nrule VBS_CallsAndFunctions : emotet\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-26\"\n        modified        = \"2022-05-02\"\n        description     = \"VBS file using some calls and functions which could indicate a possible malicious activity like multiple obfuscated chr concatnations, a call function used to call a DLL by Excel 4.0 macros, ExpandEnvironmentStrings function, adodb stream and shellpath\"\n        md5sum          = \"e759c57fef989e9230cf121b31e077ec\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n    strings:\n        $string1 = \"cAll\" nocase wide ascii\n        $string2 = /&chr\\([a-z0-9\\+\\-\\/]{2,20}\\)/\n        $string3 = /&CHAR\\([a-z0-9\\+\\-\\/]{2,20}\\)/\n        $string4 = \"EXpAnDEnvironmentStRIngS\"    nocase ascii wide\n        $string5 = \"ADODB.Stream\" nocase wide ascii\n        $string6 = \"shellPath\" nocase wide ascii\n    condition:\n        2 of them\n}\n\n\n\nrule form_post_phish\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-19\"\n        last_modified   = \"2022-07-19\"\n        description     = \"HTML file containing a form action, form method and base64 encoded background picture url - this likely indicates a phish lure document\"\n        attachment      = \"Swift Remittance (MT-103)-USD-717_pdf.htm\"\n        greetz          = \"Thanks to the a1000 Reversing Labs Crew for the research assist\"\n        prod            = \"true\"\n\n    strings:\n        $background_url_b64 =/background(-image)?: url\\('(\\x20)?data:image\\/(png|jpeg);base64/\n        $form_post1 = /<form action=\"http(s)?:\\/\\/[^\\n]{3,100}(\\.php)?\" method=\"post\">/\tnocase\n        $form_post2 = /<form method=\"post\" action=\"http(s)?:\\/\\/[^\\n]{3,100}\\.php\">/\n        $form_post3 = \"<form action=\\\"\\\" method=\\\"post\\\" id=\\\"login_form\\\" name=\\\"login_form\\\">\"\n    condition:\n        $background_url_b64 and any of ($form_post*)\n}\n\n\n\n\nrule O365_phishing_email_body : O365\n{\n    meta:\n        author          = \"Nilanjana Saha\"\n        date            = \"2022-04-01\"\n        description     = \"Microsoft low memory themed phishing emails that have an embedded url in it\"\n        prod            = \"true\"\n    strings:\n        $string1 = \"Quarantine Portal\" nocase ascii\n        $string2 =  \"Low memory alert\"\tnocase ascii\n   condition:\n       all of them\n}\n\n\nrule apt_nobelium_hta_reg_dropper {\n    meta:\n        id = \"9f6a2154-c33a-4c38-9667-7479bf49c310\"\n        description = \"Matches HTA dropper file used by NOBELIUM and ISO files containing it\"\n        hash = \"054940ba8908b9e11f57ee081d1140cb\"\n        hash = \"b7ca8c46dc1bfc1d9cb9ce04a4928153\"\n        version = \"1.0\"\n        classification = \"TLP:WHITE\"\n        source=\"SEKOIA\"\n    strings:\n        $w = \"RegWrite(\" nocase\n        $x = { 2b 3d 20 64 6f 63 75 6d 65 6e 74 2e 67 65 74 45 6c 65 6d 65 6e 74 42 79 49 64 28 22 [0-4] 22 29 2e 69 6e 6e 65 72 48 54 4d 4c }\n        $y = \"<body onload=\" nocase\n        $z = \"hidden\" nocase\n    condition:\n        $y and\n       (3 < #z) and\n       (3 < #x) and\n       (1 < #w)\n}\n\n\n\nrule ContiCrypter {\n  meta:\n    author = \"James Quinn, Binary Defense\"\n    description = \"Signature for a crypter associated with Conti\"\n    date = \"2021-03-17\"\n    tlp = \"white\"\n    prod = \"true\"\n    addor = \"moon\"\n  strings:\n    $handoff1 = {4C 8D 05 ?? ?? ?? ?? 48 C7 44 24 28 00 00 00 00 C7 44 24 20 00 00 00 00 e8}\n    $handoff2 = {C7 ?? 24 ?? 00 00 00 00 89 44 24 ?? C7 ?? 24 ?? ?? ?? ?? ?? C7 ?? 24 ?? 00 00 00 00 }\n    $garbageLoad1 = {53 48 83 EC 20 89 CB 48 8D 0D ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 01 D8 48 83 C4 20 5B C3}\n    $garbageLoad2 = {55 89 E5 83 EC 18 C7 ?? 24 ?? ?? ?? ?? FF 15 ?? ?? ?? ?? 03 45 08 52 C9 C3}\n  condition:\n    1 of ($handoff*) and 1 of ($garbageLoad*)\n}\n\n\nrule SUSP_Base64_Encoded_Exploit_Indicators_Dec21 {\nmeta:\n  description = \"Detects base64 encoded strings found in payloads of exploits against log4j CVE-2021-44228\"\n  author = \"Florian Roth\"\n  reference = \"https://twitter.com/Reelix/status/1469327487243071493\"\n  date = \"2021-12-10\"\n  modified = \"2021-12-13\"\n  prod = \"yes\"\nstrings:\n  /* curl -s  */\n  $sa1 = \"Y3VybCAtcy\"\n  $sa2 = \"N1cmwgLXMg\"\n  $sa3 = \"jdXJsIC1zI\"\n  /* |wget -q -O-  */\n  $sb1 = \"fHdnZXQgLXEgLU8tI\"\n  $sb2 = \"x3Z2V0IC1xIC1PLS\"\n  $sb3 = \"8d2dldCAtcSAtTy0g\"\n  $fp1 = \"<html\"\ncondition:\n  1 of ($sa*) and 1 of ($sb*)\n  and not 1 of ($fp*)\n}\n\n\n\n\n\n\nrule vbs_adwind_20211104 {\n  meta:\n    description = \"Finds adwind wshrat vbs artifacts dumping double encoded base64 payloads to tmp using CreateObject()\"\n    author = \"SEI Hunting and Afternoon HammerTime Bowling League\"\n    date = \"2021-11-04\"\n    samples = \"70239e53107a5fa493792a633c08af405e0b95baf1cacafc8ca035ad3b7c65bd\"\n    tlp = \"green\"\n    prod = \"true\"\n    greetz = \"Greetz to the A1000 Reversing Labs crew\"\n  strings:\n    $a = \"Const\"\n    $create_object = { 43 72 65 61 74 65 4f 62 6a 65 63 74 28 22 }\n    $charset = { 2e 43 68 61 72 53 65 74 20 3d 20 22 75 73 2d 61 73 63 69 69 22 }\n  condition:\n    all of them\n}\n\n\n\n\n\nrule AnyFile_Regsvr32_Wide\n{\n    meta:\n        author = \"Nathan Fowler/Nilanjana Saha\"\n        date = \"2021-05-17\"\n        last_modified = \"2022-07-04\"\n        description = \"Regsvr32 expressed as a 0x00 separated wide or unusual expression of regsvr32 (last 3 strings); possible malicious content.\"\n\treference = \"/wiki/ursnif\"\n    strings:\n        $ = \"regsvr32\"    nocase wide\n        $ = \"%r1%vr32\"\n        $ = \"%r1%r32\"\n        $ = \"%r1%32\"\n    condition:\n        any of them\n}\n\n\n\n\nrule AnyFile_Reverse_ScriptLanguage\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2021-01-29\"\n\t\tdescription = \"An ascii reversal of '<script language=' or a base64 encoding of 'ActiveXObject' which is an extreme indicator of potential obfuscation for the intent of malicious behavior\"\n\t\treference = \"/wiki/icedid\"\n\tstrings:\n\t\t$ = \"=egaugnal tpircs<\"\tnocase ascii\n\n\t\t$ = \"RpdmVYT2J\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmp\" ascii wide // ActiveXObject\n\t\t$ = \"N0aXZlWE9iam\" ascii wide // ActiveXObject\n\t\t$ = \"3RpdmVYT2JqZW\" ascii wide // ActiveXObject\n\t\t$ = \"dGl2ZVhPYmplY3\" ascii wide // ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAdABpAHYAZQBYAE8AYgBqAGU\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQB\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAHQAaQB2AGUAWABPAGIAagBlAG\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAdABpAHYAZQBYAE8AYgBqAGUAYw\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwB0AGkAdgBlAFgATwBiAGoAZQBjAH\" ascii wide // Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"MAZQBqAGIATwBYAGUAdgBpAHQ\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdAB\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"BjAGUAagBiAE8AWABlAHYAaQB0AG\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"GMAZQBqAGIATwBYAGUAdgBpAHQAYw\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"YwBlAGoAYgBPAFgAZQB2AGkAdABjAE\" ascii wide // Reversed Null-spaced wide format of ActiveXObject\n\t\t$ = \"NlamJPWGV\" ascii wide // tcejbOXevitcA\n\t\t$ = \"VqYk9YZXZ\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml\" ascii wide // tcejbOXevitcA\n\t\t$ = \"NlamJPWGV2aX\" ascii wide // tcejbOXevitcA\n\t\t$ = \"2VqYk9YZXZpdG\" ascii wide // tcejbOXevitcA\n\t\t$ = \"ZWpiT1hldml0Y0\" ascii wide // tcejbOXevitcA\n\t\t// hex encoded string - format present in embedded RTF objects\n\t\t$ = \"416374697665584f626a656374\" ascii wide nocase // ActiveXObject\n\t\t// string reversed hex encoded string - format present in embedded RTF objects\n\t\t$ = \"7463656a624f58657669746341\" ascii wide nocase // tcejbOXevitcA\n\t\t// reversed string - frequently used obfuscation to evade tight static signatures\n\t\t$ = \"tcejbOXevitcA\" ascii wide nocase // tcejbOXevitcA\n\tcondition:\n\t\tany of them\n}\n\n\nrule HexAscii_Bad_Functions\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-11-05\"\n\t\tdescription = \"Malicious functions that have been encoded as hex-ascii inside of a document for the intent of obfuscation and hiding\"\n\t\treference = \"/wiki/agenttesla\"\n\n\tstrings:\n\t\t$ = \"4e65742e576562436c69656e74\"\tnocase ascii\t//Net.WebClient; PowerShell\n\t\t$ = \"225662736372697074\"\t\tnocase ascii\t//\"Vbscript\"\n\t\t$ = \"45786563757465476c6f62616c28\"\tnocase ascii\t//ExecuteGlobal(\n\t\t$ = \"43003a005c00660061006b006500\"\tnocase ascii\t//C:\\fake WIDE\n\n\tcondition:\n\t\t(\n\t\t\t   uint16(0) == 0x5c7b          //rtf\n\t\t\tor uint32(0) == 0x6d783f3c      //xml\n\t\t\tor uint16(0) == 0x0a0d          //asc\n\t\t\tor uint16(0) == 0x0a0a          //asc\n\t\t\tor uint16(0) == 0x2020          //asc\n\t\t\tor uint16(0) == 0x0909          //asc\n\t\t\tor uint16(0) == 0x213c          //html\n\t\t\tor uint16(0) == 0xcfd0          //office\n\t\t)\n\t\tand any of them\n}\n\n\nrule Powershell_DownloadFile\n{\n        meta:\n                description = \"Hidden Powershell download command, suspected StupidAmateurLocker\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n                date = \"2016-06-21\"\n\t\tmodified = \"2020-10-29\"\n\n        strings:\n\n                $ps1 = \"powershell\"\t\t\tnocase wide ascii\n                $ps2 = \"-ExecutionPolicy\"\t\tnocase wide ascii\n                $ps3 = \"-windowstyle\"\t\t\tnocase wide ascii\n\n                $web1 = \"System.Net.WebClient\"\t\tnocase wide ascii\n                $web2 = \"DownloadFile\"\t\t\tnocase wide ascii\n                $web3 = \"://\"\t\t\t\twide ascii //You thought I'd put a nocase here didn't you? LOL\n\n        condition:\n                all of ($ps*) and any of ($web*)\n}\n\nrule Kernel32_Skipping_n_Tripping\n{\n        meta:\n\t\tauthor = \"Nathan Fowler\"\n                date = \"2020-10-16\"\n                description = \"Potential Qakbot maldoc using Kernel32 instancing\"\n                reference = \"/wiki/qakbot\"\n        strings:\n                //0000100: 0200 0000 0800 0000 4b00 6500 7200 6e00  ........K.e.r.n.\n                //0000110: 6500 6c00 3300 3200 0000 3000 0000 1701  e.l.3.2...0.....\n                //0000120: 004b 0017 0100 6500 0817 0100 7200 0817  .K....e.....r...\n                //0000130: 0100 6e00 0817 0100 6500 0817 0100 6c00  ..n.....e.....l.\n                //0000140: 0817 0100 3300 0817 0100 3200 0815 0000  ....3.....2.....\n                $ = \"Kernel32\" nocase ascii wide\n                $ = { 4b[2-8] 65[2-8] 72[2-8] 6e[2-8] 65[2-8] 6c[2-8] 33[2-8] 32 }\n        condition:\n                all of them\n}\n\nrule Anyfile_DoubleEncoded_MZ\n{\n\tmeta:\n\t\tauthor = \"Nathan Fowler\"\n\t\tdate = \"2020-09-16\"\n\t\tdescription = \"Double-base64 encoded MZ, likely extremely malicious and intentionally obfuscated\"\n\t\treference = \"/wiki/trickbot\"\n\tstrings:\n\t\t$ = \"UFBQUFBQUFBQUFBQ\"\tascii wide\n\t\t$ = \"VFZxUU\"\t\tascii wide\n\tcondition:\n\t\tall of them\n}\n\n\nrule lazarus_group_password_string {\n  meta:\n    author = \"jim at wm\"\n    date = \"2020-02-14\"\n    weight = 100\n    memo = \"Intel shared via North Korean Valentine's Day USCERT Massacre\"\n  strings:\n    $strings1 = \"!Q@W#E$R%T^Y&U*I(O)P\" wide ascii\n    // UTF8 and UTF16-LE string base64 encoded\n    $encstring_1 = \"hUUBXI0UkUiVUXlkmVSpJKE8\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_2 = \"FRQFcjRSRSJVReWSZVKkkoTyl\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_3 = \"IVFAVyNFJFIlVF5ZJlUqSShPKVB\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_4 = \"ACEAUQBAAFcAIwBFACQAUgAlAFQAXgBZACYAVQAqAEkAKABPACkA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_5 = \"IQBRAEAAVwAjAEUAJABSACUAVABeAFkAJgBVACoASQAoAE8AKQBQ\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    $encstring_6 = \"AhAFEAQABXACMARQAkAFIAJQBUAF4AWQAmAFUAKgBJACgATwApAFAA\" ascii wide // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed UTF8 and UTF16-LE string base64 encoded\n    $encstring_7 = \"QKU8oSSpVJlleVCVSJEUjV0B\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_8 = \"ApTyhJKlUmWV5UJVIkRSNXQFE\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_9 = \"UClPKEkqVSZZXlQlUiRFI1dAUSF\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_10 = \"AFAAKQBPACgASQAqAFUAJgBZAF4AVAAlAFIAJABFACMAVwBAAFEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_11 = \"UAApAE8AKABJACoAVQAmAFkAXgBUACUAUgAkAEUAIwBXAEAAUQAh\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    $encstring_12 = \"BQACkATwAoAEkAKgBVACYAWQBeAFQAJQBSACQARQAjAFcAQABRACEA\" ascii wide // P)O(I*U&Y^T%R$E#W@Q!\n    // hex encoded string - format present in embedded RTF objects\n    $encstring_13 = \"215140572345245225545e5926552a49284f2950\" ascii wide nocase // !Q@W#E$R%T^Y&U*I(O)P\n    // string reversed hex encoded string - format present in embedded RTF objects\n    $encstring_14 = \"50294f28492a5526595e54255224452357405121\" ascii wide nocase // P)O(I*U&Y^T%R$E#W@Q!\n    // base64 encoded, then hex encoded\n    $encstring_15 = \"68555542584930556b55695655586c6b6d5653704a4b4538\" ascii wide nocase // hUUBXI0UkUiVUXlkmVSpJKE8\n    $encstring_16 = \"46525146636a525352534a56526557535a564b6b6b6f54796c\" ascii wide nocase // FRQFcjRSRSJVReWSZVKkkoTyl\n    $encstring_17 = \"4956464156794e464a46496c5646355a4a6c5571535368504b5642\" ascii wide nocase // IVFAVyNFJFIlVF5ZJlUqSShPKVB\n  condition:\n    $strings1 or any of ($encstring_*)\n}\n\n//rule PDF_Encrypted_NC\n//:malpdf\n//{\n//    meta:\n//        author = \"Nathan Fowler\"\n//        date = \"2019-09-10\"\n//        description = \"256KB or less PDF with an Encrypt declaration in the last 128 bytes of the PDF object without a numeric creation date, potentially malicious PDF\"\n//        sample = \"7c1da5d57701743c6d4ad3ab46ba93b4\"\n//\n//    strings:\n//        //00000000: 2550 4446 2d31 2e35 0a25 e2e3 cfd3 0a31  %PDF-1.5.%.....1\n//        //00035c90: 3120 3020 522f 456e 6372 7970 7420 3136  1 0 R/Encrypt 16\n//        //00035d10: 2545 4f46 0a                             %EOF.\n//\n//        $enc = \"/Encrypt \"    ascii\n//\n//        //CreationDate() contains no date object, so no repeating two digits\n//        $create1 = \"CreationDate(\"\n//        $create2 = /CreationDate\\x28[^\\x29]{0,32}[0-9]{2}[^\\x29]{0,32}\\x29/\n//\n//    condition:\n//        filesize < 256KB\n//        and uint32(0) == 0x46445025\n//        and uint32(filesize-4) == 0x0a464f45\n//        and $enc in (filesize-128..filesize)\n//        and $create1 in (16..128)\n//        and not $create2 in (16..128)\n//}\n\n//rule Office_hidden_macro_40\n//{\n//        meta:\n//                description = \"Office document with hidden or very hidden macro 4.0 sheet.\"\n//                author = \"Nathan Fowler\"\n//                risk = \"high\"\n//                date = \"2018-12-14\"\n//                tlp = \"AMBER\"\n//               thanks = \"Didier Stevens\"\n//\n//        strings:\n//                $office = { d0cf 11e0 a1b1 1ae1 }\n//                $macro4 = { 8500 ?? ?? ?? ?? ?? ?? [01 - 02] 01 ?? ?? }\n//\n//        condition:\n//\t\t$office at 0 and for any i in (1..#macro4): (uint16(@macro4[i] + 2) - uint16(@macro4[i] + 10) == 8)\n//}\n\nrule hostile_vbs_lokibot {\n\tmeta:\n\t\tauthor = \"Ryan C. Moon\"\n\t\tdate = \"2018-10-01\"\n\t\tdescription = \"Identifies hostile vbs files used by lokibot malspam\"\n\t\tweight = 100\n\n\tstrings:\n\t\t// script calls with external resources\n\t\t$header = \"strLinhaComandoAddRegistro\" ascii\n\t\t$username_as_file = \"=%USERNAME%.vbs\" ascii\n\t\t$set_nothing = \" = Nothing\" ascii\n\n\tcondition:\n\t\t$header and $username_as_file and #set_nothing > 3\n}\nrule retefe_crypt1\n{\n\tmeta:\n\t\tauthor = \"Jason Reaves\"\n\t\tsample = \"f4081aced73a37fdb4fa589925ac31f86fec83b9aed6b12d3ad06880bb880401\"\n\t\tstrings:\n\t\t\t$decode1 = {8b d? d3 ea 83 c1 08 [0-1] 88 1? [0-1] 4? [0-3] 83 f9 20 72}\n\t\t\t$decode2 = {8b c? [0-3] 83 e0 03 [0-2] 8a 04 1? 30 0? [0-3]  4? 3b}\n\t\t\t$iid = {e1 2a 1a bb f9 a4 cf 11 8f 20 00 80 5f 2c d0 64}\n\t\tcondition:\n\t\t\tall of them\n}\n\nrule PowerShell_Dropper\n{\n\tmeta:\n\t\tdescription = \"Base64 encoded PowerShell commands used in droppers\"\n\t\tauthor = \"Nathan Fowler / Justin Borland / Ryan Moon\"\n\t\trisk = \"high\"\n\t\tdate = \"2017-10-19\"\n\n\tstrings:\n\t\t$b1 = \"IABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0\"\n\t\t$b2 = \"RABvAHcAbgBsAG8AYQBkAEYAaQBsAGUA\"\n\t\t$b3 = \"AFMAdABhAHIAdAAtAFAAcgBvAGMAZQBzAHMA\"\n\n\tcondition:\n\t\tall of them\n}\n\n\nrule Office_Powershell\n{\n        meta:\n                description = \"Office Document containing Powershell hidden/process injection\"\n                author = \"Nathan Fowler\"\n                risk = \"high\"\n\n        strings:\n\t\t$ps1 = \"powershell.exe\" nocase\n\t\t$ps2 = \"-NoP\"\n\t\t$ps3 = \"-NonI\"\n\t\t$ps4 = \"Hidden\"\n\t\t$ps5 = \"-Enc\"\n\n        condition:\n                all of ($ps*)\n}\n\nrule PowerShell\n{\n     meta:\n         description = \"Office document using PowerShell to execute a file hidden with bypass policy\"\n         author = \"Nathan Fowler, Phil Fannin, Ryan Moon, Michelle Ticer, Juan Figuera\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"powershell\" nocase\n\t $string2 = /[\\x22\\x27]powershell/ nocase\n\t $string3 = /-ExecutionPolicy[\\x20\\x09]+Bypass/ nocase\n\t $string4 = /-WindowStyle[\\x20\\x09]+hidden/ nocase\n\n     condition:\n         all of them\n}\n\nrule URL_Concat\n{\n     meta:\n         description = \"Office document using string building/concatenation for URLs\"\n         author = \"Nathan Fowler\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"'ht'+'tp://'\" nocase\n         $string2 = \"'ht' + 'tp://'\" nocase\n\n     condition:\n         any of them\n}\n\nrule Office_Macro_ActiveMime\n{\n     meta:\n         description = \"M$ Office document containing macro with ActiveMime \"\n         author = \"Roberto Martinez\"\n         risk = \"high\"\n\n     strings:\n         $string1 = \"Content-Location: file:///\"\n         $string2 = \"Content-Transfer-Encoding: base64\"\n         $string3 = \"Content-Type: application/x-mso\"\n         $string4 = \"QWN0aXZlTWltZQAA\"\n\n     condition:\n         all of them\n}",
        "custom": true,
        "createdBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "updatedBy": "e6268492-1373-4726-80f7-f516fc047ac0",
        "createdAt": "2023-10-04T10:19:56.682Z",
        "updatedAt": "2023-10-04T10:19:56.683Z",
        "FilePathGroupYaraGroupRule": {
          "filePathGroupId": "0c2c898f-72ff-442d-b83c-a22baef42a06",
          "yaraGroupRuleId": "cdfcf454-0598-4586-a460-fb6edada3de8"
        }
      }
    ],
    "links": [
      {
        "rel": "self",
        "title": "File path group",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups/0c2c898f-72ff-442d-b83c-a22baef42a06"
      },
      {
        "rel": "parent",
        "title": "File path groups",
        "href": "/api/customers/049dad7d-94fc-4d78-9740-f55d81e0adfe/filePathGroups"
      }
    ]
  }
]